/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 305.0, "minX": 0.0, "maxY": 99393.0, "series": [{"data": [[0.0, 1187.0], [0.1, 1187.0], [0.2, 1187.0], [0.3, 1187.0], [0.4, 1187.0], [0.5, 1187.0], [0.6, 1187.0], [0.7, 1187.0], [0.8, 1187.0], [0.9, 1187.0], [1.0, 1187.0], [1.1, 1187.0], [1.2, 1187.0], [1.3, 1187.0], [1.4, 1187.0], [1.5, 1187.0], [1.6, 1295.0], [1.7, 1295.0], [1.8, 1295.0], [1.9, 1295.0], [2.0, 1295.0], [2.1, 1295.0], [2.2, 1295.0], [2.3, 1295.0], [2.4, 1295.0], [2.5, 1295.0], [2.6, 1295.0], [2.7, 1295.0], [2.8, 1295.0], [2.9, 1295.0], [3.0, 1295.0], [3.1, 1315.0], [3.2, 1315.0], [3.3, 1315.0], [3.4, 1315.0], [3.5, 1315.0], [3.6, 1315.0], [3.7, 1315.0], [3.8, 1315.0], [3.9, 1315.0], [4.0, 1315.0], [4.1, 1315.0], [4.2, 1315.0], [4.3, 1315.0], [4.4, 1315.0], [4.5, 1315.0], [4.6, 1315.0], [4.7, 1345.0], [4.8, 1345.0], [4.9, 1345.0], [5.0, 1345.0], [5.1, 1345.0], [5.2, 1345.0], [5.3, 1345.0], [5.4, 1345.0], [5.5, 1345.0], [5.6, 1345.0], [5.7, 1345.0], [5.8, 1345.0], [5.9, 1345.0], [6.0, 1345.0], [6.1, 1345.0], [6.2, 1428.0], [6.3, 1428.0], [6.4, 1428.0], [6.5, 1428.0], [6.6, 1428.0], [6.7, 1428.0], [6.8, 1428.0], [6.9, 1428.0], [7.0, 1428.0], [7.1, 1428.0], [7.2, 1428.0], [7.3, 1428.0], [7.4, 1428.0], [7.5, 1428.0], [7.6, 1428.0], [7.7, 1471.0], [7.8, 1471.0], [7.9, 1471.0], [8.0, 1471.0], [8.1, 1471.0], [8.2, 1471.0], [8.3, 1471.0], [8.4, 1471.0], [8.5, 1471.0], [8.6, 1471.0], [8.7, 1471.0], [8.8, 1471.0], [8.9, 1471.0], [9.0, 1471.0], [9.1, 1471.0], [9.2, 1471.0], [9.3, 1495.0], [9.4, 1495.0], [9.5, 1495.0], [9.6, 1495.0], [9.7, 1495.0], [9.8, 1495.0], [9.9, 1495.0], [10.0, 1495.0], [10.1, 1495.0], [10.2, 1495.0], [10.3, 1495.0], [10.4, 1495.0], [10.5, 1495.0], [10.6, 1495.0], [10.7, 1495.0], [10.8, 1517.0], [10.9, 1517.0], [11.0, 1517.0], [11.1, 1517.0], [11.2, 1517.0], [11.3, 1517.0], [11.4, 1517.0], [11.5, 1517.0], [11.6, 1517.0], [11.7, 1517.0], [11.8, 1517.0], [11.9, 1517.0], [12.0, 1517.0], [12.1, 1517.0], [12.2, 1517.0], [12.3, 1517.0], [12.4, 1548.0], [12.5, 1548.0], [12.6, 1548.0], [12.7, 1548.0], [12.8, 1548.0], [12.9, 1548.0], [13.0, 1548.0], [13.1, 1548.0], [13.2, 1548.0], [13.3, 1548.0], [13.4, 1548.0], [13.5, 1548.0], [13.6, 1548.0], [13.7, 1548.0], [13.8, 1548.0], [13.9, 1571.0], [14.0, 1571.0], [14.1, 1571.0], [14.2, 1571.0], [14.3, 1571.0], [14.4, 1571.0], [14.5, 1571.0], [14.6, 1571.0], [14.7, 1571.0], [14.8, 1571.0], [14.9, 1571.0], [15.0, 1571.0], [15.1, 1571.0], [15.2, 1571.0], [15.3, 1571.0], [15.4, 1632.0], [15.5, 1632.0], [15.6, 1632.0], [15.7, 1632.0], [15.8, 1632.0], [15.9, 1632.0], [16.0, 1632.0], [16.1, 1632.0], [16.2, 1632.0], [16.3, 1632.0], [16.4, 1632.0], [16.5, 1632.0], [16.6, 1632.0], [16.7, 1632.0], [16.8, 1632.0], [16.9, 1632.0], [17.0, 1635.0], [17.1, 1635.0], [17.2, 1635.0], [17.3, 1635.0], [17.4, 1635.0], [17.5, 1635.0], [17.6, 1635.0], [17.7, 1635.0], [17.8, 1635.0], [17.9, 1635.0], [18.0, 1635.0], [18.1, 1635.0], [18.2, 1635.0], [18.3, 1635.0], [18.4, 1635.0], [18.5, 1647.0], [18.6, 1647.0], [18.7, 1647.0], [18.8, 1647.0], [18.9, 1647.0], [19.0, 1647.0], [19.1, 1647.0], [19.2, 1647.0], [19.3, 1647.0], [19.4, 1647.0], [19.5, 1647.0], [19.6, 1647.0], [19.7, 1647.0], [19.8, 1647.0], [19.9, 1647.0], [20.0, 1647.0], [20.1, 1664.0], [20.2, 1664.0], [20.3, 1664.0], [20.4, 1664.0], [20.5, 1664.0], [20.6, 1664.0], [20.7, 1664.0], [20.8, 1664.0], [20.9, 1664.0], [21.0, 1664.0], [21.1, 1664.0], [21.2, 1664.0], [21.3, 1664.0], [21.4, 1664.0], [21.5, 1664.0], [21.6, 1667.0], [21.7, 1667.0], [21.8, 1667.0], [21.9, 1667.0], [22.0, 1667.0], [22.1, 1667.0], [22.2, 1667.0], [22.3, 1667.0], [22.4, 1667.0], [22.5, 1667.0], [22.6, 1667.0], [22.7, 1667.0], [22.8, 1667.0], [22.9, 1667.0], [23.0, 1667.0], [23.1, 1681.0], [23.2, 1681.0], [23.3, 1681.0], [23.4, 1681.0], [23.5, 1681.0], [23.6, 1681.0], [23.7, 1681.0], [23.8, 1681.0], [23.9, 1681.0], [24.0, 1681.0], [24.1, 1681.0], [24.2, 1681.0], [24.3, 1681.0], [24.4, 1681.0], [24.5, 1681.0], [24.6, 1681.0], [24.7, 1692.0], [24.8, 1692.0], [24.9, 1692.0], [25.0, 1692.0], [25.1, 1692.0], [25.2, 1692.0], [25.3, 1692.0], [25.4, 1692.0], [25.5, 1692.0], [25.6, 1692.0], [25.7, 1692.0], [25.8, 1692.0], [25.9, 1692.0], [26.0, 1692.0], [26.1, 1692.0], [26.2, 1718.0], [26.3, 1718.0], [26.4, 1718.0], [26.5, 1718.0], [26.6, 1718.0], [26.7, 1718.0], [26.8, 1718.0], [26.9, 1718.0], [27.0, 1718.0], [27.1, 1718.0], [27.2, 1718.0], [27.3, 1718.0], [27.4, 1718.0], [27.5, 1718.0], [27.6, 1718.0], [27.7, 1725.0], [27.8, 1725.0], [27.9, 1725.0], [28.0, 1725.0], [28.1, 1725.0], [28.2, 1725.0], [28.3, 1725.0], [28.4, 1725.0], [28.5, 1725.0], [28.6, 1725.0], [28.7, 1725.0], [28.8, 1725.0], [28.9, 1725.0], [29.0, 1725.0], [29.1, 1725.0], [29.2, 1725.0], [29.3, 1759.0], [29.4, 1759.0], [29.5, 1759.0], [29.6, 1759.0], [29.7, 1759.0], [29.8, 1759.0], [29.9, 1759.0], [30.0, 1759.0], [30.1, 1759.0], [30.2, 1759.0], [30.3, 1759.0], [30.4, 1759.0], [30.5, 1759.0], [30.6, 1759.0], [30.7, 1759.0], [30.8, 1778.0], [30.9, 1778.0], [31.0, 1778.0], [31.1, 1778.0], [31.2, 1778.0], [31.3, 1778.0], [31.4, 1778.0], [31.5, 1778.0], [31.6, 1778.0], [31.7, 1778.0], [31.8, 1778.0], [31.9, 1778.0], [32.0, 1778.0], [32.1, 1778.0], [32.2, 1778.0], [32.3, 1778.0], [32.4, 1791.0], [32.5, 1791.0], [32.6, 1791.0], [32.7, 1791.0], [32.8, 1791.0], [32.9, 1791.0], [33.0, 1791.0], [33.1, 1791.0], [33.2, 1791.0], [33.3, 1791.0], [33.4, 1791.0], [33.5, 1791.0], [33.6, 1791.0], [33.7, 1791.0], [33.8, 1791.0], [33.9, 1800.0], [34.0, 1800.0], [34.1, 1800.0], [34.2, 1800.0], [34.3, 1800.0], [34.4, 1800.0], [34.5, 1800.0], [34.6, 1800.0], [34.7, 1800.0], [34.8, 1800.0], [34.9, 1800.0], [35.0, 1800.0], [35.1, 1800.0], [35.2, 1800.0], [35.3, 1800.0], [35.4, 1814.0], [35.5, 1814.0], [35.6, 1814.0], [35.7, 1814.0], [35.8, 1814.0], [35.9, 1814.0], [36.0, 1814.0], [36.1, 1814.0], [36.2, 1814.0], [36.3, 1814.0], [36.4, 1814.0], [36.5, 1814.0], [36.6, 1814.0], [36.7, 1814.0], [36.8, 1814.0], [36.9, 1814.0], [37.0, 1820.0], [37.1, 1820.0], [37.2, 1820.0], [37.3, 1820.0], [37.4, 1820.0], [37.5, 1820.0], [37.6, 1820.0], [37.7, 1820.0], [37.8, 1820.0], [37.9, 1820.0], [38.0, 1820.0], [38.1, 1820.0], [38.2, 1820.0], [38.3, 1820.0], [38.4, 1820.0], [38.5, 1821.0], [38.6, 1821.0], [38.7, 1821.0], [38.8, 1821.0], [38.9, 1821.0], [39.0, 1821.0], [39.1, 1821.0], [39.2, 1821.0], [39.3, 1821.0], [39.4, 1821.0], [39.5, 1821.0], [39.6, 1821.0], [39.7, 1821.0], [39.8, 1821.0], [39.9, 1821.0], [40.0, 1821.0], [40.1, 1822.0], [40.2, 1822.0], [40.3, 1822.0], [40.4, 1822.0], [40.5, 1822.0], [40.6, 1822.0], [40.7, 1822.0], [40.8, 1822.0], [40.9, 1822.0], [41.0, 1822.0], [41.1, 1822.0], [41.2, 1822.0], [41.3, 1822.0], [41.4, 1822.0], [41.5, 1822.0], [41.6, 1822.0], [41.7, 1822.0], [41.8, 1822.0], [41.9, 1822.0], [42.0, 1822.0], [42.1, 1822.0], [42.2, 1822.0], [42.3, 1822.0], [42.4, 1822.0], [42.5, 1822.0], [42.6, 1822.0], [42.7, 1822.0], [42.8, 1822.0], [42.9, 1822.0], [43.0, 1822.0], [43.1, 1836.0], [43.2, 1836.0], [43.3, 1836.0], [43.4, 1836.0], [43.5, 1836.0], [43.6, 1836.0], [43.7, 1836.0], [43.8, 1836.0], [43.9, 1836.0], [44.0, 1836.0], [44.1, 1836.0], [44.2, 1836.0], [44.3, 1836.0], [44.4, 1836.0], [44.5, 1836.0], [44.6, 1836.0], [44.7, 1843.0], [44.8, 1843.0], [44.9, 1843.0], [45.0, 1843.0], [45.1, 1843.0], [45.2, 1843.0], [45.3, 1843.0], [45.4, 1843.0], [45.5, 1843.0], [45.6, 1843.0], [45.7, 1843.0], [45.8, 1843.0], [45.9, 1843.0], [46.0, 1843.0], [46.1, 1843.0], [46.2, 1845.0], [46.3, 1845.0], [46.4, 1845.0], [46.5, 1845.0], [46.6, 1845.0], [46.7, 1845.0], [46.8, 1845.0], [46.9, 1845.0], [47.0, 1845.0], [47.1, 1845.0], [47.2, 1845.0], [47.3, 1845.0], [47.4, 1845.0], [47.5, 1845.0], [47.6, 1845.0], [47.7, 1854.0], [47.8, 1854.0], [47.9, 1854.0], [48.0, 1854.0], [48.1, 1854.0], [48.2, 1854.0], [48.3, 1854.0], [48.4, 1854.0], [48.5, 1854.0], [48.6, 1854.0], [48.7, 1854.0], [48.8, 1854.0], [48.9, 1854.0], [49.0, 1854.0], [49.1, 1854.0], [49.2, 1854.0], [49.3, 1879.0], [49.4, 1879.0], [49.5, 1879.0], [49.6, 1879.0], [49.7, 1879.0], [49.8, 1879.0], [49.9, 1879.0], [50.0, 1879.0], [50.1, 1879.0], [50.2, 1879.0], [50.3, 1879.0], [50.4, 1879.0], [50.5, 1879.0], [50.6, 1879.0], [50.7, 1879.0], [50.8, 1880.0], [50.9, 1880.0], [51.0, 1880.0], [51.1, 1880.0], [51.2, 1880.0], [51.3, 1880.0], [51.4, 1880.0], [51.5, 1880.0], [51.6, 1880.0], [51.7, 1880.0], [51.8, 1880.0], [51.9, 1880.0], [52.0, 1880.0], [52.1, 1880.0], [52.2, 1880.0], [52.3, 1880.0], [52.4, 1885.0], [52.5, 1885.0], [52.6, 1885.0], [52.7, 1885.0], [52.8, 1885.0], [52.9, 1885.0], [53.0, 1885.0], [53.1, 1885.0], [53.2, 1885.0], [53.3, 1885.0], [53.4, 1885.0], [53.5, 1885.0], [53.6, 1885.0], [53.7, 1885.0], [53.8, 1885.0], [53.9, 1920.0], [54.0, 1920.0], [54.1, 1920.0], [54.2, 1920.0], [54.3, 1920.0], [54.4, 1920.0], [54.5, 1920.0], [54.6, 1920.0], [54.7, 1920.0], [54.8, 1920.0], [54.9, 1920.0], [55.0, 1920.0], [55.1, 1920.0], [55.2, 1920.0], [55.3, 1920.0], [55.4, 1985.0], [55.5, 1985.0], [55.6, 1985.0], [55.7, 1985.0], [55.8, 1985.0], [55.9, 1985.0], [56.0, 1985.0], [56.1, 1985.0], [56.2, 1985.0], [56.3, 1985.0], [56.4, 1985.0], [56.5, 1985.0], [56.6, 1985.0], [56.7, 1985.0], [56.8, 1985.0], [56.9, 1985.0], [57.0, 1989.0], [57.1, 1989.0], [57.2, 1989.0], [57.3, 1989.0], [57.4, 1989.0], [57.5, 1989.0], [57.6, 1989.0], [57.7, 1989.0], [57.8, 1989.0], [57.9, 1989.0], [58.0, 1989.0], [58.1, 1989.0], [58.2, 1989.0], [58.3, 1989.0], [58.4, 1989.0], [58.5, 2041.0], [58.6, 2041.0], [58.7, 2041.0], [58.8, 2041.0], [58.9, 2041.0], [59.0, 2041.0], [59.1, 2041.0], [59.2, 2041.0], [59.3, 2041.0], [59.4, 2041.0], [59.5, 2041.0], [59.6, 2041.0], [59.7, 2041.0], [59.8, 2041.0], [59.9, 2041.0], [60.0, 2041.0], [60.1, 2166.0], [60.2, 2166.0], [60.3, 2166.0], [60.4, 2166.0], [60.5, 2166.0], [60.6, 2166.0], [60.7, 2166.0], [60.8, 2166.0], [60.9, 2166.0], [61.0, 2166.0], [61.1, 2166.0], [61.2, 2166.0], [61.3, 2166.0], [61.4, 2166.0], [61.5, 2166.0], [61.6, 2281.0], [61.7, 2281.0], [61.8, 2281.0], [61.9, 2281.0], [62.0, 2281.0], [62.1, 2281.0], [62.2, 2281.0], [62.3, 2281.0], [62.4, 2281.0], [62.5, 2281.0], [62.6, 2281.0], [62.7, 2281.0], [62.8, 2281.0], [62.9, 2281.0], [63.0, 2281.0], [63.1, 2359.0], [63.2, 2359.0], [63.3, 2359.0], [63.4, 2359.0], [63.5, 2359.0], [63.6, 2359.0], [63.7, 2359.0], [63.8, 2359.0], [63.9, 2359.0], [64.0, 2359.0], [64.1, 2359.0], [64.2, 2359.0], [64.3, 2359.0], [64.4, 2359.0], [64.5, 2359.0], [64.6, 2359.0], [64.7, 2390.0], [64.8, 2390.0], [64.9, 2390.0], [65.0, 2390.0], [65.1, 2390.0], [65.2, 2390.0], [65.3, 2390.0], [65.4, 2390.0], [65.5, 2390.0], [65.6, 2390.0], [65.7, 2390.0], [65.8, 2390.0], [65.9, 2390.0], [66.0, 2390.0], [66.1, 2390.0], [66.2, 2458.0], [66.3, 2458.0], [66.4, 2458.0], [66.5, 2458.0], [66.6, 2458.0], [66.7, 2458.0], [66.8, 2458.0], [66.9, 2458.0], [67.0, 2458.0], [67.1, 2458.0], [67.2, 2458.0], [67.3, 2458.0], [67.4, 2458.0], [67.5, 2458.0], [67.6, 2458.0], [67.7, 2465.0], [67.8, 2465.0], [67.9, 2465.0], [68.0, 2465.0], [68.1, 2465.0], [68.2, 2465.0], [68.3, 2465.0], [68.4, 2465.0], [68.5, 2465.0], [68.6, 2465.0], [68.7, 2465.0], [68.8, 2465.0], [68.9, 2465.0], [69.0, 2465.0], [69.1, 2465.0], [69.2, 2465.0], [69.3, 2487.0], [69.4, 2487.0], [69.5, 2487.0], [69.6, 2487.0], [69.7, 2487.0], [69.8, 2487.0], [69.9, 2487.0], [70.0, 2487.0], [70.1, 2487.0], [70.2, 2487.0], [70.3, 2487.0], [70.4, 2487.0], [70.5, 2487.0], [70.6, 2487.0], [70.7, 2487.0], [70.8, 2496.0], [70.9, 2496.0], [71.0, 2496.0], [71.1, 2496.0], [71.2, 2496.0], [71.3, 2496.0], [71.4, 2496.0], [71.5, 2496.0], [71.6, 2496.0], [71.7, 2496.0], [71.8, 2496.0], [71.9, 2496.0], [72.0, 2496.0], [72.1, 2496.0], [72.2, 2496.0], [72.3, 2496.0], [72.4, 2541.0], [72.5, 2541.0], [72.6, 2541.0], [72.7, 2541.0], [72.8, 2541.0], [72.9, 2541.0], [73.0, 2541.0], [73.1, 2541.0], [73.2, 2541.0], [73.3, 2541.0], [73.4, 2541.0], [73.5, 2541.0], [73.6, 2541.0], [73.7, 2541.0], [73.8, 2541.0], [73.9, 2544.0], [74.0, 2544.0], [74.1, 2544.0], [74.2, 2544.0], [74.3, 2544.0], [74.4, 2544.0], [74.5, 2544.0], [74.6, 2544.0], [74.7, 2544.0], [74.8, 2544.0], [74.9, 2544.0], [75.0, 2544.0], [75.1, 2544.0], [75.2, 2544.0], [75.3, 2544.0], [75.4, 2546.0], [75.5, 2546.0], [75.6, 2546.0], [75.7, 2546.0], [75.8, 2546.0], [75.9, 2546.0], [76.0, 2546.0], [76.1, 2546.0], [76.2, 2546.0], [76.3, 2546.0], [76.4, 2546.0], [76.5, 2546.0], [76.6, 2546.0], [76.7, 2546.0], [76.8, 2546.0], [76.9, 2546.0], [77.0, 2677.0], [77.1, 2677.0], [77.2, 2677.0], [77.3, 2677.0], [77.4, 2677.0], [77.5, 2677.0], [77.6, 2677.0], [77.7, 2677.0], [77.8, 2677.0], [77.9, 2677.0], [78.0, 2677.0], [78.1, 2677.0], [78.2, 2677.0], [78.3, 2677.0], [78.4, 2677.0], [78.5, 2707.0], [78.6, 2707.0], [78.7, 2707.0], [78.8, 2707.0], [78.9, 2707.0], [79.0, 2707.0], [79.1, 2707.0], [79.2, 2707.0], [79.3, 2707.0], [79.4, 2707.0], [79.5, 2707.0], [79.6, 2707.0], [79.7, 2707.0], [79.8, 2707.0], [79.9, 2707.0], [80.0, 2802.0], [80.1, 2802.0], [80.2, 2802.0], [80.3, 2802.0], [80.4, 2802.0], [80.5, 2802.0], [80.6, 2802.0], [80.7, 2802.0], [80.8, 2802.0], [80.9, 2802.0], [81.0, 2802.0], [81.1, 2802.0], [81.2, 2802.0], [81.3, 2802.0], [81.4, 2802.0], [81.5, 2802.0], [81.6, 3062.0], [81.7, 3062.0], [81.8, 3062.0], [81.9, 3062.0], [82.0, 3062.0], [82.1, 3062.0], [82.2, 3062.0], [82.3, 3062.0], [82.4, 3062.0], [82.5, 3062.0], [82.6, 3062.0], [82.7, 3062.0], [82.8, 3062.0], [82.9, 3062.0], [83.0, 3062.0], [83.1, 3171.0], [83.2, 3171.0], [83.3, 3171.0], [83.4, 3171.0], [83.5, 3171.0], [83.6, 3171.0], [83.7, 3171.0], [83.8, 3171.0], [83.9, 3171.0], [84.0, 3171.0], [84.1, 3171.0], [84.2, 3171.0], [84.3, 3171.0], [84.4, 3171.0], [84.5, 3171.0], [84.6, 3171.0], [84.7, 3188.0], [84.8, 3188.0], [84.9, 3188.0], [85.0, 3188.0], [85.1, 3188.0], [85.2, 3188.0], [85.3, 3188.0], [85.4, 3188.0], [85.5, 3188.0], [85.6, 3188.0], [85.7, 3188.0], [85.8, 3188.0], [85.9, 3188.0], [86.0, 3188.0], [86.1, 3188.0], [86.2, 3379.0], [86.3, 3379.0], [86.4, 3379.0], [86.5, 3379.0], [86.6, 3379.0], [86.7, 3379.0], [86.8, 3379.0], [86.9, 3379.0], [87.0, 3379.0], [87.1, 3379.0], [87.2, 3379.0], [87.3, 3379.0], [87.4, 3379.0], [87.5, 3379.0], [87.6, 3379.0], [87.7, 3622.0], [87.8, 3622.0], [87.9, 3622.0], [88.0, 3622.0], [88.1, 3622.0], [88.2, 3622.0], [88.3, 3622.0], [88.4, 3622.0], [88.5, 3622.0], [88.6, 3622.0], [88.7, 3622.0], [88.8, 3622.0], [88.9, 3622.0], [89.0, 3622.0], [89.1, 3622.0], [89.2, 3622.0], [89.3, 4128.0], [89.4, 4128.0], [89.5, 4128.0], [89.6, 4128.0], [89.7, 4128.0], [89.8, 4128.0], [89.9, 4128.0], [90.0, 4128.0], [90.1, 4128.0], [90.2, 4128.0], [90.3, 4128.0], [90.4, 4128.0], [90.5, 4128.0], [90.6, 4128.0], [90.7, 4128.0], [90.8, 4183.0], [90.9, 4183.0], [91.0, 4183.0], [91.1, 4183.0], [91.2, 4183.0], [91.3, 4183.0], [91.4, 4183.0], [91.5, 4183.0], [91.6, 4183.0], [91.7, 4183.0], [91.8, 4183.0], [91.9, 4183.0], [92.0, 4183.0], [92.1, 4183.0], [92.2, 4183.0], [92.3, 4183.0], [92.4, 4937.0], [92.5, 4937.0], [92.6, 4937.0], [92.7, 4937.0], [92.8, 4937.0], [92.9, 4937.0], [93.0, 4937.0], [93.1, 4937.0], [93.2, 4937.0], [93.3, 4937.0], [93.4, 4937.0], [93.5, 4937.0], [93.6, 4937.0], [93.7, 4937.0], [93.8, 4937.0], [93.9, 8023.0], [94.0, 8023.0], [94.1, 8023.0], [94.2, 8023.0], [94.3, 8023.0], [94.4, 8023.0], [94.5, 8023.0], [94.6, 8023.0], [94.7, 8023.0], [94.8, 8023.0], [94.9, 8023.0], [95.0, 8023.0], [95.1, 8023.0], [95.2, 8023.0], [95.3, 8023.0], [95.4, 9261.0], [95.5, 9261.0], [95.6, 9261.0], [95.7, 9261.0], [95.8, 9261.0], [95.9, 9261.0], [96.0, 9261.0], [96.1, 9261.0], [96.2, 9261.0], [96.3, 9261.0], [96.4, 9261.0], [96.5, 9261.0], [96.6, 9261.0], [96.7, 9261.0], [96.8, 9261.0], [96.9, 9261.0], [97.0, 12355.0], [97.1, 12355.0], [97.2, 12355.0], [97.3, 12355.0], [97.4, 12355.0], [97.5, 12355.0], [97.6, 12355.0], [97.7, 12355.0], [97.8, 12355.0], [97.9, 12355.0], [98.0, 12355.0], [98.1, 12355.0], [98.2, 12355.0], [98.3, 12355.0], [98.4, 12355.0], [98.5, 22132.0], [98.6, 22132.0], [98.7, 22132.0], [98.8, 22132.0], [98.9, 22132.0], [99.0, 22132.0], [99.1, 22132.0], [99.2, 22132.0], [99.3, 22132.0], [99.4, 22132.0], [99.5, 22132.0], [99.6, 22132.0], [99.7, 22132.0], [99.8, 22132.0], [99.9, 22132.0]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[0.0, 489.0], [0.1, 489.0], [0.2, 489.0], [0.3, 489.0], [0.4, 489.0], [0.5, 489.0], [0.6, 520.0], [0.7, 520.0], [0.8, 520.0], [0.9, 520.0], [1.0, 520.0], [1.1, 525.0], [1.2, 525.0], [1.3, 525.0], [1.4, 525.0], [1.5, 525.0], [1.6, 525.0], [1.7, 679.0], [1.8, 679.0], [1.9, 679.0], [2.0, 679.0], [2.1, 679.0], [2.2, 687.0], [2.3, 687.0], [2.4, 687.0], [2.5, 687.0], [2.6, 687.0], [2.7, 687.0], [2.8, 696.0], [2.9, 696.0], [3.0, 696.0], [3.1, 696.0], [3.2, 696.0], [3.3, 727.0], [3.4, 727.0], [3.5, 727.0], [3.6, 727.0], [3.7, 727.0], [3.8, 727.0], [3.9, 736.0], [4.0, 736.0], [4.1, 736.0], [4.2, 736.0], [4.3, 736.0], [4.4, 736.0], [4.5, 736.0], [4.6, 736.0], [4.7, 736.0], [4.8, 736.0], [4.9, 736.0], [5.0, 740.0], [5.1, 740.0], [5.2, 740.0], [5.3, 740.0], [5.4, 740.0], [5.5, 742.0], [5.6, 742.0], [5.7, 742.0], [5.8, 742.0], [5.9, 742.0], [6.0, 742.0], [6.1, 766.0], [6.2, 766.0], [6.3, 766.0], [6.4, 766.0], [6.5, 766.0], [6.6, 769.0], [6.7, 769.0], [6.8, 769.0], [6.9, 769.0], [7.0, 769.0], [7.1, 769.0], [7.2, 772.0], [7.3, 772.0], [7.4, 772.0], [7.5, 772.0], [7.6, 772.0], [7.7, 801.0], [7.8, 801.0], [7.9, 801.0], [8.0, 801.0], [8.1, 801.0], [8.2, 801.0], [8.3, 801.0], [8.4, 801.0], [8.5, 801.0], [8.6, 801.0], [8.7, 801.0], [8.8, 807.0], [8.9, 807.0], [9.0, 807.0], [9.1, 807.0], [9.2, 807.0], [9.3, 807.0], [9.4, 807.0], [9.5, 807.0], [9.6, 807.0], [9.7, 807.0], [9.8, 807.0], [9.9, 807.0], [10.0, 807.0], [10.1, 807.0], [10.2, 807.0], [10.3, 807.0], [10.4, 811.0], [10.5, 811.0], [10.6, 811.0], [10.7, 811.0], [10.8, 811.0], [10.9, 811.0], [11.0, 815.0], [11.1, 815.0], [11.2, 815.0], [11.3, 815.0], [11.4, 815.0], [11.5, 820.0], [11.6, 820.0], [11.7, 820.0], [11.8, 820.0], [11.9, 820.0], [12.0, 820.0], [12.1, 827.0], [12.2, 827.0], [12.3, 827.0], [12.4, 827.0], [12.5, 827.0], [12.6, 836.0], [12.7, 836.0], [12.8, 836.0], [12.9, 836.0], [13.0, 836.0], [13.1, 836.0], [13.2, 838.0], [13.3, 838.0], [13.4, 838.0], [13.5, 838.0], [13.6, 838.0], [13.7, 853.0], [13.8, 853.0], [13.9, 853.0], [14.0, 853.0], [14.1, 853.0], [14.2, 853.0], [14.3, 868.0], [14.4, 868.0], [14.5, 868.0], [14.6, 868.0], [14.7, 868.0], [14.8, 869.0], [14.9, 869.0], [15.0, 869.0], [15.1, 869.0], [15.2, 869.0], [15.3, 869.0], [15.4, 871.0], [15.5, 871.0], [15.6, 871.0], [15.7, 871.0], [15.8, 871.0], [15.9, 873.0], [16.0, 873.0], [16.1, 873.0], [16.2, 873.0], [16.3, 873.0], [16.4, 874.0], [16.5, 874.0], [16.6, 874.0], [16.7, 874.0], [16.8, 874.0], [16.9, 874.0], [17.0, 880.0], [17.1, 880.0], [17.2, 880.0], [17.3, 880.0], [17.4, 880.0], [17.5, 881.0], [17.6, 881.0], [17.7, 881.0], [17.8, 881.0], [17.9, 881.0], [18.0, 881.0], [18.1, 893.0], [18.2, 893.0], [18.3, 893.0], [18.4, 893.0], [18.5, 893.0], [18.6, 901.0], [18.7, 901.0], [18.8, 901.0], [18.9, 901.0], [19.0, 901.0], [19.1, 901.0], [19.2, 905.0], [19.3, 905.0], [19.4, 905.0], [19.5, 905.0], [19.6, 905.0], [19.7, 909.0], [19.8, 909.0], [19.9, 909.0], [20.0, 909.0], [20.1, 909.0], [20.2, 909.0], [20.3, 909.0], [20.4, 909.0], [20.5, 909.0], [20.6, 909.0], [20.7, 909.0], [20.8, 919.0], [20.9, 919.0], [21.0, 919.0], [21.1, 919.0], [21.2, 919.0], [21.3, 919.0], [21.4, 924.0], [21.5, 924.0], [21.6, 924.0], [21.7, 924.0], [21.8, 924.0], [21.9, 927.0], [22.0, 927.0], [22.1, 927.0], [22.2, 927.0], [22.3, 927.0], [22.4, 927.0], [22.5, 930.0], [22.6, 930.0], [22.7, 930.0], [22.8, 930.0], [22.9, 930.0], [23.0, 935.0], [23.1, 935.0], [23.2, 935.0], [23.3, 935.0], [23.4, 935.0], [23.5, 940.0], [23.6, 940.0], [23.7, 940.0], [23.8, 940.0], [23.9, 940.0], [24.0, 940.0], [24.1, 941.0], [24.2, 941.0], [24.3, 941.0], [24.4, 941.0], [24.5, 941.0], [24.6, 942.0], [24.7, 942.0], [24.8, 942.0], [24.9, 942.0], [25.0, 942.0], [25.1, 942.0], [25.2, 946.0], [25.3, 946.0], [25.4, 946.0], [25.5, 946.0], [25.6, 946.0], [25.7, 956.0], [25.8, 956.0], [25.9, 956.0], [26.0, 956.0], [26.1, 956.0], [26.2, 956.0], [26.3, 965.0], [26.4, 965.0], [26.5, 965.0], [26.6, 965.0], [26.7, 965.0], [26.8, 973.0], [26.9, 973.0], [27.0, 973.0], [27.1, 973.0], [27.2, 973.0], [27.3, 973.0], [27.4, 975.0], [27.5, 975.0], [27.6, 975.0], [27.7, 975.0], [27.8, 975.0], [27.9, 988.0], [28.0, 988.0], [28.1, 988.0], [28.2, 988.0], [28.3, 988.0], [28.4, 988.0], [28.5, 989.0], [28.6, 989.0], [28.7, 989.0], [28.8, 989.0], [28.9, 989.0], [29.0, 993.0], [29.1, 993.0], [29.2, 993.0], [29.3, 993.0], [29.4, 993.0], [29.5, 993.0], [29.6, 996.0], [29.7, 996.0], [29.8, 996.0], [29.9, 996.0], [30.0, 996.0], [30.1, 1005.0], [30.2, 1005.0], [30.3, 1005.0], [30.4, 1005.0], [30.5, 1005.0], [30.6, 1005.0], [30.7, 1009.0], [30.8, 1009.0], [30.9, 1009.0], [31.0, 1009.0], [31.1, 1009.0], [31.2, 1012.0], [31.3, 1012.0], [31.4, 1012.0], [31.5, 1012.0], [31.6, 1012.0], [31.7, 1021.0], [31.8, 1021.0], [31.9, 1021.0], [32.0, 1021.0], [32.1, 1021.0], [32.2, 1021.0], [32.3, 1024.0], [32.4, 1024.0], [32.5, 1024.0], [32.6, 1024.0], [32.7, 1024.0], [32.8, 1027.0], [32.9, 1027.0], [33.0, 1027.0], [33.1, 1027.0], [33.2, 1027.0], [33.3, 1027.0], [33.4, 1030.0], [33.5, 1030.0], [33.6, 1030.0], [33.7, 1030.0], [33.8, 1030.0], [33.9, 1031.0], [34.0, 1031.0], [34.1, 1031.0], [34.2, 1031.0], [34.3, 1031.0], [34.4, 1031.0], [34.5, 1047.0], [34.6, 1047.0], [34.7, 1047.0], [34.8, 1047.0], [34.9, 1047.0], [35.0, 1051.0], [35.1, 1051.0], [35.2, 1051.0], [35.3, 1051.0], [35.4, 1051.0], [35.5, 1051.0], [35.6, 1054.0], [35.7, 1054.0], [35.8, 1054.0], [35.9, 1054.0], [36.0, 1054.0], [36.1, 1055.0], [36.2, 1055.0], [36.3, 1055.0], [36.4, 1055.0], [36.5, 1055.0], [36.6, 1055.0], [36.7, 1061.0], [36.8, 1061.0], [36.9, 1061.0], [37.0, 1061.0], [37.1, 1061.0], [37.2, 1062.0], [37.3, 1062.0], [37.4, 1062.0], [37.5, 1062.0], [37.6, 1062.0], [37.7, 1062.0], [37.8, 1063.0], [37.9, 1063.0], [38.0, 1063.0], [38.1, 1063.0], [38.2, 1063.0], [38.3, 1069.0], [38.4, 1069.0], [38.5, 1069.0], [38.6, 1069.0], [38.7, 1069.0], [38.8, 1081.0], [38.9, 1081.0], [39.0, 1081.0], [39.1, 1081.0], [39.2, 1081.0], [39.3, 1081.0], [39.4, 1087.0], [39.5, 1087.0], [39.6, 1087.0], [39.7, 1087.0], [39.8, 1087.0], [39.9, 1095.0], [40.0, 1095.0], [40.1, 1095.0], [40.2, 1095.0], [40.3, 1095.0], [40.4, 1095.0], [40.5, 1101.0], [40.6, 1101.0], [40.7, 1101.0], [40.8, 1101.0], [40.9, 1101.0], [41.0, 1106.0], [41.1, 1106.0], [41.2, 1106.0], [41.3, 1106.0], [41.4, 1106.0], [41.5, 1106.0], [41.6, 1113.0], [41.7, 1113.0], [41.8, 1113.0], [41.9, 1113.0], [42.0, 1113.0], [42.1, 1114.0], [42.2, 1114.0], [42.3, 1114.0], [42.4, 1114.0], [42.5, 1114.0], [42.6, 1114.0], [42.7, 1119.0], [42.8, 1119.0], [42.9, 1119.0], [43.0, 1119.0], [43.1, 1119.0], [43.2, 1127.0], [43.3, 1127.0], [43.4, 1127.0], [43.5, 1127.0], [43.6, 1127.0], [43.7, 1127.0], [43.8, 1130.0], [43.9, 1130.0], [44.0, 1130.0], [44.1, 1130.0], [44.2, 1130.0], [44.3, 1136.0], [44.4, 1136.0], [44.5, 1136.0], [44.6, 1136.0], [44.7, 1136.0], [44.8, 1136.0], [44.9, 1147.0], [45.0, 1147.0], [45.1, 1147.0], [45.2, 1147.0], [45.3, 1147.0], [45.4, 1150.0], [45.5, 1150.0], [45.6, 1150.0], [45.7, 1150.0], [45.8, 1150.0], [45.9, 1150.0], [46.0, 1159.0], [46.1, 1159.0], [46.2, 1159.0], [46.3, 1159.0], [46.4, 1159.0], [46.5, 1160.0], [46.6, 1160.0], [46.7, 1160.0], [46.8, 1160.0], [46.9, 1160.0], [47.0, 1164.0], [47.1, 1164.0], [47.2, 1164.0], [47.3, 1164.0], [47.4, 1164.0], [47.5, 1164.0], [47.6, 1166.0], [47.7, 1166.0], [47.8, 1166.0], [47.9, 1166.0], [48.0, 1166.0], [48.1, 1173.0], [48.2, 1173.0], [48.3, 1173.0], [48.4, 1173.0], [48.5, 1173.0], [48.6, 1173.0], [48.7, 1179.0], [48.8, 1179.0], [48.9, 1179.0], [49.0, 1179.0], [49.1, 1179.0], [49.2, 1181.0], [49.3, 1181.0], [49.4, 1181.0], [49.5, 1181.0], [49.6, 1181.0], [49.7, 1181.0], [49.8, 1184.0], [49.9, 1184.0], [50.0, 1184.0], [50.1, 1184.0], [50.2, 1184.0], [50.3, 1185.0], [50.4, 1185.0], [50.5, 1185.0], [50.6, 1185.0], [50.7, 1185.0], [50.8, 1185.0], [50.9, 1189.0], [51.0, 1189.0], [51.1, 1189.0], [51.2, 1189.0], [51.3, 1189.0], [51.4, 1192.0], [51.5, 1192.0], [51.6, 1192.0], [51.7, 1192.0], [51.8, 1192.0], [51.9, 1192.0], [52.0, 1193.0], [52.1, 1193.0], [52.2, 1193.0], [52.3, 1193.0], [52.4, 1193.0], [52.5, 1229.0], [52.6, 1229.0], [52.7, 1229.0], [52.8, 1229.0], [52.9, 1229.0], [53.0, 1229.0], [53.1, 1232.0], [53.2, 1232.0], [53.3, 1232.0], [53.4, 1232.0], [53.5, 1232.0], [53.6, 1233.0], [53.7, 1233.0], [53.8, 1233.0], [53.9, 1233.0], [54.0, 1233.0], [54.1, 1233.0], [54.2, 1233.0], [54.3, 1233.0], [54.4, 1233.0], [54.5, 1233.0], [54.6, 1233.0], [54.7, 1234.0], [54.8, 1234.0], [54.9, 1234.0], [55.0, 1234.0], [55.1, 1234.0], [55.2, 1239.0], [55.3, 1239.0], [55.4, 1239.0], [55.5, 1239.0], [55.6, 1239.0], [55.7, 1239.0], [55.8, 1247.0], [55.9, 1247.0], [56.0, 1247.0], [56.1, 1247.0], [56.2, 1247.0], [56.3, 1249.0], [56.4, 1249.0], [56.5, 1249.0], [56.6, 1249.0], [56.7, 1249.0], [56.8, 1249.0], [56.9, 1259.0], [57.0, 1259.0], [57.1, 1259.0], [57.2, 1259.0], [57.3, 1259.0], [57.4, 1260.0], [57.5, 1260.0], [57.6, 1260.0], [57.7, 1260.0], [57.8, 1260.0], [57.9, 1260.0], [58.0, 1264.0], [58.1, 1264.0], [58.2, 1264.0], [58.3, 1264.0], [58.4, 1264.0], [58.5, 1288.0], [58.6, 1288.0], [58.7, 1288.0], [58.8, 1288.0], [58.9, 1288.0], [59.0, 1288.0], [59.1, 1306.0], [59.2, 1306.0], [59.3, 1306.0], [59.4, 1306.0], [59.5, 1306.0], [59.6, 1322.0], [59.7, 1322.0], [59.8, 1322.0], [59.9, 1322.0], [60.0, 1322.0], [60.1, 1322.0], [60.2, 1325.0], [60.3, 1325.0], [60.4, 1325.0], [60.5, 1325.0], [60.6, 1325.0], [60.7, 1334.0], [60.8, 1334.0], [60.9, 1334.0], [61.0, 1334.0], [61.1, 1334.0], [61.2, 1334.0], [61.3, 1377.0], [61.4, 1377.0], [61.5, 1377.0], [61.6, 1377.0], [61.7, 1377.0], [61.8, 1389.0], [61.9, 1389.0], [62.0, 1389.0], [62.1, 1389.0], [62.2, 1389.0], [62.3, 1441.0], [62.4, 1441.0], [62.5, 1441.0], [62.6, 1441.0], [62.7, 1441.0], [62.8, 1441.0], [62.9, 1463.0], [63.0, 1463.0], [63.1, 1463.0], [63.2, 1463.0], [63.3, 1463.0], [63.4, 1474.0], [63.5, 1474.0], [63.6, 1474.0], [63.7, 1474.0], [63.8, 1474.0], [63.9, 1474.0], [64.0, 1499.0], [64.1, 1499.0], [64.2, 1499.0], [64.3, 1499.0], [64.4, 1499.0], [64.5, 1523.0], [64.6, 1523.0], [64.7, 1523.0], [64.8, 1523.0], [64.9, 1523.0], [65.0, 1523.0], [65.1, 1671.0], [65.2, 1671.0], [65.3, 1671.0], [65.4, 1671.0], [65.5, 1671.0], [65.6, 1756.0], [65.7, 1756.0], [65.8, 1756.0], [65.9, 1756.0], [66.0, 1756.0], [66.1, 1756.0], [66.2, 1796.0], [66.3, 1796.0], [66.4, 1796.0], [66.5, 1796.0], [66.6, 1796.0], [66.7, 1817.0], [66.8, 1817.0], [66.9, 1817.0], [67.0, 1817.0], [67.1, 1817.0], [67.2, 1817.0], [67.3, 1832.0], [67.4, 1832.0], [67.5, 1832.0], [67.6, 1832.0], [67.7, 1832.0], [67.8, 1895.0], [67.9, 1895.0], [68.0, 1895.0], [68.1, 1895.0], [68.2, 1895.0], [68.3, 1895.0], [68.4, 1938.0], [68.5, 1938.0], [68.6, 1938.0], [68.7, 1938.0], [68.8, 1938.0], [68.9, 1940.0], [69.0, 1940.0], [69.1, 1940.0], [69.2, 1940.0], [69.3, 1940.0], [69.4, 1944.0], [69.5, 1944.0], [69.6, 1944.0], [69.7, 1944.0], [69.8, 1944.0], [69.9, 1944.0], [70.0, 1946.0], [70.1, 1946.0], [70.2, 1946.0], [70.3, 1946.0], [70.4, 1946.0], [70.5, 1948.0], [70.6, 1948.0], [70.7, 1948.0], [70.8, 1948.0], [70.9, 1948.0], [71.0, 1948.0], [71.1, 1953.0], [71.2, 1953.0], [71.3, 1953.0], [71.4, 1953.0], [71.5, 1953.0], [71.6, 1983.0], [71.7, 1983.0], [71.8, 1983.0], [71.9, 1983.0], [72.0, 1983.0], [72.1, 1983.0], [72.2, 1999.0], [72.3, 1999.0], [72.4, 1999.0], [72.5, 1999.0], [72.6, 1999.0], [72.7, 2016.0], [72.8, 2016.0], [72.9, 2016.0], [73.0, 2016.0], [73.1, 2016.0], [73.2, 2016.0], [73.3, 2108.0], [73.4, 2108.0], [73.5, 2108.0], [73.6, 2108.0], [73.7, 2108.0], [73.8, 2109.0], [73.9, 2109.0], [74.0, 2109.0], [74.1, 2109.0], [74.2, 2109.0], [74.3, 2109.0], [74.4, 2140.0], [74.5, 2140.0], [74.6, 2140.0], [74.7, 2140.0], [74.8, 2140.0], [74.9, 2159.0], [75.0, 2159.0], [75.1, 2159.0], [75.2, 2159.0], [75.3, 2159.0], [75.4, 2159.0], [75.5, 2202.0], [75.6, 2202.0], [75.7, 2202.0], [75.8, 2202.0], [75.9, 2202.0], [76.0, 2309.0], [76.1, 2309.0], [76.2, 2309.0], [76.3, 2309.0], [76.4, 2309.0], [76.5, 2309.0], [76.6, 2332.0], [76.7, 2332.0], [76.8, 2332.0], [76.9, 2332.0], [77.0, 2332.0], [77.1, 2357.0], [77.2, 2357.0], [77.3, 2357.0], [77.4, 2357.0], [77.5, 2357.0], [77.6, 2434.0], [77.7, 2434.0], [77.8, 2434.0], [77.9, 2434.0], [78.0, 2434.0], [78.1, 2434.0], [78.2, 2533.0], [78.3, 2533.0], [78.4, 2533.0], [78.5, 2533.0], [78.6, 2533.0], [78.7, 2644.0], [78.8, 2644.0], [78.9, 2644.0], [79.0, 2644.0], [79.1, 2644.0], [79.2, 2644.0], [79.3, 2721.0], [79.4, 2721.0], [79.5, 2721.0], [79.6, 2721.0], [79.7, 2721.0], [79.8, 2983.0], [79.9, 2983.0], [80.0, 2983.0], [80.1, 2983.0], [80.2, 2983.0], [80.3, 2983.0], [80.4, 3005.0], [80.5, 3005.0], [80.6, 3005.0], [80.7, 3005.0], [80.8, 3005.0], [80.9, 3197.0], [81.0, 3197.0], [81.1, 3197.0], [81.2, 3197.0], [81.3, 3197.0], [81.4, 3197.0], [81.5, 3366.0], [81.6, 3366.0], [81.7, 3366.0], [81.8, 3366.0], [81.9, 3366.0], [82.0, 3541.0], [82.1, 3541.0], [82.2, 3541.0], [82.3, 3541.0], [82.4, 3541.0], [82.5, 3541.0], [82.6, 3803.0], [82.7, 3803.0], [82.8, 3803.0], [82.9, 3803.0], [83.0, 3803.0], [83.1, 4033.0], [83.2, 4033.0], [83.3, 4033.0], [83.4, 4033.0], [83.5, 4033.0], [83.6, 4033.0], [83.7, 4247.0], [83.8, 4247.0], [83.9, 4247.0], [84.0, 4247.0], [84.1, 4247.0], [84.2, 4283.0], [84.3, 4283.0], [84.4, 4283.0], [84.5, 4283.0], [84.6, 4283.0], [84.7, 4637.0], [84.8, 4637.0], [84.9, 4637.0], [85.0, 4637.0], [85.1, 4637.0], [85.2, 4637.0], [85.3, 4813.0], [85.4, 4813.0], [85.5, 4813.0], [85.6, 4813.0], [85.7, 4813.0], [85.8, 5101.0], [85.9, 5101.0], [86.0, 5101.0], [86.1, 5101.0], [86.2, 5101.0], [86.3, 5101.0], [86.4, 5316.0], [86.5, 5316.0], [86.6, 5316.0], [86.7, 5316.0], [86.8, 5316.0], [86.9, 5456.0], [87.0, 5456.0], [87.1, 5456.0], [87.2, 5456.0], [87.3, 5456.0], [87.4, 5456.0], [87.5, 5471.0], [87.6, 5471.0], [87.7, 5471.0], [87.8, 5471.0], [87.9, 5471.0], [88.0, 5653.0], [88.1, 5653.0], [88.2, 5653.0], [88.3, 5653.0], [88.4, 5653.0], [88.5, 5653.0], [88.6, 5745.0], [88.7, 5745.0], [88.8, 5745.0], [88.9, 5745.0], [89.0, 5745.0], [89.1, 5900.0], [89.2, 5900.0], [89.3, 5900.0], [89.4, 5900.0], [89.5, 5900.0], [89.6, 5900.0], [89.7, 6004.0], [89.8, 6004.0], [89.9, 6004.0], [90.0, 6004.0], [90.1, 6004.0], [90.2, 6088.0], [90.3, 6088.0], [90.4, 6088.0], [90.5, 6088.0], [90.6, 6088.0], [90.7, 6088.0], [90.8, 6375.0], [90.9, 6375.0], [91.0, 6375.0], [91.1, 6375.0], [91.2, 6375.0], [91.3, 6426.0], [91.4, 6426.0], [91.5, 6426.0], [91.6, 6426.0], [91.7, 6426.0], [91.8, 6426.0], [91.9, 6482.0], [92.0, 6482.0], [92.1, 6482.0], [92.2, 6482.0], [92.3, 6482.0], [92.4, 6506.0], [92.5, 6506.0], [92.6, 6506.0], [92.7, 6506.0], [92.8, 6506.0], [92.9, 7252.0], [93.0, 7252.0], [93.1, 7252.0], [93.2, 7252.0], [93.3, 7252.0], [93.4, 7252.0], [93.5, 7254.0], [93.6, 7254.0], [93.7, 7254.0], [93.8, 7254.0], [93.9, 7254.0], [94.0, 7433.0], [94.1, 7433.0], [94.2, 7433.0], [94.3, 7433.0], [94.4, 7433.0], [94.5, 7433.0], [94.6, 8161.0], [94.7, 8161.0], [94.8, 8161.0], [94.9, 8161.0], [95.0, 8161.0], [95.1, 8650.0], [95.2, 8650.0], [95.3, 8650.0], [95.4, 8650.0], [95.5, 8650.0], [95.6, 8650.0], [95.7, 9830.0], [95.8, 9830.0], [95.9, 9830.0], [96.0, 9830.0], [96.1, 9830.0], [96.2, 12956.0], [96.3, 12956.0], [96.4, 12956.0], [96.5, 12956.0], [96.6, 12956.0], [96.7, 12956.0], [96.8, 14333.0], [96.9, 14333.0], [97.0, 14333.0], [97.1, 14333.0], [97.2, 14333.0], [97.3, 14478.0], [97.4, 14478.0], [97.5, 14478.0], [97.6, 14478.0], [97.7, 14478.0], [97.8, 14478.0], [97.9, 16221.0], [98.0, 16221.0], [98.1, 16221.0], [98.2, 16221.0], [98.3, 16221.0], [98.4, 16923.0], [98.5, 16923.0], [98.6, 16923.0], [98.7, 16923.0], [98.8, 16923.0], [98.9, 16923.0], [99.0, 49937.0], [99.1, 49937.0], [99.2, 49937.0], [99.3, 49937.0], [99.4, 49937.0], [99.5, 64520.0], [99.6, 64520.0], [99.7, 64520.0], [99.8, 64520.0], [99.9, 64520.0], [100.0, 64520.0]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[0.0, 305.0], [0.1, 322.0], [0.2, 334.0], [0.3, 340.0], [0.4, 347.0], [0.5, 356.0], [0.6, 362.0], [0.7, 368.0], [0.8, 373.0], [0.9, 379.0], [1.0, 385.0], [1.1, 390.0], [1.2, 394.0], [1.3, 398.0], [1.4, 404.0], [1.5, 408.0], [1.6, 412.0], [1.7, 417.0], [1.8, 422.0], [1.9, 427.0], [2.0, 431.0], [2.1, 436.0], [2.2, 442.0], [2.3, 448.0], [2.4, 453.0], [2.5, 458.0], [2.6, 462.0], [2.7, 467.0], [2.8, 472.0], [2.9, 476.0], [3.0, 480.0], [3.1, 483.0], [3.2, 487.0], [3.3, 491.0], [3.4, 494.0], [3.5, 498.0], [3.6, 502.0], [3.7, 505.0], [3.8, 509.0], [3.9, 512.0], [4.0, 515.0], [4.1, 519.0], [4.2, 522.0], [4.3, 525.0], [4.4, 529.0], [4.5, 531.0], [4.6, 534.0], [4.7, 537.0], [4.8, 541.0], [4.9, 543.0], [5.0, 545.0], [5.1, 548.0], [5.2, 550.0], [5.3, 553.0], [5.4, 555.0], [5.5, 558.0], [5.6, 561.0], [5.7, 564.0], [5.8, 566.0], [5.9, 569.0], [6.0, 571.0], [6.1, 574.0], [6.2, 576.0], [6.3, 579.0], [6.4, 582.0], [6.5, 584.0], [6.6, 586.0], [6.7, 588.0], [6.8, 590.0], [6.9, 593.0], [7.0, 596.0], [7.1, 597.0], [7.2, 600.0], [7.3, 602.0], [7.4, 603.0], [7.5, 605.0], [7.6, 608.0], [7.7, 609.0], [7.8, 611.0], [7.9, 613.0], [8.0, 615.0], [8.1, 616.0], [8.2, 618.0], [8.3, 620.0], [8.4, 621.0], [8.5, 623.0], [8.6, 625.0], [8.7, 627.0], [8.8, 628.0], [8.9, 630.0], [9.0, 632.0], [9.1, 634.0], [9.2, 635.0], [9.3, 637.0], [9.4, 638.0], [9.5, 640.0], [9.6, 642.0], [9.7, 643.0], [9.8, 645.0], [9.9, 647.0], [10.0, 648.0], [10.1, 650.0], [10.2, 651.0], [10.3, 652.0], [10.4, 654.0], [10.5, 656.0], [10.6, 657.0], [10.7, 658.0], [10.8, 660.0], [10.9, 661.0], [11.0, 662.0], [11.1, 663.0], [11.2, 665.0], [11.3, 666.0], [11.4, 667.0], [11.5, 668.0], [11.6, 669.0], [11.7, 671.0], [11.8, 672.0], [11.9, 673.0], [12.0, 674.0], [12.1, 676.0], [12.2, 677.0], [12.3, 677.0], [12.4, 679.0], [12.5, 679.0], [12.6, 680.0], [12.7, 681.0], [12.8, 682.0], [12.9, 683.0], [13.0, 684.0], [13.1, 685.0], [13.2, 686.0], [13.3, 687.0], [13.4, 688.0], [13.5, 689.0], [13.6, 690.0], [13.7, 691.0], [13.8, 692.0], [13.9, 693.0], [14.0, 694.0], [14.1, 695.0], [14.2, 696.0], [14.3, 697.0], [14.4, 698.0], [14.5, 699.0], [14.6, 700.0], [14.7, 701.0], [14.8, 702.0], [14.9, 703.0], [15.0, 704.0], [15.1, 704.0], [15.2, 705.0], [15.3, 706.0], [15.4, 706.0], [15.5, 708.0], [15.6, 708.0], [15.7, 709.0], [15.8, 710.0], [15.9, 711.0], [16.0, 712.0], [16.1, 713.0], [16.2, 714.0], [16.3, 714.0], [16.4, 715.0], [16.5, 716.0], [16.6, 717.0], [16.7, 718.0], [16.8, 718.0], [16.9, 719.0], [17.0, 720.0], [17.1, 721.0], [17.2, 721.0], [17.3, 722.0], [17.4, 723.0], [17.5, 724.0], [17.6, 725.0], [17.7, 725.0], [17.8, 726.0], [17.9, 727.0], [18.0, 727.0], [18.1, 728.0], [18.2, 729.0], [18.3, 730.0], [18.4, 730.0], [18.5, 731.0], [18.6, 732.0], [18.7, 732.0], [18.8, 733.0], [18.9, 734.0], [19.0, 735.0], [19.1, 735.0], [19.2, 736.0], [19.3, 737.0], [19.4, 738.0], [19.5, 738.0], [19.6, 739.0], [19.7, 740.0], [19.8, 740.0], [19.9, 741.0], [20.0, 742.0], [20.1, 742.0], [20.2, 743.0], [20.3, 744.0], [20.4, 744.0], [20.5, 745.0], [20.6, 746.0], [20.7, 746.0], [20.8, 747.0], [20.9, 748.0], [21.0, 748.0], [21.1, 749.0], [21.2, 750.0], [21.3, 750.0], [21.4, 751.0], [21.5, 752.0], [21.6, 752.0], [21.7, 753.0], [21.8, 753.0], [21.9, 754.0], [22.0, 754.0], [22.1, 755.0], [22.2, 756.0], [22.3, 756.0], [22.4, 757.0], [22.5, 758.0], [22.6, 758.0], [22.7, 759.0], [22.8, 760.0], [22.9, 760.0], [23.0, 761.0], [23.1, 762.0], [23.2, 762.0], [23.3, 763.0], [23.4, 764.0], [23.5, 764.0], [23.6, 765.0], [23.7, 766.0], [23.8, 766.0], [23.9, 767.0], [24.0, 767.0], [24.1, 768.0], [24.2, 769.0], [24.3, 769.0], [24.4, 770.0], [24.5, 771.0], [24.6, 771.0], [24.7, 772.0], [24.8, 772.0], [24.9, 773.0], [25.0, 774.0], [25.1, 774.0], [25.2, 775.0], [25.3, 775.0], [25.4, 776.0], [25.5, 776.0], [25.6, 777.0], [25.7, 778.0], [25.8, 778.0], [25.9, 779.0], [26.0, 780.0], [26.1, 780.0], [26.2, 781.0], [26.3, 781.0], [26.4, 782.0], [26.5, 782.0], [26.6, 783.0], [26.7, 783.0], [26.8, 784.0], [26.9, 785.0], [27.0, 785.0], [27.1, 786.0], [27.2, 787.0], [27.3, 787.0], [27.4, 788.0], [27.5, 788.0], [27.6, 789.0], [27.7, 789.0], [27.8, 790.0], [27.9, 790.0], [28.0, 791.0], [28.1, 792.0], [28.2, 792.0], [28.3, 793.0], [28.4, 793.0], [28.5, 794.0], [28.6, 795.0], [28.7, 795.0], [28.8, 796.0], [28.9, 797.0], [29.0, 797.0], [29.1, 798.0], [29.2, 799.0], [29.3, 799.0], [29.4, 800.0], [29.5, 800.0], [29.6, 801.0], [29.7, 802.0], [29.8, 802.0], [29.9, 803.0], [30.0, 803.0], [30.1, 804.0], [30.2, 804.0], [30.3, 805.0], [30.4, 806.0], [30.5, 806.0], [30.6, 807.0], [30.7, 808.0], [30.8, 808.0], [30.9, 809.0], [31.0, 810.0], [31.1, 810.0], [31.2, 811.0], [31.3, 811.0], [31.4, 812.0], [31.5, 812.0], [31.6, 813.0], [31.7, 813.0], [31.8, 814.0], [31.9, 815.0], [32.0, 816.0], [32.1, 816.0], [32.2, 817.0], [32.3, 817.0], [32.4, 817.0], [32.5, 818.0], [32.6, 819.0], [32.7, 819.0], [32.8, 820.0], [32.9, 820.0], [33.0, 821.0], [33.1, 821.0], [33.2, 822.0], [33.3, 823.0], [33.4, 823.0], [33.5, 824.0], [33.6, 825.0], [33.7, 825.0], [33.8, 826.0], [33.9, 827.0], [34.0, 827.0], [34.1, 828.0], [34.2, 828.0], [34.3, 829.0], [34.4, 830.0], [34.5, 830.0], [34.6, 831.0], [34.7, 831.0], [34.8, 832.0], [34.9, 833.0], [35.0, 833.0], [35.1, 834.0], [35.2, 835.0], [35.3, 835.0], [35.4, 836.0], [35.5, 837.0], [35.6, 837.0], [35.7, 838.0], [35.8, 839.0], [35.9, 839.0], [36.0, 840.0], [36.1, 840.0], [36.2, 841.0], [36.3, 841.0], [36.4, 842.0], [36.5, 842.0], [36.6, 843.0], [36.7, 844.0], [36.8, 845.0], [36.9, 845.0], [37.0, 846.0], [37.1, 847.0], [37.2, 847.0], [37.3, 848.0], [37.4, 849.0], [37.5, 849.0], [37.6, 850.0], [37.7, 851.0], [37.8, 851.0], [37.9, 852.0], [38.0, 853.0], [38.1, 853.0], [38.2, 854.0], [38.3, 854.0], [38.4, 855.0], [38.5, 856.0], [38.6, 856.0], [38.7, 857.0], [38.8, 858.0], [38.9, 858.0], [39.0, 859.0], [39.1, 860.0], [39.2, 860.0], [39.3, 861.0], [39.4, 862.0], [39.5, 863.0], [39.6, 863.0], [39.7, 864.0], [39.8, 865.0], [39.9, 865.0], [40.0, 866.0], [40.1, 867.0], [40.2, 867.0], [40.3, 868.0], [40.4, 869.0], [40.5, 869.0], [40.6, 870.0], [40.7, 870.0], [40.8, 871.0], [40.9, 872.0], [41.0, 872.0], [41.1, 873.0], [41.2, 874.0], [41.3, 874.0], [41.4, 875.0], [41.5, 876.0], [41.6, 877.0], [41.7, 877.0], [41.8, 878.0], [41.9, 879.0], [42.0, 880.0], [42.1, 880.0], [42.2, 881.0], [42.3, 882.0], [42.4, 883.0], [42.5, 883.0], [42.6, 884.0], [42.7, 885.0], [42.8, 885.0], [42.9, 886.0], [43.0, 887.0], [43.1, 888.0], [43.2, 888.0], [43.3, 889.0], [43.4, 890.0], [43.5, 891.0], [43.6, 891.0], [43.7, 892.0], [43.8, 893.0], [43.9, 893.0], [44.0, 894.0], [44.1, 895.0], [44.2, 896.0], [44.3, 897.0], [44.4, 897.0], [44.5, 898.0], [44.6, 899.0], [44.7, 900.0], [44.8, 900.0], [44.9, 901.0], [45.0, 902.0], [45.1, 903.0], [45.2, 903.0], [45.3, 904.0], [45.4, 905.0], [45.5, 906.0], [45.6, 907.0], [45.7, 907.0], [45.8, 908.0], [45.9, 909.0], [46.0, 909.0], [46.1, 910.0], [46.2, 911.0], [46.3, 912.0], [46.4, 912.0], [46.5, 913.0], [46.6, 914.0], [46.7, 915.0], [46.8, 916.0], [46.9, 917.0], [47.0, 917.0], [47.1, 918.0], [47.2, 919.0], [47.3, 920.0], [47.4, 921.0], [47.5, 922.0], [47.6, 923.0], [47.7, 923.0], [47.8, 924.0], [47.9, 925.0], [48.0, 926.0], [48.1, 927.0], [48.2, 928.0], [48.3, 929.0], [48.4, 930.0], [48.5, 931.0], [48.6, 931.0], [48.7, 932.0], [48.8, 933.0], [48.9, 934.0], [49.0, 935.0], [49.1, 935.0], [49.2, 936.0], [49.3, 937.0], [49.4, 938.0], [49.5, 939.0], [49.6, 939.0], [49.7, 940.0], [49.8, 941.0], [49.9, 942.0], [50.0, 943.0], [50.1, 944.0], [50.2, 945.0], [50.3, 945.0], [50.4, 946.0], [50.5, 947.0], [50.6, 948.0], [50.7, 949.0], [50.8, 950.0], [50.9, 951.0], [51.0, 952.0], [51.1, 953.0], [51.2, 954.0], [51.3, 954.0], [51.4, 955.0], [51.5, 956.0], [51.6, 957.0], [51.7, 958.0], [51.8, 959.0], [51.9, 959.0], [52.0, 960.0], [52.1, 961.0], [52.2, 962.0], [52.3, 963.0], [52.4, 964.0], [52.5, 965.0], [52.6, 966.0], [52.7, 967.0], [52.8, 968.0], [52.9, 969.0], [53.0, 970.0], [53.1, 970.0], [53.2, 971.0], [53.3, 972.0], [53.4, 973.0], [53.5, 975.0], [53.6, 975.0], [53.7, 976.0], [53.8, 978.0], [53.9, 979.0], [54.0, 980.0], [54.1, 980.0], [54.2, 981.0], [54.3, 982.0], [54.4, 983.0], [54.5, 984.0], [54.6, 985.0], [54.7, 986.0], [54.8, 987.0], [54.9, 988.0], [55.0, 989.0], [55.1, 990.0], [55.2, 991.0], [55.3, 992.0], [55.4, 993.0], [55.5, 993.0], [55.6, 994.0], [55.7, 995.0], [55.8, 996.0], [55.9, 998.0], [56.0, 999.0], [56.1, 1000.0], [56.2, 1000.0], [56.3, 1002.0], [56.4, 1003.0], [56.5, 1004.0], [56.6, 1005.0], [56.7, 1006.0], [56.8, 1007.0], [56.9, 1008.0], [57.0, 1009.0], [57.1, 1010.0], [57.2, 1011.0], [57.3, 1012.0], [57.4, 1013.0], [57.5, 1014.0], [57.6, 1015.0], [57.7, 1016.0], [57.8, 1017.0], [57.9, 1018.0], [58.0, 1019.0], [58.1, 1020.0], [58.2, 1021.0], [58.3, 1023.0], [58.4, 1024.0], [58.5, 1025.0], [58.6, 1026.0], [58.7, 1027.0], [58.8, 1028.0], [58.9, 1029.0], [59.0, 1030.0], [59.1, 1031.0], [59.2, 1032.0], [59.3, 1033.0], [59.4, 1035.0], [59.5, 1036.0], [59.6, 1037.0], [59.7, 1038.0], [59.8, 1039.0], [59.9, 1041.0], [60.0, 1042.0], [60.1, 1043.0], [60.2, 1044.0], [60.3, 1046.0], [60.4, 1047.0], [60.5, 1048.0], [60.6, 1049.0], [60.7, 1050.0], [60.8, 1052.0], [60.9, 1053.0], [61.0, 1054.0], [61.1, 1055.0], [61.2, 1056.0], [61.3, 1057.0], [61.4, 1059.0], [61.5, 1060.0], [61.6, 1061.0], [61.7, 1062.0], [61.8, 1063.0], [61.9, 1064.0], [62.0, 1065.0], [62.1, 1067.0], [62.2, 1068.0], [62.3, 1069.0], [62.4, 1070.0], [62.5, 1072.0], [62.6, 1073.0], [62.7, 1075.0], [62.8, 1076.0], [62.9, 1077.0], [63.0, 1079.0], [63.1, 1080.0], [63.2, 1082.0], [63.3, 1083.0], [63.4, 1085.0], [63.5, 1086.0], [63.6, 1087.0], [63.7, 1089.0], [63.8, 1090.0], [63.9, 1092.0], [64.0, 1093.0], [64.1, 1095.0], [64.2, 1097.0], [64.3, 1098.0], [64.4, 1099.0], [64.5, 1101.0], [64.6, 1103.0], [64.7, 1104.0], [64.8, 1106.0], [64.9, 1107.0], [65.0, 1109.0], [65.1, 1111.0], [65.2, 1113.0], [65.3, 1115.0], [65.4, 1117.0], [65.5, 1119.0], [65.6, 1121.0], [65.7, 1123.0], [65.8, 1125.0], [65.9, 1127.0], [66.0, 1129.0], [66.1, 1132.0], [66.2, 1135.0], [66.3, 1137.0], [66.4, 1140.0], [66.5, 1142.0], [66.6, 1144.0], [66.7, 1148.0], [66.8, 1151.0], [66.9, 1154.0], [67.0, 1157.0], [67.1, 1160.0], [67.2, 1164.0], [67.3, 1167.0], [67.4, 1171.0], [67.5, 1175.0], [67.6, 1178.0], [67.7, 1182.0], [67.8, 1187.0], [67.9, 1191.0], [68.0, 1196.0], [68.1, 1200.0], [68.2, 1205.0], [68.3, 1210.0], [68.4, 1217.0], [68.5, 1223.0], [68.6, 1233.0], [68.7, 1243.0], [68.8, 1253.0], [68.9, 1263.0], [69.0, 1277.0], [69.1, 1292.0], [69.2, 1307.0], [69.3, 1327.0], [69.4, 1340.0], [69.5, 1358.0], [69.6, 1376.0], [69.7, 1393.0], [69.8, 1407.0], [69.9, 1422.0], [70.0, 1436.0], [70.1, 1449.0], [70.2, 1461.0], [70.3, 1477.0], [70.4, 1492.0], [70.5, 1503.0], [70.6, 1515.0], [70.7, 1529.0], [70.8, 1539.0], [70.9, 1550.0], [71.0, 1560.0], [71.1, 1568.0], [71.2, 1576.0], [71.3, 1584.0], [71.4, 1594.0], [71.5, 1603.0], [71.6, 1613.0], [71.7, 1621.0], [71.8, 1629.0], [71.9, 1638.0], [72.0, 1647.0], [72.1, 1653.0], [72.2, 1660.0], [72.3, 1666.0], [72.4, 1672.0], [72.5, 1678.0], [72.6, 1683.0], [72.7, 1688.0], [72.8, 1693.0], [72.9, 1697.0], [73.0, 1702.0], [73.1, 1706.0], [73.2, 1711.0], [73.3, 1715.0], [73.4, 1719.0], [73.5, 1723.0], [73.6, 1727.0], [73.7, 1730.0], [73.8, 1735.0], [73.9, 1740.0], [74.0, 1744.0], [74.1, 1747.0], [74.2, 1751.0], [74.3, 1755.0], [74.4, 1759.0], [74.5, 1762.0], [74.6, 1766.0], [74.7, 1770.0], [74.8, 1774.0], [74.9, 1778.0], [75.0, 1782.0], [75.1, 1786.0], [75.2, 1790.0], [75.3, 1792.0], [75.4, 1795.0], [75.5, 1799.0], [75.6, 1803.0], [75.7, 1808.0], [75.8, 1812.0], [75.9, 1816.0], [76.0, 1820.0], [76.1, 1823.0], [76.2, 1827.0], [76.3, 1831.0], [76.4, 1836.0], [76.5, 1842.0], [76.6, 1847.0], [76.7, 1851.0], [76.8, 1855.0], [76.9, 1859.0], [77.0, 1864.0], [77.1, 1868.0], [77.2, 1873.0], [77.3, 1879.0], [77.4, 1885.0], [77.5, 1891.0], [77.6, 1897.0], [77.7, 1904.0], [77.8, 1912.0], [77.9, 1920.0], [78.0, 1928.0], [78.1, 1937.0], [78.2, 1946.0], [78.3, 1953.0], [78.4, 1959.0], [78.5, 1969.0], [78.6, 1978.0], [78.7, 1985.0], [78.8, 1993.0], [78.9, 2002.0], [79.0, 2009.0], [79.1, 2017.0], [79.2, 2026.0], [79.3, 2034.0], [79.4, 2041.0], [79.5, 2047.0], [79.6, 2056.0], [79.7, 2066.0], [79.8, 2076.0], [79.9, 2084.0], [80.0, 2092.0], [80.1, 2100.0], [80.2, 2109.0], [80.3, 2118.0], [80.4, 2129.0], [80.5, 2143.0], [80.6, 2156.0], [80.7, 2166.0], [80.8, 2178.0], [80.9, 2191.0], [81.0, 2202.0], [81.1, 2213.0], [81.2, 2227.0], [81.3, 2239.0], [81.4, 2250.0], [81.5, 2262.0], [81.6, 2278.0], [81.7, 2294.0], [81.8, 2310.0], [81.9, 2324.0], [82.0, 2336.0], [82.1, 2352.0], [82.2, 2368.0], [82.3, 2381.0], [82.4, 2398.0], [82.5, 2414.0], [82.6, 2433.0], [82.7, 2449.0], [82.8, 2470.0], [82.9, 2493.0], [83.0, 2513.0], [83.1, 2537.0], [83.2, 2561.0], [83.3, 2582.0], [83.4, 2607.0], [83.5, 2636.0], [83.6, 2663.0], [83.7, 2684.0], [83.8, 2707.0], [83.9, 2734.0], [84.0, 2764.0], [84.1, 2787.0], [84.2, 2815.0], [84.3, 2843.0], [84.4, 2872.0], [84.5, 2913.0], [84.6, 2948.0], [84.7, 2991.0], [84.8, 3029.0], [84.9, 3059.0], [85.0, 3094.0], [85.1, 3133.0], [85.2, 3177.0], [85.3, 3212.0], [85.4, 3252.0], [85.5, 3299.0], [85.6, 3329.0], [85.7, 3363.0], [85.8, 3394.0], [85.9, 3439.0], [86.0, 3490.0], [86.1, 3521.0], [86.2, 3555.0], [86.3, 3594.0], [86.4, 3637.0], [86.5, 3677.0], [86.6, 3717.0], [86.7, 3757.0], [86.8, 3796.0], [86.9, 3832.0], [87.0, 3877.0], [87.1, 3912.0], [87.2, 3959.0], [87.3, 3996.0], [87.4, 4049.0], [87.5, 4097.0], [87.6, 4148.0], [87.7, 4207.0], [87.8, 4264.0], [87.9, 4319.0], [88.0, 4364.0], [88.1, 4403.0], [88.2, 4451.0], [88.3, 4497.0], [88.4, 4561.0], [88.5, 4623.0], [88.6, 4657.0], [88.7, 4720.0], [88.8, 4776.0], [88.9, 4830.0], [89.0, 4888.0], [89.1, 4945.0], [89.2, 5003.0], [89.3, 5057.0], [89.4, 5102.0], [89.5, 5148.0], [89.6, 5196.0], [89.7, 5261.0], [89.8, 5331.0], [89.9, 5375.0], [90.0, 5422.0], [90.1, 5453.0], [90.2, 5492.0], [90.3, 5533.0], [90.4, 5588.0], [90.5, 5635.0], [90.6, 5673.0], [90.7, 5709.0], [90.8, 5751.0], [90.9, 5795.0], [91.0, 5840.0], [91.1, 5879.0], [91.2, 5921.0], [91.3, 5962.0], [91.4, 6002.0], [91.5, 6058.0], [91.6, 6097.0], [91.7, 6135.0], [91.8, 6169.0], [91.9, 6202.0], [92.0, 6236.0], [92.1, 6278.0], [92.2, 6330.0], [92.3, 6402.0], [92.4, 6476.0], [92.5, 6550.0], [92.6, 6608.0], [92.7, 6677.0], [92.8, 6731.0], [92.9, 6794.0], [93.0, 6847.0], [93.1, 6902.0], [93.2, 6951.0], [93.3, 6990.0], [93.4, 7029.0], [93.5, 7089.0], [93.6, 7137.0], [93.7, 7186.0], [93.8, 7271.0], [93.9, 7321.0], [94.0, 7369.0], [94.1, 7414.0], [94.2, 7470.0], [94.3, 7527.0], [94.4, 7583.0], [94.5, 7637.0], [94.6, 7687.0], [94.7, 7754.0], [94.8, 7832.0], [94.9, 7904.0], [95.0, 7994.0], [95.1, 8058.0], [95.2, 8143.0], [95.3, 8236.0], [95.4, 8318.0], [95.5, 8395.0], [95.6, 8471.0], [95.7, 8582.0], [95.8, 8668.0], [95.9, 8754.0], [96.0, 8867.0], [96.1, 8977.0], [96.2, 9101.0], [96.3, 9205.0], [96.4, 9315.0], [96.5, 9440.0], [96.6, 9544.0], [96.7, 9688.0], [96.8, 9785.0], [96.9, 9935.0], [97.0, 10111.0], [97.1, 10320.0], [97.2, 10575.0], [97.3, 10727.0], [97.4, 10916.0], [97.5, 11129.0], [97.6, 11331.0], [97.7, 11544.0], [97.8, 11787.0], [97.9, 12088.0], [98.0, 12338.0], [98.1, 12701.0], [98.2, 13014.0], [98.3, 13492.0], [98.4, 13966.0], [98.5, 14575.0], [98.6, 15093.0], [98.7, 15711.0], [98.8, 16249.0], [98.9, 17208.0], [99.0, 17876.0], [99.1, 18442.0], [99.2, 19134.0], [99.3, 20006.0], [99.4, 20991.0], [99.5, 23035.0], [99.6, 27296.0], [99.7, 30796.0], [99.8, 34260.0], [99.9, 40973.0], [100.0, 99393.0]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[0.0, 1280.0], [0.1, 1280.0], [0.2, 1280.0], [0.3, 1280.0], [0.4, 1280.0], [0.5, 1280.0], [0.6, 1280.0], [0.7, 1280.0], [0.8, 1280.0], [0.9, 1280.0], [1.0, 1280.0], [1.1, 1280.0], [1.2, 1280.0], [1.3, 1280.0], [1.4, 1280.0], [1.5, 1280.0], [1.6, 1280.0], [1.7, 1280.0], [1.8, 1280.0], [1.9, 1280.0], [2.0, 1280.0], [2.1, 1280.0], [2.2, 1280.0], [2.3, 1280.0], [2.4, 1280.0], [2.5, 1280.0], [2.6, 1280.0], [2.7, 1280.0], [2.8, 1280.0], [2.9, 1280.0], [3.0, 1280.0], [3.1, 1280.0], [3.2, 1280.0], [3.3, 1280.0], [3.4, 1280.0], [3.5, 1280.0], [3.6, 1280.0], [3.7, 1280.0], [3.8, 1280.0], [3.9, 1280.0], [4.0, 1280.0], [4.1, 1280.0], [4.2, 1280.0], [4.3, 1280.0], [4.4, 1280.0], [4.5, 1280.0], [4.6, 1280.0], [4.7, 1280.0], [4.8, 1280.0], [4.9, 1280.0], [5.0, 1280.0], [5.1, 1280.0], [5.2, 1280.0], [5.3, 1280.0], [5.4, 1280.0], [5.5, 1280.0], [5.6, 1280.0], [5.7, 1280.0], [5.8, 1280.0], [5.9, 1280.0], [6.0, 1280.0], [6.1, 1280.0], [6.2, 1280.0], [6.3, 1280.0], [6.4, 1280.0], [6.5, 1280.0], [6.6, 1280.0], [6.7, 1280.0], [6.8, 1280.0], [6.9, 1280.0], [7.0, 1280.0], [7.1, 1280.0], [7.2, 1280.0], [7.3, 1280.0], [7.4, 1280.0], [7.5, 1280.0], [7.6, 1280.0], [7.7, 1280.0], [7.8, 1280.0], [7.9, 1280.0], [8.0, 1280.0], [8.1, 1280.0], [8.2, 1280.0], [8.3, 1280.0], [8.4, 1280.0], [8.5, 1280.0], [8.6, 1280.0], [8.7, 1280.0], [8.8, 1280.0], [8.9, 1280.0], [9.0, 1280.0], [9.1, 1280.0], [9.2, 1280.0], [9.3, 1280.0], [9.4, 1280.0], [9.5, 1280.0], [9.6, 1280.0], [9.7, 1280.0], [9.8, 1280.0], [9.9, 1280.0], [10.0, 1280.0], [10.1, 1280.0], [10.2, 1280.0], [10.3, 1280.0], [10.4, 1280.0], [10.5, 1280.0], [10.6, 1280.0], [10.7, 1280.0], [10.8, 1280.0], [10.9, 1280.0], [11.0, 1280.0], [11.1, 1280.0], [11.2, 1280.0], [11.3, 1280.0], [11.4, 1280.0], [11.5, 1280.0], [11.6, 1280.0], [11.7, 1280.0], [11.8, 1280.0], [11.9, 1280.0], [12.0, 1280.0], [12.1, 1280.0], [12.2, 1280.0], [12.3, 1280.0], [12.4, 1280.0], [12.5, 1280.0], [12.6, 1280.0], [12.7, 1280.0], [12.8, 1280.0], [12.9, 1280.0], [13.0, 1280.0], [13.1, 1280.0], [13.2, 1280.0], [13.3, 1280.0], [13.4, 1280.0], [13.5, 1280.0], [13.6, 1280.0], [13.7, 1280.0], [13.8, 1280.0], [13.9, 1280.0], [14.0, 1280.0], [14.1, 1280.0], [14.2, 1280.0], [14.3, 1280.0], [14.4, 1280.0], [14.5, 1280.0], [14.6, 1280.0], [14.7, 1280.0], [14.8, 1280.0], [14.9, 1280.0], [15.0, 1280.0], [15.1, 1280.0], [15.2, 1280.0], [15.3, 1280.0], [15.4, 1280.0], [15.5, 1280.0], [15.6, 1280.0], [15.7, 1280.0], [15.8, 1280.0], [15.9, 1280.0], [16.0, 1280.0], [16.1, 1280.0], [16.2, 1280.0], [16.3, 1280.0], [16.4, 1280.0], [16.5, 1280.0], [16.6, 1280.0], [16.7, 1280.0], [16.8, 1280.0], [16.9, 1280.0], [17.0, 1280.0], [17.1, 1280.0], [17.2, 1280.0], [17.3, 1280.0], [17.4, 1280.0], [17.5, 1280.0], [17.6, 1280.0], [17.7, 1280.0], [17.8, 1280.0], [17.9, 1280.0], [18.0, 1280.0], [18.1, 1280.0], [18.2, 1280.0], [18.3, 1280.0], [18.4, 1280.0], [18.5, 1280.0], [18.6, 1280.0], [18.7, 1280.0], [18.8, 1280.0], [18.9, 1280.0], [19.0, 1280.0], [19.1, 1280.0], [19.2, 1280.0], [19.3, 1280.0], [19.4, 1280.0], [19.5, 1280.0], [19.6, 1280.0], [19.7, 1280.0], [19.8, 1280.0], [19.9, 1280.0], [20.0, 1280.0], [20.1, 1280.0], [20.2, 1280.0], [20.3, 1280.0], [20.4, 1280.0], [20.5, 1280.0], [20.6, 1280.0], [20.7, 1280.0], [20.8, 1280.0], [20.9, 1280.0], [21.0, 1280.0], [21.1, 1280.0], [21.2, 1280.0], [21.3, 1280.0], [21.4, 1280.0], [21.5, 1280.0], [21.6, 1280.0], [21.7, 1280.0], [21.8, 1280.0], [21.9, 1280.0], [22.0, 1280.0], [22.1, 1280.0], [22.2, 1280.0], [22.3, 1280.0], [22.4, 1280.0], [22.5, 1280.0], [22.6, 1280.0], [22.7, 1280.0], [22.8, 1280.0], [22.9, 1280.0], [23.0, 1280.0], [23.1, 1280.0], [23.2, 1280.0], [23.3, 1280.0], [23.4, 1280.0], [23.5, 1280.0], [23.6, 1280.0], [23.7, 1280.0], [23.8, 1280.0], [23.9, 1280.0], [24.0, 1280.0], [24.1, 1280.0], [24.2, 1280.0], [24.3, 1280.0], [24.4, 1280.0], [24.5, 1280.0], [24.6, 1280.0], [24.7, 1280.0], [24.8, 1280.0], [24.9, 1280.0], [25.0, 1280.0], [25.1, 1280.0], [25.2, 1280.0], [25.3, 1280.0], [25.4, 1280.0], [25.5, 1280.0], [25.6, 1280.0], [25.7, 1280.0], [25.8, 1280.0], [25.9, 1280.0], [26.0, 1280.0], [26.1, 1280.0], [26.2, 1280.0], [26.3, 1280.0], [26.4, 1280.0], [26.5, 1280.0], [26.6, 1280.0], [26.7, 1280.0], [26.8, 1280.0], [26.9, 1280.0], [27.0, 1280.0], [27.1, 1280.0], [27.2, 1280.0], [27.3, 1280.0], [27.4, 1280.0], [27.5, 1280.0], [27.6, 1280.0], [27.7, 1280.0], [27.8, 1280.0], [27.9, 1280.0], [28.0, 1280.0], [28.1, 1280.0], [28.2, 1280.0], [28.3, 1280.0], [28.4, 1280.0], [28.5, 1280.0], [28.6, 1280.0], [28.7, 1280.0], [28.8, 1280.0], [28.9, 1280.0], [29.0, 1280.0], [29.1, 1280.0], [29.2, 1280.0], [29.3, 1280.0], [29.4, 1280.0], [29.5, 1280.0], [29.6, 1280.0], [29.7, 1280.0], [29.8, 1280.0], [29.9, 1280.0], [30.0, 1280.0], [30.1, 1280.0], [30.2, 1280.0], [30.3, 1280.0], [30.4, 1280.0], [30.5, 1280.0], [30.6, 1280.0], [30.7, 1280.0], [30.8, 1280.0], [30.9, 1280.0], [31.0, 1280.0], [31.1, 1280.0], [31.2, 1280.0], [31.3, 1280.0], [31.4, 1280.0], [31.5, 1280.0], [31.6, 1280.0], [31.7, 1280.0], [31.8, 1280.0], [31.9, 1280.0], [32.0, 1280.0], [32.1, 1280.0], [32.2, 1280.0], [32.3, 1280.0], [32.4, 1280.0], [32.5, 1280.0], [32.6, 1280.0], [32.7, 1280.0], [32.8, 1280.0], [32.9, 1280.0], [33.0, 1280.0], [33.1, 1280.0], [33.2, 1280.0], [33.3, 1280.0], [33.4, 1280.0], [33.5, 1280.0], [33.6, 1280.0], [33.7, 1280.0], [33.8, 1280.0], [33.9, 1280.0], [34.0, 1280.0], [34.1, 1280.0], [34.2, 1280.0], [34.3, 1280.0], [34.4, 1280.0], [34.5, 1280.0], [34.6, 1280.0], [34.7, 1280.0], [34.8, 1280.0], [34.9, 1280.0], [35.0, 1280.0], [35.1, 1280.0], [35.2, 1280.0], [35.3, 1280.0], [35.4, 1280.0], [35.5, 1280.0], [35.6, 1280.0], [35.7, 1280.0], [35.8, 1280.0], [35.9, 1280.0], [36.0, 1280.0], [36.1, 1280.0], [36.2, 1280.0], [36.3, 1280.0], [36.4, 1280.0], [36.5, 1280.0], [36.6, 1280.0], [36.7, 1280.0], [36.8, 1280.0], [36.9, 1280.0], [37.0, 1280.0], [37.1, 1280.0], [37.2, 1280.0], [37.3, 1280.0], [37.4, 1280.0], [37.5, 1280.0], [37.6, 1280.0], [37.7, 1280.0], [37.8, 1280.0], [37.9, 1280.0], [38.0, 1280.0], [38.1, 1280.0], [38.2, 1280.0], [38.3, 1280.0], [38.4, 1280.0], [38.5, 1280.0], [38.6, 1280.0], [38.7, 1280.0], [38.8, 1280.0], [38.9, 1280.0], [39.0, 1280.0], [39.1, 1280.0], [39.2, 1280.0], [39.3, 1280.0], [39.4, 1280.0], [39.5, 1280.0], [39.6, 1280.0], [39.7, 1280.0], [39.8, 1280.0], [39.9, 1280.0], [40.0, 1280.0], [40.1, 1280.0], [40.2, 1280.0], [40.3, 1280.0], [40.4, 1280.0], [40.5, 1280.0], [40.6, 1280.0], [40.7, 1280.0], [40.8, 1280.0], [40.9, 1280.0], [41.0, 1280.0], [41.1, 1280.0], [41.2, 1280.0], [41.3, 1280.0], [41.4, 1280.0], [41.5, 1280.0], [41.6, 1280.0], [41.7, 1280.0], [41.8, 1280.0], [41.9, 1280.0], [42.0, 1280.0], [42.1, 1280.0], [42.2, 1280.0], [42.3, 1280.0], [42.4, 1280.0], [42.5, 1280.0], [42.6, 1280.0], [42.7, 1280.0], [42.8, 1280.0], [42.9, 1280.0], [43.0, 1280.0], [43.1, 1280.0], [43.2, 1280.0], [43.3, 1280.0], [43.4, 1280.0], [43.5, 1280.0], [43.6, 1280.0], [43.7, 1280.0], [43.8, 1280.0], [43.9, 1280.0], [44.0, 1280.0], [44.1, 1280.0], [44.2, 1280.0], [44.3, 1280.0], [44.4, 1280.0], [44.5, 1280.0], [44.6, 1280.0], [44.7, 1280.0], [44.8, 1280.0], [44.9, 1280.0], [45.0, 1280.0], [45.1, 1280.0], [45.2, 1280.0], [45.3, 1280.0], [45.4, 1280.0], [45.5, 1280.0], [45.6, 1280.0], [45.7, 1280.0], [45.8, 1280.0], [45.9, 1280.0], [46.0, 1280.0], [46.1, 1280.0], [46.2, 1280.0], [46.3, 1280.0], [46.4, 1280.0], [46.5, 1280.0], [46.6, 1280.0], [46.7, 1280.0], [46.8, 1280.0], [46.9, 1280.0], [47.0, 1280.0], [47.1, 1280.0], [47.2, 1280.0], [47.3, 1280.0], [47.4, 1280.0], [47.5, 1280.0], [47.6, 1280.0], [47.7, 1280.0], [47.8, 1280.0], [47.9, 1280.0], [48.0, 1280.0], [48.1, 1280.0], [48.2, 1280.0], [48.3, 1280.0], [48.4, 1280.0], [48.5, 1280.0], [48.6, 1280.0], [48.7, 1280.0], [48.8, 1280.0], [48.9, 1280.0], [49.0, 1280.0], [49.1, 1280.0], [49.2, 1280.0], [49.3, 1280.0], [49.4, 1280.0], [49.5, 1280.0], [49.6, 1280.0], [49.7, 1280.0], [49.8, 1280.0], [49.9, 1280.0], [50.0, 1419.0], [50.1, 1419.0], [50.2, 1419.0], [50.3, 1419.0], [50.4, 1419.0], [50.5, 1419.0], [50.6, 1419.0], [50.7, 1419.0], [50.8, 1419.0], [50.9, 1419.0], [51.0, 1419.0], [51.1, 1419.0], [51.2, 1419.0], [51.3, 1419.0], [51.4, 1419.0], [51.5, 1419.0], [51.6, 1419.0], [51.7, 1419.0], [51.8, 1419.0], [51.9, 1419.0], [52.0, 1419.0], [52.1, 1419.0], [52.2, 1419.0], [52.3, 1419.0], [52.4, 1419.0], [52.5, 1419.0], [52.6, 1419.0], [52.7, 1419.0], [52.8, 1419.0], [52.9, 1419.0], [53.0, 1419.0], [53.1, 1419.0], [53.2, 1419.0], [53.3, 1419.0], [53.4, 1419.0], [53.5, 1419.0], [53.6, 1419.0], [53.7, 1419.0], [53.8, 1419.0], [53.9, 1419.0], [54.0, 1419.0], [54.1, 1419.0], [54.2, 1419.0], [54.3, 1419.0], [54.4, 1419.0], [54.5, 1419.0], [54.6, 1419.0], [54.7, 1419.0], [54.8, 1419.0], [54.9, 1419.0], [55.0, 1419.0], [55.1, 1419.0], [55.2, 1419.0], [55.3, 1419.0], [55.4, 1419.0], [55.5, 1419.0], [55.6, 1419.0], [55.7, 1419.0], [55.8, 1419.0], [55.9, 1419.0], [56.0, 1419.0], [56.1, 1419.0], [56.2, 1419.0], [56.3, 1419.0], [56.4, 1419.0], [56.5, 1419.0], [56.6, 1419.0], [56.7, 1419.0], [56.8, 1419.0], [56.9, 1419.0], [57.0, 1419.0], [57.1, 1419.0], [57.2, 1419.0], [57.3, 1419.0], [57.4, 1419.0], [57.5, 1419.0], [57.6, 1419.0], [57.7, 1419.0], [57.8, 1419.0], [57.9, 1419.0], [58.0, 1419.0], [58.1, 1419.0], [58.2, 1419.0], [58.3, 1419.0], [58.4, 1419.0], [58.5, 1419.0], [58.6, 1419.0], [58.7, 1419.0], [58.8, 1419.0], [58.9, 1419.0], [59.0, 1419.0], [59.1, 1419.0], [59.2, 1419.0], [59.3, 1419.0], [59.4, 1419.0], [59.5, 1419.0], [59.6, 1419.0], [59.7, 1419.0], [59.8, 1419.0], [59.9, 1419.0], [60.0, 1419.0], [60.1, 1419.0], [60.2, 1419.0], [60.3, 1419.0], [60.4, 1419.0], [60.5, 1419.0], [60.6, 1419.0], [60.7, 1419.0], [60.8, 1419.0], [60.9, 1419.0], [61.0, 1419.0], [61.1, 1419.0], [61.2, 1419.0], [61.3, 1419.0], [61.4, 1419.0], [61.5, 1419.0], [61.6, 1419.0], [61.7, 1419.0], [61.8, 1419.0], [61.9, 1419.0], [62.0, 1419.0], [62.1, 1419.0], [62.2, 1419.0], [62.3, 1419.0], [62.4, 1419.0], [62.5, 1419.0], [62.6, 1419.0], [62.7, 1419.0], [62.8, 1419.0], [62.9, 1419.0], [63.0, 1419.0], [63.1, 1419.0], [63.2, 1419.0], [63.3, 1419.0], [63.4, 1419.0], [63.5, 1419.0], [63.6, 1419.0], [63.7, 1419.0], [63.8, 1419.0], [63.9, 1419.0], [64.0, 1419.0], [64.1, 1419.0], [64.2, 1419.0], [64.3, 1419.0], [64.4, 1419.0], [64.5, 1419.0], [64.6, 1419.0], [64.7, 1419.0], [64.8, 1419.0], [64.9, 1419.0], [65.0, 1419.0], [65.1, 1419.0], [65.2, 1419.0], [65.3, 1419.0], [65.4, 1419.0], [65.5, 1419.0], [65.6, 1419.0], [65.7, 1419.0], [65.8, 1419.0], [65.9, 1419.0], [66.0, 1419.0], [66.1, 1419.0], [66.2, 1419.0], [66.3, 1419.0], [66.4, 1419.0], [66.5, 1419.0], [66.6, 1419.0], [66.7, 1419.0], [66.8, 1419.0], [66.9, 1419.0], [67.0, 1419.0], [67.1, 1419.0], [67.2, 1419.0], [67.3, 1419.0], [67.4, 1419.0], [67.5, 1419.0], [67.6, 1419.0], [67.7, 1419.0], [67.8, 1419.0], [67.9, 1419.0], [68.0, 1419.0], [68.1, 1419.0], [68.2, 1419.0], [68.3, 1419.0], [68.4, 1419.0], [68.5, 1419.0], [68.6, 1419.0], [68.7, 1419.0], [68.8, 1419.0], [68.9, 1419.0], [69.0, 1419.0], [69.1, 1419.0], [69.2, 1419.0], [69.3, 1419.0], [69.4, 1419.0], [69.5, 1419.0], [69.6, 1419.0], [69.7, 1419.0], [69.8, 1419.0], [69.9, 1419.0], [70.0, 1419.0], [70.1, 1419.0], [70.2, 1419.0], [70.3, 1419.0], [70.4, 1419.0], [70.5, 1419.0], [70.6, 1419.0], [70.7, 1419.0], [70.8, 1419.0], [70.9, 1419.0], [71.0, 1419.0], [71.1, 1419.0], [71.2, 1419.0], [71.3, 1419.0], [71.4, 1419.0], [71.5, 1419.0], [71.6, 1419.0], [71.7, 1419.0], [71.8, 1419.0], [71.9, 1419.0], [72.0, 1419.0], [72.1, 1419.0], [72.2, 1419.0], [72.3, 1419.0], [72.4, 1419.0], [72.5, 1419.0], [72.6, 1419.0], [72.7, 1419.0], [72.8, 1419.0], [72.9, 1419.0], [73.0, 1419.0], [73.1, 1419.0], [73.2, 1419.0], [73.3, 1419.0], [73.4, 1419.0], [73.5, 1419.0], [73.6, 1419.0], [73.7, 1419.0], [73.8, 1419.0], [73.9, 1419.0], [74.0, 1419.0], [74.1, 1419.0], [74.2, 1419.0], [74.3, 1419.0], [74.4, 1419.0], [74.5, 1419.0], [74.6, 1419.0], [74.7, 1419.0], [74.8, 1419.0], [74.9, 1419.0], [75.0, 1419.0], [75.1, 1419.0], [75.2, 1419.0], [75.3, 1419.0], [75.4, 1419.0], [75.5, 1419.0], [75.6, 1419.0], [75.7, 1419.0], [75.8, 1419.0], [75.9, 1419.0], [76.0, 1419.0], [76.1, 1419.0], [76.2, 1419.0], [76.3, 1419.0], [76.4, 1419.0], [76.5, 1419.0], [76.6, 1419.0], [76.7, 1419.0], [76.8, 1419.0], [76.9, 1419.0], [77.0, 1419.0], [77.1, 1419.0], [77.2, 1419.0], [77.3, 1419.0], [77.4, 1419.0], [77.5, 1419.0], [77.6, 1419.0], [77.7, 1419.0], [77.8, 1419.0], [77.9, 1419.0], [78.0, 1419.0], [78.1, 1419.0], [78.2, 1419.0], [78.3, 1419.0], [78.4, 1419.0], [78.5, 1419.0], [78.6, 1419.0], [78.7, 1419.0], [78.8, 1419.0], [78.9, 1419.0], [79.0, 1419.0], [79.1, 1419.0], [79.2, 1419.0], [79.3, 1419.0], [79.4, 1419.0], [79.5, 1419.0], [79.6, 1419.0], [79.7, 1419.0], [79.8, 1419.0], [79.9, 1419.0], [80.0, 1419.0], [80.1, 1419.0], [80.2, 1419.0], [80.3, 1419.0], [80.4, 1419.0], [80.5, 1419.0], [80.6, 1419.0], [80.7, 1419.0], [80.8, 1419.0], [80.9, 1419.0], [81.0, 1419.0], [81.1, 1419.0], [81.2, 1419.0], [81.3, 1419.0], [81.4, 1419.0], [81.5, 1419.0], [81.6, 1419.0], [81.7, 1419.0], [81.8, 1419.0], [81.9, 1419.0], [82.0, 1419.0], [82.1, 1419.0], [82.2, 1419.0], [82.3, 1419.0], [82.4, 1419.0], [82.5, 1419.0], [82.6, 1419.0], [82.7, 1419.0], [82.8, 1419.0], [82.9, 1419.0], [83.0, 1419.0], [83.1, 1419.0], [83.2, 1419.0], [83.3, 1419.0], [83.4, 1419.0], [83.5, 1419.0], [83.6, 1419.0], [83.7, 1419.0], [83.8, 1419.0], [83.9, 1419.0], [84.0, 1419.0], [84.1, 1419.0], [84.2, 1419.0], [84.3, 1419.0], [84.4, 1419.0], [84.5, 1419.0], [84.6, 1419.0], [84.7, 1419.0], [84.8, 1419.0], [84.9, 1419.0], [85.0, 1419.0], [85.1, 1419.0], [85.2, 1419.0], [85.3, 1419.0], [85.4, 1419.0], [85.5, 1419.0], [85.6, 1419.0], [85.7, 1419.0], [85.8, 1419.0], [85.9, 1419.0], [86.0, 1419.0], [86.1, 1419.0], [86.2, 1419.0], [86.3, 1419.0], [86.4, 1419.0], [86.5, 1419.0], [86.6, 1419.0], [86.7, 1419.0], [86.8, 1419.0], [86.9, 1419.0], [87.0, 1419.0], [87.1, 1419.0], [87.2, 1419.0], [87.3, 1419.0], [87.4, 1419.0], [87.5, 1419.0], [87.6, 1419.0], [87.7, 1419.0], [87.8, 1419.0], [87.9, 1419.0], [88.0, 1419.0], [88.1, 1419.0], [88.2, 1419.0], [88.3, 1419.0], [88.4, 1419.0], [88.5, 1419.0], [88.6, 1419.0], [88.7, 1419.0], [88.8, 1419.0], [88.9, 1419.0], [89.0, 1419.0], [89.1, 1419.0], [89.2, 1419.0], [89.3, 1419.0], [89.4, 1419.0], [89.5, 1419.0], [89.6, 1419.0], [89.7, 1419.0], [89.8, 1419.0], [89.9, 1419.0], [90.0, 1419.0], [90.1, 1419.0], [90.2, 1419.0], [90.3, 1419.0], [90.4, 1419.0], [90.5, 1419.0], [90.6, 1419.0], [90.7, 1419.0], [90.8, 1419.0], [90.9, 1419.0], [91.0, 1419.0], [91.1, 1419.0], [91.2, 1419.0], [91.3, 1419.0], [91.4, 1419.0], [91.5, 1419.0], [91.6, 1419.0], [91.7, 1419.0], [91.8, 1419.0], [91.9, 1419.0], [92.0, 1419.0], [92.1, 1419.0], [92.2, 1419.0], [92.3, 1419.0], [92.4, 1419.0], [92.5, 1419.0], [92.6, 1419.0], [92.7, 1419.0], [92.8, 1419.0], [92.9, 1419.0], [93.0, 1419.0], [93.1, 1419.0], [93.2, 1419.0], [93.3, 1419.0], [93.4, 1419.0], [93.5, 1419.0], [93.6, 1419.0], [93.7, 1419.0], [93.8, 1419.0], [93.9, 1419.0], [94.0, 1419.0], [94.1, 1419.0], [94.2, 1419.0], [94.3, 1419.0], [94.4, 1419.0], [94.5, 1419.0], [94.6, 1419.0], [94.7, 1419.0], [94.8, 1419.0], [94.9, 1419.0], [95.0, 1419.0], [95.1, 1419.0], [95.2, 1419.0], [95.3, 1419.0], [95.4, 1419.0], [95.5, 1419.0], [95.6, 1419.0], [95.7, 1419.0], [95.8, 1419.0], [95.9, 1419.0], [96.0, 1419.0], [96.1, 1419.0], [96.2, 1419.0], [96.3, 1419.0], [96.4, 1419.0], [96.5, 1419.0], [96.6, 1419.0], [96.7, 1419.0], [96.8, 1419.0], [96.9, 1419.0], [97.0, 1419.0], [97.1, 1419.0], [97.2, 1419.0], [97.3, 1419.0], [97.4, 1419.0], [97.5, 1419.0], [97.6, 1419.0], [97.7, 1419.0], [97.8, 1419.0], [97.9, 1419.0], [98.0, 1419.0], [98.1, 1419.0], [98.2, 1419.0], [98.3, 1419.0], [98.4, 1419.0], [98.5, 1419.0], [98.6, 1419.0], [98.7, 1419.0], [98.8, 1419.0], [98.9, 1419.0], [99.0, 1419.0], [99.1, 1419.0], [99.2, 1419.0], [99.3, 1419.0], [99.4, 1419.0], [99.5, 1419.0], [99.6, 1419.0], [99.7, 1419.0], [99.8, 1419.0], [99.9, 1419.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 300.0, "maxY": 8397.0, "series": [{"data": [[9200.0, 1.0], [12300.0, 1.0], [1100.0, 1.0], [1200.0, 1.0], [1300.0, 2.0], [22100.0, 1.0], [1400.0, 3.0], [1500.0, 3.0], [1600.0, 7.0], [1700.0, 5.0], [1800.0, 13.0], [1900.0, 3.0], [2000.0, 1.0], [2100.0, 1.0], [2200.0, 1.0], [2300.0, 2.0], [2400.0, 4.0], [2500.0, 3.0], [2600.0, 1.0], [2700.0, 1.0], [2800.0, 1.0], [3000.0, 1.0], [3100.0, 2.0], [3300.0, 1.0], [3600.0, 1.0], [4100.0, 2.0], [4900.0, 1.0], [8000.0, 1.0]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[600.0, 3.0], [700.0, 8.0], [800.0, 20.0], [900.0, 21.0], [1000.0, 19.0], [1100.0, 22.0], [1200.0, 12.0], [1300.0, 6.0], [1400.0, 4.0], [1500.0, 1.0], [1600.0, 1.0], [1700.0, 2.0], [1800.0, 3.0], [1900.0, 8.0], [2000.0, 1.0], [2100.0, 4.0], [2300.0, 3.0], [2200.0, 1.0], [2400.0, 1.0], [2500.0, 1.0], [2600.0, 1.0], [2700.0, 1.0], [2900.0, 1.0], [3000.0, 1.0], [3100.0, 1.0], [3300.0, 1.0], [3500.0, 1.0], [3800.0, 1.0], [4000.0, 1.0], [4200.0, 2.0], [4600.0, 1.0], [4800.0, 1.0], [5100.0, 1.0], [5300.0, 1.0], [5400.0, 2.0], [5600.0, 1.0], [5700.0, 1.0], [5900.0, 1.0], [6000.0, 2.0], [6300.0, 1.0], [6500.0, 1.0], [6400.0, 2.0], [7400.0, 1.0], [7200.0, 2.0], [8100.0, 1.0], [8600.0, 1.0], [9800.0, 1.0], [12900.0, 1.0], [14300.0, 1.0], [14400.0, 1.0], [16200.0, 1.0], [16900.0, 1.0], [49900.0, 1.0], [64500.0, 1.0], [400.0, 1.0], [500.0, 2.0]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[33700.0, 1.0], [32900.0, 1.0], [35700.0, 3.0], [36100.0, 2.0], [36500.0, 1.0], [38100.0, 1.0], [38500.0, 1.0], [37700.0, 2.0], [38900.0, 4.0], [39700.0, 2.0], [40500.0, 1.0], [40900.0, 1.0], [44100.0, 1.0], [43700.0, 1.0], [46100.0, 1.0], [47700.0, 1.0], [49300.0, 2.0], [53700.0, 1.0], [59300.0, 1.0], [60900.0, 2.0], [62900.0, 1.0], [62100.0, 4.0], [65300.0, 1.0], [300.0, 721.0], [75400.0, 1.0], [400.0, 1210.0], [500.0, 2013.0], [600.0, 4048.0], [700.0, 8113.0], [800.0, 8397.0], [900.0, 6253.0], [1000.0, 4560.0], [1100.0, 2020.0], [1200.0, 583.0], [1300.0, 323.0], [1400.0, 397.0], [1500.0, 540.0], [1600.0, 826.0], [1700.0, 1410.0], [1800.0, 1148.0], [1900.0, 688.0], [2000.0, 670.0], [2100.0, 486.0], [2200.0, 411.0], [2300.0, 376.0], [2400.0, 280.0], [2500.0, 244.0], [2600.0, 216.0], [2800.0, 180.0], [2700.0, 203.0], [2900.0, 145.0], [3000.0, 159.0], [3100.0, 141.0], [3200.0, 123.0], [3300.0, 174.0], [3400.0, 120.0], [3500.0, 151.0], [3600.0, 128.0], [3700.0, 143.0], [3800.0, 143.0], [3900.0, 129.0], [4000.0, 114.0], [4200.0, 97.0], [4100.0, 97.0], [4300.0, 126.0], [66500.0, 1.0], [4400.0, 117.0], [4500.0, 83.0], [4600.0, 109.0], [4800.0, 106.0], [4700.0, 96.0], [4900.0, 90.0], [5000.0, 110.0], [5100.0, 116.0], [78500.0, 1.0], [5200.0, 91.0], [5300.0, 95.0], [5400.0, 150.0], [5500.0, 116.0], [5600.0, 132.0], [5800.0, 136.0], [5700.0, 129.0], [6100.0, 158.0], [5900.0, 133.0], [6000.0, 114.0], [6200.0, 150.0], [6300.0, 73.0], [99300.0, 1.0], [6600.0, 95.0], [6400.0, 79.0], [6500.0, 74.0], [6900.0, 128.0], [6700.0, 87.0], [6800.0, 103.0], [7000.0, 111.0], [7100.0, 110.0], [7300.0, 123.0], [7400.0, 101.0], [7200.0, 68.0], [7500.0, 89.0], [7600.0, 105.0], [7800.0, 71.0], [7900.0, 65.0], [7700.0, 77.0], [8000.0, 80.0], [8100.0, 58.0], [8200.0, 64.0], [8500.0, 56.0], [8700.0, 58.0], [8600.0, 57.0], [8300.0, 72.0], [8400.0, 63.0], [8800.0, 47.0], [9000.0, 43.0], [9100.0, 51.0], [9200.0, 50.0], [8900.0, 56.0], [9600.0, 46.0], [9700.0, 46.0], [9400.0, 44.0], [9300.0, 51.0], [9500.0, 44.0], [9900.0, 38.0], [10000.0, 28.0], [10100.0, 22.0], [10200.0, 29.0], [9800.0, 39.0], [10600.0, 39.0], [10300.0, 24.0], [10500.0, 26.0], [10400.0, 21.0], [10700.0, 20.0], [10900.0, 30.0], [10800.0, 32.0], [11000.0, 28.0], [11100.0, 22.0], [11200.0, 26.0], [11600.0, 20.0], [11300.0, 33.0], [11400.0, 23.0], [11700.0, 21.0], [11500.0, 28.0], [12000.0, 21.0], [12100.0, 11.0], [11800.0, 18.0], [11900.0, 15.0], [12200.0, 28.0], [12500.0, 8.0], [12700.0, 19.0], [12400.0, 15.0], [12300.0, 22.0], [12600.0, 23.0], [12900.0, 20.0], [13200.0, 12.0], [13300.0, 9.0], [12800.0, 12.0], [13000.0, 20.0], [13100.0, 8.0], [13700.0, 17.0], [13600.0, 12.0], [13800.0, 12.0], [13500.0, 6.0], [13400.0, 12.0], [14100.0, 10.0], [14300.0, 11.0], [14000.0, 9.0], [13900.0, 10.0], [14200.0, 6.0], [14800.0, 9.0], [14700.0, 10.0], [14500.0, 9.0], [14600.0, 6.0], [14400.0, 8.0], [15300.0, 17.0], [14900.0, 20.0], [15100.0, 9.0], [15000.0, 8.0], [15200.0, 9.0], [15600.0, 4.0], [15800.0, 9.0], [15400.0, 9.0], [15500.0, 6.0], [15700.0, 13.0], [15900.0, 13.0], [16000.0, 6.0], [16200.0, 4.0], [16100.0, 11.0], [16300.0, 3.0], [16800.0, 10.0], [16400.0, 3.0], [17200.0, 7.0], [17400.0, 8.0], [16600.0, 6.0], [17000.0, 3.0], [18400.0, 13.0], [18000.0, 8.0], [18200.0, 3.0], [17600.0, 12.0], [17800.0, 9.0], [18800.0, 4.0], [19200.0, 8.0], [19400.0, 5.0], [18600.0, 6.0], [19000.0, 6.0], [19800.0, 7.0], [19600.0, 6.0], [20000.0, 7.0], [20200.0, 4.0], [20400.0, 4.0], [20800.0, 8.0], [20600.0, 6.0], [21000.0, 2.0], [21400.0, 2.0], [21200.0, 8.0], [21800.0, 2.0], [22000.0, 3.0], [22400.0, 2.0], [22800.0, 3.0], [23000.0, 3.0], [22600.0, 2.0], [24400.0, 1.0], [24000.0, 1.0], [24600.0, 4.0], [25200.0, 2.0], [25000.0, 2.0], [26000.0, 2.0], [26200.0, 3.0], [26600.0, 2.0], [26400.0, 2.0], [25600.0, 1.0], [27200.0, 1.0], [27600.0, 1.0], [26800.0, 1.0], [27800.0, 2.0], [28200.0, 1.0], [28600.0, 3.0], [28000.0, 2.0], [29600.0, 1.0], [28800.0, 1.0], [29400.0, 1.0], [29000.0, 1.0], [30000.0, 4.0], [30400.0, 6.0], [29800.0, 3.0], [30200.0, 1.0], [30600.0, 2.0], [31200.0, 2.0], [30800.0, 2.0], [31000.0, 3.0], [31800.0, 2.0], [32000.0, 1.0], [32200.0, 4.0], [32400.0, 1.0], [33200.0, 4.0], [33600.0, 1.0], [34000.0, 1.0], [34800.0, 1.0], [32800.0, 1.0], [36000.0, 2.0], [36400.0, 4.0], [35600.0, 3.0], [35200.0, 1.0], [38400.0, 3.0], [37200.0, 3.0], [38800.0, 2.0], [39600.0, 1.0], [39200.0, 1.0], [46000.0, 1.0], [49200.0, 2.0], [51200.0, 1.0], [52400.0, 3.0], [55600.0, 1.0], [61200.0, 1.0], [60800.0, 1.0], [85600.0, 1.0], [99200.0, 1.0], [87900.0, 1.0], [33100.0, 4.0], [34700.0, 1.0], [33500.0, 4.0], [34300.0, 3.0], [36300.0, 3.0], [37100.0, 2.0], [37900.0, 1.0], [38300.0, 1.0], [40300.0, 1.0], [39500.0, 1.0], [41100.0, 1.0], [41900.0, 2.0], [41500.0, 1.0], [45100.0, 1.0], [50300.0, 2.0], [51900.0, 2.0], [53500.0, 1.0], [58700.0, 1.0], [60700.0, 1.0], [70100.0, 1.0], [74100.0, 1.0], [16900.0, 4.0], [17300.0, 7.0], [17100.0, 6.0], [16500.0, 8.0], [16700.0, 9.0], [17900.0, 18.0], [17700.0, 9.0], [17500.0, 9.0], [18100.0, 8.0], [18300.0, 8.0], [18700.0, 8.0], [18500.0, 13.0], [19100.0, 10.0], [18900.0, 6.0], [19300.0, 6.0], [19700.0, 6.0], [19500.0, 7.0], [20300.0, 5.0], [20100.0, 7.0], [19900.0, 4.0], [21100.0, 3.0], [20500.0, 2.0], [20900.0, 7.0], [21500.0, 2.0], [21300.0, 6.0], [20700.0, 5.0], [21700.0, 5.0], [21900.0, 5.0], [22500.0, 4.0], [22300.0, 1.0], [22700.0, 3.0], [22900.0, 1.0], [23500.0, 2.0], [23100.0, 2.0], [24500.0, 1.0], [24300.0, 1.0], [23700.0, 2.0], [24100.0, 1.0], [24700.0, 3.0], [25300.0, 1.0], [24900.0, 3.0], [25100.0, 1.0], [25500.0, 1.0], [25900.0, 2.0], [26500.0, 2.0], [26300.0, 1.0], [26100.0, 1.0], [27100.0, 1.0], [26700.0, 5.0], [26900.0, 1.0], [28500.0, 1.0], [27900.0, 2.0], [28300.0, 1.0], [27700.0, 1.0], [28100.0, 3.0], [29100.0, 2.0], [29300.0, 4.0], [28700.0, 2.0], [30700.0, 4.0], [29700.0, 1.0], [30300.0, 3.0], [30500.0, 1.0], [30100.0, 1.0], [31500.0, 1.0], [31100.0, 5.0], [31300.0, 1.0], [30900.0, 2.0], [31700.0, 1.0], [32700.0, 1.0], [32300.0, 4.0], [32100.0, 2.0], [31900.0, 1.0], [34200.0, 2.0], [33400.0, 3.0], [33000.0, 1.0], [36200.0, 1.0], [37800.0, 1.0], [41000.0, 1.0], [49400.0, 1.0], [52200.0, 1.0], [53000.0, 1.0], [52600.0, 1.0], [63400.0, 1.0], [74000.0, 1.0]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1200.0, 1.0], [1400.0, 1.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 99300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 55.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 36798.0, "series": [{"data": [[0.0, 1948.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 36798.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 16283.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 55.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.71953484E12, "maxY": 200.0, "series": [{"data": [[1.71953484E12, 1.0], [1.71953496E12, 1.0]], "isOverall": false, "label": "setUpAutenticacionCognito", "isController": false}, {"data": [[1.71953532E12, 200.0], [1.71953502E12, 124.30185920200556], [1.71953496E12, 14.50485436893204], [1.71953562E12, 9.0], [1.71953556E12, 196.25127768313445], [1.71953526E12, 200.0], [1.7195352E12, 200.0], [1.7195349E12, 199.6633788037775], [1.71953484E12, 106.86633291614501], [1.7195355E12, 200.0], [1.71953544E12, 200.0], [1.71953514E12, 200.0], [1.71953508E12, 200.0], [1.71953538E12, 200.0]], "isOverall": false, "label": "consultarPlaca", "isController": false}, {"data": [[1.71953484E12, 1.0], [1.71953532E12, 1.0], [1.71953502E12, 1.0], [1.7195355E12, 1.0], [1.71953544E12, 1.0], [1.71953514E12, 1.0], [1.71953508E12, 1.0], [1.71953556E12, 1.0], [1.71953526E12, 1.0], [1.7195352E12, 1.0], [1.7195349E12, 1.0], [1.71953538E12, 1.0]], "isOverall": false, "label": "registrarEntrada", "isController": false}, {"data": [[1.71953532E12, 1.0], [1.71953514E12, 1.0], [1.71953526E12, 1.0], [1.7195352E12, 1.0]], "isOverall": false, "label": "registrarSalida", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71953562E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 348.5, "minX": 1.0, "maxY": 16923.0, "series": [{"data": [[202.0, 2811.9538461538464]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[202.0, 2811.9538461538464]], "isOverall": false, "label": "trackVehicleExit-Aggregated", "isController": false}, {"data": [[164.0, 16923.0], [179.0, 3197.0], [184.0, 1130.0], [196.0, 2983.0], [201.0, 2216.75], [202.0, 3141.796747967479]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[201.22950819672127, 2922.4699453551925]], "isOverall": false, "label": "trackVehicleEntry-Aggregated", "isController": false}, {"data": [[2.0, 382.5], [3.0, 395.0], [4.0, 363.75], [5.0, 365.25], [6.0, 368.5], [7.0, 370.0], [8.0, 5076.1], [9.0, 4164.166666666666], [10.0, 2268.0833333333335], [11.0, 4931.555555555556], [12.0, 1118.2142857142858], [13.0, 2670.4615384615386], [14.0, 2494.2142857142853], [15.0, 730.625], [16.0, 348.5], [17.0, 2885.681818181818], [18.0, 1989.8823529411766], [19.0, 1144.8181818181818], [20.0, 1414.5882352941176], [21.0, 749.5], [22.0, 531.4444444444445], [23.0, 369.2105263157895], [24.0, 628.8064516129032], [25.0, 375.63157894736844], [26.0, 1427.5151515151515], [27.0, 567.6956521739131], [28.0, 398.51724137931035], [29.0, 429.3181818181818], [30.0, 543.3611111111111], [31.0, 1436.5625], [32.0, 699.0], [33.0, 518.9333333333334], [34.0, 506.14285714285717], [35.0, 590.3846153846154], [36.0, 449.3777777777776], [37.0, 673.4444444444443], [38.0, 491.2999999999999], [39.0, 535.7407407407408], [40.0, 749.6304347826089], [41.0, 694.6521739130435], [42.0, 564.9999999999999], [43.0, 461.078947368421], [44.0, 582.0444444444445], [45.0, 502.78571428571433], [46.0, 494.47999999999996], [47.0, 434.99999999999994], [48.0, 801.148148148148], [49.0, 584.6619718309857], [50.0, 572.1363636363636], [51.0, 540.0], [52.0, 551.047619047619], [53.0, 701.3478260869565], [54.0, 929.4799999999999], [55.0, 1005.6491228070179], [56.0, 467.68749999999994], [57.0, 566.9999999999999], [58.0, 775.1641791044776], [59.0, 445.6176470588236], [60.0, 554.6363636363636], [61.0, 558.4186046511628], [62.0, 2143.9268292682923], [63.0, 695.4918032786883], [64.0, 670.9583333333335], [65.0, 647.3488372093024], [66.0, 810.8809523809524], [67.0, 623.5471698113207], [68.0, 663.9636363636365], [69.0, 899.6315789473684], [70.0, 892.0256410256409], [71.0, 611.0975609756099], [72.0, 760.0512820512823], [73.0, 510.30434782608694], [74.0, 850.1333333333333], [75.0, 931.8524590163936], [76.0, 808.4464285714284], [77.0, 1385.1935483870968], [78.0, 713.290909090909], [79.0, 891.8333333333335], [80.0, 551.5925925925926], [81.0, 745.7659574468083], [82.0, 816.2500000000001], [83.0, 798.0612244897958], [84.0, 1029.7800000000002], [85.0, 782.027397260274], [86.0, 682.6666666666666], [87.0, 1083.6216216216217], [88.0, 797.4666666666666], [89.0, 959.5862068965519], [90.0, 1286.730158730159], [91.0, 736.2307692307694], [92.0, 789.7424242424241], [93.0, 678.3392857142856], [94.0, 1102.7105263157896], [95.0, 903.6718749999997], [96.0, 937.7000000000002], [97.0, 1105.1698113207547], [98.0, 704.8095238095236], [99.0, 899.0138888888888], [100.0, 761.8245614035088], [101.0, 2072.285714285714], [102.0, 745.7799999999997], [103.0, 1100.8461538461545], [104.0, 1170.9482758620693], [105.0, 980.5263157894733], [106.0, 960.0985915492956], [107.0, 751.8510638297873], [108.0, 809.8142857142857], [109.0, 770.5400000000001], [110.0, 939.6499999999999], [111.0, 1029.8571428571427], [112.0, 907.7638888888889], [113.0, 680.4242424242424], [114.0, 603.28125], [115.0, 1005.5584415584417], [116.0, 1196.53125], [117.0, 1228.9729729729727], [118.0, 1033.2337662337661], [119.0, 960.1234567901238], [120.0, 1328.6176470588234], [121.0, 737.3389830508474], [122.0, 1190.6851851851854], [123.0, 1049.888888888889], [124.0, 1214.157894736842], [125.0, 1159.3888888888894], [126.0, 1134.366197183099], [127.0, 1186.457142857143], [128.0, 1918.6595744680849], [129.0, 973.7083333333334], [130.0, 981.6176470588235], [131.0, 1418.8815789473686], [132.0, 1188.9687499999995], [133.0, 1046.4250000000002], [134.0, 931.5510204081631], [135.0, 1725.0612244897954], [136.0, 1740.3448275862067], [137.0, 1288.8852459016393], [138.0, 1367.1929824561405], [139.0, 1283.030769230769], [140.0, 1382.458823529412], [141.0, 2410.6545454545453], [142.0, 828.9259259259258], [143.0, 1496.8444444444447], [144.0, 1235.8679245283024], [145.0, 1039.3829787234042], [146.0, 1439.1016949152547], [147.0, 1441.787234042553], [148.0, 1273.4509803921571], [149.0, 1734.58], [150.0, 1299.609375], [151.0, 1151.0491803278692], [152.0, 1072.2244897959183], [153.0, 1058.9032258064517], [154.0, 1371.0555555555554], [155.0, 1926.9736842105262], [156.0, 1455.3947368421052], [157.0, 1704.242857142857], [158.0, 1453.2739726027396], [159.0, 1626.9322033898309], [160.0, 1175.4528301886796], [161.0, 1003.6981132075474], [162.0, 1585.4761904761906], [163.0, 2092.2950819672137], [164.0, 1392.0166666666667], [165.0, 1155.4029850746267], [166.0, 1814.1538461538462], [167.0, 1035.6585365853657], [168.0, 1266.0000000000005], [169.0, 1342.3384615384612], [170.0, 992.4074074074074], [171.0, 2058.0000000000005], [172.0, 1780.416666666666], [173.0, 1558.4920634920634], [174.0, 1442.138888888889], [175.0, 1278.8484848484848], [176.0, 2339.804347826087], [177.0, 1229.5588235294115], [178.0, 1339.819672131148], [179.0, 1070.96], [180.0, 1265.4901960784316], [181.0, 2068.634615384615], [182.0, 1827.0714285714291], [183.0, 1860.7301587301588], [184.0, 1625.6470588235302], [185.0, 1642.5147058823532], [186.0, 976.0961538461539], [187.0, 1121.733333333333], [188.0, 2060.958333333333], [189.0, 1726.631578947368], [190.0, 1905.6071428571427], [191.0, 1728.5121951219514], [192.0, 1562.1142857142859], [193.0, 3586.542372881355], [194.0, 2614.272727272728], [195.0, 2333.173913043479], [196.0, 1522.6521739130433], [197.0, 1948.780487804878], [198.0, 2454.7681159420295], [199.0, 2450.0454545454536], [200.0, 2421.3888888888896], [201.0, 2677.242131248715], [202.0, 2239.944023371818]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[187.4244082138827, 2144.6505088083923]], "isOverall": false, "label": "getPlate-Aggregated", "isController": false}, {"data": [[1.0, 1349.5]], "isOverall": false, "label": "loginAFlypass", "isController": false}, {"data": [[1.0, 1349.5]], "isOverall": false, "label": "loginAFlypass-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 202.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 39.266666666666666, "minX": 1.71953484E12, "maxY": 74003.65, "series": [{"data": [[1.71953532E12, 40071.13333333333], [1.71953502E12, 37664.48333333333], [1.71953496E12, 845.1666666666666], [1.71953562E12, 39.266666666666666], [1.71953556E12, 37148.166666666664], [1.71953526E12, 39668.75], [1.7195352E12, 39863.5], [1.7195349E12, 37701.083333333336], [1.71953484E12, 31459.116666666665], [1.7195355E12, 39512.15], [1.71953544E12, 39192.75], [1.71953514E12, 18501.216666666667], [1.71953508E12, 32397.666666666668], [1.71953538E12, 39928.3]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71953532E12, 73661.76666666666], [1.71953502E12, 69864.53333333334], [1.71953496E12, 1507.9333333333334], [1.71953562E12, 72.91666666666667], [1.71953556E12, 68865.5], [1.71953526E12, 73651.9], [1.7195352E12, 74003.65], [1.7195349E12, 69976.5], [1.71953484E12, 58302.333333333336], [1.7195355E12, 73283.53333333334], [1.71953544E12, 72449.23333333334], [1.71953514E12, 34384.55], [1.71953508E12, 60005.71666666667], [1.71953538E12, 73851.96666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71953562E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 404.106796116505, "minX": 1.71953484E12, "maxY": 29202.4, "series": [{"data": [[1.71953532E12, 1963.391304347826], [1.71953514E12, 5183.666666666666], [1.71953526E12, 2580.3], [1.7195352E12, 3431.9375000000005]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[1.71953484E12, 2163.5], [1.71953532E12, 3472.142857142858], [1.71953502E12, 4906.333333333334], [1.7195355E12, 1911.115384615385], [1.71953544E12, 19472.6], [1.71953514E12, 5509.700000000001], [1.71953508E12, 2061.0833333333335], [1.71953556E12, 2078.727272727273], [1.71953526E12, 3235.571428571429], [1.7195352E12, 1915.2000000000003], [1.7195349E12, 1613.8148148148146], [1.71953538E12, 1852.5555555555557]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[1.71953532E12, 2266.487692615566], [1.71953502E12, 1152.4127846250262], [1.71953496E12, 404.106796116505], [1.71953562E12, 29202.4], [1.71953556E12, 2221.768952299831], [1.71953526E12, 2091.802670918881], [1.7195352E12, 2187.196023856863], [1.7195349E12, 2137.5536201469017], [1.71953484E12, 978.9291614518118], [1.7195355E12, 2123.7126551862207], [1.71953544E12, 2163.1168177240725], [1.71953514E12, 4793.375962360995], [1.71953508E12, 2785.62212432697], [1.71953538E12, 2098.37203322785]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1.71953484E12, 1280.0], [1.71953496E12, 1419.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71953562E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 403.9514563106796, "minX": 1.71953484E12, "maxY": 29202.2, "series": [{"data": [[1.71953532E12, 1963.1304347826087], [1.71953514E12, 5183.666666666666], [1.71953526E12, 2580.2500000000005], [1.7195352E12, 3431.875]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[1.71953484E12, 2163.5], [1.71953532E12, 3472.000000000001], [1.71953502E12, 4906.333333333334], [1.7195355E12, 1910.884615384615], [1.71953544E12, 6568.4], [1.71953514E12, 5509.299999999999], [1.71953508E12, 2061.041666666667], [1.71953556E12, 2078.727272727273], [1.71953526E12, 3235.285714285714], [1.7195352E12, 1915.2000000000003], [1.7195349E12, 1613.7777777777778], [1.71953538E12, 1852.5555555555557]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[1.71953532E12, 2132.0628377026273], [1.71953502E12, 1151.9114267808661], [1.71953496E12, 403.9514563106796], [1.71953562E12, 29202.2], [1.71953556E12, 2207.477640545143], [1.71953526E12, 2091.1494917281198], [1.7195352E12, 2186.551888667982], [1.7195349E12, 2137.448058761803], [1.71953484E12, 978.7013767209004], [1.7195355E12, 2110.8868642370967], [1.71953544E12, 2128.493655589123], [1.71953514E12, 4789.779298545766], [1.71953508E12, 2770.020313264805], [1.71953538E12, 2057.9806170886077]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1.71953484E12, 1276.0], [1.71953496E12, 1416.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71953562E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 306.96116504854376, "minX": 1.71953484E12, "maxY": 29105.8, "series": [{"data": [[1.71953532E12, 890.4782608695652], [1.71953514E12, 776.6666666666666], [1.71953526E12, 925.4500000000002], [1.7195352E12, 1648.3750000000002]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[1.71953484E12, 1934.0], [1.71953532E12, 3167.035714285714], [1.71953502E12, 4402.666666666667], [1.7195355E12, 1595.0384615384612], [1.71953544E12, 19150.8], [1.71953514E12, 1854.1999999999998], [1.71953508E12, 1391.5416666666667], [1.71953556E12, 1781.4545454545455], [1.71953526E12, 2847.4285714285716], [1.7195352E12, 1389.6], [1.7195349E12, 1302.888888888889], [1.71953538E12, 1564.3333333333333]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[1.71953532E12, 2114.688413047831], [1.71953502E12, 1045.8811364111148], [1.71953496E12, 306.96116504854376], [1.71953562E12, 29105.8], [1.71953556E12, 2080.3302810902883], [1.71953526E12, 1938.0516244767773], [1.7195352E12, 1958.2733598409575], [1.7195349E12, 1983.968730325285], [1.71953484E12, 879.9466833541901], [1.7195355E12, 1968.5859030836987], [1.71953544E12, 2032.5289023162131], [1.71953514E12, 1805.0256629597945], [1.71953508E12, 2173.008810572685], [1.71953538E12, 1963.770371835442]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1.71953484E12, 988.0], [1.71953496E12, 938.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71953562E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 305.0, "minX": 1.71953484E12, "maxY": 78551.0, "series": [{"data": [[1.71953532E12, 58790.0], [1.71953502E12, 31563.0], [1.71953496E12, 3882.0], [1.71953562E12, 47713.0], [1.71953556E12, 78551.0], [1.71953526E12, 51952.0], [1.7195352E12, 40566.0], [1.7195349E12, 37183.0], [1.71953484E12, 17969.0], [1.7195355E12, 50382.0], [1.71953544E12, 49280.0], [1.71953514E12, 62166.0], [1.71953508E12, 60778.0], [1.71953538E12, 52687.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71953532E12, 4759.700000000003], [1.71953502E12, 1868.6000000000004], [1.71953496E12, 420.5], [1.71953562E12, 47713.0], [1.71953556E12, 4714.800000000001], [1.71953526E12, 3865.0], [1.7195352E12, 4848.0], [1.7195349E12, 4982.600000000001], [1.71953484E12, 1673.1], [1.7195355E12, 4497.0], [1.71953544E12, 4779.400000000011], [1.71953514E12, 8275.100000000002], [1.71953508E12, 7012.8], [1.71953538E12, 4392.4]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71953532E12, 17343.239999999972], [1.71953502E12, 8481.690000000013], [1.71953496E12, 3758.850000000007], [1.71953562E12, 47713.0], [1.71953556E12, 18441.41999999998], [1.71953526E12, 20169.050000000017], [1.7195352E12, 19097.700000000008], [1.7195349E12, 15927.879999999997], [1.71953484E12, 6703.089999999998], [1.7195355E12, 19116.4], [1.71953544E12, 17256.739999999994], [1.71953514E12, 18673.9099999999], [1.71953508E12, 21052.799999999977], [1.71953538E12, 20621.07]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71953532E12, 8385.05], [1.71953502E12, 3275.0], [1.71953496E12, 437.25], [1.71953562E12, 47713.0], [1.71953556E12, 8761.34999999999], [1.71953526E12, 7800.5], [1.7195352E12, 8506.199999999999], [1.7195349E12, 8641.399999999996], [1.71953484E12, 2374.399999999998], [1.7195355E12, 7740.0], [1.71953544E12, 8249.349999999993], [1.71953514E12, 11555.45], [1.71953508E12, 9198.4], [1.71953538E12, 7789.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.71953532E12, 406.0], [1.71953502E12, 306.0], [1.71953496E12, 305.0], [1.71953562E12, 10996.0], [1.71953556E12, 383.0], [1.71953526E12, 320.0], [1.7195352E12, 337.0], [1.7195349E12, 361.0], [1.71953484E12, 306.0], [1.7195355E12, 384.0], [1.71953544E12, 322.0], [1.71953514E12, 359.0], [1.71953508E12, 371.0], [1.71953538E12, 384.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71953532E12, 979.0], [1.71953502E12, 771.0], [1.71953496E12, 364.0], [1.71953562E12, 23158.0], [1.71953556E12, 964.0], [1.71953526E12, 983.0], [1.7195352E12, 985.0], [1.7195349E12, 999.0], [1.71953484E12, 734.5], [1.7195355E12, 934.0], [1.71953544E12, 959.0], [1.71953514E12, 5481.5], [1.71953508E12, 1022.0], [1.71953538E12, 935.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71953562E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 352.0, "minX": 1.0, "maxY": 99393.0, "series": [{"data": [[2.0, 23128.0], [3.0, 10854.5], [4.0, 3186.5], [6.0, 6226.5], [7.0, 1231.0], [8.0, 7433.0], [10.0, 2552.5], [13.0, 4748.5], [14.0, 4282.5], [15.0, 6367.5], [16.0, 362.5], [19.0, 3431.5], [20.0, 361.0], [24.0, 5851.5], [25.0, 3439.5], [26.0, 4207.5], [28.0, 361.0], [29.0, 3937.0], [31.0, 384.0], [32.0, 857.0], [33.0, 1743.0], [36.0, 352.0], [37.0, 356.0], [38.0, 1447.5], [39.0, 1077.0], [41.0, 952.5], [42.0, 380.5], [43.0, 376.0], [45.0, 835.0], [47.0, 621.0], [48.0, 422.5], [51.0, 1626.0], [50.0, 835.0], [53.0, 932.5], [52.0, 1046.0], [55.0, 1264.0], [54.0, 1397.0], [56.0, 892.0], [57.0, 745.0], [58.0, 928.0], [59.0, 962.0], [60.0, 931.0], [61.0, 1011.0], [62.0, 810.5], [63.0, 1043.5], [64.0, 797.0], [65.0, 907.0], [67.0, 802.0], [66.0, 1009.5], [70.0, 943.0], [71.0, 906.0], [69.0, 910.0], [68.0, 986.0], [72.0, 945.0], [73.0, 1033.0], [75.0, 943.5], [74.0, 884.5], [77.0, 1010.5], [78.0, 952.0], [76.0, 902.0], [79.0, 933.0], [83.0, 933.0], [80.0, 937.0], [81.0, 912.5], [82.0, 1015.5], [84.0, 856.0], [87.0, 904.5], [86.0, 926.0], [85.0, 879.0], [90.0, 862.0], [91.0, 938.0], [89.0, 910.0], [88.0, 899.0], [93.0, 871.0], [95.0, 923.5], [94.0, 952.0], [92.0, 917.0], [99.0, 1068.5], [97.0, 874.0], [96.0, 1021.5], [98.0, 946.5], [101.0, 958.0], [102.0, 906.5], [103.0, 899.0], [100.0, 1100.0], [105.0, 939.0], [107.0, 910.0], [106.0, 1093.0], [104.0, 940.0], [111.0, 799.0], [110.0, 849.0], [109.0, 918.5], [108.0, 1114.0], [112.0, 993.0], [115.0, 1007.0], [113.0, 1038.5], [117.0, 893.0], [118.0, 1046.0], [119.0, 899.5], [123.0, 4199.0], [120.0, 1002.0], [121.0, 753.0], [122.0, 955.5], [126.0, 1057.5], [124.0, 974.0], [135.0, 5222.5], [140.0, 3168.0], [138.0, 5728.5], [150.0, 2333.5], [147.0, 1252.0], [161.0, 7093.0], [160.0, 2378.5], [175.0, 5968.0], [182.0, 7640.0], [1.0, 10109.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 8650.0], [50.0, 520.0], [52.0, 736.0], [53.0, 99393.0], [55.0, 2038.0], [56.0, 869.0], [63.0, 2755.0], [71.0, 65352.0], [75.0, 956.0], [76.0, 63414.0], [78.0, 60948.0], [77.0, 60849.0], [79.0, 517.0], [80.0, 900.0], [82.0, 74092.5], [87.0, 1113.0], [86.0, 80090.0], [84.0, 70186.0], [88.0, 942.0], [90.0, 884.0], [95.0, 748.0], [94.0, 6964.5], [93.0, 64520.0], [99.0, 5471.0], [98.0, 86818.5], [97.0, 66517.0], [101.0, 32310.0], [103.0, 1136.0], [100.0, 1499.0], [107.0, 62179.0], [104.0, 5745.0], [109.0, 1756.0], [110.0, 4033.0], [108.0, 5900.0], [112.0, 868.0], [161.0, 6506.0], [1.0, 62979.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 182.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 60948.0, "series": [{"data": [[2.0, 23128.0], [3.0, 10854.5], [4.0, 3186.5], [6.0, 6226.5], [7.0, 1231.0], [8.0, 7061.5], [10.0, 2551.5], [13.0, 4748.5], [14.0, 4282.5], [15.0, 6367.5], [16.0, 362.5], [19.0, 3431.5], [20.0, 361.0], [24.0, 5851.5], [25.0, 3439.5], [26.0, 4207.5], [28.0, 360.5], [29.0, 3937.0], [31.0, 384.0], [32.0, 856.5], [33.0, 1743.0], [36.0, 352.0], [37.0, 356.0], [38.0, 1447.5], [39.0, 1077.0], [41.0, 952.5], [42.0, 380.0], [43.0, 376.0], [45.0, 835.0], [47.0, 621.0], [48.0, 422.5], [51.0, 1626.0], [50.0, 834.0], [53.0, 932.5], [52.0, 1046.0], [55.0, 1264.0], [54.0, 1397.0], [56.0, 892.0], [57.0, 745.0], [58.0, 928.0], [59.0, 962.0], [60.0, 930.5], [61.0, 1011.0], [62.0, 810.5], [63.0, 1043.5], [64.0, 797.0], [65.0, 907.0], [67.0, 789.5], [66.0, 1008.0], [70.0, 943.0], [71.0, 906.0], [69.0, 910.0], [68.0, 986.0], [72.0, 945.0], [73.0, 1032.5], [75.0, 943.5], [74.0, 883.5], [77.0, 1010.5], [78.0, 951.0], [76.0, 902.0], [79.0, 932.5], [83.0, 932.0], [80.0, 937.0], [81.0, 912.5], [82.0, 1014.0], [84.0, 856.0], [87.0, 904.5], [86.0, 926.0], [85.0, 879.0], [90.0, 862.0], [91.0, 938.0], [89.0, 910.0], [88.0, 899.0], [93.0, 869.0], [95.0, 923.0], [94.0, 952.0], [92.0, 917.0], [99.0, 1068.5], [97.0, 874.0], [96.0, 1020.0], [98.0, 946.0], [101.0, 957.5], [102.0, 905.0], [103.0, 899.0], [100.0, 1100.0], [105.0, 937.0], [107.0, 910.0], [106.0, 1093.0], [104.0, 940.0], [111.0, 799.0], [110.0, 848.0], [109.0, 917.0], [108.0, 1114.0], [112.0, 993.0], [115.0, 1007.0], [113.0, 1038.0], [117.0, 893.0], [118.0, 1041.0], [119.0, 899.5], [123.0, 4198.5], [120.0, 1000.0], [121.0, 753.0], [122.0, 955.5], [126.0, 1057.5], [124.0, 974.0], [135.0, 5222.0], [140.0, 3167.5], [138.0, 5726.0], [150.0, 2333.5], [147.0, 1252.0], [161.0, 7093.0], [160.0, 2378.5], [175.0, 5967.0], [182.0, 7640.0], [1.0, 10109.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 8650.0], [50.0, 520.0], [52.0, 736.0], [53.0, 0.0], [55.0, 2038.0], [56.0, 869.0], [63.0, 2755.0], [71.0, 0.0], [75.0, 955.0], [76.0, 0.0], [78.0, 60948.0], [77.0, 0.0], [79.0, 517.0], [80.0, 900.0], [82.0, 0.0], [87.0, 1113.0], [86.0, 30489.0], [84.0, 0.0], [88.0, 942.0], [90.0, 884.0], [95.0, 748.0], [94.0, 6964.5], [93.0, 0.0], [99.0, 5471.0], [98.0, 0.0], [97.0, 0.0], [101.0, 1683.0], [103.0, 1136.0], [100.0, 1499.0], [107.0, 0.0], [104.0, 5745.0], [109.0, 1756.0], [110.0, 4033.0], [108.0, 5900.0], [112.0, 868.0], [161.0, 6506.0], [1.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 182.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.9666666666666666, "minX": 1.71953484E12, "maxY": 84.51666666666667, "series": [{"data": [[1.71953532E12, 84.13333333333334], [1.71953502E12, 82.68333333333334], [1.71953496E12, 1.9666666666666666], [1.71953556E12, 75.76666666666667], [1.71953526E12, 84.0], [1.7195352E12, 84.08333333333333], [1.7195349E12, 76.93333333333334], [1.71953484E12, 69.56666666666666], [1.7195355E12, 83.35], [1.71953544E12, 83.06666666666666], [1.71953514E12, 39.233333333333334], [1.71953508E12, 68.76666666666667], [1.71953538E12, 84.51666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71953556E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71953484E12, "maxY": 84.21666666666667, "series": [{"data": [[1.71953532E12, 0.15], [1.7195355E12, 0.016666666666666666], [1.71953544E12, 0.05], [1.71953508E12, 0.016666666666666666], [1.71953556E12, 0.016666666666666666], [1.71953538E12, 0.05]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLException", "isController": false}, {"data": [[1.71953532E12, 83.11666666666666], [1.71953502E12, 79.76666666666667], [1.71953496E12, 1.7333333333333334], [1.71953562E12, 0.08333333333333333], [1.71953556E12, 78.23333333333333], [1.71953526E12, 83.61666666666666], [1.7195352E12, 83.81666666666666], [1.7195349E12, 79.4], [1.71953484E12, 66.6], [1.7195355E12, 83.21666666666667], [1.71953544E12, 82.7], [1.71953514E12, 38.93333333333333], [1.71953508E12, 68.08333333333333], [1.71953538E12, 84.21666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.71953484E12, 0.03333333333333333], [1.71953532E12, 0.85], [1.7195355E12, 0.43333333333333335], [1.71953544E12, 0.06666666666666667], [1.71953514E12, 0.23333333333333334], [1.71953556E12, 0.36666666666666664], [1.71953526E12, 0.45], [1.7195352E12, 0.6], [1.7195349E12, 0.45], [1.71953538E12, 0.15]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.71953532E12, 0.016666666666666666], [1.71953502E12, 0.016666666666666666], [1.71953544E12, 0.016666666666666666], [1.71953556E12, 0.016666666666666666], [1.7195352E12, 0.016666666666666666], [1.7195349E12, 0.016666666666666666]], "isOverall": false, "label": "400", "isController": false}, {"data": [[1.71953514E12, 0.03333333333333333]], "isOverall": false, "label": "504", "isController": false}, {"data": [[1.71953502E12, 0.05], [1.71953514E12, 0.03333333333333333], [1.71953508E12, 0.4]], "isOverall": false, "label": "409", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71953562E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71953484E12, "maxY": 84.21666666666667, "series": [{"data": [[1.71953484E12, 0.016666666666666666], [1.71953496E12, 0.016666666666666666]], "isOverall": false, "label": "loginAFlypass-success", "isController": false}, {"data": [[1.71953484E12, 0.03333333333333333], [1.71953532E12, 0.4666666666666667], [1.7195355E12, 0.43333333333333335], [1.71953544E12, 0.06666666666666667], [1.71953514E12, 0.13333333333333333], [1.71953556E12, 0.36666666666666664], [1.71953526E12, 0.11666666666666667], [1.7195352E12, 0.3333333333333333], [1.7195349E12, 0.45], [1.71953538E12, 0.15]], "isOverall": false, "label": "trackVehicleEntry-success", "isController": false}, {"data": [[1.71953502E12, 0.05], [1.71953544E12, 0.016666666666666666], [1.71953514E12, 0.03333333333333333], [1.71953508E12, 0.4]], "isOverall": false, "label": "trackVehicleEntry-failure", "isController": false}, {"data": [[1.71953532E12, 0.38333333333333336], [1.71953514E12, 0.1], [1.71953526E12, 0.3333333333333333], [1.7195352E12, 0.26666666666666666]], "isOverall": false, "label": "trackVehicleExit-success", "isController": false}, {"data": [[1.71953532E12, 0.16666666666666666], [1.71953502E12, 0.016666666666666666], [1.7195355E12, 0.016666666666666666], [1.71953544E12, 0.05], [1.71953514E12, 0.03333333333333333], [1.71953508E12, 0.016666666666666666], [1.71953556E12, 0.03333333333333333], [1.7195352E12, 0.016666666666666666], [1.7195349E12, 0.016666666666666666], [1.71953538E12, 0.05]], "isOverall": false, "label": "getPlate-failure", "isController": false}, {"data": [[1.71953532E12, 83.11666666666666], [1.71953502E12, 79.76666666666667], [1.71953496E12, 1.7166666666666666], [1.71953562E12, 0.08333333333333333], [1.71953556E12, 78.23333333333333], [1.71953526E12, 83.61666666666666], [1.7195352E12, 83.81666666666666], [1.7195349E12, 79.4], [1.71953484E12, 66.58333333333333], [1.7195355E12, 83.21666666666667], [1.71953544E12, 82.7], [1.71953514E12, 38.93333333333333], [1.71953508E12, 68.08333333333333], [1.71953538E12, 84.21666666666667]], "isOverall": false, "label": "getPlate-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71953562E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71953484E12, "maxY": 84.41666666666667, "series": [{"data": [[1.71953532E12, 83.96666666666667], [1.71953502E12, 79.76666666666667], [1.71953496E12, 1.7333333333333334], [1.71953562E12, 0.08333333333333333], [1.71953556E12, 78.6], [1.71953526E12, 84.06666666666666], [1.7195352E12, 84.41666666666667], [1.7195349E12, 79.85], [1.71953484E12, 66.63333333333334], [1.7195355E12, 83.65], [1.71953544E12, 82.76666666666667], [1.71953514E12, 39.166666666666664], [1.71953508E12, 68.08333333333333], [1.71953538E12, 84.36666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.71953532E12, 0.16666666666666666], [1.71953502E12, 0.06666666666666667], [1.7195355E12, 0.016666666666666666], [1.71953544E12, 0.06666666666666667], [1.71953514E12, 0.06666666666666667], [1.71953508E12, 0.4166666666666667], [1.71953556E12, 0.03333333333333333], [1.7195352E12, 0.016666666666666666], [1.7195349E12, 0.016666666666666666], [1.71953538E12, 0.05]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71953562E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

