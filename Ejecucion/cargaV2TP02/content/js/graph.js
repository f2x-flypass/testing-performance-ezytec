/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 344.0, "minX": 0.0, "maxY": 26413.0, "series": [{"data": [[0.0, 415.0], [0.1, 415.0], [0.2, 415.0], [0.3, 422.0], [0.4, 422.0], [0.5, 422.0], [0.6, 437.0], [0.7, 437.0], [0.8, 437.0], [0.9, 437.0], [1.0, 437.0], [1.1, 437.0], [1.2, 444.0], [1.3, 444.0], [1.4, 444.0], [1.5, 444.0], [1.6, 444.0], [1.7, 444.0], [1.8, 446.0], [1.9, 446.0], [2.0, 446.0], [2.1, 449.0], [2.2, 449.0], [2.3, 449.0], [2.4, 458.0], [2.5, 458.0], [2.6, 458.0], [2.7, 462.0], [2.8, 462.0], [2.9, 462.0], [3.0, 465.0], [3.1, 465.0], [3.2, 465.0], [3.3, 470.0], [3.4, 470.0], [3.5, 470.0], [3.6, 471.0], [3.7, 471.0], [3.8, 471.0], [3.9, 477.0], [4.0, 477.0], [4.1, 477.0], [4.2, 487.0], [4.3, 487.0], [4.4, 487.0], [4.5, 489.0], [4.6, 489.0], [4.7, 489.0], [4.8, 494.0], [4.9, 494.0], [5.0, 494.0], [5.1, 500.0], [5.2, 500.0], [5.3, 500.0], [5.4, 504.0], [5.5, 504.0], [5.6, 504.0], [5.7, 505.0], [5.8, 505.0], [5.9, 505.0], [6.0, 505.0], [6.1, 505.0], [6.2, 509.0], [6.3, 509.0], [6.4, 509.0], [6.5, 512.0], [6.6, 512.0], [6.7, 512.0], [6.8, 515.0], [6.9, 515.0], [7.0, 515.0], [7.1, 515.0], [7.2, 515.0], [7.3, 515.0], [7.4, 516.0], [7.5, 516.0], [7.6, 516.0], [7.7, 517.0], [7.8, 517.0], [7.9, 517.0], [8.0, 517.0], [8.1, 517.0], [8.2, 517.0], [8.3, 518.0], [8.4, 518.0], [8.5, 518.0], [8.6, 523.0], [8.7, 523.0], [8.8, 523.0], [8.9, 525.0], [9.0, 525.0], [9.1, 525.0], [9.2, 526.0], [9.3, 526.0], [9.4, 526.0], [9.5, 528.0], [9.6, 528.0], [9.7, 528.0], [9.8, 529.0], [9.9, 529.0], [10.0, 529.0], [10.1, 529.0], [10.2, 529.0], [10.3, 529.0], [10.4, 531.0], [10.5, 531.0], [10.6, 531.0], [10.7, 532.0], [10.8, 532.0], [10.9, 532.0], [11.0, 533.0], [11.1, 533.0], [11.2, 533.0], [11.3, 534.0], [11.4, 534.0], [11.5, 534.0], [11.6, 535.0], [11.7, 535.0], [11.8, 535.0], [11.9, 535.0], [12.0, 535.0], [12.1, 537.0], [12.2, 537.0], [12.3, 537.0], [12.4, 537.0], [12.5, 537.0], [12.6, 537.0], [12.7, 538.0], [12.8, 538.0], [12.9, 538.0], [13.0, 538.0], [13.1, 538.0], [13.2, 538.0], [13.3, 540.0], [13.4, 540.0], [13.5, 540.0], [13.6, 541.0], [13.7, 541.0], [13.8, 541.0], [13.9, 541.0], [14.0, 541.0], [14.1, 541.0], [14.2, 542.0], [14.3, 542.0], [14.4, 542.0], [14.5, 543.0], [14.6, 543.0], [14.7, 543.0], [14.8, 543.0], [14.9, 543.0], [15.0, 543.0], [15.1, 544.0], [15.2, 544.0], [15.3, 544.0], [15.4, 544.0], [15.5, 544.0], [15.6, 544.0], [15.7, 546.0], [15.8, 546.0], [15.9, 546.0], [16.0, 546.0], [16.1, 546.0], [16.2, 546.0], [16.3, 547.0], [16.4, 547.0], [16.5, 547.0], [16.6, 551.0], [16.7, 551.0], [16.8, 551.0], [16.9, 551.0], [17.0, 551.0], [17.1, 551.0], [17.2, 553.0], [17.3, 553.0], [17.4, 553.0], [17.5, 554.0], [17.6, 554.0], [17.7, 555.0], [17.8, 555.0], [17.9, 555.0], [18.0, 556.0], [18.1, 556.0], [18.2, 556.0], [18.3, 557.0], [18.4, 557.0], [18.5, 557.0], [18.6, 560.0], [18.7, 560.0], [18.8, 560.0], [18.9, 561.0], [19.0, 561.0], [19.1, 561.0], [19.2, 562.0], [19.3, 562.0], [19.4, 562.0], [19.5, 562.0], [19.6, 562.0], [19.7, 562.0], [19.8, 564.0], [19.9, 564.0], [20.0, 564.0], [20.1, 565.0], [20.2, 565.0], [20.3, 565.0], [20.4, 565.0], [20.5, 565.0], [20.6, 565.0], [20.7, 566.0], [20.8, 566.0], [20.9, 566.0], [21.0, 567.0], [21.1, 567.0], [21.2, 567.0], [21.3, 568.0], [21.4, 568.0], [21.5, 568.0], [21.6, 569.0], [21.7, 569.0], [21.8, 569.0], [21.9, 570.0], [22.0, 570.0], [22.1, 570.0], [22.2, 570.0], [22.3, 570.0], [22.4, 570.0], [22.5, 570.0], [22.6, 570.0], [22.7, 570.0], [22.8, 571.0], [22.9, 571.0], [23.0, 571.0], [23.1, 573.0], [23.2, 573.0], [23.3, 573.0], [23.4, 574.0], [23.5, 574.0], [23.6, 574.0], [23.7, 574.0], [23.8, 574.0], [23.9, 574.0], [24.0, 574.0], [24.1, 574.0], [24.2, 576.0], [24.3, 576.0], [24.4, 576.0], [24.5, 577.0], [24.6, 577.0], [24.7, 577.0], [24.8, 577.0], [24.9, 577.0], [25.0, 577.0], [25.1, 578.0], [25.2, 578.0], [25.3, 578.0], [25.4, 579.0], [25.5, 579.0], [25.6, 579.0], [25.7, 580.0], [25.8, 580.0], [25.9, 580.0], [26.0, 580.0], [26.1, 580.0], [26.2, 580.0], [26.3, 580.0], [26.4, 580.0], [26.5, 580.0], [26.6, 580.0], [26.7, 580.0], [26.8, 580.0], [26.9, 581.0], [27.0, 581.0], [27.1, 581.0], [27.2, 585.0], [27.3, 585.0], [27.4, 585.0], [27.5, 587.0], [27.6, 587.0], [27.7, 587.0], [27.8, 588.0], [27.9, 588.0], [28.0, 588.0], [28.1, 588.0], [28.2, 588.0], [28.3, 588.0], [28.4, 588.0], [28.5, 588.0], [28.6, 588.0], [28.7, 590.0], [28.8, 590.0], [28.9, 590.0], [29.0, 592.0], [29.1, 592.0], [29.2, 592.0], [29.3, 593.0], [29.4, 593.0], [29.5, 594.0], [29.6, 594.0], [29.7, 594.0], [29.8, 595.0], [29.9, 595.0], [30.0, 595.0], [30.1, 596.0], [30.2, 596.0], [30.3, 596.0], [30.4, 596.0], [30.5, 596.0], [30.6, 596.0], [30.7, 598.0], [30.8, 598.0], [30.9, 598.0], [31.0, 598.0], [31.1, 598.0], [31.2, 598.0], [31.3, 600.0], [31.4, 600.0], [31.5, 600.0], [31.6, 600.0], [31.7, 600.0], [31.8, 600.0], [31.9, 601.0], [32.0, 601.0], [32.1, 601.0], [32.2, 602.0], [32.3, 602.0], [32.4, 602.0], [32.5, 602.0], [32.6, 602.0], [32.7, 602.0], [32.8, 603.0], [32.9, 603.0], [33.0, 603.0], [33.1, 603.0], [33.2, 603.0], [33.3, 603.0], [33.4, 604.0], [33.5, 604.0], [33.6, 604.0], [33.7, 604.0], [33.8, 604.0], [33.9, 604.0], [34.0, 604.0], [34.1, 604.0], [34.2, 604.0], [34.3, 604.0], [34.4, 604.0], [34.5, 604.0], [34.6, 606.0], [34.7, 606.0], [34.8, 606.0], [34.9, 606.0], [35.0, 606.0], [35.1, 606.0], [35.2, 606.0], [35.3, 606.0], [35.4, 607.0], [35.5, 607.0], [35.6, 607.0], [35.7, 607.0], [35.8, 607.0], [35.9, 607.0], [36.0, 607.0], [36.1, 607.0], [36.2, 607.0], [36.3, 609.0], [36.4, 609.0], [36.5, 609.0], [36.6, 612.0], [36.7, 612.0], [36.8, 612.0], [36.9, 612.0], [37.0, 612.0], [37.1, 612.0], [37.2, 613.0], [37.3, 613.0], [37.4, 613.0], [37.5, 613.0], [37.6, 613.0], [37.7, 613.0], [37.8, 615.0], [37.9, 615.0], [38.0, 615.0], [38.1, 615.0], [38.2, 615.0], [38.3, 615.0], [38.4, 616.0], [38.5, 616.0], [38.6, 616.0], [38.7, 617.0], [38.8, 617.0], [38.9, 617.0], [39.0, 617.0], [39.1, 617.0], [39.2, 617.0], [39.3, 617.0], [39.4, 617.0], [39.5, 617.0], [39.6, 621.0], [39.7, 621.0], [39.8, 621.0], [39.9, 623.0], [40.0, 623.0], [40.1, 623.0], [40.2, 624.0], [40.3, 624.0], [40.4, 624.0], [40.5, 624.0], [40.6, 624.0], [40.7, 624.0], [40.8, 625.0], [40.9, 625.0], [41.0, 625.0], [41.1, 627.0], [41.2, 627.0], [41.3, 628.0], [41.4, 628.0], [41.5, 628.0], [41.6, 629.0], [41.7, 629.0], [41.8, 629.0], [41.9, 629.0], [42.0, 629.0], [42.1, 629.0], [42.2, 634.0], [42.3, 634.0], [42.4, 634.0], [42.5, 639.0], [42.6, 639.0], [42.7, 639.0], [42.8, 639.0], [42.9, 639.0], [43.0, 639.0], [43.1, 640.0], [43.2, 640.0], [43.3, 640.0], [43.4, 641.0], [43.5, 641.0], [43.6, 641.0], [43.7, 643.0], [43.8, 643.0], [43.9, 643.0], [44.0, 647.0], [44.1, 647.0], [44.2, 647.0], [44.3, 647.0], [44.4, 647.0], [44.5, 647.0], [44.6, 647.0], [44.7, 647.0], [44.8, 647.0], [44.9, 647.0], [45.0, 647.0], [45.1, 647.0], [45.2, 648.0], [45.3, 648.0], [45.4, 648.0], [45.5, 648.0], [45.6, 648.0], [45.7, 648.0], [45.8, 649.0], [45.9, 649.0], [46.0, 649.0], [46.1, 650.0], [46.2, 650.0], [46.3, 650.0], [46.4, 651.0], [46.5, 651.0], [46.6, 651.0], [46.7, 652.0], [46.8, 652.0], [46.9, 652.0], [47.0, 653.0], [47.1, 653.0], [47.2, 655.0], [47.3, 655.0], [47.4, 655.0], [47.5, 655.0], [47.6, 655.0], [47.7, 655.0], [47.8, 657.0], [47.9, 657.0], [48.0, 657.0], [48.1, 657.0], [48.2, 657.0], [48.3, 657.0], [48.4, 658.0], [48.5, 658.0], [48.6, 658.0], [48.7, 659.0], [48.8, 659.0], [48.9, 659.0], [49.0, 659.0], [49.1, 659.0], [49.2, 659.0], [49.3, 659.0], [49.4, 659.0], [49.5, 659.0], [49.6, 660.0], [49.7, 660.0], [49.8, 660.0], [49.9, 661.0], [50.0, 661.0], [50.1, 661.0], [50.2, 662.0], [50.3, 662.0], [50.4, 662.0], [50.5, 663.0], [50.6, 663.0], [50.7, 663.0], [50.8, 663.0], [50.9, 663.0], [51.0, 663.0], [51.1, 664.0], [51.2, 664.0], [51.3, 664.0], [51.4, 664.0], [51.5, 664.0], [51.6, 664.0], [51.7, 665.0], [51.8, 665.0], [51.9, 665.0], [52.0, 666.0], [52.1, 666.0], [52.2, 666.0], [52.3, 668.0], [52.4, 668.0], [52.5, 668.0], [52.6, 668.0], [52.7, 668.0], [52.8, 668.0], [52.9, 668.0], [53.0, 668.0], [53.1, 670.0], [53.2, 670.0], [53.3, 670.0], [53.4, 671.0], [53.5, 671.0], [53.6, 671.0], [53.7, 672.0], [53.8, 672.0], [53.9, 672.0], [54.0, 673.0], [54.1, 673.0], [54.2, 673.0], [54.3, 673.0], [54.4, 673.0], [54.5, 673.0], [54.6, 673.0], [54.7, 673.0], [54.8, 673.0], [54.9, 673.0], [55.0, 673.0], [55.1, 673.0], [55.2, 675.0], [55.3, 675.0], [55.4, 675.0], [55.5, 676.0], [55.6, 676.0], [55.7, 676.0], [55.8, 678.0], [55.9, 678.0], [56.0, 678.0], [56.1, 681.0], [56.2, 681.0], [56.3, 681.0], [56.4, 681.0], [56.5, 681.0], [56.6, 681.0], [56.7, 682.0], [56.8, 682.0], [56.9, 682.0], [57.0, 682.0], [57.1, 682.0], [57.2, 682.0], [57.3, 685.0], [57.4, 685.0], [57.5, 685.0], [57.6, 687.0], [57.7, 687.0], [57.8, 687.0], [57.9, 687.0], [58.0, 687.0], [58.1, 687.0], [58.2, 689.0], [58.3, 689.0], [58.4, 689.0], [58.5, 690.0], [58.6, 690.0], [58.7, 690.0], [58.8, 694.0], [58.9, 694.0], [59.0, 694.0], [59.1, 694.0], [59.2, 694.0], [59.3, 695.0], [59.4, 695.0], [59.5, 695.0], [59.6, 696.0], [59.7, 696.0], [59.8, 696.0], [59.9, 696.0], [60.0, 696.0], [60.1, 696.0], [60.2, 697.0], [60.3, 697.0], [60.4, 697.0], [60.5, 699.0], [60.6, 699.0], [60.7, 699.0], [60.8, 702.0], [60.9, 702.0], [61.0, 702.0], [61.1, 703.0], [61.2, 703.0], [61.3, 703.0], [61.4, 705.0], [61.5, 705.0], [61.6, 705.0], [61.7, 706.0], [61.8, 706.0], [61.9, 706.0], [62.0, 707.0], [62.1, 707.0], [62.2, 707.0], [62.3, 714.0], [62.4, 714.0], [62.5, 714.0], [62.6, 715.0], [62.7, 715.0], [62.8, 715.0], [62.9, 716.0], [63.0, 716.0], [63.1, 716.0], [63.2, 716.0], [63.3, 716.0], [63.4, 716.0], [63.5, 717.0], [63.6, 717.0], [63.7, 717.0], [63.8, 717.0], [63.9, 717.0], [64.0, 717.0], [64.1, 717.0], [64.2, 717.0], [64.3, 717.0], [64.4, 718.0], [64.5, 718.0], [64.6, 718.0], [64.7, 721.0], [64.8, 721.0], [64.9, 721.0], [65.0, 721.0], [65.1, 721.0], [65.2, 721.0], [65.3, 721.0], [65.4, 721.0], [65.5, 723.0], [65.6, 723.0], [65.7, 723.0], [65.8, 726.0], [65.9, 726.0], [66.0, 726.0], [66.1, 728.0], [66.2, 728.0], [66.3, 728.0], [66.4, 729.0], [66.5, 729.0], [66.6, 729.0], [66.7, 731.0], [66.8, 731.0], [66.9, 731.0], [67.0, 732.0], [67.1, 732.0], [67.2, 732.0], [67.3, 737.0], [67.4, 737.0], [67.5, 737.0], [67.6, 738.0], [67.7, 738.0], [67.8, 738.0], [67.9, 739.0], [68.0, 739.0], [68.1, 739.0], [68.2, 739.0], [68.3, 739.0], [68.4, 739.0], [68.5, 739.0], [68.6, 739.0], [68.7, 739.0], [68.8, 740.0], [68.9, 740.0], [69.0, 740.0], [69.1, 740.0], [69.2, 740.0], [69.3, 740.0], [69.4, 741.0], [69.5, 741.0], [69.6, 741.0], [69.7, 742.0], [69.8, 742.0], [69.9, 742.0], [70.0, 742.0], [70.1, 742.0], [70.2, 742.0], [70.3, 742.0], [70.4, 742.0], [70.5, 742.0], [70.6, 747.0], [70.7, 747.0], [70.8, 751.0], [70.9, 751.0], [71.0, 751.0], [71.1, 752.0], [71.2, 752.0], [71.3, 752.0], [71.4, 752.0], [71.5, 752.0], [71.6, 752.0], [71.7, 757.0], [71.8, 757.0], [71.9, 757.0], [72.0, 759.0], [72.1, 759.0], [72.2, 759.0], [72.3, 760.0], [72.4, 760.0], [72.5, 760.0], [72.6, 766.0], [72.7, 766.0], [72.8, 766.0], [72.9, 767.0], [73.0, 767.0], [73.1, 767.0], [73.2, 768.0], [73.3, 768.0], [73.4, 768.0], [73.5, 768.0], [73.6, 768.0], [73.7, 768.0], [73.8, 768.0], [73.9, 768.0], [74.0, 768.0], [74.1, 769.0], [74.2, 769.0], [74.3, 769.0], [74.4, 770.0], [74.5, 770.0], [74.6, 770.0], [74.7, 773.0], [74.8, 773.0], [74.9, 773.0], [75.0, 774.0], [75.1, 774.0], [75.2, 774.0], [75.3, 775.0], [75.4, 775.0], [75.5, 775.0], [75.6, 776.0], [75.7, 776.0], [75.8, 776.0], [75.9, 783.0], [76.0, 783.0], [76.1, 783.0], [76.2, 786.0], [76.3, 786.0], [76.4, 786.0], [76.5, 786.0], [76.6, 786.0], [76.7, 786.0], [76.8, 786.0], [76.9, 786.0], [77.0, 787.0], [77.1, 787.0], [77.2, 787.0], [77.3, 788.0], [77.4, 788.0], [77.5, 788.0], [77.6, 788.0], [77.7, 788.0], [77.8, 788.0], [77.9, 790.0], [78.0, 790.0], [78.1, 790.0], [78.2, 790.0], [78.3, 790.0], [78.4, 790.0], [78.5, 790.0], [78.6, 790.0], [78.7, 790.0], [78.8, 790.0], [78.9, 790.0], [79.0, 790.0], [79.1, 792.0], [79.2, 792.0], [79.3, 792.0], [79.4, 794.0], [79.5, 794.0], [79.6, 794.0], [79.7, 794.0], [79.8, 794.0], [79.9, 794.0], [80.0, 796.0], [80.1, 796.0], [80.2, 796.0], [80.3, 797.0], [80.4, 797.0], [80.5, 797.0], [80.6, 800.0], [80.7, 800.0], [80.8, 800.0], [80.9, 807.0], [81.0, 807.0], [81.1, 807.0], [81.2, 807.0], [81.3, 807.0], [81.4, 807.0], [81.5, 811.0], [81.6, 811.0], [81.7, 811.0], [81.8, 812.0], [81.9, 812.0], [82.0, 812.0], [82.1, 814.0], [82.2, 814.0], [82.3, 814.0], [82.4, 815.0], [82.5, 815.0], [82.6, 816.0], [82.7, 816.0], [82.8, 816.0], [82.9, 816.0], [83.0, 816.0], [83.1, 816.0], [83.2, 817.0], [83.3, 817.0], [83.4, 817.0], [83.5, 824.0], [83.6, 824.0], [83.7, 824.0], [83.8, 826.0], [83.9, 826.0], [84.0, 826.0], [84.1, 839.0], [84.2, 839.0], [84.3, 839.0], [84.4, 839.0], [84.5, 839.0], [84.6, 839.0], [84.7, 845.0], [84.8, 845.0], [84.9, 845.0], [85.0, 849.0], [85.1, 849.0], [85.2, 849.0], [85.3, 861.0], [85.4, 861.0], [85.5, 861.0], [85.6, 864.0], [85.7, 864.0], [85.8, 864.0], [85.9, 864.0], [86.0, 864.0], [86.1, 864.0], [86.2, 866.0], [86.3, 866.0], [86.4, 866.0], [86.5, 872.0], [86.6, 872.0], [86.7, 872.0], [86.8, 876.0], [86.9, 876.0], [87.0, 876.0], [87.1, 876.0], [87.2, 876.0], [87.3, 876.0], [87.4, 881.0], [87.5, 881.0], [87.6, 881.0], [87.7, 885.0], [87.8, 885.0], [87.9, 885.0], [88.0, 886.0], [88.1, 886.0], [88.2, 886.0], [88.3, 887.0], [88.4, 887.0], [88.5, 903.0], [88.6, 903.0], [88.7, 903.0], [88.8, 905.0], [88.9, 905.0], [89.0, 905.0], [89.1, 908.0], [89.2, 908.0], [89.3, 908.0], [89.4, 914.0], [89.5, 914.0], [89.6, 914.0], [89.7, 917.0], [89.8, 917.0], [89.9, 917.0], [90.0, 923.0], [90.1, 923.0], [90.2, 923.0], [90.3, 923.0], [90.4, 923.0], [90.5, 923.0], [90.6, 932.0], [90.7, 932.0], [90.8, 932.0], [90.9, 938.0], [91.0, 938.0], [91.1, 938.0], [91.2, 955.0], [91.3, 955.0], [91.4, 955.0], [91.5, 960.0], [91.6, 960.0], [91.7, 960.0], [91.8, 963.0], [91.9, 963.0], [92.0, 963.0], [92.1, 977.0], [92.2, 977.0], [92.3, 977.0], [92.4, 983.0], [92.5, 983.0], [92.6, 983.0], [92.7, 984.0], [92.8, 984.0], [92.9, 984.0], [93.0, 988.0], [93.1, 988.0], [93.2, 988.0], [93.3, 994.0], [93.4, 994.0], [93.5, 994.0], [93.6, 994.0], [93.7, 994.0], [93.8, 994.0], [93.9, 1015.0], [94.0, 1015.0], [94.1, 1015.0], [94.2, 1016.0], [94.3, 1016.0], [94.4, 1043.0], [94.5, 1043.0], [94.6, 1043.0], [94.7, 1045.0], [94.8, 1045.0], [94.9, 1045.0], [95.0, 1045.0], [95.1, 1045.0], [95.2, 1045.0], [95.3, 1061.0], [95.4, 1061.0], [95.5, 1061.0], [95.6, 1069.0], [95.7, 1069.0], [95.8, 1069.0], [95.9, 1078.0], [96.0, 1078.0], [96.1, 1078.0], [96.2, 1081.0], [96.3, 1081.0], [96.4, 1081.0], [96.5, 1107.0], [96.6, 1107.0], [96.7, 1107.0], [96.8, 1117.0], [96.9, 1117.0], [97.0, 1117.0], [97.1, 1127.0], [97.2, 1127.0], [97.3, 1127.0], [97.4, 1161.0], [97.5, 1161.0], [97.6, 1161.0], [97.7, 1179.0], [97.8, 1179.0], [97.9, 1179.0], [98.0, 1186.0], [98.1, 1186.0], [98.2, 1186.0], [98.3, 1245.0], [98.4, 1245.0], [98.5, 1245.0], [98.6, 1267.0], [98.7, 1267.0], [98.8, 1267.0], [98.9, 1308.0], [99.0, 1308.0], [99.1, 1308.0], [99.2, 1350.0], [99.3, 1350.0], [99.4, 1350.0], [99.5, 1364.0], [99.6, 1364.0], [99.7, 1364.0], [99.8, 1467.0], [99.9, 1467.0], [100.0, 1467.0]], "isOverall": false, "label": "registrarEntradaEglobalt", "isController": false}, {"data": [[0.0, 795.0], [0.1, 795.0], [0.2, 795.0], [0.3, 795.0], [0.4, 795.0], [0.5, 795.0], [0.6, 795.0], [0.7, 795.0], [0.8, 795.0], [0.9, 795.0], [1.0, 795.0], [1.1, 802.0], [1.2, 802.0], [1.3, 802.0], [1.4, 802.0], [1.5, 802.0], [1.6, 802.0], [1.7, 802.0], [1.8, 802.0], [1.9, 802.0], [2.0, 802.0], [2.1, 802.0], [2.2, 810.0], [2.3, 810.0], [2.4, 810.0], [2.5, 810.0], [2.6, 810.0], [2.7, 810.0], [2.8, 810.0], [2.9, 810.0], [3.0, 810.0], [3.1, 810.0], [3.2, 818.0], [3.3, 818.0], [3.4, 818.0], [3.5, 818.0], [3.6, 818.0], [3.7, 818.0], [3.8, 818.0], [3.9, 818.0], [4.0, 818.0], [4.1, 818.0], [4.2, 818.0], [4.3, 847.0], [4.4, 847.0], [4.5, 847.0], [4.6, 847.0], [4.7, 847.0], [4.8, 847.0], [4.9, 847.0], [5.0, 847.0], [5.1, 847.0], [5.2, 847.0], [5.3, 847.0], [5.4, 850.0], [5.5, 850.0], [5.6, 850.0], [5.7, 850.0], [5.8, 850.0], [5.9, 850.0], [6.0, 850.0], [6.1, 850.0], [6.2, 850.0], [6.3, 850.0], [6.4, 867.0], [6.5, 867.0], [6.6, 867.0], [6.7, 867.0], [6.8, 867.0], [6.9, 867.0], [7.0, 867.0], [7.1, 867.0], [7.2, 867.0], [7.3, 867.0], [7.4, 867.0], [7.5, 869.0], [7.6, 869.0], [7.7, 869.0], [7.8, 869.0], [7.9, 869.0], [8.0, 869.0], [8.1, 869.0], [8.2, 869.0], [8.3, 869.0], [8.4, 869.0], [8.5, 869.0], [8.6, 887.0], [8.7, 887.0], [8.8, 887.0], [8.9, 887.0], [9.0, 887.0], [9.1, 887.0], [9.2, 887.0], [9.3, 887.0], [9.4, 887.0], [9.5, 887.0], [9.6, 892.0], [9.7, 892.0], [9.8, 892.0], [9.9, 892.0], [10.0, 892.0], [10.1, 892.0], [10.2, 892.0], [10.3, 892.0], [10.4, 892.0], [10.5, 892.0], [10.6, 892.0], [10.7, 898.0], [10.8, 898.0], [10.9, 898.0], [11.0, 898.0], [11.1, 898.0], [11.2, 898.0], [11.3, 898.0], [11.4, 898.0], [11.5, 898.0], [11.6, 898.0], [11.7, 898.0], [11.8, 905.0], [11.9, 905.0], [12.0, 905.0], [12.1, 905.0], [12.2, 905.0], [12.3, 905.0], [12.4, 905.0], [12.5, 905.0], [12.6, 905.0], [12.7, 905.0], [12.8, 907.0], [12.9, 907.0], [13.0, 907.0], [13.1, 907.0], [13.2, 907.0], [13.3, 907.0], [13.4, 907.0], [13.5, 907.0], [13.6, 907.0], [13.7, 907.0], [13.8, 907.0], [13.9, 908.0], [14.0, 908.0], [14.1, 908.0], [14.2, 908.0], [14.3, 908.0], [14.4, 908.0], [14.5, 908.0], [14.6, 908.0], [14.7, 908.0], [14.8, 908.0], [14.9, 920.0], [15.0, 920.0], [15.1, 920.0], [15.2, 920.0], [15.3, 920.0], [15.4, 920.0], [15.5, 920.0], [15.6, 920.0], [15.7, 920.0], [15.8, 920.0], [15.9, 920.0], [16.0, 922.0], [16.1, 922.0], [16.2, 922.0], [16.3, 922.0], [16.4, 922.0], [16.5, 922.0], [16.6, 922.0], [16.7, 922.0], [16.8, 922.0], [16.9, 922.0], [17.0, 922.0], [17.1, 938.0], [17.2, 938.0], [17.3, 938.0], [17.4, 938.0], [17.5, 938.0], [17.6, 938.0], [17.7, 938.0], [17.8, 938.0], [17.9, 938.0], [18.0, 938.0], [18.1, 938.0], [18.2, 938.0], [18.3, 938.0], [18.4, 938.0], [18.5, 938.0], [18.6, 938.0], [18.7, 938.0], [18.8, 938.0], [18.9, 938.0], [19.0, 938.0], [19.1, 938.0], [19.2, 942.0], [19.3, 942.0], [19.4, 942.0], [19.5, 942.0], [19.6, 942.0], [19.7, 942.0], [19.8, 942.0], [19.9, 942.0], [20.0, 942.0], [20.1, 942.0], [20.2, 942.0], [20.3, 942.0], [20.4, 942.0], [20.5, 942.0], [20.6, 942.0], [20.7, 942.0], [20.8, 942.0], [20.9, 942.0], [21.0, 942.0], [21.1, 942.0], [21.2, 942.0], [21.3, 947.0], [21.4, 947.0], [21.5, 947.0], [21.6, 947.0], [21.7, 947.0], [21.8, 947.0], [21.9, 947.0], [22.0, 947.0], [22.1, 947.0], [22.2, 947.0], [22.3, 947.0], [22.4, 949.0], [22.5, 949.0], [22.6, 949.0], [22.7, 949.0], [22.8, 949.0], [22.9, 949.0], [23.0, 949.0], [23.1, 949.0], [23.2, 949.0], [23.3, 949.0], [23.4, 949.0], [23.5, 957.0], [23.6, 957.0], [23.7, 957.0], [23.8, 957.0], [23.9, 957.0], [24.0, 957.0], [24.1, 957.0], [24.2, 957.0], [24.3, 957.0], [24.4, 957.0], [24.5, 957.0], [24.6, 957.0], [24.7, 957.0], [24.8, 957.0], [24.9, 957.0], [25.0, 957.0], [25.1, 957.0], [25.2, 957.0], [25.3, 957.0], [25.4, 957.0], [25.5, 957.0], [25.6, 958.0], [25.7, 958.0], [25.8, 958.0], [25.9, 958.0], [26.0, 958.0], [26.1, 958.0], [26.2, 958.0], [26.3, 958.0], [26.4, 958.0], [26.5, 958.0], [26.6, 970.0], [26.7, 970.0], [26.8, 970.0], [26.9, 970.0], [27.0, 970.0], [27.1, 970.0], [27.2, 970.0], [27.3, 970.0], [27.4, 970.0], [27.5, 970.0], [27.6, 970.0], [27.7, 975.0], [27.8, 975.0], [27.9, 975.0], [28.0, 975.0], [28.1, 975.0], [28.2, 975.0], [28.3, 975.0], [28.4, 975.0], [28.5, 975.0], [28.6, 975.0], [28.7, 975.0], [28.8, 981.0], [28.9, 981.0], [29.0, 981.0], [29.1, 981.0], [29.2, 981.0], [29.3, 981.0], [29.4, 981.0], [29.5, 981.0], [29.6, 981.0], [29.7, 981.0], [29.8, 983.0], [29.9, 983.0], [30.0, 983.0], [30.1, 983.0], [30.2, 983.0], [30.3, 983.0], [30.4, 983.0], [30.5, 983.0], [30.6, 983.0], [30.7, 983.0], [30.8, 983.0], [30.9, 990.0], [31.0, 990.0], [31.1, 990.0], [31.2, 990.0], [31.3, 990.0], [31.4, 990.0], [31.5, 990.0], [31.6, 990.0], [31.7, 990.0], [31.8, 990.0], [31.9, 990.0], [32.0, 995.0], [32.1, 995.0], [32.2, 995.0], [32.3, 995.0], [32.4, 995.0], [32.5, 995.0], [32.6, 995.0], [32.7, 995.0], [32.8, 995.0], [32.9, 995.0], [33.0, 1000.0], [33.1, 1000.0], [33.2, 1000.0], [33.3, 1000.0], [33.4, 1000.0], [33.5, 1000.0], [33.6, 1000.0], [33.7, 1000.0], [33.8, 1000.0], [33.9, 1000.0], [34.0, 1000.0], [34.1, 1007.0], [34.2, 1007.0], [34.3, 1007.0], [34.4, 1007.0], [34.5, 1007.0], [34.6, 1007.0], [34.7, 1007.0], [34.8, 1007.0], [34.9, 1007.0], [35.0, 1007.0], [35.1, 1007.0], [35.2, 1028.0], [35.3, 1028.0], [35.4, 1028.0], [35.5, 1028.0], [35.6, 1028.0], [35.7, 1028.0], [35.8, 1028.0], [35.9, 1028.0], [36.0, 1028.0], [36.1, 1028.0], [36.2, 1032.0], [36.3, 1032.0], [36.4, 1032.0], [36.5, 1032.0], [36.6, 1032.0], [36.7, 1032.0], [36.8, 1032.0], [36.9, 1032.0], [37.0, 1032.0], [37.1, 1032.0], [37.2, 1032.0], [37.3, 1032.0], [37.4, 1032.0], [37.5, 1032.0], [37.6, 1032.0], [37.7, 1032.0], [37.8, 1032.0], [37.9, 1032.0], [38.0, 1032.0], [38.1, 1032.0], [38.2, 1032.0], [38.3, 1036.0], [38.4, 1036.0], [38.5, 1036.0], [38.6, 1036.0], [38.7, 1036.0], [38.8, 1036.0], [38.9, 1036.0], [39.0, 1036.0], [39.1, 1036.0], [39.2, 1036.0], [39.3, 1036.0], [39.4, 1039.0], [39.5, 1039.0], [39.6, 1039.0], [39.7, 1039.0], [39.8, 1039.0], [39.9, 1039.0], [40.0, 1039.0], [40.1, 1039.0], [40.2, 1039.0], [40.3, 1039.0], [40.4, 1039.0], [40.5, 1042.0], [40.6, 1042.0], [40.7, 1042.0], [40.8, 1042.0], [40.9, 1042.0], [41.0, 1042.0], [41.1, 1042.0], [41.2, 1042.0], [41.3, 1042.0], [41.4, 1042.0], [41.5, 1045.0], [41.6, 1045.0], [41.7, 1045.0], [41.8, 1045.0], [41.9, 1045.0], [42.0, 1045.0], [42.1, 1045.0], [42.2, 1045.0], [42.3, 1045.0], [42.4, 1045.0], [42.5, 1045.0], [42.6, 1046.0], [42.7, 1046.0], [42.8, 1046.0], [42.9, 1046.0], [43.0, 1046.0], [43.1, 1046.0], [43.2, 1046.0], [43.3, 1046.0], [43.4, 1046.0], [43.5, 1046.0], [43.6, 1046.0], [43.7, 1052.0], [43.8, 1052.0], [43.9, 1052.0], [44.0, 1052.0], [44.1, 1052.0], [44.2, 1052.0], [44.3, 1052.0], [44.4, 1052.0], [44.5, 1052.0], [44.6, 1052.0], [44.7, 1084.0], [44.8, 1084.0], [44.9, 1084.0], [45.0, 1084.0], [45.1, 1084.0], [45.2, 1084.0], [45.3, 1084.0], [45.4, 1084.0], [45.5, 1084.0], [45.6, 1084.0], [45.7, 1084.0], [45.8, 1084.0], [45.9, 1084.0], [46.0, 1084.0], [46.1, 1084.0], [46.2, 1084.0], [46.3, 1084.0], [46.4, 1084.0], [46.5, 1084.0], [46.6, 1084.0], [46.7, 1084.0], [46.8, 1084.0], [46.9, 1093.0], [47.0, 1093.0], [47.1, 1093.0], [47.2, 1093.0], [47.3, 1093.0], [47.4, 1093.0], [47.5, 1093.0], [47.6, 1093.0], [47.7, 1093.0], [47.8, 1093.0], [47.9, 1094.0], [48.0, 1094.0], [48.1, 1094.0], [48.2, 1094.0], [48.3, 1094.0], [48.4, 1094.0], [48.5, 1094.0], [48.6, 1094.0], [48.7, 1094.0], [48.8, 1094.0], [48.9, 1094.0], [49.0, 1108.0], [49.1, 1108.0], [49.2, 1108.0], [49.3, 1108.0], [49.4, 1108.0], [49.5, 1108.0], [49.6, 1108.0], [49.7, 1108.0], [49.8, 1108.0], [49.9, 1108.0], [50.0, 1115.0], [50.1, 1115.0], [50.2, 1115.0], [50.3, 1115.0], [50.4, 1115.0], [50.5, 1115.0], [50.6, 1115.0], [50.7, 1115.0], [50.8, 1115.0], [50.9, 1115.0], [51.0, 1115.0], [51.1, 1148.0], [51.2, 1148.0], [51.3, 1148.0], [51.4, 1148.0], [51.5, 1148.0], [51.6, 1148.0], [51.7, 1148.0], [51.8, 1148.0], [51.9, 1148.0], [52.0, 1148.0], [52.1, 1148.0], [52.2, 1155.0], [52.3, 1155.0], [52.4, 1155.0], [52.5, 1155.0], [52.6, 1155.0], [52.7, 1155.0], [52.8, 1155.0], [52.9, 1155.0], [53.0, 1155.0], [53.1, 1155.0], [53.2, 1179.0], [53.3, 1179.0], [53.4, 1179.0], [53.5, 1179.0], [53.6, 1179.0], [53.7, 1179.0], [53.8, 1179.0], [53.9, 1179.0], [54.0, 1179.0], [54.1, 1179.0], [54.2, 1179.0], [54.3, 1179.0], [54.4, 1179.0], [54.5, 1179.0], [54.6, 1179.0], [54.7, 1179.0], [54.8, 1179.0], [54.9, 1179.0], [55.0, 1179.0], [55.1, 1179.0], [55.2, 1179.0], [55.3, 1179.0], [55.4, 1187.0], [55.5, 1187.0], [55.6, 1187.0], [55.7, 1187.0], [55.8, 1187.0], [55.9, 1187.0], [56.0, 1187.0], [56.1, 1187.0], [56.2, 1187.0], [56.3, 1187.0], [56.4, 1204.0], [56.5, 1204.0], [56.6, 1204.0], [56.7, 1204.0], [56.8, 1204.0], [56.9, 1204.0], [57.0, 1204.0], [57.1, 1204.0], [57.2, 1204.0], [57.3, 1204.0], [57.4, 1204.0], [57.5, 1204.0], [57.6, 1204.0], [57.7, 1204.0], [57.8, 1204.0], [57.9, 1204.0], [58.0, 1204.0], [58.1, 1204.0], [58.2, 1204.0], [58.3, 1204.0], [58.4, 1204.0], [58.5, 1204.0], [58.6, 1209.0], [58.7, 1209.0], [58.8, 1209.0], [58.9, 1209.0], [59.0, 1209.0], [59.1, 1209.0], [59.2, 1209.0], [59.3, 1209.0], [59.4, 1209.0], [59.5, 1209.0], [59.6, 1215.0], [59.7, 1215.0], [59.8, 1215.0], [59.9, 1215.0], [60.0, 1215.0], [60.1, 1215.0], [60.2, 1215.0], [60.3, 1215.0], [60.4, 1215.0], [60.5, 1215.0], [60.6, 1215.0], [60.7, 1247.0], [60.8, 1247.0], [60.9, 1247.0], [61.0, 1247.0], [61.1, 1247.0], [61.2, 1247.0], [61.3, 1247.0], [61.4, 1247.0], [61.5, 1247.0], [61.6, 1247.0], [61.7, 1247.0], [61.8, 1252.0], [61.9, 1252.0], [62.0, 1252.0], [62.1, 1252.0], [62.2, 1252.0], [62.3, 1252.0], [62.4, 1252.0], [62.5, 1252.0], [62.6, 1252.0], [62.7, 1252.0], [62.8, 1268.0], [62.9, 1268.0], [63.0, 1268.0], [63.1, 1268.0], [63.2, 1268.0], [63.3, 1268.0], [63.4, 1268.0], [63.5, 1268.0], [63.6, 1268.0], [63.7, 1268.0], [63.8, 1268.0], [63.9, 1285.0], [64.0, 1285.0], [64.1, 1285.0], [64.2, 1285.0], [64.3, 1285.0], [64.4, 1285.0], [64.5, 1285.0], [64.6, 1285.0], [64.7, 1285.0], [64.8, 1285.0], [64.9, 1327.0], [65.0, 1327.0], [65.1, 1327.0], [65.2, 1327.0], [65.3, 1327.0], [65.4, 1327.0], [65.5, 1327.0], [65.6, 1327.0], [65.7, 1327.0], [65.8, 1327.0], [65.9, 1327.0], [66.0, 1330.0], [66.1, 1330.0], [66.2, 1330.0], [66.3, 1330.0], [66.4, 1330.0], [66.5, 1330.0], [66.6, 1330.0], [66.7, 1330.0], [66.8, 1330.0], [66.9, 1330.0], [67.0, 1330.0], [67.1, 1358.0], [67.2, 1358.0], [67.3, 1358.0], [67.4, 1358.0], [67.5, 1358.0], [67.6, 1358.0], [67.7, 1358.0], [67.8, 1358.0], [67.9, 1358.0], [68.0, 1358.0], [68.1, 1368.0], [68.2, 1368.0], [68.3, 1368.0], [68.4, 1368.0], [68.5, 1368.0], [68.6, 1368.0], [68.7, 1368.0], [68.8, 1368.0], [68.9, 1368.0], [69.0, 1368.0], [69.1, 1368.0], [69.2, 1387.0], [69.3, 1387.0], [69.4, 1387.0], [69.5, 1387.0], [69.6, 1387.0], [69.7, 1387.0], [69.8, 1387.0], [69.9, 1387.0], [70.0, 1387.0], [70.1, 1387.0], [70.2, 1387.0], [70.3, 1415.0], [70.4, 1415.0], [70.5, 1415.0], [70.6, 1415.0], [70.7, 1415.0], [70.8, 1415.0], [70.9, 1415.0], [71.0, 1415.0], [71.1, 1415.0], [71.2, 1415.0], [71.3, 1438.0], [71.4, 1438.0], [71.5, 1438.0], [71.6, 1438.0], [71.7, 1438.0], [71.8, 1438.0], [71.9, 1438.0], [72.0, 1438.0], [72.1, 1438.0], [72.2, 1438.0], [72.3, 1438.0], [72.4, 1458.0], [72.5, 1458.0], [72.6, 1458.0], [72.7, 1458.0], [72.8, 1458.0], [72.9, 1458.0], [73.0, 1458.0], [73.1, 1458.0], [73.2, 1458.0], [73.3, 1458.0], [73.4, 1458.0], [73.5, 1515.0], [73.6, 1515.0], [73.7, 1515.0], [73.8, 1515.0], [73.9, 1515.0], [74.0, 1515.0], [74.1, 1515.0], [74.2, 1515.0], [74.3, 1515.0], [74.4, 1515.0], [74.5, 1599.0], [74.6, 1599.0], [74.7, 1599.0], [74.8, 1599.0], [74.9, 1599.0], [75.0, 1599.0], [75.1, 1599.0], [75.2, 1599.0], [75.3, 1599.0], [75.4, 1599.0], [75.5, 1599.0], [75.6, 1611.0], [75.7, 1611.0], [75.8, 1611.0], [75.9, 1611.0], [76.0, 1611.0], [76.1, 1611.0], [76.2, 1611.0], [76.3, 1611.0], [76.4, 1611.0], [76.5, 1611.0], [76.6, 1638.0], [76.7, 1638.0], [76.8, 1638.0], [76.9, 1638.0], [77.0, 1638.0], [77.1, 1638.0], [77.2, 1638.0], [77.3, 1638.0], [77.4, 1638.0], [77.5, 1638.0], [77.6, 1638.0], [77.7, 1666.0], [77.8, 1666.0], [77.9, 1666.0], [78.0, 1666.0], [78.1, 1666.0], [78.2, 1666.0], [78.3, 1666.0], [78.4, 1666.0], [78.5, 1666.0], [78.6, 1666.0], [78.7, 1666.0], [78.8, 1708.0], [78.9, 1708.0], [79.0, 1708.0], [79.1, 1708.0], [79.2, 1708.0], [79.3, 1708.0], [79.4, 1708.0], [79.5, 1708.0], [79.6, 1708.0], [79.7, 1708.0], [79.8, 1763.0], [79.9, 1763.0], [80.0, 1763.0], [80.1, 1763.0], [80.2, 1763.0], [80.3, 1763.0], [80.4, 1763.0], [80.5, 1763.0], [80.6, 1763.0], [80.7, 1763.0], [80.8, 1763.0], [80.9, 1813.0], [81.0, 1813.0], [81.1, 1813.0], [81.2, 1813.0], [81.3, 1813.0], [81.4, 1813.0], [81.5, 1813.0], [81.6, 1813.0], [81.7, 1813.0], [81.8, 1813.0], [81.9, 1813.0], [82.0, 1863.0], [82.1, 1863.0], [82.2, 1863.0], [82.3, 1863.0], [82.4, 1863.0], [82.5, 1863.0], [82.6, 1863.0], [82.7, 1863.0], [82.8, 1863.0], [82.9, 1863.0], [83.0, 1867.0], [83.1, 1867.0], [83.2, 1867.0], [83.3, 1867.0], [83.4, 1867.0], [83.5, 1867.0], [83.6, 1867.0], [83.7, 1867.0], [83.8, 1867.0], [83.9, 1867.0], [84.0, 1867.0], [84.1, 1894.0], [84.2, 1894.0], [84.3, 1894.0], [84.4, 1894.0], [84.5, 1894.0], [84.6, 1894.0], [84.7, 1894.0], [84.8, 1894.0], [84.9, 1894.0], [85.0, 1894.0], [85.1, 1894.0], [85.2, 1913.0], [85.3, 1913.0], [85.4, 1913.0], [85.5, 1913.0], [85.6, 1913.0], [85.7, 1913.0], [85.8, 1913.0], [85.9, 1913.0], [86.0, 1913.0], [86.1, 1913.0], [86.2, 2007.0], [86.3, 2007.0], [86.4, 2007.0], [86.5, 2007.0], [86.6, 2007.0], [86.7, 2007.0], [86.8, 2007.0], [86.9, 2007.0], [87.0, 2007.0], [87.1, 2007.0], [87.2, 2007.0], [87.3, 2014.0], [87.4, 2014.0], [87.5, 2014.0], [87.6, 2014.0], [87.7, 2014.0], [87.8, 2014.0], [87.9, 2014.0], [88.0, 2014.0], [88.1, 2014.0], [88.2, 2014.0], [88.3, 2072.0], [88.4, 2072.0], [88.5, 2072.0], [88.6, 2072.0], [88.7, 2072.0], [88.8, 2072.0], [88.9, 2072.0], [89.0, 2072.0], [89.1, 2072.0], [89.2, 2072.0], [89.3, 2072.0], [89.4, 2088.0], [89.5, 2088.0], [89.6, 2088.0], [89.7, 2088.0], [89.8, 2088.0], [89.9, 2088.0], [90.0, 2088.0], [90.1, 2088.0], [90.2, 2088.0], [90.3, 2088.0], [90.4, 2088.0], [90.5, 2094.0], [90.6, 2094.0], [90.7, 2094.0], [90.8, 2094.0], [90.9, 2094.0], [91.0, 2094.0], [91.1, 2094.0], [91.2, 2094.0], [91.3, 2094.0], [91.4, 2094.0], [91.5, 2227.0], [91.6, 2227.0], [91.7, 2227.0], [91.8, 2227.0], [91.9, 2227.0], [92.0, 2227.0], [92.1, 2227.0], [92.2, 2227.0], [92.3, 2227.0], [92.4, 2227.0], [92.5, 2227.0], [92.6, 2241.0], [92.7, 2241.0], [92.8, 2241.0], [92.9, 2241.0], [93.0, 2241.0], [93.1, 2241.0], [93.2, 2241.0], [93.3, 2241.0], [93.4, 2241.0], [93.5, 2241.0], [93.6, 2241.0], [93.7, 2314.0], [93.8, 2314.0], [93.9, 2314.0], [94.0, 2314.0], [94.1, 2314.0], [94.2, 2314.0], [94.3, 2314.0], [94.4, 2314.0], [94.5, 2314.0], [94.6, 2314.0], [94.7, 2392.0], [94.8, 2392.0], [94.9, 2392.0], [95.0, 2392.0], [95.1, 2392.0], [95.2, 2392.0], [95.3, 2392.0], [95.4, 2392.0], [95.5, 2392.0], [95.6, 2392.0], [95.7, 2392.0], [95.8, 2394.0], [95.9, 2394.0], [96.0, 2394.0], [96.1, 2394.0], [96.2, 2394.0], [96.3, 2394.0], [96.4, 2394.0], [96.5, 2394.0], [96.6, 2394.0], [96.7, 2394.0], [96.8, 2394.0], [96.9, 2540.0], [97.0, 2540.0], [97.1, 2540.0], [97.2, 2540.0], [97.3, 2540.0], [97.4, 2540.0], [97.5, 2540.0], [97.6, 2540.0], [97.7, 2540.0], [97.8, 2540.0], [97.9, 2733.0], [98.0, 2733.0], [98.1, 2733.0], [98.2, 2733.0], [98.3, 2733.0], [98.4, 2733.0], [98.5, 2733.0], [98.6, 2733.0], [98.7, 2733.0], [98.8, 2733.0], [98.9, 2733.0], [99.0, 3139.0], [99.1, 3139.0], [99.2, 3139.0], [99.3, 3139.0], [99.4, 3139.0], [99.5, 3139.0], [99.6, 3139.0], [99.7, 3139.0], [99.8, 3139.0], [99.9, 3139.0]], "isOverall": false, "label": "registrarEntradaSinSalida", "isController": false}, {"data": [[0.0, 344.0], [0.1, 344.0], [0.2, 344.0], [0.3, 344.0], [0.4, 344.0], [0.5, 345.0], [0.6, 345.0], [0.7, 345.0], [0.8, 351.0], [0.9, 351.0], [1.0, 351.0], [1.1, 353.0], [1.2, 354.0], [1.3, 354.0], [1.4, 354.0], [1.5, 355.0], [1.6, 356.0], [1.7, 356.0], [1.8, 356.0], [1.9, 357.0], [2.0, 357.0], [2.1, 358.0], [2.2, 358.0], [2.3, 358.0], [2.4, 358.0], [2.5, 359.0], [2.6, 359.0], [2.7, 359.0], [2.8, 359.0], [2.9, 359.0], [3.0, 359.0], [3.1, 360.0], [3.2, 360.0], [3.3, 360.0], [3.4, 360.0], [3.5, 361.0], [3.6, 361.0], [3.7, 361.0], [3.8, 362.0], [3.9, 362.0], [4.0, 362.0], [4.1, 363.0], [4.2, 363.0], [4.3, 364.0], [4.4, 364.0], [4.5, 365.0], [4.6, 365.0], [4.7, 366.0], [4.8, 366.0], [4.9, 366.0], [5.0, 366.0], [5.1, 368.0], [5.2, 368.0], [5.3, 368.0], [5.4, 369.0], [5.5, 369.0], [5.6, 369.0], [5.7, 370.0], [5.8, 370.0], [5.9, 370.0], [6.0, 372.0], [6.1, 372.0], [6.2, 372.0], [6.3, 372.0], [6.4, 372.0], [6.5, 372.0], [6.6, 373.0], [6.7, 373.0], [6.8, 373.0], [6.9, 373.0], [7.0, 373.0], [7.1, 373.0], [7.2, 373.0], [7.3, 374.0], [7.4, 374.0], [7.5, 374.0], [7.6, 374.0], [7.7, 374.0], [7.8, 374.0], [7.9, 374.0], [8.0, 374.0], [8.1, 374.0], [8.2, 375.0], [8.3, 375.0], [8.4, 375.0], [8.5, 375.0], [8.6, 375.0], [8.7, 375.0], [8.8, 376.0], [8.9, 376.0], [9.0, 376.0], [9.1, 376.0], [9.2, 376.0], [9.3, 376.0], [9.4, 376.0], [9.5, 377.0], [9.6, 377.0], [9.7, 377.0], [9.8, 377.0], [9.9, 377.0], [10.0, 377.0], [10.1, 378.0], [10.2, 378.0], [10.3, 378.0], [10.4, 378.0], [10.5, 378.0], [10.6, 378.0], [10.7, 378.0], [10.8, 378.0], [10.9, 379.0], [11.0, 379.0], [11.1, 379.0], [11.2, 379.0], [11.3, 379.0], [11.4, 379.0], [11.5, 379.0], [11.6, 379.0], [11.7, 379.0], [11.8, 380.0], [11.9, 380.0], [12.0, 380.0], [12.1, 380.0], [12.2, 381.0], [12.3, 381.0], [12.4, 381.0], [12.5, 381.0], [12.6, 381.0], [12.7, 381.0], [12.8, 381.0], [12.9, 381.0], [13.0, 381.0], [13.1, 381.0], [13.2, 381.0], [13.3, 381.0], [13.4, 381.0], [13.5, 382.0], [13.6, 382.0], [13.7, 382.0], [13.8, 382.0], [13.9, 382.0], [14.0, 382.0], [14.1, 382.0], [14.2, 382.0], [14.3, 382.0], [14.4, 383.0], [14.5, 383.0], [14.6, 383.0], [14.7, 383.0], [14.8, 383.0], [14.9, 384.0], [15.0, 384.0], [15.1, 384.0], [15.2, 384.0], [15.3, 384.0], [15.4, 384.0], [15.5, 384.0], [15.6, 384.0], [15.7, 384.0], [15.8, 384.0], [15.9, 384.0], [16.0, 385.0], [16.1, 385.0], [16.2, 385.0], [16.3, 385.0], [16.4, 385.0], [16.5, 385.0], [16.6, 385.0], [16.7, 385.0], [16.8, 385.0], [16.9, 385.0], [17.0, 385.0], [17.1, 385.0], [17.2, 385.0], [17.3, 385.0], [17.4, 385.0], [17.5, 385.0], [17.6, 385.0], [17.7, 385.0], [17.8, 386.0], [17.9, 386.0], [18.0, 386.0], [18.1, 386.0], [18.2, 386.0], [18.3, 386.0], [18.4, 386.0], [18.5, 386.0], [18.6, 387.0], [18.7, 387.0], [18.8, 387.0], [18.9, 388.0], [19.0, 388.0], [19.1, 388.0], [19.2, 388.0], [19.3, 388.0], [19.4, 388.0], [19.5, 388.0], [19.6, 388.0], [19.7, 388.0], [19.8, 388.0], [19.9, 389.0], [20.0, 389.0], [20.1, 389.0], [20.2, 389.0], [20.3, 389.0], [20.4, 389.0], [20.5, 389.0], [20.6, 389.0], [20.7, 389.0], [20.8, 389.0], [20.9, 389.0], [21.0, 389.0], [21.1, 389.0], [21.2, 390.0], [21.3, 390.0], [21.4, 390.0], [21.5, 390.0], [21.6, 390.0], [21.7, 390.0], [21.8, 390.0], [21.9, 390.0], [22.0, 390.0], [22.1, 391.0], [22.2, 391.0], [22.3, 391.0], [22.4, 391.0], [22.5, 391.0], [22.6, 391.0], [22.7, 391.0], [22.8, 391.0], [22.9, 391.0], [23.0, 392.0], [23.1, 392.0], [23.2, 392.0], [23.3, 392.0], [23.4, 392.0], [23.5, 392.0], [23.6, 392.0], [23.7, 392.0], [23.8, 392.0], [23.9, 392.0], [24.0, 393.0], [24.1, 393.0], [24.2, 393.0], [24.3, 393.0], [24.4, 393.0], [24.5, 393.0], [24.6, 393.0], [24.7, 393.0], [24.8, 393.0], [24.9, 393.0], [25.0, 394.0], [25.1, 394.0], [25.2, 394.0], [25.3, 394.0], [25.4, 394.0], [25.5, 394.0], [25.6, 394.0], [25.7, 394.0], [25.8, 394.0], [25.9, 394.0], [26.0, 394.0], [26.1, 394.0], [26.2, 394.0], [26.3, 394.0], [26.4, 394.0], [26.5, 394.0], [26.6, 394.0], [26.7, 394.0], [26.8, 395.0], [26.9, 395.0], [27.0, 395.0], [27.1, 395.0], [27.2, 395.0], [27.3, 395.0], [27.4, 395.0], [27.5, 395.0], [27.6, 395.0], [27.7, 395.0], [27.8, 395.0], [27.9, 396.0], [28.0, 396.0], [28.1, 396.0], [28.2, 396.0], [28.3, 396.0], [28.4, 396.0], [28.5, 396.0], [28.6, 397.0], [28.7, 397.0], [28.8, 397.0], [28.9, 397.0], [29.0, 397.0], [29.1, 397.0], [29.2, 397.0], [29.3, 397.0], [29.4, 397.0], [29.5, 398.0], [29.6, 398.0], [29.7, 398.0], [29.8, 398.0], [29.9, 398.0], [30.0, 398.0], [30.1, 398.0], [30.2, 398.0], [30.3, 398.0], [30.4, 398.0], [30.5, 398.0], [30.6, 398.0], [30.7, 398.0], [30.8, 398.0], [30.9, 398.0], [31.0, 398.0], [31.1, 398.0], [31.2, 398.0], [31.3, 399.0], [31.4, 399.0], [31.5, 399.0], [31.6, 399.0], [31.7, 399.0], [31.8, 399.0], [31.9, 399.0], [32.0, 399.0], [32.1, 399.0], [32.2, 399.0], [32.3, 399.0], [32.4, 400.0], [32.5, 400.0], [32.6, 400.0], [32.7, 400.0], [32.8, 400.0], [32.9, 400.0], [33.0, 400.0], [33.1, 401.0], [33.2, 401.0], [33.3, 401.0], [33.4, 401.0], [33.5, 401.0], [33.6, 401.0], [33.7, 401.0], [33.8, 401.0], [33.9, 401.0], [34.0, 401.0], [34.1, 401.0], [34.2, 401.0], [34.3, 401.0], [34.4, 401.0], [34.5, 401.0], [34.6, 402.0], [34.7, 402.0], [34.8, 402.0], [34.9, 402.0], [35.0, 402.0], [35.1, 402.0], [35.2, 402.0], [35.3, 402.0], [35.4, 402.0], [35.5, 402.0], [35.6, 402.0], [35.7, 402.0], [35.8, 402.0], [35.9, 403.0], [36.0, 403.0], [36.1, 403.0], [36.2, 403.0], [36.3, 403.0], [36.4, 403.0], [36.5, 403.0], [36.6, 403.0], [36.7, 403.0], [36.8, 403.0], [36.9, 403.0], [37.0, 403.0], [37.1, 404.0], [37.2, 404.0], [37.3, 404.0], [37.4, 404.0], [37.5, 404.0], [37.6, 404.0], [37.7, 404.0], [37.8, 404.0], [37.9, 404.0], [38.0, 404.0], [38.1, 404.0], [38.2, 405.0], [38.3, 405.0], [38.4, 405.0], [38.5, 405.0], [38.6, 405.0], [38.7, 406.0], [38.8, 406.0], [38.9, 406.0], [39.0, 406.0], [39.1, 406.0], [39.2, 406.0], [39.3, 406.0], [39.4, 406.0], [39.5, 406.0], [39.6, 406.0], [39.7, 406.0], [39.8, 406.0], [39.9, 406.0], [40.0, 407.0], [40.1, 407.0], [40.2, 407.0], [40.3, 407.0], [40.4, 407.0], [40.5, 407.0], [40.6, 407.0], [40.7, 407.0], [40.8, 407.0], [40.9, 407.0], [41.0, 407.0], [41.1, 407.0], [41.2, 407.0], [41.3, 407.0], [41.4, 407.0], [41.5, 407.0], [41.6, 407.0], [41.7, 408.0], [41.8, 408.0], [41.9, 408.0], [42.0, 408.0], [42.1, 408.0], [42.2, 408.0], [42.3, 408.0], [42.4, 408.0], [42.5, 408.0], [42.6, 408.0], [42.7, 408.0], [42.8, 408.0], [42.9, 408.0], [43.0, 408.0], [43.1, 408.0], [43.2, 408.0], [43.3, 408.0], [43.4, 409.0], [43.5, 409.0], [43.6, 409.0], [43.7, 409.0], [43.8, 409.0], [43.9, 409.0], [44.0, 410.0], [44.1, 410.0], [44.2, 410.0], [44.3, 410.0], [44.4, 410.0], [44.5, 410.0], [44.6, 410.0], [44.7, 410.0], [44.8, 410.0], [44.9, 410.0], [45.0, 411.0], [45.1, 411.0], [45.2, 411.0], [45.3, 411.0], [45.4, 411.0], [45.5, 411.0], [45.6, 411.0], [45.7, 411.0], [45.8, 411.0], [45.9, 411.0], [46.0, 411.0], [46.1, 411.0], [46.2, 411.0], [46.3, 411.0], [46.4, 411.0], [46.5, 412.0], [46.6, 412.0], [46.7, 412.0], [46.8, 412.0], [46.9, 412.0], [47.0, 412.0], [47.1, 412.0], [47.2, 412.0], [47.3, 412.0], [47.4, 412.0], [47.5, 413.0], [47.6, 413.0], [47.7, 413.0], [47.8, 413.0], [47.9, 413.0], [48.0, 413.0], [48.1, 413.0], [48.2, 413.0], [48.3, 413.0], [48.4, 413.0], [48.5, 413.0], [48.6, 413.0], [48.7, 413.0], [48.8, 413.0], [48.9, 413.0], [49.0, 414.0], [49.1, 414.0], [49.2, 414.0], [49.3, 414.0], [49.4, 414.0], [49.5, 414.0], [49.6, 414.0], [49.7, 414.0], [49.8, 414.0], [49.9, 414.0], [50.0, 414.0], [50.1, 414.0], [50.2, 414.0], [50.3, 414.0], [50.4, 414.0], [50.5, 414.0], [50.6, 414.0], [50.7, 414.0], [50.8, 414.0], [50.9, 414.0], [51.0, 414.0], [51.1, 414.0], [51.2, 414.0], [51.3, 414.0], [51.4, 414.0], [51.5, 414.0], [51.6, 414.0], [51.7, 415.0], [51.8, 415.0], [51.9, 415.0], [52.0, 415.0], [52.1, 415.0], [52.2, 415.0], [52.3, 415.0], [52.4, 416.0], [52.5, 416.0], [52.6, 416.0], [52.7, 416.0], [52.8, 416.0], [52.9, 416.0], [53.0, 416.0], [53.1, 416.0], [53.2, 416.0], [53.3, 416.0], [53.4, 416.0], [53.5, 417.0], [53.6, 417.0], [53.7, 417.0], [53.8, 417.0], [53.9, 417.0], [54.0, 417.0], [54.1, 417.0], [54.2, 417.0], [54.3, 417.0], [54.4, 417.0], [54.5, 417.0], [54.6, 417.0], [54.7, 417.0], [54.8, 417.0], [54.9, 417.0], [55.0, 417.0], [55.1, 418.0], [55.2, 418.0], [55.3, 418.0], [55.4, 418.0], [55.5, 418.0], [55.6, 419.0], [55.7, 419.0], [55.8, 419.0], [55.9, 419.0], [56.0, 419.0], [56.1, 419.0], [56.2, 419.0], [56.3, 419.0], [56.4, 419.0], [56.5, 419.0], [56.6, 419.0], [56.7, 419.0], [56.8, 419.0], [56.9, 419.0], [57.0, 419.0], [57.1, 419.0], [57.2, 420.0], [57.3, 420.0], [57.4, 420.0], [57.5, 420.0], [57.6, 420.0], [57.7, 420.0], [57.8, 420.0], [57.9, 420.0], [58.0, 420.0], [58.1, 420.0], [58.2, 420.0], [58.3, 420.0], [58.4, 421.0], [58.5, 421.0], [58.6, 421.0], [58.7, 421.0], [58.8, 421.0], [58.9, 421.0], [59.0, 421.0], [59.1, 422.0], [59.2, 422.0], [59.3, 422.0], [59.4, 422.0], [59.5, 422.0], [59.6, 422.0], [59.7, 422.0], [59.8, 422.0], [59.9, 422.0], [60.0, 422.0], [60.1, 422.0], [60.2, 422.0], [60.3, 422.0], [60.4, 422.0], [60.5, 422.0], [60.6, 423.0], [60.7, 423.0], [60.8, 423.0], [60.9, 423.0], [61.0, 423.0], [61.1, 423.0], [61.2, 424.0], [61.3, 424.0], [61.4, 424.0], [61.5, 424.0], [61.6, 424.0], [61.7, 424.0], [61.8, 424.0], [61.9, 424.0], [62.0, 424.0], [62.1, 424.0], [62.2, 424.0], [62.3, 424.0], [62.4, 424.0], [62.5, 424.0], [62.6, 424.0], [62.7, 424.0], [62.8, 424.0], [62.9, 424.0], [63.0, 425.0], [63.1, 425.0], [63.2, 425.0], [63.3, 425.0], [63.4, 425.0], [63.5, 425.0], [63.6, 425.0], [63.7, 425.0], [63.8, 425.0], [63.9, 425.0], [64.0, 425.0], [64.1, 426.0], [64.2, 426.0], [64.3, 426.0], [64.4, 426.0], [64.5, 426.0], [64.6, 426.0], [64.7, 426.0], [64.8, 426.0], [64.9, 427.0], [65.0, 427.0], [65.1, 427.0], [65.2, 427.0], [65.3, 427.0], [65.4, 427.0], [65.5, 428.0], [65.6, 428.0], [65.7, 428.0], [65.8, 428.0], [65.9, 428.0], [66.0, 428.0], [66.1, 428.0], [66.2, 428.0], [66.3, 428.0], [66.4, 428.0], [66.5, 428.0], [66.6, 428.0], [66.7, 428.0], [66.8, 429.0], [66.9, 429.0], [67.0, 429.0], [67.1, 429.0], [67.2, 429.0], [67.3, 429.0], [67.4, 430.0], [67.5, 430.0], [67.6, 430.0], [67.7, 430.0], [67.8, 430.0], [67.9, 430.0], [68.0, 430.0], [68.1, 431.0], [68.2, 431.0], [68.3, 431.0], [68.4, 431.0], [68.5, 431.0], [68.6, 431.0], [68.7, 431.0], [68.8, 431.0], [68.9, 431.0], [69.0, 431.0], [69.1, 431.0], [69.2, 431.0], [69.3, 432.0], [69.4, 432.0], [69.5, 432.0], [69.6, 432.0], [69.7, 432.0], [69.8, 432.0], [69.9, 432.0], [70.0, 432.0], [70.1, 432.0], [70.2, 434.0], [70.3, 434.0], [70.4, 435.0], [70.5, 435.0], [70.6, 435.0], [70.7, 435.0], [70.8, 435.0], [70.9, 435.0], [71.0, 436.0], [71.1, 436.0], [71.2, 436.0], [71.3, 436.0], [71.4, 436.0], [71.5, 436.0], [71.6, 436.0], [71.7, 436.0], [71.8, 436.0], [71.9, 437.0], [72.0, 437.0], [72.1, 437.0], [72.2, 437.0], [72.3, 437.0], [72.4, 437.0], [72.5, 437.0], [72.6, 437.0], [72.7, 437.0], [72.8, 437.0], [72.9, 437.0], [73.0, 437.0], [73.1, 437.0], [73.2, 438.0], [73.3, 438.0], [73.4, 438.0], [73.5, 439.0], [73.6, 439.0], [73.7, 439.0], [73.8, 439.0], [73.9, 440.0], [74.0, 440.0], [74.1, 440.0], [74.2, 440.0], [74.3, 440.0], [74.4, 440.0], [74.5, 440.0], [74.6, 440.0], [74.7, 440.0], [74.8, 440.0], [74.9, 441.0], [75.0, 441.0], [75.1, 441.0], [75.2, 441.0], [75.3, 441.0], [75.4, 441.0], [75.5, 441.0], [75.6, 441.0], [75.7, 441.0], [75.8, 441.0], [75.9, 441.0], [76.0, 442.0], [76.1, 442.0], [76.2, 442.0], [76.3, 442.0], [76.4, 443.0], [76.5, 443.0], [76.6, 443.0], [76.7, 443.0], [76.8, 444.0], [76.9, 444.0], [77.0, 444.0], [77.1, 444.0], [77.2, 444.0], [77.3, 445.0], [77.4, 445.0], [77.5, 445.0], [77.6, 445.0], [77.7, 445.0], [77.8, 445.0], [77.9, 445.0], [78.0, 445.0], [78.1, 445.0], [78.2, 445.0], [78.3, 446.0], [78.4, 446.0], [78.5, 446.0], [78.6, 446.0], [78.7, 446.0], [78.8, 446.0], [78.9, 447.0], [79.0, 447.0], [79.1, 447.0], [79.2, 447.0], [79.3, 447.0], [79.4, 447.0], [79.5, 447.0], [79.6, 447.0], [79.7, 448.0], [79.8, 448.0], [79.9, 448.0], [80.0, 448.0], [80.1, 448.0], [80.2, 449.0], [80.3, 449.0], [80.4, 449.0], [80.5, 449.0], [80.6, 450.0], [80.7, 450.0], [80.8, 450.0], [80.9, 450.0], [81.0, 450.0], [81.1, 450.0], [81.2, 450.0], [81.3, 450.0], [81.4, 450.0], [81.5, 451.0], [81.6, 451.0], [81.7, 451.0], [81.8, 451.0], [81.9, 452.0], [82.0, 452.0], [82.1, 452.0], [82.2, 452.0], [82.3, 452.0], [82.4, 452.0], [82.5, 453.0], [82.6, 453.0], [82.7, 453.0], [82.8, 453.0], [82.9, 453.0], [83.0, 453.0], [83.1, 453.0], [83.2, 454.0], [83.3, 454.0], [83.4, 454.0], [83.5, 456.0], [83.6, 456.0], [83.7, 456.0], [83.8, 458.0], [83.9, 458.0], [84.0, 458.0], [84.1, 458.0], [84.2, 458.0], [84.3, 458.0], [84.4, 458.0], [84.5, 458.0], [84.6, 458.0], [84.7, 459.0], [84.8, 459.0], [84.9, 459.0], [85.0, 459.0], [85.1, 460.0], [85.2, 461.0], [85.3, 461.0], [85.4, 461.0], [85.5, 461.0], [85.6, 461.0], [85.7, 461.0], [85.8, 462.0], [85.9, 462.0], [86.0, 462.0], [86.1, 462.0], [86.2, 462.0], [86.3, 462.0], [86.4, 464.0], [86.5, 464.0], [86.6, 464.0], [86.7, 464.0], [86.8, 464.0], [86.9, 464.0], [87.0, 465.0], [87.1, 465.0], [87.2, 465.0], [87.3, 465.0], [87.4, 465.0], [87.5, 465.0], [87.6, 466.0], [87.7, 467.0], [87.8, 467.0], [87.9, 467.0], [88.0, 467.0], [88.1, 467.0], [88.2, 467.0], [88.3, 468.0], [88.4, 468.0], [88.5, 468.0], [88.6, 469.0], [88.7, 470.0], [88.8, 470.0], [88.9, 470.0], [89.0, 470.0], [89.1, 470.0], [89.2, 471.0], [89.3, 472.0], [89.4, 472.0], [89.5, 472.0], [89.6, 473.0], [89.7, 473.0], [89.8, 473.0], [89.9, 474.0], [90.0, 475.0], [90.1, 475.0], [90.2, 477.0], [90.3, 477.0], [90.4, 477.0], [90.5, 478.0], [90.6, 479.0], [90.7, 479.0], [90.8, 479.0], [90.9, 479.0], [91.0, 479.0], [91.1, 480.0], [91.2, 481.0], [91.3, 481.0], [91.4, 481.0], [91.5, 481.0], [91.6, 482.0], [91.7, 482.0], [91.8, 482.0], [91.9, 482.0], [92.0, 482.0], [92.1, 483.0], [92.2, 487.0], [92.3, 487.0], [92.4, 487.0], [92.5, 487.0], [92.6, 488.0], [92.7, 488.0], [92.8, 488.0], [92.9, 488.0], [93.0, 488.0], [93.1, 489.0], [93.2, 490.0], [93.3, 490.0], [93.4, 491.0], [93.5, 492.0], [93.6, 492.0], [93.7, 492.0], [93.8, 492.0], [93.9, 492.0], [94.0, 492.0], [94.1, 493.0], [94.2, 494.0], [94.3, 494.0], [94.4, 496.0], [94.5, 497.0], [94.6, 497.0], [94.7, 503.0], [94.8, 506.0], [94.9, 506.0], [95.0, 507.0], [95.1, 512.0], [95.2, 512.0], [95.3, 514.0], [95.4, 515.0], [95.5, 515.0], [95.6, 516.0], [95.7, 522.0], [95.8, 530.0], [95.9, 530.0], [96.0, 531.0], [96.1, 532.0], [96.2, 532.0], [96.3, 536.0], [96.4, 538.0], [96.5, 538.0], [96.6, 538.0], [96.7, 539.0], [96.8, 539.0], [96.9, 539.0], [97.0, 541.0], [97.1, 542.0], [97.2, 542.0], [97.3, 545.0], [97.4, 547.0], [97.5, 547.0], [97.6, 547.0], [97.7, 549.0], [97.8, 549.0], [97.9, 551.0], [98.0, 552.0], [98.1, 552.0], [98.2, 559.0], [98.3, 566.0], [98.4, 566.0], [98.5, 568.0], [98.6, 575.0], [98.7, 581.0], [98.8, 581.0], [98.9, 583.0], [99.0, 586.0], [99.1, 586.0], [99.2, 591.0], [99.3, 604.0], [99.4, 604.0], [99.5, 647.0], [99.6, 654.0], [99.7, 654.0], [99.8, 687.0], [99.9, 792.0]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[0.0, 1607.0], [0.1, 1607.0], [0.2, 1607.0], [0.3, 1607.0], [0.4, 1607.0], [0.5, 1607.0], [0.6, 1607.0], [0.7, 1607.0], [0.8, 1607.0], [0.9, 1607.0], [1.0, 1607.0], [1.1, 1607.0], [1.2, 1607.0], [1.3, 1607.0], [1.4, 1607.0], [1.5, 1607.0], [1.6, 1607.0], [1.7, 1607.0], [1.8, 1607.0], [1.9, 1607.0], [2.0, 1607.0], [2.1, 1607.0], [2.2, 1607.0], [2.3, 1607.0], [2.4, 1607.0], [2.5, 1607.0], [2.6, 1607.0], [2.7, 1607.0], [2.8, 1607.0], [2.9, 1607.0], [3.0, 1607.0], [3.1, 1607.0], [3.2, 1607.0], [3.3, 1607.0], [3.4, 1607.0], [3.5, 1607.0], [3.6, 1607.0], [3.7, 1607.0], [3.8, 1607.0], [3.9, 1607.0], [4.0, 1607.0], [4.1, 1607.0], [4.2, 1607.0], [4.3, 1607.0], [4.4, 1607.0], [4.5, 1607.0], [4.6, 1607.0], [4.7, 1607.0], [4.8, 1607.0], [4.9, 1607.0], [5.0, 1607.0], [5.1, 1607.0], [5.2, 1607.0], [5.3, 1607.0], [5.4, 1607.0], [5.5, 1607.0], [5.6, 1607.0], [5.7, 1607.0], [5.8, 1607.0], [5.9, 1607.0], [6.0, 1607.0], [6.1, 1607.0], [6.2, 1607.0], [6.3, 1607.0], [6.4, 1607.0], [6.5, 1607.0], [6.6, 1607.0], [6.7, 1607.0], [6.8, 1607.0], [6.9, 1607.0], [7.0, 1607.0], [7.1, 1607.0], [7.2, 1607.0], [7.3, 1607.0], [7.4, 1607.0], [7.5, 1607.0], [7.6, 1607.0], [7.7, 1607.0], [7.8, 1607.0], [7.9, 1607.0], [8.0, 1607.0], [8.1, 1607.0], [8.2, 1607.0], [8.3, 1607.0], [8.4, 1607.0], [8.5, 1607.0], [8.6, 1607.0], [8.7, 1607.0], [8.8, 1607.0], [8.9, 1607.0], [9.0, 1607.0], [9.1, 1607.0], [9.2, 1607.0], [9.3, 1607.0], [9.4, 1607.0], [9.5, 1607.0], [9.6, 1607.0], [9.7, 1607.0], [9.8, 1607.0], [9.9, 1607.0], [10.0, 1607.0], [10.1, 1607.0], [10.2, 1607.0], [10.3, 1607.0], [10.4, 1607.0], [10.5, 1607.0], [10.6, 1607.0], [10.7, 1607.0], [10.8, 1607.0], [10.9, 1607.0], [11.0, 1607.0], [11.1, 1607.0], [11.2, 1607.0], [11.3, 1607.0], [11.4, 1607.0], [11.5, 1607.0], [11.6, 1607.0], [11.7, 1607.0], [11.8, 1607.0], [11.9, 1607.0], [12.0, 1607.0], [12.1, 1607.0], [12.2, 1607.0], [12.3, 1607.0], [12.4, 1607.0], [12.5, 1607.0], [12.6, 1607.0], [12.7, 1607.0], [12.8, 1607.0], [12.9, 1607.0], [13.0, 1607.0], [13.1, 1607.0], [13.2, 1607.0], [13.3, 1607.0], [13.4, 1607.0], [13.5, 1607.0], [13.6, 1607.0], [13.7, 1607.0], [13.8, 1607.0], [13.9, 1607.0], [14.0, 1607.0], [14.1, 1607.0], [14.2, 1607.0], [14.3, 1607.0], [14.4, 1607.0], [14.5, 1607.0], [14.6, 1607.0], [14.7, 1607.0], [14.8, 1607.0], [14.9, 1607.0], [15.0, 1607.0], [15.1, 1607.0], [15.2, 1607.0], [15.3, 1607.0], [15.4, 1607.0], [15.5, 1607.0], [15.6, 1607.0], [15.7, 1607.0], [15.8, 1607.0], [15.9, 1607.0], [16.0, 1607.0], [16.1, 1607.0], [16.2, 1607.0], [16.3, 1607.0], [16.4, 1607.0], [16.5, 1607.0], [16.6, 1607.0], [16.7, 1607.0], [16.8, 1607.0], [16.9, 1607.0], [17.0, 1607.0], [17.1, 1607.0], [17.2, 1607.0], [17.3, 1607.0], [17.4, 1607.0], [17.5, 1607.0], [17.6, 1607.0], [17.7, 1607.0], [17.8, 1607.0], [17.9, 1607.0], [18.0, 1607.0], [18.1, 1607.0], [18.2, 1607.0], [18.3, 1607.0], [18.4, 1607.0], [18.5, 1607.0], [18.6, 1607.0], [18.7, 1607.0], [18.8, 1607.0], [18.9, 1607.0], [19.0, 1607.0], [19.1, 1607.0], [19.2, 1607.0], [19.3, 1607.0], [19.4, 1607.0], [19.5, 1607.0], [19.6, 1607.0], [19.7, 1607.0], [19.8, 1607.0], [19.9, 1607.0], [20.0, 1607.0], [20.1, 1607.0], [20.2, 1607.0], [20.3, 1607.0], [20.4, 1607.0], [20.5, 1607.0], [20.6, 1607.0], [20.7, 1607.0], [20.8, 1607.0], [20.9, 1607.0], [21.0, 1607.0], [21.1, 1607.0], [21.2, 1607.0], [21.3, 1607.0], [21.4, 1607.0], [21.5, 1607.0], [21.6, 1607.0], [21.7, 1607.0], [21.8, 1607.0], [21.9, 1607.0], [22.0, 1607.0], [22.1, 1607.0], [22.2, 1607.0], [22.3, 1607.0], [22.4, 1607.0], [22.5, 1607.0], [22.6, 1607.0], [22.7, 1607.0], [22.8, 1607.0], [22.9, 1607.0], [23.0, 1607.0], [23.1, 1607.0], [23.2, 1607.0], [23.3, 1607.0], [23.4, 1607.0], [23.5, 1607.0], [23.6, 1607.0], [23.7, 1607.0], [23.8, 1607.0], [23.9, 1607.0], [24.0, 1607.0], [24.1, 1607.0], [24.2, 1607.0], [24.3, 1607.0], [24.4, 1607.0], [24.5, 1607.0], [24.6, 1607.0], [24.7, 1607.0], [24.8, 1607.0], [24.9, 1607.0], [25.0, 1607.0], [25.1, 1607.0], [25.2, 1607.0], [25.3, 1607.0], [25.4, 1607.0], [25.5, 1607.0], [25.6, 1607.0], [25.7, 1607.0], [25.8, 1607.0], [25.9, 1607.0], [26.0, 1607.0], [26.1, 1607.0], [26.2, 1607.0], [26.3, 1607.0], [26.4, 1607.0], [26.5, 1607.0], [26.6, 1607.0], [26.7, 1607.0], [26.8, 1607.0], [26.9, 1607.0], [27.0, 1607.0], [27.1, 1607.0], [27.2, 1607.0], [27.3, 1607.0], [27.4, 1607.0], [27.5, 1607.0], [27.6, 1607.0], [27.7, 1607.0], [27.8, 1607.0], [27.9, 1607.0], [28.0, 1607.0], [28.1, 1607.0], [28.2, 1607.0], [28.3, 1607.0], [28.4, 1607.0], [28.5, 1607.0], [28.6, 1607.0], [28.7, 1607.0], [28.8, 1607.0], [28.9, 1607.0], [29.0, 1607.0], [29.1, 1607.0], [29.2, 1607.0], [29.3, 1607.0], [29.4, 1607.0], [29.5, 1607.0], [29.6, 1607.0], [29.7, 1607.0], [29.8, 1607.0], [29.9, 1607.0], [30.0, 1607.0], [30.1, 1607.0], [30.2, 1607.0], [30.3, 1607.0], [30.4, 1607.0], [30.5, 1607.0], [30.6, 1607.0], [30.7, 1607.0], [30.8, 1607.0], [30.9, 1607.0], [31.0, 1607.0], [31.1, 1607.0], [31.2, 1607.0], [31.3, 1607.0], [31.4, 1607.0], [31.5, 1607.0], [31.6, 1607.0], [31.7, 1607.0], [31.8, 1607.0], [31.9, 1607.0], [32.0, 1607.0], [32.1, 1607.0], [32.2, 1607.0], [32.3, 1607.0], [32.4, 1607.0], [32.5, 1607.0], [32.6, 1607.0], [32.7, 1607.0], [32.8, 1607.0], [32.9, 1607.0], [33.0, 1607.0], [33.1, 1607.0], [33.2, 1607.0], [33.3, 1607.0], [33.4, 1607.0], [33.5, 1607.0], [33.6, 1607.0], [33.7, 1607.0], [33.8, 1607.0], [33.9, 1607.0], [34.0, 1607.0], [34.1, 1607.0], [34.2, 1607.0], [34.3, 1607.0], [34.4, 1607.0], [34.5, 1607.0], [34.6, 1607.0], [34.7, 1607.0], [34.8, 1607.0], [34.9, 1607.0], [35.0, 1607.0], [35.1, 1607.0], [35.2, 1607.0], [35.3, 1607.0], [35.4, 1607.0], [35.5, 1607.0], [35.6, 1607.0], [35.7, 1607.0], [35.8, 1607.0], [35.9, 1607.0], [36.0, 1607.0], [36.1, 1607.0], [36.2, 1607.0], [36.3, 1607.0], [36.4, 1607.0], [36.5, 1607.0], [36.6, 1607.0], [36.7, 1607.0], [36.8, 1607.0], [36.9, 1607.0], [37.0, 1607.0], [37.1, 1607.0], [37.2, 1607.0], [37.3, 1607.0], [37.4, 1607.0], [37.5, 1607.0], [37.6, 1607.0], [37.7, 1607.0], [37.8, 1607.0], [37.9, 1607.0], [38.0, 1607.0], [38.1, 1607.0], [38.2, 1607.0], [38.3, 1607.0], [38.4, 1607.0], [38.5, 1607.0], [38.6, 1607.0], [38.7, 1607.0], [38.8, 1607.0], [38.9, 1607.0], [39.0, 1607.0], [39.1, 1607.0], [39.2, 1607.0], [39.3, 1607.0], [39.4, 1607.0], [39.5, 1607.0], [39.6, 1607.0], [39.7, 1607.0], [39.8, 1607.0], [39.9, 1607.0], [40.0, 1607.0], [40.1, 1607.0], [40.2, 1607.0], [40.3, 1607.0], [40.4, 1607.0], [40.5, 1607.0], [40.6, 1607.0], [40.7, 1607.0], [40.8, 1607.0], [40.9, 1607.0], [41.0, 1607.0], [41.1, 1607.0], [41.2, 1607.0], [41.3, 1607.0], [41.4, 1607.0], [41.5, 1607.0], [41.6, 1607.0], [41.7, 1607.0], [41.8, 1607.0], [41.9, 1607.0], [42.0, 1607.0], [42.1, 1607.0], [42.2, 1607.0], [42.3, 1607.0], [42.4, 1607.0], [42.5, 1607.0], [42.6, 1607.0], [42.7, 1607.0], [42.8, 1607.0], [42.9, 1607.0], [43.0, 1607.0], [43.1, 1607.0], [43.2, 1607.0], [43.3, 1607.0], [43.4, 1607.0], [43.5, 1607.0], [43.6, 1607.0], [43.7, 1607.0], [43.8, 1607.0], [43.9, 1607.0], [44.0, 1607.0], [44.1, 1607.0], [44.2, 1607.0], [44.3, 1607.0], [44.4, 1607.0], [44.5, 1607.0], [44.6, 1607.0], [44.7, 1607.0], [44.8, 1607.0], [44.9, 1607.0], [45.0, 1607.0], [45.1, 1607.0], [45.2, 1607.0], [45.3, 1607.0], [45.4, 1607.0], [45.5, 1607.0], [45.6, 1607.0], [45.7, 1607.0], [45.8, 1607.0], [45.9, 1607.0], [46.0, 1607.0], [46.1, 1607.0], [46.2, 1607.0], [46.3, 1607.0], [46.4, 1607.0], [46.5, 1607.0], [46.6, 1607.0], [46.7, 1607.0], [46.8, 1607.0], [46.9, 1607.0], [47.0, 1607.0], [47.1, 1607.0], [47.2, 1607.0], [47.3, 1607.0], [47.4, 1607.0], [47.5, 1607.0], [47.6, 1607.0], [47.7, 1607.0], [47.8, 1607.0], [47.9, 1607.0], [48.0, 1607.0], [48.1, 1607.0], [48.2, 1607.0], [48.3, 1607.0], [48.4, 1607.0], [48.5, 1607.0], [48.6, 1607.0], [48.7, 1607.0], [48.8, 1607.0], [48.9, 1607.0], [49.0, 1607.0], [49.1, 1607.0], [49.2, 1607.0], [49.3, 1607.0], [49.4, 1607.0], [49.5, 1607.0], [49.6, 1607.0], [49.7, 1607.0], [49.8, 1607.0], [49.9, 1607.0], [50.0, 1607.0], [50.1, 1607.0], [50.2, 1607.0], [50.3, 1607.0], [50.4, 1607.0], [50.5, 1607.0], [50.6, 1607.0], [50.7, 1607.0], [50.8, 1607.0], [50.9, 1607.0], [51.0, 1607.0], [51.1, 1607.0], [51.2, 1607.0], [51.3, 1607.0], [51.4, 1607.0], [51.5, 1607.0], [51.6, 1607.0], [51.7, 1607.0], [51.8, 1607.0], [51.9, 1607.0], [52.0, 1607.0], [52.1, 1607.0], [52.2, 1607.0], [52.3, 1607.0], [52.4, 1607.0], [52.5, 1607.0], [52.6, 1607.0], [52.7, 1607.0], [52.8, 1607.0], [52.9, 1607.0], [53.0, 1607.0], [53.1, 1607.0], [53.2, 1607.0], [53.3, 1607.0], [53.4, 1607.0], [53.5, 1607.0], [53.6, 1607.0], [53.7, 1607.0], [53.8, 1607.0], [53.9, 1607.0], [54.0, 1607.0], [54.1, 1607.0], [54.2, 1607.0], [54.3, 1607.0], [54.4, 1607.0], [54.5, 1607.0], [54.6, 1607.0], [54.7, 1607.0], [54.8, 1607.0], [54.9, 1607.0], [55.0, 1607.0], [55.1, 1607.0], [55.2, 1607.0], [55.3, 1607.0], [55.4, 1607.0], [55.5, 1607.0], [55.6, 1607.0], [55.7, 1607.0], [55.8, 1607.0], [55.9, 1607.0], [56.0, 1607.0], [56.1, 1607.0], [56.2, 1607.0], [56.3, 1607.0], [56.4, 1607.0], [56.5, 1607.0], [56.6, 1607.0], [56.7, 1607.0], [56.8, 1607.0], [56.9, 1607.0], [57.0, 1607.0], [57.1, 1607.0], [57.2, 1607.0], [57.3, 1607.0], [57.4, 1607.0], [57.5, 1607.0], [57.6, 1607.0], [57.7, 1607.0], [57.8, 1607.0], [57.9, 1607.0], [58.0, 1607.0], [58.1, 1607.0], [58.2, 1607.0], [58.3, 1607.0], [58.4, 1607.0], [58.5, 1607.0], [58.6, 1607.0], [58.7, 1607.0], [58.8, 1607.0], [58.9, 1607.0], [59.0, 1607.0], [59.1, 1607.0], [59.2, 1607.0], [59.3, 1607.0], [59.4, 1607.0], [59.5, 1607.0], [59.6, 1607.0], [59.7, 1607.0], [59.8, 1607.0], [59.9, 1607.0], [60.0, 1607.0], [60.1, 1607.0], [60.2, 1607.0], [60.3, 1607.0], [60.4, 1607.0], [60.5, 1607.0], [60.6, 1607.0], [60.7, 1607.0], [60.8, 1607.0], [60.9, 1607.0], [61.0, 1607.0], [61.1, 1607.0], [61.2, 1607.0], [61.3, 1607.0], [61.4, 1607.0], [61.5, 1607.0], [61.6, 1607.0], [61.7, 1607.0], [61.8, 1607.0], [61.9, 1607.0], [62.0, 1607.0], [62.1, 1607.0], [62.2, 1607.0], [62.3, 1607.0], [62.4, 1607.0], [62.5, 1607.0], [62.6, 1607.0], [62.7, 1607.0], [62.8, 1607.0], [62.9, 1607.0], [63.0, 1607.0], [63.1, 1607.0], [63.2, 1607.0], [63.3, 1607.0], [63.4, 1607.0], [63.5, 1607.0], [63.6, 1607.0], [63.7, 1607.0], [63.8, 1607.0], [63.9, 1607.0], [64.0, 1607.0], [64.1, 1607.0], [64.2, 1607.0], [64.3, 1607.0], [64.4, 1607.0], [64.5, 1607.0], [64.6, 1607.0], [64.7, 1607.0], [64.8, 1607.0], [64.9, 1607.0], [65.0, 1607.0], [65.1, 1607.0], [65.2, 1607.0], [65.3, 1607.0], [65.4, 1607.0], [65.5, 1607.0], [65.6, 1607.0], [65.7, 1607.0], [65.8, 1607.0], [65.9, 1607.0], [66.0, 1607.0], [66.1, 1607.0], [66.2, 1607.0], [66.3, 1607.0], [66.4, 1607.0], [66.5, 1607.0], [66.6, 1607.0], [66.7, 1607.0], [66.8, 1607.0], [66.9, 1607.0], [67.0, 1607.0], [67.1, 1607.0], [67.2, 1607.0], [67.3, 1607.0], [67.4, 1607.0], [67.5, 1607.0], [67.6, 1607.0], [67.7, 1607.0], [67.8, 1607.0], [67.9, 1607.0], [68.0, 1607.0], [68.1, 1607.0], [68.2, 1607.0], [68.3, 1607.0], [68.4, 1607.0], [68.5, 1607.0], [68.6, 1607.0], [68.7, 1607.0], [68.8, 1607.0], [68.9, 1607.0], [69.0, 1607.0], [69.1, 1607.0], [69.2, 1607.0], [69.3, 1607.0], [69.4, 1607.0], [69.5, 1607.0], [69.6, 1607.0], [69.7, 1607.0], [69.8, 1607.0], [69.9, 1607.0], [70.0, 1607.0], [70.1, 1607.0], [70.2, 1607.0], [70.3, 1607.0], [70.4, 1607.0], [70.5, 1607.0], [70.6, 1607.0], [70.7, 1607.0], [70.8, 1607.0], [70.9, 1607.0], [71.0, 1607.0], [71.1, 1607.0], [71.2, 1607.0], [71.3, 1607.0], [71.4, 1607.0], [71.5, 1607.0], [71.6, 1607.0], [71.7, 1607.0], [71.8, 1607.0], [71.9, 1607.0], [72.0, 1607.0], [72.1, 1607.0], [72.2, 1607.0], [72.3, 1607.0], [72.4, 1607.0], [72.5, 1607.0], [72.6, 1607.0], [72.7, 1607.0], [72.8, 1607.0], [72.9, 1607.0], [73.0, 1607.0], [73.1, 1607.0], [73.2, 1607.0], [73.3, 1607.0], [73.4, 1607.0], [73.5, 1607.0], [73.6, 1607.0], [73.7, 1607.0], [73.8, 1607.0], [73.9, 1607.0], [74.0, 1607.0], [74.1, 1607.0], [74.2, 1607.0], [74.3, 1607.0], [74.4, 1607.0], [74.5, 1607.0], [74.6, 1607.0], [74.7, 1607.0], [74.8, 1607.0], [74.9, 1607.0], [75.0, 1607.0], [75.1, 1607.0], [75.2, 1607.0], [75.3, 1607.0], [75.4, 1607.0], [75.5, 1607.0], [75.6, 1607.0], [75.7, 1607.0], [75.8, 1607.0], [75.9, 1607.0], [76.0, 1607.0], [76.1, 1607.0], [76.2, 1607.0], [76.3, 1607.0], [76.4, 1607.0], [76.5, 1607.0], [76.6, 1607.0], [76.7, 1607.0], [76.8, 1607.0], [76.9, 1607.0], [77.0, 1607.0], [77.1, 1607.0], [77.2, 1607.0], [77.3, 1607.0], [77.4, 1607.0], [77.5, 1607.0], [77.6, 1607.0], [77.7, 1607.0], [77.8, 1607.0], [77.9, 1607.0], [78.0, 1607.0], [78.1, 1607.0], [78.2, 1607.0], [78.3, 1607.0], [78.4, 1607.0], [78.5, 1607.0], [78.6, 1607.0], [78.7, 1607.0], [78.8, 1607.0], [78.9, 1607.0], [79.0, 1607.0], [79.1, 1607.0], [79.2, 1607.0], [79.3, 1607.0], [79.4, 1607.0], [79.5, 1607.0], [79.6, 1607.0], [79.7, 1607.0], [79.8, 1607.0], [79.9, 1607.0], [80.0, 1607.0], [80.1, 1607.0], [80.2, 1607.0], [80.3, 1607.0], [80.4, 1607.0], [80.5, 1607.0], [80.6, 1607.0], [80.7, 1607.0], [80.8, 1607.0], [80.9, 1607.0], [81.0, 1607.0], [81.1, 1607.0], [81.2, 1607.0], [81.3, 1607.0], [81.4, 1607.0], [81.5, 1607.0], [81.6, 1607.0], [81.7, 1607.0], [81.8, 1607.0], [81.9, 1607.0], [82.0, 1607.0], [82.1, 1607.0], [82.2, 1607.0], [82.3, 1607.0], [82.4, 1607.0], [82.5, 1607.0], [82.6, 1607.0], [82.7, 1607.0], [82.8, 1607.0], [82.9, 1607.0], [83.0, 1607.0], [83.1, 1607.0], [83.2, 1607.0], [83.3, 1607.0], [83.4, 1607.0], [83.5, 1607.0], [83.6, 1607.0], [83.7, 1607.0], [83.8, 1607.0], [83.9, 1607.0], [84.0, 1607.0], [84.1, 1607.0], [84.2, 1607.0], [84.3, 1607.0], [84.4, 1607.0], [84.5, 1607.0], [84.6, 1607.0], [84.7, 1607.0], [84.8, 1607.0], [84.9, 1607.0], [85.0, 1607.0], [85.1, 1607.0], [85.2, 1607.0], [85.3, 1607.0], [85.4, 1607.0], [85.5, 1607.0], [85.6, 1607.0], [85.7, 1607.0], [85.8, 1607.0], [85.9, 1607.0], [86.0, 1607.0], [86.1, 1607.0], [86.2, 1607.0], [86.3, 1607.0], [86.4, 1607.0], [86.5, 1607.0], [86.6, 1607.0], [86.7, 1607.0], [86.8, 1607.0], [86.9, 1607.0], [87.0, 1607.0], [87.1, 1607.0], [87.2, 1607.0], [87.3, 1607.0], [87.4, 1607.0], [87.5, 1607.0], [87.6, 1607.0], [87.7, 1607.0], [87.8, 1607.0], [87.9, 1607.0], [88.0, 1607.0], [88.1, 1607.0], [88.2, 1607.0], [88.3, 1607.0], [88.4, 1607.0], [88.5, 1607.0], [88.6, 1607.0], [88.7, 1607.0], [88.8, 1607.0], [88.9, 1607.0], [89.0, 1607.0], [89.1, 1607.0], [89.2, 1607.0], [89.3, 1607.0], [89.4, 1607.0], [89.5, 1607.0], [89.6, 1607.0], [89.7, 1607.0], [89.8, 1607.0], [89.9, 1607.0], [90.0, 1607.0], [90.1, 1607.0], [90.2, 1607.0], [90.3, 1607.0], [90.4, 1607.0], [90.5, 1607.0], [90.6, 1607.0], [90.7, 1607.0], [90.8, 1607.0], [90.9, 1607.0], [91.0, 1607.0], [91.1, 1607.0], [91.2, 1607.0], [91.3, 1607.0], [91.4, 1607.0], [91.5, 1607.0], [91.6, 1607.0], [91.7, 1607.0], [91.8, 1607.0], [91.9, 1607.0], [92.0, 1607.0], [92.1, 1607.0], [92.2, 1607.0], [92.3, 1607.0], [92.4, 1607.0], [92.5, 1607.0], [92.6, 1607.0], [92.7, 1607.0], [92.8, 1607.0], [92.9, 1607.0], [93.0, 1607.0], [93.1, 1607.0], [93.2, 1607.0], [93.3, 1607.0], [93.4, 1607.0], [93.5, 1607.0], [93.6, 1607.0], [93.7, 1607.0], [93.8, 1607.0], [93.9, 1607.0], [94.0, 1607.0], [94.1, 1607.0], [94.2, 1607.0], [94.3, 1607.0], [94.4, 1607.0], [94.5, 1607.0], [94.6, 1607.0], [94.7, 1607.0], [94.8, 1607.0], [94.9, 1607.0], [95.0, 1607.0], [95.1, 1607.0], [95.2, 1607.0], [95.3, 1607.0], [95.4, 1607.0], [95.5, 1607.0], [95.6, 1607.0], [95.7, 1607.0], [95.8, 1607.0], [95.9, 1607.0], [96.0, 1607.0], [96.1, 1607.0], [96.2, 1607.0], [96.3, 1607.0], [96.4, 1607.0], [96.5, 1607.0], [96.6, 1607.0], [96.7, 1607.0], [96.8, 1607.0], [96.9, 1607.0], [97.0, 1607.0], [97.1, 1607.0], [97.2, 1607.0], [97.3, 1607.0], [97.4, 1607.0], [97.5, 1607.0], [97.6, 1607.0], [97.7, 1607.0], [97.8, 1607.0], [97.9, 1607.0], [98.0, 1607.0], [98.1, 1607.0], [98.2, 1607.0], [98.3, 1607.0], [98.4, 1607.0], [98.5, 1607.0], [98.6, 1607.0], [98.7, 1607.0], [98.8, 1607.0], [98.9, 1607.0], [99.0, 1607.0], [99.1, 1607.0], [99.2, 1607.0], [99.3, 1607.0], [99.4, 1607.0], [99.5, 1607.0], [99.6, 1607.0], [99.7, 1607.0], [99.8, 1607.0], [99.9, 1607.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}, {"data": [[0.0, 851.0], [0.1, 851.0], [0.2, 851.0], [0.3, 851.0], [0.4, 851.0], [0.5, 851.0], [0.6, 869.0], [0.7, 869.0], [0.8, 869.0], [0.9, 869.0], [1.0, 869.0], [1.1, 869.0], [1.2, 875.0], [1.3, 875.0], [1.4, 875.0], [1.5, 875.0], [1.6, 875.0], [1.7, 875.0], [1.8, 875.0], [1.9, 875.0], [2.0, 875.0], [2.1, 875.0], [2.2, 875.0], [2.3, 882.0], [2.4, 882.0], [2.5, 882.0], [2.6, 882.0], [2.7, 882.0], [2.8, 882.0], [2.9, 886.0], [3.0, 886.0], [3.1, 886.0], [3.2, 886.0], [3.3, 886.0], [3.4, 903.0], [3.5, 903.0], [3.6, 903.0], [3.7, 903.0], [3.8, 903.0], [3.9, 903.0], [4.0, 906.0], [4.1, 906.0], [4.2, 906.0], [4.3, 906.0], [4.4, 906.0], [4.5, 906.0], [4.6, 906.0], [4.7, 906.0], [4.8, 906.0], [4.9, 906.0], [5.0, 906.0], [5.1, 909.0], [5.2, 909.0], [5.3, 909.0], [5.4, 909.0], [5.5, 909.0], [5.6, 909.0], [5.7, 917.0], [5.8, 917.0], [5.9, 917.0], [6.0, 917.0], [6.1, 917.0], [6.2, 920.0], [6.3, 920.0], [6.4, 920.0], [6.5, 920.0], [6.6, 920.0], [6.7, 920.0], [6.8, 922.0], [6.9, 922.0], [7.0, 922.0], [7.1, 922.0], [7.2, 922.0], [7.3, 922.0], [7.4, 922.0], [7.5, 922.0], [7.6, 922.0], [7.7, 922.0], [7.8, 922.0], [7.9, 930.0], [8.0, 930.0], [8.1, 930.0], [8.2, 930.0], [8.3, 930.0], [8.4, 930.0], [8.5, 930.0], [8.6, 930.0], [8.7, 930.0], [8.8, 930.0], [8.9, 930.0], [9.0, 933.0], [9.1, 933.0], [9.2, 933.0], [9.3, 933.0], [9.4, 933.0], [9.5, 933.0], [9.6, 938.0], [9.7, 938.0], [9.8, 938.0], [9.9, 938.0], [10.0, 938.0], [10.1, 938.0], [10.2, 939.0], [10.3, 939.0], [10.4, 939.0], [10.5, 939.0], [10.6, 939.0], [10.7, 941.0], [10.8, 941.0], [10.9, 941.0], [11.0, 941.0], [11.1, 941.0], [11.2, 941.0], [11.3, 946.0], [11.4, 946.0], [11.5, 946.0], [11.6, 946.0], [11.7, 946.0], [11.8, 946.0], [11.9, 946.0], [12.0, 946.0], [12.1, 946.0], [12.2, 946.0], [12.3, 946.0], [12.4, 951.0], [12.5, 951.0], [12.6, 951.0], [12.7, 951.0], [12.8, 951.0], [12.9, 951.0], [13.0, 954.0], [13.1, 954.0], [13.2, 954.0], [13.3, 954.0], [13.4, 954.0], [13.5, 963.0], [13.6, 963.0], [13.7, 963.0], [13.8, 963.0], [13.9, 963.0], [14.0, 963.0], [14.1, 964.0], [14.2, 964.0], [14.3, 964.0], [14.4, 964.0], [14.5, 964.0], [14.6, 964.0], [14.7, 965.0], [14.8, 965.0], [14.9, 965.0], [15.0, 965.0], [15.1, 965.0], [15.2, 965.0], [15.3, 965.0], [15.4, 965.0], [15.5, 965.0], [15.6, 965.0], [15.7, 965.0], [15.8, 966.0], [15.9, 966.0], [16.0, 966.0], [16.1, 966.0], [16.2, 966.0], [16.3, 969.0], [16.4, 969.0], [16.5, 969.0], [16.6, 969.0], [16.7, 969.0], [16.8, 969.0], [16.9, 969.0], [17.0, 969.0], [17.1, 969.0], [17.2, 969.0], [17.3, 969.0], [17.4, 969.0], [17.5, 971.0], [17.6, 971.0], [17.7, 971.0], [17.8, 971.0], [17.9, 971.0], [18.0, 971.0], [18.1, 971.0], [18.2, 971.0], [18.3, 971.0], [18.4, 971.0], [18.5, 971.0], [18.6, 973.0], [18.7, 973.0], [18.8, 973.0], [18.9, 973.0], [19.0, 973.0], [19.1, 973.0], [19.2, 977.0], [19.3, 977.0], [19.4, 977.0], [19.5, 977.0], [19.6, 977.0], [19.7, 978.0], [19.8, 978.0], [19.9, 978.0], [20.0, 978.0], [20.1, 978.0], [20.2, 978.0], [20.3, 978.0], [20.4, 978.0], [20.5, 978.0], [20.6, 978.0], [20.7, 978.0], [20.8, 981.0], [20.9, 981.0], [21.0, 981.0], [21.1, 981.0], [21.2, 981.0], [21.3, 981.0], [21.4, 985.0], [21.5, 985.0], [21.6, 985.0], [21.7, 985.0], [21.8, 985.0], [21.9, 985.0], [22.0, 987.0], [22.1, 987.0], [22.2, 987.0], [22.3, 987.0], [22.4, 987.0], [22.5, 989.0], [22.6, 989.0], [22.7, 989.0], [22.8, 989.0], [22.9, 989.0], [23.0, 989.0], [23.1, 991.0], [23.2, 991.0], [23.3, 991.0], [23.4, 991.0], [23.5, 991.0], [23.6, 991.0], [23.7, 991.0], [23.8, 991.0], [23.9, 991.0], [24.0, 991.0], [24.1, 991.0], [24.2, 997.0], [24.3, 997.0], [24.4, 997.0], [24.5, 997.0], [24.6, 997.0], [24.7, 997.0], [24.8, 997.0], [24.9, 997.0], [25.0, 997.0], [25.1, 997.0], [25.2, 997.0], [25.3, 1000.0], [25.4, 1000.0], [25.5, 1000.0], [25.6, 1000.0], [25.7, 1000.0], [25.8, 1000.0], [25.9, 1002.0], [26.0, 1002.0], [26.1, 1002.0], [26.2, 1002.0], [26.3, 1002.0], [26.4, 1002.0], [26.5, 1003.0], [26.6, 1003.0], [26.7, 1003.0], [26.8, 1003.0], [26.9, 1003.0], [27.0, 1004.0], [27.1, 1004.0], [27.2, 1004.0], [27.3, 1004.0], [27.4, 1004.0], [27.5, 1004.0], [27.6, 1008.0], [27.7, 1008.0], [27.8, 1008.0], [27.9, 1008.0], [28.0, 1008.0], [28.1, 1009.0], [28.2, 1009.0], [28.3, 1009.0], [28.4, 1009.0], [28.5, 1009.0], [28.6, 1009.0], [28.7, 1016.0], [28.8, 1016.0], [28.9, 1016.0], [29.0, 1016.0], [29.1, 1016.0], [29.2, 1016.0], [29.3, 1017.0], [29.4, 1017.0], [29.5, 1017.0], [29.6, 1017.0], [29.7, 1017.0], [29.8, 1017.0], [29.9, 1017.0], [30.0, 1017.0], [30.1, 1017.0], [30.2, 1017.0], [30.3, 1017.0], [30.4, 1021.0], [30.5, 1021.0], [30.6, 1021.0], [30.7, 1021.0], [30.8, 1021.0], [30.9, 1024.0], [31.0, 1024.0], [31.1, 1024.0], [31.2, 1024.0], [31.3, 1024.0], [31.4, 1024.0], [31.5, 1025.0], [31.6, 1025.0], [31.7, 1025.0], [31.8, 1025.0], [31.9, 1025.0], [32.0, 1025.0], [32.1, 1026.0], [32.2, 1026.0], [32.3, 1026.0], [32.4, 1026.0], [32.5, 1026.0], [32.6, 1031.0], [32.7, 1031.0], [32.8, 1031.0], [32.9, 1031.0], [33.0, 1031.0], [33.1, 1031.0], [33.2, 1031.0], [33.3, 1031.0], [33.4, 1031.0], [33.5, 1031.0], [33.6, 1031.0], [33.7, 1031.0], [33.8, 1033.0], [33.9, 1033.0], [34.0, 1033.0], [34.1, 1033.0], [34.2, 1033.0], [34.3, 1036.0], [34.4, 1036.0], [34.5, 1036.0], [34.6, 1036.0], [34.7, 1036.0], [34.8, 1036.0], [34.9, 1040.0], [35.0, 1040.0], [35.1, 1040.0], [35.2, 1040.0], [35.3, 1040.0], [35.4, 1041.0], [35.5, 1041.0], [35.6, 1041.0], [35.7, 1041.0], [35.8, 1041.0], [35.9, 1041.0], [36.0, 1044.0], [36.1, 1044.0], [36.2, 1044.0], [36.3, 1044.0], [36.4, 1044.0], [36.5, 1044.0], [36.6, 1044.0], [36.7, 1044.0], [36.8, 1044.0], [36.9, 1044.0], [37.0, 1044.0], [37.1, 1048.0], [37.2, 1048.0], [37.3, 1048.0], [37.4, 1048.0], [37.5, 1048.0], [37.6, 1048.0], [37.7, 1050.0], [37.8, 1050.0], [37.9, 1050.0], [38.0, 1050.0], [38.1, 1050.0], [38.2, 1050.0], [38.3, 1051.0], [38.4, 1051.0], [38.5, 1051.0], [38.6, 1051.0], [38.7, 1051.0], [38.8, 1053.0], [38.9, 1053.0], [39.0, 1053.0], [39.1, 1053.0], [39.2, 1053.0], [39.3, 1053.0], [39.4, 1054.0], [39.5, 1054.0], [39.6, 1054.0], [39.7, 1054.0], [39.8, 1054.0], [39.9, 1055.0], [40.0, 1055.0], [40.1, 1055.0], [40.2, 1055.0], [40.3, 1055.0], [40.4, 1055.0], [40.5, 1061.0], [40.6, 1061.0], [40.7, 1061.0], [40.8, 1061.0], [40.9, 1061.0], [41.0, 1061.0], [41.1, 1064.0], [41.2, 1064.0], [41.3, 1064.0], [41.4, 1064.0], [41.5, 1064.0], [41.6, 1064.0], [41.7, 1064.0], [41.8, 1064.0], [41.9, 1064.0], [42.0, 1064.0], [42.1, 1064.0], [42.2, 1069.0], [42.3, 1069.0], [42.4, 1069.0], [42.5, 1069.0], [42.6, 1069.0], [42.7, 1071.0], [42.8, 1071.0], [42.9, 1071.0], [43.0, 1071.0], [43.1, 1071.0], [43.2, 1071.0], [43.3, 1073.0], [43.4, 1073.0], [43.5, 1073.0], [43.6, 1073.0], [43.7, 1073.0], [43.8, 1073.0], [43.9, 1073.0], [44.0, 1073.0], [44.1, 1073.0], [44.2, 1073.0], [44.3, 1073.0], [44.4, 1078.0], [44.5, 1078.0], [44.6, 1078.0], [44.7, 1078.0], [44.8, 1078.0], [44.9, 1078.0], [45.0, 1085.0], [45.1, 1085.0], [45.2, 1085.0], [45.3, 1085.0], [45.4, 1085.0], [45.5, 1085.0], [45.6, 1091.0], [45.7, 1091.0], [45.8, 1091.0], [45.9, 1091.0], [46.0, 1091.0], [46.1, 1095.0], [46.2, 1095.0], [46.3, 1095.0], [46.4, 1095.0], [46.5, 1095.0], [46.6, 1095.0], [46.7, 1095.0], [46.8, 1095.0], [46.9, 1095.0], [47.0, 1095.0], [47.1, 1095.0], [47.2, 1098.0], [47.3, 1098.0], [47.4, 1098.0], [47.5, 1098.0], [47.6, 1098.0], [47.7, 1098.0], [47.8, 1099.0], [47.9, 1099.0], [48.0, 1099.0], [48.1, 1099.0], [48.2, 1099.0], [48.3, 1099.0], [48.4, 1100.0], [48.5, 1100.0], [48.6, 1100.0], [48.7, 1100.0], [48.8, 1100.0], [48.9, 1101.0], [49.0, 1101.0], [49.1, 1101.0], [49.2, 1101.0], [49.3, 1101.0], [49.4, 1101.0], [49.5, 1110.0], [49.6, 1110.0], [49.7, 1110.0], [49.8, 1110.0], [49.9, 1110.0], [50.0, 1111.0], [50.1, 1111.0], [50.2, 1111.0], [50.3, 1111.0], [50.4, 1111.0], [50.5, 1111.0], [50.6, 1112.0], [50.7, 1112.0], [50.8, 1112.0], [50.9, 1112.0], [51.0, 1112.0], [51.1, 1112.0], [51.2, 1121.0], [51.3, 1121.0], [51.4, 1121.0], [51.5, 1121.0], [51.6, 1121.0], [51.7, 1124.0], [51.8, 1124.0], [51.9, 1124.0], [52.0, 1124.0], [52.1, 1124.0], [52.2, 1124.0], [52.3, 1129.0], [52.4, 1129.0], [52.5, 1129.0], [52.6, 1129.0], [52.7, 1129.0], [52.8, 1129.0], [52.9, 1130.0], [53.0, 1130.0], [53.1, 1130.0], [53.2, 1130.0], [53.3, 1130.0], [53.4, 1131.0], [53.5, 1131.0], [53.6, 1131.0], [53.7, 1131.0], [53.8, 1131.0], [53.9, 1131.0], [54.0, 1133.0], [54.1, 1133.0], [54.2, 1133.0], [54.3, 1133.0], [54.4, 1133.0], [54.5, 1134.0], [54.6, 1134.0], [54.7, 1134.0], [54.8, 1134.0], [54.9, 1134.0], [55.0, 1134.0], [55.1, 1138.0], [55.2, 1138.0], [55.3, 1138.0], [55.4, 1138.0], [55.5, 1138.0], [55.6, 1138.0], [55.7, 1138.0], [55.8, 1138.0], [55.9, 1138.0], [56.0, 1138.0], [56.1, 1138.0], [56.2, 1140.0], [56.3, 1140.0], [56.4, 1140.0], [56.5, 1140.0], [56.6, 1140.0], [56.7, 1140.0], [56.8, 1144.0], [56.9, 1144.0], [57.0, 1144.0], [57.1, 1144.0], [57.2, 1144.0], [57.3, 1144.0], [57.4, 1145.0], [57.5, 1145.0], [57.6, 1145.0], [57.7, 1145.0], [57.8, 1145.0], [57.9, 1148.0], [58.0, 1148.0], [58.1, 1148.0], [58.2, 1148.0], [58.3, 1148.0], [58.4, 1148.0], [58.5, 1148.0], [58.6, 1148.0], [58.7, 1148.0], [58.8, 1148.0], [58.9, 1148.0], [59.0, 1151.0], [59.1, 1151.0], [59.2, 1151.0], [59.3, 1151.0], [59.4, 1151.0], [59.5, 1151.0], [59.6, 1152.0], [59.7, 1152.0], [59.8, 1152.0], [59.9, 1152.0], [60.0, 1152.0], [60.1, 1152.0], [60.2, 1158.0], [60.3, 1158.0], [60.4, 1158.0], [60.5, 1158.0], [60.6, 1158.0], [60.7, 1161.0], [60.8, 1161.0], [60.9, 1161.0], [61.0, 1161.0], [61.1, 1161.0], [61.2, 1161.0], [61.3, 1167.0], [61.4, 1167.0], [61.5, 1167.0], [61.6, 1167.0], [61.7, 1167.0], [61.8, 1169.0], [61.9, 1169.0], [62.0, 1169.0], [62.1, 1169.0], [62.2, 1169.0], [62.3, 1169.0], [62.4, 1172.0], [62.5, 1172.0], [62.6, 1172.0], [62.7, 1172.0], [62.8, 1172.0], [62.9, 1172.0], [63.0, 1179.0], [63.1, 1179.0], [63.2, 1179.0], [63.3, 1179.0], [63.4, 1179.0], [63.5, 1181.0], [63.6, 1181.0], [63.7, 1181.0], [63.8, 1181.0], [63.9, 1181.0], [64.0, 1181.0], [64.1, 1185.0], [64.2, 1185.0], [64.3, 1185.0], [64.4, 1185.0], [64.5, 1185.0], [64.6, 1185.0], [64.7, 1186.0], [64.8, 1186.0], [64.9, 1186.0], [65.0, 1186.0], [65.1, 1186.0], [65.2, 1187.0], [65.3, 1187.0], [65.4, 1187.0], [65.5, 1187.0], [65.6, 1187.0], [65.7, 1187.0], [65.8, 1192.0], [65.9, 1192.0], [66.0, 1192.0], [66.1, 1192.0], [66.2, 1192.0], [66.3, 1193.0], [66.4, 1193.0], [66.5, 1193.0], [66.6, 1193.0], [66.7, 1193.0], [66.8, 1193.0], [66.9, 1193.0], [67.0, 1193.0], [67.1, 1193.0], [67.2, 1193.0], [67.3, 1193.0], [67.4, 1193.0], [67.5, 1198.0], [67.6, 1198.0], [67.7, 1198.0], [67.8, 1198.0], [67.9, 1198.0], [68.0, 1199.0], [68.1, 1199.0], [68.2, 1199.0], [68.3, 1199.0], [68.4, 1199.0], [68.5, 1199.0], [68.6, 1202.0], [68.7, 1202.0], [68.8, 1202.0], [68.9, 1202.0], [69.0, 1202.0], [69.1, 1202.0], [69.2, 1204.0], [69.3, 1204.0], [69.4, 1204.0], [69.5, 1204.0], [69.6, 1204.0], [69.7, 1210.0], [69.8, 1210.0], [69.9, 1210.0], [70.0, 1210.0], [70.1, 1210.0], [70.2, 1210.0], [70.3, 1215.0], [70.4, 1215.0], [70.5, 1215.0], [70.6, 1215.0], [70.7, 1215.0], [70.8, 1216.0], [70.9, 1216.0], [71.0, 1216.0], [71.1, 1216.0], [71.2, 1216.0], [71.3, 1216.0], [71.4, 1236.0], [71.5, 1236.0], [71.6, 1236.0], [71.7, 1236.0], [71.8, 1236.0], [71.9, 1236.0], [72.0, 1242.0], [72.1, 1242.0], [72.2, 1242.0], [72.3, 1242.0], [72.4, 1242.0], [72.5, 1250.0], [72.6, 1250.0], [72.7, 1250.0], [72.8, 1250.0], [72.9, 1250.0], [73.0, 1250.0], [73.1, 1252.0], [73.2, 1252.0], [73.3, 1252.0], [73.4, 1252.0], [73.5, 1252.0], [73.6, 1265.0], [73.7, 1265.0], [73.8, 1265.0], [73.9, 1265.0], [74.0, 1265.0], [74.1, 1265.0], [74.2, 1266.0], [74.3, 1266.0], [74.4, 1266.0], [74.5, 1266.0], [74.6, 1266.0], [74.7, 1266.0], [74.8, 1270.0], [74.9, 1270.0], [75.0, 1270.0], [75.1, 1270.0], [75.2, 1270.0], [75.3, 1274.0], [75.4, 1274.0], [75.5, 1274.0], [75.6, 1274.0], [75.7, 1274.0], [75.8, 1274.0], [75.9, 1282.0], [76.0, 1282.0], [76.1, 1282.0], [76.2, 1282.0], [76.3, 1282.0], [76.4, 1282.0], [76.5, 1283.0], [76.6, 1283.0], [76.7, 1283.0], [76.8, 1283.0], [76.9, 1283.0], [77.0, 1285.0], [77.1, 1285.0], [77.2, 1285.0], [77.3, 1285.0], [77.4, 1285.0], [77.5, 1285.0], [77.6, 1288.0], [77.7, 1288.0], [77.8, 1288.0], [77.9, 1288.0], [78.0, 1288.0], [78.1, 1313.0], [78.2, 1313.0], [78.3, 1313.0], [78.4, 1313.0], [78.5, 1313.0], [78.6, 1313.0], [78.7, 1325.0], [78.8, 1325.0], [78.9, 1325.0], [79.0, 1325.0], [79.1, 1325.0], [79.2, 1325.0], [79.3, 1342.0], [79.4, 1342.0], [79.5, 1342.0], [79.6, 1342.0], [79.7, 1342.0], [79.8, 1343.0], [79.9, 1343.0], [80.0, 1343.0], [80.1, 1343.0], [80.2, 1343.0], [80.3, 1343.0], [80.4, 1344.0], [80.5, 1344.0], [80.6, 1344.0], [80.7, 1344.0], [80.8, 1344.0], [80.9, 1352.0], [81.0, 1352.0], [81.1, 1352.0], [81.2, 1352.0], [81.3, 1352.0], [81.4, 1352.0], [81.5, 1353.0], [81.6, 1353.0], [81.7, 1353.0], [81.8, 1353.0], [81.9, 1353.0], [82.0, 1353.0], [82.1, 1368.0], [82.2, 1368.0], [82.3, 1368.0], [82.4, 1368.0], [82.5, 1368.0], [82.6, 1387.0], [82.7, 1387.0], [82.8, 1387.0], [82.9, 1387.0], [83.0, 1387.0], [83.1, 1387.0], [83.2, 1405.0], [83.3, 1405.0], [83.4, 1405.0], [83.5, 1405.0], [83.6, 1405.0], [83.7, 1405.0], [83.8, 1412.0], [83.9, 1412.0], [84.0, 1412.0], [84.1, 1412.0], [84.2, 1412.0], [84.3, 1417.0], [84.4, 1417.0], [84.5, 1417.0], [84.6, 1417.0], [84.7, 1417.0], [84.8, 1417.0], [84.9, 1422.0], [85.0, 1422.0], [85.1, 1422.0], [85.2, 1422.0], [85.3, 1422.0], [85.4, 1434.0], [85.5, 1434.0], [85.6, 1434.0], [85.7, 1434.0], [85.8, 1434.0], [85.9, 1434.0], [86.0, 1437.0], [86.1, 1437.0], [86.2, 1437.0], [86.3, 1437.0], [86.4, 1437.0], [86.5, 1437.0], [86.6, 1441.0], [86.7, 1441.0], [86.8, 1441.0], [86.9, 1441.0], [87.0, 1441.0], [87.1, 1450.0], [87.2, 1450.0], [87.3, 1450.0], [87.4, 1450.0], [87.5, 1450.0], [87.6, 1450.0], [87.7, 1517.0], [87.8, 1517.0], [87.9, 1517.0], [88.0, 1517.0], [88.1, 1517.0], [88.2, 1517.0], [88.3, 1530.0], [88.4, 1530.0], [88.5, 1530.0], [88.6, 1530.0], [88.7, 1530.0], [88.8, 1542.0], [88.9, 1542.0], [89.0, 1542.0], [89.1, 1542.0], [89.2, 1542.0], [89.3, 1542.0], [89.4, 1560.0], [89.5, 1560.0], [89.6, 1560.0], [89.7, 1560.0], [89.8, 1560.0], [89.9, 1573.0], [90.0, 1573.0], [90.1, 1573.0], [90.2, 1573.0], [90.3, 1573.0], [90.4, 1573.0], [90.5, 1587.0], [90.6, 1587.0], [90.7, 1587.0], [90.8, 1587.0], [90.9, 1587.0], [91.0, 1587.0], [91.1, 1611.0], [91.2, 1611.0], [91.3, 1611.0], [91.4, 1611.0], [91.5, 1611.0], [91.6, 1612.0], [91.7, 1612.0], [91.8, 1612.0], [91.9, 1612.0], [92.0, 1612.0], [92.1, 1612.0], [92.2, 1616.0], [92.3, 1616.0], [92.4, 1616.0], [92.5, 1616.0], [92.6, 1616.0], [92.7, 1620.0], [92.8, 1620.0], [92.9, 1620.0], [93.0, 1620.0], [93.1, 1620.0], [93.2, 1620.0], [93.3, 1639.0], [93.4, 1639.0], [93.5, 1639.0], [93.6, 1639.0], [93.7, 1639.0], [93.8, 1639.0], [93.9, 1658.0], [94.0, 1658.0], [94.1, 1658.0], [94.2, 1658.0], [94.3, 1658.0], [94.4, 1704.0], [94.5, 1704.0], [94.6, 1704.0], [94.7, 1704.0], [94.8, 1704.0], [94.9, 1704.0], [95.0, 1708.0], [95.1, 1708.0], [95.2, 1708.0], [95.3, 1708.0], [95.4, 1708.0], [95.5, 1708.0], [95.6, 1743.0], [95.7, 1743.0], [95.8, 1743.0], [95.9, 1743.0], [96.0, 1743.0], [96.1, 1748.0], [96.2, 1748.0], [96.3, 1748.0], [96.4, 1748.0], [96.5, 1748.0], [96.6, 1748.0], [96.7, 1793.0], [96.8, 1793.0], [96.9, 1793.0], [97.0, 1793.0], [97.1, 1793.0], [97.2, 1798.0], [97.3, 1798.0], [97.4, 1798.0], [97.5, 1798.0], [97.6, 1798.0], [97.7, 1798.0], [97.8, 2115.0], [97.9, 2115.0], [98.0, 2115.0], [98.1, 2115.0], [98.2, 2115.0], [98.3, 2115.0], [98.4, 2793.0], [98.5, 2793.0], [98.6, 2793.0], [98.7, 2793.0], [98.8, 2793.0], [98.9, 24270.0], [99.0, 24270.0], [99.1, 24270.0], [99.2, 24270.0], [99.3, 24270.0], [99.4, 24270.0], [99.5, 26413.0], [99.6, 26413.0], [99.7, 26413.0], [99.8, 26413.0], [99.9, 26413.0]], "isOverall": false, "label": "registrarSalidaPagoAutomatico", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 300.0, "maxY": 429.0, "series": [{"data": [[1100.0, 6.0], [1200.0, 2.0], [600.0, 100.0], [1300.0, 3.0], [700.0, 67.0], [1400.0, 1.0], [400.0, 17.0], [800.0, 27.0], [900.0, 18.0], [500.0, 89.0], [1000.0, 9.0]], "isOverall": false, "label": "registrarEntradaEglobalt", "isController": false}, {"data": [[2300.0, 3.0], [2200.0, 2.0], [2500.0, 1.0], [700.0, 1.0], [2700.0, 1.0], [3100.0, 1.0], [800.0, 10.0], [900.0, 20.0], [1000.0, 15.0], [1100.0, 7.0], [1200.0, 8.0], [1300.0, 5.0], [1400.0, 3.0], [1500.0, 2.0], [1600.0, 3.0], [1700.0, 2.0], [1800.0, 4.0], [1900.0, 1.0], [2000.0, 5.0]], "isOverall": false, "label": "registrarEntradaSinSalida", "isController": false}, {"data": [[300.0, 223.0], [600.0, 4.0], [700.0, 1.0], [400.0, 429.0], [500.0, 32.0]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1600.0, 1.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}, {"data": [[2100.0, 1.0], [2700.0, 1.0], [800.0, 6.0], [900.0, 39.0], [1000.0, 41.0], [1100.0, 36.0], [1200.0, 17.0], [1300.0, 9.0], [1400.0, 8.0], [24200.0, 1.0], [1500.0, 6.0], [26400.0, 1.0], [1600.0, 6.0], [1700.0, 6.0]], "isOverall": false, "label": "registrarSalidaPagoAutomatico", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 26400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 31.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 670.0, "series": [{"data": [[0.0, 670.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 374.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 31.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 226.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.72376328E12, "maxY": 1.0, "series": [{"data": [[1.72376328E12, 1.0]], "isOverall": false, "label": "setUpAutenticacionCognito", "isController": false}, {"data": [[1.72376364E12, 1.0], [1.72376382E12, 1.0], [1.72376334E12, 1.0], [1.72376376E12, 1.0], [1.72376328E12, 1.0], [1.72376346E12, 1.0], [1.72376388E12, 1.0], [1.7237634E12, 1.0], [1.72376358E12, 1.0], [1.72376352E12, 1.0], [1.7237637E12, 1.0]], "isOverall": false, "label": "consultarPlaca", "isController": false}, {"data": [[1.72376364E12, 1.0], [1.72376382E12, 1.0], [1.72376334E12, 1.0], [1.72376376E12, 1.0], [1.72376346E12, 1.0], [1.72376388E12, 1.0], [1.7237634E12, 1.0], [1.72376358E12, 1.0], [1.72376352E12, 1.0], [1.7237637E12, 1.0]], "isOverall": false, "label": "registrarEntrada", "isController": false}, {"data": [[1.72376364E12, 1.0], [1.72376382E12, 1.0], [1.72376376E12, 1.0], [1.72376388E12, 1.0], [1.72376358E12, 1.0], [1.72376352E12, 1.0], [1.7237637E12, 1.0]], "isOverall": false, "label": "registrarSalidaPagoAutomatico", "isController": false}, {"data": [[1.72376382E12, 1.0], [1.72376376E12, 1.0], [1.72376388E12, 1.0], [1.7237637E12, 1.0]], "isOverall": false, "label": "registrarSalidaSinEntrada", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72376388E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 405.4492753623188, "minX": 1.0, "maxY": 1894.0, "series": [{"data": [[2.0, 678.6404494382023], [4.0, 776.4833333333338], [3.0, 635.6538461538462]], "isOverall": false, "label": "registrarEntradaEglobalt", "isController": false}, {"data": [[3.091445427728613, 696.7905604719766]], "isOverall": false, "label": "registrarEntradaEglobalt-Aggregated", "isController": false}, {"data": [[4.0, 1314.8387096774197], [3.0, 1894.0]], "isOverall": false, "label": "registrarEntradaSinSalida", "isController": false}, {"data": [[3.9893617021276597, 1321.0000000000005]], "isOverall": false, "label": "registrarEntradaSinSalida-Aggregated", "isController": false}, {"data": [[1.0, 405.4492753623188], [2.0, 425.2298136645962], [4.0, 425.03493449781666], [3.0, 423.17391304347825]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[2.8984034833091448, 422.49782293178566]], "isOverall": false, "label": "getPlate-Aggregated", "isController": false}, {"data": [[1.0, 1607.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}, {"data": [[1.0, 1607.0]], "isOverall": false, "label": "loginAFlypass-Aggregated", "isController": false}, {"data": [[4.0, 1551.9999999999993], [1.0, 1450.0], [3.0, 1343.5913978494627]], "isOverall": false, "label": "registrarSalidaPagoAutomatico", "isController": false}, {"data": [[3.460674157303371, 1442.5393258426968]], "isOverall": false, "label": "registrarSalidaPagoAutomatico-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 4.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 332.25, "minX": 1.72376328E12, "maxY": 2820.8333333333335, "series": [{"data": [[1.72376364E12, 1169.4666666666667], [1.72376382E12, 1278.1], [1.72376334E12, 734.9833333333333], [1.72376376E12, 1437.95], [1.72376328E12, 332.25], [1.72376346E12, 882.4], [1.72376388E12, 566.65], [1.7237634E12, 848.8], [1.72376358E12, 1208.4833333333333], [1.72376352E12, 1126.95], [1.7237637E12, 1286.0666666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72376364E12, 2261.3166666666666], [1.72376382E12, 2522.483333333333], [1.72376334E12, 1415.5], [1.72376376E12, 2820.8333333333335], [1.72376328E12, 560.0166666666667], [1.72376346E12, 1730.2166666666667], [1.72376388E12, 1128.5666666666666], [1.7237634E12, 1661.3333333333333], [1.72376358E12, 2337.8333333333335], [1.72376352E12, 2184.2166666666667], [1.7237637E12, 2532.1666666666665]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72376388E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 405.9428571428571, "minX": 1.72376328E12, "maxY": 2474.722222222222, "series": [{"data": [[1.72376364E12, 702.8157894736844], [1.72376382E12, 835.0285714285716], [1.72376334E12, 653.3809523809524], [1.72376376E12, 771.4864864864867], [1.72376346E12, 659.9], [1.72376388E12, 835.8], [1.7237634E12, 677.0], [1.72376358E12, 582.5000000000001], [1.72376352E12, 620.9487179487179], [1.7237637E12, 716.5945945945944]], "isOverall": false, "label": "registrarEntradaEglobalt", "isController": false}, {"data": [[1.72376382E12, 1764.086956521739], [1.72376376E12, 1086.8437499999998], [1.72376388E12, 1900.9], [1.7237637E12, 1028.0]], "isOverall": false, "label": "registrarEntradaSinSalida", "isController": false}, {"data": [[1.72376364E12, 429.8985507246377], [1.72376382E12, 435.7462686567164], [1.72376334E12, 413.5774647887324], [1.72376376E12, 423.1571428571429], [1.72376328E12, 407.9736842105263], [1.72376346E12, 428.9565217391303], [1.72376388E12, 420.4], [1.7237634E12, 427.58823529411757], [1.72376358E12, 424.10294117647067], [1.72376352E12, 405.9428571428571], [1.7237637E12, 423.3913043478261]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1.72376328E12, 1607.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}, {"data": [[1.72376364E12, 1117.483870967742], [1.72376382E12, 1431.2962962962958], [1.72376376E12, 1168.5666666666668], [1.72376388E12, 1335.769230769231], [1.72376358E12, 1001.6176470588233], [1.72376352E12, 2098.5200000000004], [1.7237637E12, 2474.722222222222]], "isOverall": false, "label": "registrarSalidaPagoAutomatico", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72376388E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 405.8571428571428, "minX": 1.72376328E12, "maxY": 2474.6111111111113, "series": [{"data": [[1.72376364E12, 702.7368421052631], [1.72376382E12, 834.9714285714284], [1.72376334E12, 653.2857142857143], [1.72376376E12, 771.4054054054053], [1.72376346E12, 659.7250000000001], [1.72376388E12, 835.8], [1.7237634E12, 676.8918918918918], [1.72376358E12, 581.7500000000001], [1.72376352E12, 620.871794871795], [1.7237637E12, 716.4594594594591]], "isOverall": false, "label": "registrarEntradaEglobalt", "isController": false}, {"data": [[1.72376382E12, 1764.0434782608695], [1.72376376E12, 1086.8437499999998], [1.72376388E12, 1900.8000000000002], [1.7237637E12, 1027.8620689655172]], "isOverall": false, "label": "registrarEntradaSinSalida", "isController": false}, {"data": [[1.72376364E12, 429.75362318840587], [1.72376382E12, 435.6567164179105], [1.72376334E12, 413.36619718309856], [1.72376376E12, 422.9571428571428], [1.72376328E12, 407.7894736842105], [1.72376346E12, 428.8260869565217], [1.72376388E12, 420.2333333333334], [1.7237634E12, 427.50000000000006], [1.72376358E12, 423.95588235294116], [1.72376352E12, 405.8571428571428], [1.7237637E12, 423.3623188405798]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1.72376328E12, 1605.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}, {"data": [[1.72376364E12, 1117.3870967741939], [1.72376382E12, 1431.2592592592591], [1.72376376E12, 1168.3999999999996], [1.72376388E12, 1335.6923076923078], [1.72376358E12, 1001.5588235294117], [1.72376352E12, 2098.36], [1.7237637E12, 2474.6111111111113]], "isOverall": false, "label": "registrarSalidaPagoAutomatico", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72376388E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 274.0869565217392, "minX": 1.72376328E12, "maxY": 1109.0, "series": [{"data": [[1.72376364E12, 285.3421052631579], [1.72376382E12, 284.4285714285714], [1.72376334E12, 293.33333333333337], [1.72376376E12, 287.67567567567573], [1.72376346E12, 281.1000000000001], [1.72376388E12, 283.8], [1.7237634E12, 288.6756756756758], [1.72376358E12, 286.0], [1.72376352E12, 285.9230769230769], [1.7237637E12, 288.5675675675676]], "isOverall": false, "label": "registrarEntradaEglobalt", "isController": false}, {"data": [[1.72376382E12, 274.0869565217392], [1.72376376E12, 285.53124999999994], [1.72376388E12, 282.20000000000005], [1.7237637E12, 279.06896551724134]], "isOverall": false, "label": "registrarEntradaSinSalida", "isController": false}, {"data": [[1.72376364E12, 285.463768115942], [1.72376382E12, 282.9402985074627], [1.72376334E12, 290.1690140845071], [1.72376376E12, 285.7571428571427], [1.72376328E12, 290.0], [1.72376346E12, 286.73913043478257], [1.72376388E12, 285.4333333333334], [1.7237634E12, 285.8235294117646], [1.72376358E12, 289.72058823529403], [1.72376352E12, 285.92857142857144], [1.7237637E12, 285.7391304347826]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1.72376328E12, 1109.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}, {"data": [[1.72376364E12, 286.87096774193543], [1.72376382E12, 289.6296296296297], [1.72376376E12, 285.6], [1.72376388E12, 303.15384615384613], [1.72376358E12, 288.2352941176471], [1.72376352E12, 286.88000000000005], [1.7237637E12, 286.33333333333337]], "isOverall": false, "label": "registrarSalidaPagoAutomatico", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72376388E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 344.0, "minX": 1.72376328E12, "maxY": 3139.0, "series": [{"data": [[1.72376364E12, 1078.0], [1.72376382E12, 3139.0], [1.72376334E12, 1267.0], [1.72376376E12, 1308.0], [1.72376328E12, 1607.0], [1.72376346E12, 885.0], [1.72376388E12, 2094.0], [1.7237634E12, 1245.0], [1.72376358E12, 796.0], [1.72376352E12, 1350.0], [1.7237637E12, 1467.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72376364E12, 751.6000000000001], [1.72376382E12, 1722.0000000000002], [1.72376334E12, 642.1], [1.72376376E12, 866.4000000000001], [1.72376328E12, 452.0], [1.72376346E12, 731.0], [1.72376388E12, 1869.7], [1.7237634E12, 694.0], [1.72376358E12, 609.7000000000003], [1.72376352E12, 653.0], [1.7237637E12, 777.5999999999999]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72376364E12, 1071.2800000000002], [1.72376382E12, 3033.439999999998], [1.72376334E12, 1267.0], [1.72376376E12, 1298.2400000000002], [1.72376328E12, 1607.0], [1.72376346E12, 884.6], [1.72376388E12, 2094.0], [1.7237634E12, 1236.7199999999998], [1.72376358E12, 791.1399999999999], [1.72376352E12, 1316.600000000002], [1.7237637E12, 1459.7899999999993]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72376364E12, 904.2], [1.72376382E12, 2236.7999999999997], [1.72376334E12, 694.1999999999999], [1.72376376E12, 991.5999999999999], [1.72376328E12, 532.0], [1.72376346E12, 782.5], [1.72376388E12, 2010.85], [1.7237634E12, 781.3999999999997], [1.72376358E12, 683.65], [1.72376352E12, 753.5], [1.7237637E12, 858.6499999999999]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.72376364E12, 344.0], [1.72376382E12, 351.0], [1.72376334E12, 345.0], [1.72376376E12, 344.0], [1.72376328E12, 358.0], [1.72376346E12, 362.0], [1.72376388E12, 377.0], [1.7237634E12, 360.0], [1.72376358E12, 375.0], [1.72376352E12, 344.0], [1.7237637E12, 358.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72376364E12, 461.0], [1.72376382E12, 544.0], [1.72376334E12, 416.5], [1.72376376E12, 445.0], [1.72376328E12, 406.0], [1.72376346E12, 445.0], [1.72376388E12, 768.5], [1.7237634E12, 448.0], [1.72376358E12, 445.0], [1.72376352E12, 424.0], [1.7237637E12, 442.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72376388E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 413.5, "minX": 1.0, "maxY": 1144.0, "series": [{"data": [[1.0, 413.5], [2.0, 448.0], [4.0, 466.0], [5.0, 438.0], [3.0, 462.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 1051.0], [4.0, 1144.0], [1.0, 1132.5], [5.0, 1073.5], [3.0, 1039.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 5.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 413.0, "minX": 1.0, "maxY": 1144.0, "series": [{"data": [[1.0, 413.0], [2.0, 448.0], [4.0, 465.0], [5.0, 438.0], [3.0, 462.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 1051.0], [4.0, 1144.0], [1.0, 1132.0], [5.0, 1073.5], [3.0, 1039.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 5.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.6666666666666666, "minX": 1.72376328E12, "maxY": 2.8, "series": [{"data": [[1.72376364E12, 2.3], [1.72376382E12, 2.5166666666666666], [1.72376334E12, 1.5333333333333334], [1.72376376E12, 2.8], [1.72376328E12, 0.6666666666666666], [1.72376346E12, 1.8166666666666667], [1.72376388E12, 1.1], [1.7237634E12, 1.75], [1.72376358E12, 2.3666666666666667], [1.72376352E12, 2.25], [1.7237637E12, 2.5833333333333335]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72376388E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.21666666666666667, "minX": 1.72376328E12, "maxY": 1.2333333333333334, "series": [{"data": [[1.72376364E12, 1.15], [1.72376382E12, 1.1166666666666667], [1.72376334E12, 1.1833333333333333], [1.72376376E12, 1.1666666666666667], [1.72376328E12, 0.65], [1.72376346E12, 1.15], [1.72376388E12, 0.5], [1.7237634E12, 1.1333333333333333], [1.72376358E12, 1.1333333333333333], [1.72376352E12, 1.1666666666666667], [1.7237637E12, 1.15]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.72376364E12, 1.15], [1.72376382E12, 1.2], [1.72376334E12, 0.35], [1.72376376E12, 1.1166666666666667], [1.72376346E12, 0.6666666666666666], [1.72376388E12, 0.6333333333333333], [1.7237634E12, 0.6166666666666667], [1.72376358E12, 1.2333333333333334], [1.72376352E12, 1.0666666666666667], [1.7237637E12, 0.9166666666666666]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.72376382E12, 0.21666666666666667], [1.72376376E12, 0.5333333333333333], [1.7237637E12, 0.48333333333333334]], "isOverall": false, "label": "404", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72376388E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.72376328E12, "maxY": 1.1833333333333333, "series": [{"data": [[1.72376328E12, 0.016666666666666666]], "isOverall": false, "label": "loginAFlypass-success", "isController": false}, {"data": [[1.72376382E12, 0.21666666666666667], [1.72376388E12, 0.21666666666666667]], "isOverall": false, "label": "registrarSalidaPagoAutomatico-success", "isController": false}, {"data": [[1.72376364E12, 0.5166666666666667], [1.72376382E12, 0.23333333333333334], [1.72376376E12, 0.5], [1.72376358E12, 0.5666666666666667], [1.72376352E12, 0.4166666666666667], [1.7237637E12, 0.3]], "isOverall": false, "label": "registrarSalidaPagoAutomatico-failure", "isController": false}, {"data": [[1.72376364E12, 1.15], [1.72376382E12, 1.1166666666666667], [1.72376334E12, 1.1833333333333333], [1.72376376E12, 1.1666666666666667], [1.72376328E12, 0.6333333333333333], [1.72376346E12, 1.15], [1.72376388E12, 0.5], [1.7237634E12, 1.1333333333333333], [1.72376358E12, 1.1333333333333333], [1.72376352E12, 1.1666666666666667], [1.7237637E12, 1.15]], "isOverall": false, "label": "getPlate-success", "isController": false}, {"data": [[1.72376382E12, 0.21666666666666667], [1.72376376E12, 0.5333333333333333], [1.7237637E12, 0.48333333333333334]], "isOverall": false, "label": "registrarEntradaSinSalida-failure", "isController": false}, {"data": [[1.72376364E12, 0.6333333333333333], [1.72376382E12, 0.5833333333333334], [1.72376334E12, 0.35], [1.72376376E12, 0.6166666666666667], [1.72376346E12, 0.6666666666666666], [1.72376388E12, 0.25], [1.7237634E12, 0.6166666666666667], [1.72376358E12, 0.6666666666666666], [1.72376352E12, 0.65], [1.7237637E12, 0.6166666666666667]], "isOverall": false, "label": "registrarEntradaEglobalt-success", "isController": false}, {"data": [[1.72376382E12, 0.16666666666666666], [1.72376388E12, 0.16666666666666666]], "isOverall": false, "label": "registrarEntradaSinSalida-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72376388E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.4166666666666667, "minX": 1.72376328E12, "maxY": 2.0833333333333335, "series": [{"data": [[1.72376364E12, 1.7833333333333334], [1.72376382E12, 2.0833333333333335], [1.72376334E12, 1.5333333333333334], [1.72376376E12, 1.7833333333333334], [1.72376328E12, 0.65], [1.72376346E12, 1.8166666666666667], [1.72376388E12, 1.1333333333333333], [1.7237634E12, 1.75], [1.72376358E12, 1.8], [1.72376352E12, 1.8166666666666667], [1.7237637E12, 1.7666666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.72376364E12, 0.5166666666666667], [1.72376382E12, 0.45], [1.72376376E12, 1.0333333333333334], [1.72376358E12, 0.5666666666666667], [1.72376352E12, 0.4166666666666667], [1.7237637E12, 0.7833333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72376388E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

