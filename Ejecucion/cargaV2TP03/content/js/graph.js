/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 326.0, "minX": 0.0, "maxY": 25878.0, "series": [{"data": [[0.0, 355.0], [0.1, 355.0], [0.2, 355.0], [0.3, 359.0], [0.4, 359.0], [0.5, 359.0], [0.6, 367.0], [0.7, 367.0], [0.8, 367.0], [0.9, 370.0], [1.0, 370.0], [1.1, 371.0], [1.2, 371.0], [1.3, 371.0], [1.4, 371.0], [1.5, 371.0], [1.6, 371.0], [1.7, 373.0], [1.8, 373.0], [1.9, 373.0], [2.0, 373.0], [2.1, 373.0], [2.2, 374.0], [2.3, 374.0], [2.4, 374.0], [2.5, 376.0], [2.6, 376.0], [2.7, 376.0], [2.8, 377.0], [2.9, 377.0], [3.0, 377.0], [3.1, 377.0], [3.2, 377.0], [3.3, 377.0], [3.4, 377.0], [3.5, 377.0], [3.6, 377.0], [3.7, 377.0], [3.8, 378.0], [3.9, 378.0], [4.0, 378.0], [4.1, 380.0], [4.2, 380.0], [4.3, 380.0], [4.4, 381.0], [4.5, 381.0], [4.6, 381.0], [4.7, 382.0], [4.8, 382.0], [4.9, 382.0], [5.0, 382.0], [5.1, 382.0], [5.2, 384.0], [5.3, 384.0], [5.4, 384.0], [5.5, 386.0], [5.6, 386.0], [5.7, 389.0], [5.8, 389.0], [5.9, 389.0], [6.0, 390.0], [6.1, 390.0], [6.2, 390.0], [6.3, 390.0], [6.4, 390.0], [6.5, 390.0], [6.6, 390.0], [6.7, 390.0], [6.8, 392.0], [6.9, 392.0], [7.0, 392.0], [7.1, 392.0], [7.2, 392.0], [7.3, 392.0], [7.4, 393.0], [7.5, 393.0], [7.6, 393.0], [7.7, 393.0], [7.8, 393.0], [7.9, 394.0], [8.0, 394.0], [8.1, 394.0], [8.2, 394.0], [8.3, 394.0], [8.4, 394.0], [8.5, 395.0], [8.6, 395.0], [8.7, 396.0], [8.8, 396.0], [8.9, 396.0], [9.0, 396.0], [9.1, 396.0], [9.2, 396.0], [9.3, 397.0], [9.4, 397.0], [9.5, 397.0], [9.6, 397.0], [9.7, 397.0], [9.8, 398.0], [9.9, 398.0], [10.0, 398.0], [10.1, 398.0], [10.2, 398.0], [10.3, 401.0], [10.4, 401.0], [10.5, 401.0], [10.6, 402.0], [10.7, 402.0], [10.8, 402.0], [10.9, 403.0], [11.0, 403.0], [11.1, 403.0], [11.2, 404.0], [11.3, 404.0], [11.4, 405.0], [11.5, 405.0], [11.6, 405.0], [11.7, 405.0], [11.8, 405.0], [11.9, 405.0], [12.0, 405.0], [12.1, 405.0], [12.2, 406.0], [12.3, 406.0], [12.4, 406.0], [12.5, 407.0], [12.6, 407.0], [12.7, 407.0], [12.8, 407.0], [12.9, 407.0], [13.0, 407.0], [13.1, 407.0], [13.2, 407.0], [13.3, 407.0], [13.4, 407.0], [13.5, 407.0], [13.6, 408.0], [13.7, 408.0], [13.8, 408.0], [13.9, 409.0], [14.0, 409.0], [14.1, 410.0], [14.2, 410.0], [14.3, 410.0], [14.4, 410.0], [14.5, 410.0], [14.6, 410.0], [14.7, 412.0], [14.8, 412.0], [14.9, 412.0], [15.0, 413.0], [15.1, 413.0], [15.2, 413.0], [15.3, 413.0], [15.4, 413.0], [15.5, 413.0], [15.6, 413.0], [15.7, 413.0], [15.8, 414.0], [15.9, 414.0], [16.0, 415.0], [16.1, 415.0], [16.2, 415.0], [16.3, 415.0], [16.4, 415.0], [16.5, 415.0], [16.6, 415.0], [16.7, 415.0], [16.8, 415.0], [16.9, 417.0], [17.0, 417.0], [17.1, 419.0], [17.2, 419.0], [17.3, 419.0], [17.4, 420.0], [17.5, 420.0], [17.6, 420.0], [17.7, 421.0], [17.8, 421.0], [17.9, 421.0], [18.0, 421.0], [18.1, 421.0], [18.2, 421.0], [18.3, 421.0], [18.4, 421.0], [18.5, 422.0], [18.6, 422.0], [18.7, 424.0], [18.8, 424.0], [18.9, 424.0], [19.0, 426.0], [19.1, 426.0], [19.2, 426.0], [19.3, 427.0], [19.4, 427.0], [19.5, 427.0], [19.6, 428.0], [19.7, 428.0], [19.8, 429.0], [19.9, 429.0], [20.0, 429.0], [20.1, 431.0], [20.2, 431.0], [20.3, 431.0], [20.4, 431.0], [20.5, 431.0], [20.6, 432.0], [20.7, 432.0], [20.8, 432.0], [20.9, 434.0], [21.0, 434.0], [21.1, 434.0], [21.2, 435.0], [21.3, 435.0], [21.4, 435.0], [21.5, 435.0], [21.6, 435.0], [21.7, 435.0], [21.8, 435.0], [21.9, 435.0], [22.0, 436.0], [22.1, 436.0], [22.2, 436.0], [22.3, 437.0], [22.4, 437.0], [22.5, 438.0], [22.6, 438.0], [22.7, 438.0], [22.8, 438.0], [22.9, 438.0], [23.0, 438.0], [23.1, 439.0], [23.2, 439.0], [23.3, 439.0], [23.4, 440.0], [23.5, 440.0], [23.6, 441.0], [23.7, 441.0], [23.8, 441.0], [23.9, 442.0], [24.0, 442.0], [24.1, 442.0], [24.2, 444.0], [24.3, 444.0], [24.4, 446.0], [24.5, 446.0], [24.6, 446.0], [24.7, 447.0], [24.8, 447.0], [24.9, 447.0], [25.0, 449.0], [25.1, 449.0], [25.2, 449.0], [25.3, 449.0], [25.4, 449.0], [25.5, 449.0], [25.6, 449.0], [25.7, 449.0], [25.8, 452.0], [25.9, 452.0], [26.0, 452.0], [26.1, 453.0], [26.2, 453.0], [26.3, 455.0], [26.4, 455.0], [26.5, 455.0], [26.6, 456.0], [26.7, 456.0], [26.8, 456.0], [26.9, 456.0], [27.0, 456.0], [27.1, 456.0], [27.2, 457.0], [27.3, 457.0], [27.4, 458.0], [27.5, 458.0], [27.6, 458.0], [27.7, 458.0], [27.8, 458.0], [27.9, 458.0], [28.0, 459.0], [28.1, 459.0], [28.2, 459.0], [28.3, 459.0], [28.4, 459.0], [28.5, 461.0], [28.6, 461.0], [28.7, 461.0], [28.8, 462.0], [28.9, 462.0], [29.0, 462.0], [29.1, 462.0], [29.2, 462.0], [29.3, 463.0], [29.4, 463.0], [29.5, 463.0], [29.6, 464.0], [29.7, 464.0], [29.8, 464.0], [29.9, 464.0], [30.0, 464.0], [30.1, 468.0], [30.2, 468.0], [30.3, 468.0], [30.4, 468.0], [30.5, 468.0], [30.6, 468.0], [30.7, 468.0], [30.8, 468.0], [30.9, 469.0], [31.0, 469.0], [31.1, 469.0], [31.2, 469.0], [31.3, 469.0], [31.4, 469.0], [31.5, 469.0], [31.6, 469.0], [31.7, 469.0], [31.8, 469.0], [31.9, 469.0], [32.0, 470.0], [32.1, 470.0], [32.2, 470.0], [32.3, 472.0], [32.4, 472.0], [32.5, 472.0], [32.6, 472.0], [32.7, 472.0], [32.8, 473.0], [32.9, 473.0], [33.0, 473.0], [33.1, 474.0], [33.2, 474.0], [33.3, 474.0], [33.4, 475.0], [33.5, 475.0], [33.6, 475.0], [33.7, 476.0], [33.8, 476.0], [33.9, 478.0], [34.0, 478.0], [34.1, 478.0], [34.2, 478.0], [34.3, 478.0], [34.4, 478.0], [34.5, 478.0], [34.6, 478.0], [34.7, 480.0], [34.8, 480.0], [34.9, 480.0], [35.0, 480.0], [35.1, 480.0], [35.2, 480.0], [35.3, 481.0], [35.4, 481.0], [35.5, 481.0], [35.6, 482.0], [35.7, 482.0], [35.8, 483.0], [35.9, 483.0], [36.0, 483.0], [36.1, 483.0], [36.2, 483.0], [36.3, 483.0], [36.4, 489.0], [36.5, 489.0], [36.6, 494.0], [36.7, 494.0], [36.8, 494.0], [36.9, 494.0], [37.0, 494.0], [37.1, 494.0], [37.2, 496.0], [37.3, 496.0], [37.4, 498.0], [37.5, 498.0], [37.6, 498.0], [37.7, 500.0], [37.8, 500.0], [37.9, 500.0], [38.0, 500.0], [38.1, 500.0], [38.2, 500.0], [38.3, 501.0], [38.4, 501.0], [38.5, 501.0], [38.6, 501.0], [38.7, 501.0], [38.8, 502.0], [38.9, 502.0], [39.0, 502.0], [39.1, 506.0], [39.2, 506.0], [39.3, 509.0], [39.4, 509.0], [39.5, 509.0], [39.6, 510.0], [39.7, 510.0], [39.8, 510.0], [39.9, 510.0], [40.0, 510.0], [40.1, 510.0], [40.2, 512.0], [40.3, 512.0], [40.4, 512.0], [40.5, 512.0], [40.6, 512.0], [40.7, 513.0], [40.8, 513.0], [40.9, 513.0], [41.0, 514.0], [41.1, 514.0], [41.2, 515.0], [41.3, 515.0], [41.4, 515.0], [41.5, 516.0], [41.6, 516.0], [41.7, 516.0], [41.8, 519.0], [41.9, 519.0], [42.0, 519.0], [42.1, 520.0], [42.2, 520.0], [42.3, 521.0], [42.4, 521.0], [42.5, 521.0], [42.6, 523.0], [42.7, 523.0], [42.8, 523.0], [42.9, 525.0], [43.0, 525.0], [43.1, 526.0], [43.2, 526.0], [43.3, 526.0], [43.4, 528.0], [43.5, 528.0], [43.6, 528.0], [43.7, 529.0], [43.8, 529.0], [43.9, 529.0], [44.0, 530.0], [44.1, 530.0], [44.2, 533.0], [44.3, 533.0], [44.4, 533.0], [44.5, 535.0], [44.6, 535.0], [44.7, 535.0], [44.8, 536.0], [44.9, 536.0], [45.0, 536.0], [45.1, 536.0], [45.2, 536.0], [45.3, 540.0], [45.4, 540.0], [45.5, 540.0], [45.6, 540.0], [45.7, 540.0], [45.8, 540.0], [45.9, 540.0], [46.0, 540.0], [46.1, 540.0], [46.2, 540.0], [46.3, 540.0], [46.4, 540.0], [46.5, 540.0], [46.6, 540.0], [46.7, 541.0], [46.8, 541.0], [46.9, 541.0], [47.0, 541.0], [47.1, 541.0], [47.2, 544.0], [47.3, 544.0], [47.4, 544.0], [47.5, 544.0], [47.6, 544.0], [47.7, 546.0], [47.8, 546.0], [47.9, 546.0], [48.0, 546.0], [48.1, 546.0], [48.2, 546.0], [48.3, 547.0], [48.4, 547.0], [48.5, 547.0], [48.6, 547.0], [48.7, 547.0], [48.8, 548.0], [48.9, 548.0], [49.0, 548.0], [49.1, 548.0], [49.2, 548.0], [49.3, 548.0], [49.4, 549.0], [49.5, 549.0], [49.6, 549.0], [49.7, 549.0], [49.8, 549.0], [49.9, 549.0], [50.0, 549.0], [50.1, 549.0], [50.2, 549.0], [50.3, 549.0], [50.4, 549.0], [50.5, 549.0], [50.6, 549.0], [50.7, 549.0], [50.8, 549.0], [50.9, 549.0], [51.0, 552.0], [51.1, 552.0], [51.2, 552.0], [51.3, 553.0], [51.4, 553.0], [51.5, 553.0], [51.6, 553.0], [51.7, 553.0], [51.8, 553.0], [51.9, 553.0], [52.0, 553.0], [52.1, 554.0], [52.2, 554.0], [52.3, 554.0], [52.4, 554.0], [52.5, 554.0], [52.6, 556.0], [52.7, 556.0], [52.8, 556.0], [52.9, 559.0], [53.0, 559.0], [53.1, 559.0], [53.2, 560.0], [53.3, 560.0], [53.4, 561.0], [53.5, 561.0], [53.6, 561.0], [53.7, 561.0], [53.8, 561.0], [53.9, 561.0], [54.0, 561.0], [54.1, 561.0], [54.2, 561.0], [54.3, 562.0], [54.4, 562.0], [54.5, 564.0], [54.6, 564.0], [54.7, 564.0], [54.8, 565.0], [54.9, 565.0], [55.0, 565.0], [55.1, 565.0], [55.2, 565.0], [55.3, 565.0], [55.4, 565.0], [55.5, 565.0], [55.6, 566.0], [55.7, 566.0], [55.8, 566.0], [55.9, 567.0], [56.0, 567.0], [56.1, 567.0], [56.2, 567.0], [56.3, 567.0], [56.4, 569.0], [56.5, 569.0], [56.6, 569.0], [56.7, 569.0], [56.8, 569.0], [56.9, 569.0], [57.0, 570.0], [57.1, 570.0], [57.2, 571.0], [57.3, 571.0], [57.4, 571.0], [57.5, 571.0], [57.6, 571.0], [57.7, 571.0], [57.8, 572.0], [57.9, 572.0], [58.0, 575.0], [58.1, 575.0], [58.2, 575.0], [58.3, 575.0], [58.4, 575.0], [58.5, 575.0], [58.6, 576.0], [58.7, 576.0], [58.8, 576.0], [58.9, 577.0], [59.0, 577.0], [59.1, 579.0], [59.2, 579.0], [59.3, 579.0], [59.4, 579.0], [59.5, 579.0], [59.6, 579.0], [59.7, 579.0], [59.8, 579.0], [59.9, 580.0], [60.0, 580.0], [60.1, 580.0], [60.2, 580.0], [60.3, 580.0], [60.4, 580.0], [60.5, 580.0], [60.6, 580.0], [60.7, 580.0], [60.8, 581.0], [60.9, 581.0], [61.0, 583.0], [61.1, 583.0], [61.2, 583.0], [61.3, 583.0], [61.4, 583.0], [61.5, 583.0], [61.6, 583.0], [61.7, 583.0], [61.8, 584.0], [61.9, 584.0], [62.0, 584.0], [62.1, 585.0], [62.2, 585.0], [62.3, 585.0], [62.4, 585.0], [62.5, 585.0], [62.6, 585.0], [62.7, 587.0], [62.8, 587.0], [62.9, 588.0], [63.0, 588.0], [63.1, 588.0], [63.2, 589.0], [63.3, 589.0], [63.4, 589.0], [63.5, 591.0], [63.6, 591.0], [63.7, 594.0], [63.8, 594.0], [63.9, 594.0], [64.0, 594.0], [64.1, 594.0], [64.2, 594.0], [64.3, 595.0], [64.4, 595.0], [64.5, 595.0], [64.6, 595.0], [64.7, 595.0], [64.8, 595.0], [64.9, 595.0], [65.0, 595.0], [65.1, 596.0], [65.2, 596.0], [65.3, 596.0], [65.4, 596.0], [65.5, 596.0], [65.6, 596.0], [65.7, 596.0], [65.8, 596.0], [65.9, 596.0], [66.0, 596.0], [66.1, 596.0], [66.2, 599.0], [66.3, 599.0], [66.4, 600.0], [66.5, 600.0], [66.6, 600.0], [66.7, 600.0], [66.8, 600.0], [66.9, 600.0], [67.0, 601.0], [67.1, 601.0], [67.2, 601.0], [67.3, 601.0], [67.4, 601.0], [67.5, 604.0], [67.6, 604.0], [67.7, 604.0], [67.8, 604.0], [67.9, 604.0], [68.0, 604.0], [68.1, 606.0], [68.2, 606.0], [68.3, 608.0], [68.4, 608.0], [68.5, 608.0], [68.6, 608.0], [68.7, 608.0], [68.8, 608.0], [68.9, 609.0], [69.0, 609.0], [69.1, 609.0], [69.2, 610.0], [69.3, 610.0], [69.4, 612.0], [69.5, 612.0], [69.6, 612.0], [69.7, 613.0], [69.8, 613.0], [69.9, 613.0], [70.0, 614.0], [70.1, 614.0], [70.2, 618.0], [70.3, 618.0], [70.4, 618.0], [70.5, 619.0], [70.6, 619.0], [70.7, 619.0], [70.8, 622.0], [70.9, 622.0], [71.0, 622.0], [71.1, 624.0], [71.2, 624.0], [71.3, 624.0], [71.4, 624.0], [71.5, 624.0], [71.6, 625.0], [71.7, 625.0], [71.8, 625.0], [71.9, 626.0], [72.0, 626.0], [72.1, 626.0], [72.2, 626.0], [72.3, 626.0], [72.4, 629.0], [72.5, 629.0], [72.6, 629.0], [72.7, 631.0], [72.8, 631.0], [72.9, 632.0], [73.0, 632.0], [73.1, 632.0], [73.2, 633.0], [73.3, 633.0], [73.4, 633.0], [73.5, 633.0], [73.6, 633.0], [73.7, 633.0], [73.8, 634.0], [73.9, 634.0], [74.0, 637.0], [74.1, 637.0], [74.2, 637.0], [74.3, 638.0], [74.4, 638.0], [74.5, 638.0], [74.6, 640.0], [74.7, 640.0], [74.8, 642.0], [74.9, 642.0], [75.0, 642.0], [75.1, 643.0], [75.2, 643.0], [75.3, 643.0], [75.4, 644.0], [75.5, 644.0], [75.6, 644.0], [75.7, 644.0], [75.8, 644.0], [75.9, 644.0], [76.0, 644.0], [76.1, 644.0], [76.2, 645.0], [76.3, 645.0], [76.4, 645.0], [76.5, 647.0], [76.6, 647.0], [76.7, 649.0], [76.8, 649.0], [76.9, 649.0], [77.0, 651.0], [77.1, 651.0], [77.2, 651.0], [77.3, 651.0], [77.4, 651.0], [77.5, 651.0], [77.6, 651.0], [77.7, 651.0], [77.8, 652.0], [77.9, 652.0], [78.0, 652.0], [78.1, 655.0], [78.2, 655.0], [78.3, 655.0], [78.4, 658.0], [78.5, 658.0], [78.6, 663.0], [78.7, 663.0], [78.8, 663.0], [78.9, 665.0], [79.0, 665.0], [79.1, 665.0], [79.2, 666.0], [79.3, 666.0], [79.4, 666.0], [79.5, 666.0], [79.6, 666.0], [79.7, 668.0], [79.8, 668.0], [79.9, 668.0], [80.0, 670.0], [80.1, 670.0], [80.2, 670.0], [80.3, 670.0], [80.4, 670.0], [80.5, 671.0], [80.6, 671.0], [80.7, 671.0], [80.8, 672.0], [80.9, 672.0], [81.0, 672.0], [81.1, 672.0], [81.2, 672.0], [81.3, 672.0], [81.4, 677.0], [81.5, 677.0], [81.6, 678.0], [81.7, 678.0], [81.8, 678.0], [81.9, 679.0], [82.0, 679.0], [82.1, 679.0], [82.2, 681.0], [82.3, 681.0], [82.4, 681.0], [82.5, 681.0], [82.6, 681.0], [82.7, 681.0], [82.8, 681.0], [82.9, 681.0], [83.0, 682.0], [83.1, 682.0], [83.2, 682.0], [83.3, 682.0], [83.4, 682.0], [83.5, 682.0], [83.6, 682.0], [83.7, 682.0], [83.8, 684.0], [83.9, 684.0], [84.0, 684.0], [84.1, 686.0], [84.2, 686.0], [84.3, 688.0], [84.4, 688.0], [84.5, 688.0], [84.6, 690.0], [84.7, 690.0], [84.8, 690.0], [84.9, 692.0], [85.0, 692.0], [85.1, 693.0], [85.2, 693.0], [85.3, 693.0], [85.4, 696.0], [85.5, 696.0], [85.6, 696.0], [85.7, 698.0], [85.8, 698.0], [85.9, 698.0], [86.0, 701.0], [86.1, 701.0], [86.2, 707.0], [86.3, 707.0], [86.4, 707.0], [86.5, 708.0], [86.6, 708.0], [86.7, 708.0], [86.8, 709.0], [86.9, 709.0], [87.0, 716.0], [87.1, 716.0], [87.2, 716.0], [87.3, 716.0], [87.4, 716.0], [87.5, 716.0], [87.6, 719.0], [87.7, 719.0], [87.8, 719.0], [87.9, 723.0], [88.0, 723.0], [88.1, 724.0], [88.2, 724.0], [88.3, 724.0], [88.4, 728.0], [88.5, 728.0], [88.6, 728.0], [88.7, 729.0], [88.8, 729.0], [88.9, 734.0], [89.0, 734.0], [89.1, 734.0], [89.2, 738.0], [89.3, 738.0], [89.4, 738.0], [89.5, 742.0], [89.6, 742.0], [89.7, 742.0], [89.8, 746.0], [89.9, 746.0], [90.0, 750.0], [90.1, 750.0], [90.2, 750.0], [90.3, 751.0], [90.4, 751.0], [90.5, 751.0], [90.6, 754.0], [90.7, 754.0], [90.8, 754.0], [90.9, 754.0], [91.0, 754.0], [91.1, 755.0], [91.2, 755.0], [91.3, 755.0], [91.4, 758.0], [91.5, 758.0], [91.6, 763.0], [91.7, 763.0], [91.8, 763.0], [91.9, 764.0], [92.0, 764.0], [92.1, 764.0], [92.2, 769.0], [92.3, 769.0], [92.4, 769.0], [92.5, 776.0], [92.6, 776.0], [92.7, 784.0], [92.8, 784.0], [92.9, 784.0], [93.0, 785.0], [93.1, 785.0], [93.2, 785.0], [93.3, 797.0], [93.4, 797.0], [93.5, 797.0], [93.6, 797.0], [93.7, 797.0], [93.8, 797.0], [93.9, 797.0], [94.0, 797.0], [94.1, 798.0], [94.2, 798.0], [94.3, 798.0], [94.4, 814.0], [94.5, 814.0], [94.6, 816.0], [94.7, 816.0], [94.8, 816.0], [94.9, 828.0], [95.0, 828.0], [95.1, 828.0], [95.2, 837.0], [95.3, 837.0], [95.4, 844.0], [95.5, 844.0], [95.6, 844.0], [95.7, 851.0], [95.8, 851.0], [95.9, 851.0], [96.0, 868.0], [96.1, 868.0], [96.2, 868.0], [96.3, 899.0], [96.4, 899.0], [96.5, 955.0], [96.6, 955.0], [96.7, 955.0], [96.8, 969.0], [96.9, 969.0], [97.0, 969.0], [97.1, 977.0], [97.2, 977.0], [97.3, 999.0], [97.4, 999.0], [97.5, 999.0], [97.6, 1009.0], [97.7, 1009.0], [97.8, 1009.0], [97.9, 1038.0], [98.0, 1038.0], [98.1, 1038.0], [98.2, 1044.0], [98.3, 1044.0], [98.4, 1097.0], [98.5, 1097.0], [98.6, 1097.0], [98.7, 1116.0], [98.8, 1116.0], [98.9, 1116.0], [99.0, 1268.0], [99.1, 1268.0], [99.2, 1280.0], [99.3, 1280.0], [99.4, 1280.0], [99.5, 1577.0], [99.6, 1577.0], [99.7, 1577.0], [99.8, 2071.0], [99.9, 2071.0], [100.0, 2071.0]], "isOverall": false, "label": "registrarEntradaEglobalt", "isController": false}, {"data": [[0.0, 782.0], [0.1, 782.0], [0.2, 782.0], [0.3, 782.0], [0.4, 782.0], [0.5, 782.0], [0.6, 782.0], [0.7, 782.0], [0.8, 782.0], [0.9, 782.0], [1.0, 782.0], [1.1, 782.0], [1.2, 782.0], [1.3, 807.0], [1.4, 807.0], [1.5, 807.0], [1.6, 807.0], [1.7, 807.0], [1.8, 807.0], [1.9, 807.0], [2.0, 807.0], [2.1, 807.0], [2.2, 807.0], [2.3, 807.0], [2.4, 807.0], [2.5, 829.0], [2.6, 829.0], [2.7, 829.0], [2.8, 829.0], [2.9, 829.0], [3.0, 829.0], [3.1, 829.0], [3.2, 829.0], [3.3, 829.0], [3.4, 829.0], [3.5, 829.0], [3.6, 829.0], [3.7, 829.0], [3.8, 834.0], [3.9, 834.0], [4.0, 834.0], [4.1, 834.0], [4.2, 834.0], [4.3, 834.0], [4.4, 834.0], [4.5, 834.0], [4.6, 834.0], [4.7, 834.0], [4.8, 834.0], [4.9, 834.0], [5.0, 845.0], [5.1, 845.0], [5.2, 845.0], [5.3, 845.0], [5.4, 845.0], [5.5, 845.0], [5.6, 845.0], [5.7, 845.0], [5.8, 845.0], [5.9, 845.0], [6.0, 845.0], [6.1, 845.0], [6.2, 874.0], [6.3, 874.0], [6.4, 874.0], [6.5, 874.0], [6.6, 874.0], [6.7, 874.0], [6.8, 874.0], [6.9, 874.0], [7.0, 874.0], [7.1, 874.0], [7.2, 874.0], [7.3, 874.0], [7.4, 874.0], [7.5, 914.0], [7.6, 914.0], [7.7, 914.0], [7.8, 914.0], [7.9, 914.0], [8.0, 914.0], [8.1, 914.0], [8.2, 914.0], [8.3, 914.0], [8.4, 914.0], [8.5, 914.0], [8.6, 914.0], [8.7, 952.0], [8.8, 952.0], [8.9, 952.0], [9.0, 952.0], [9.1, 952.0], [9.2, 952.0], [9.3, 952.0], [9.4, 952.0], [9.5, 952.0], [9.6, 952.0], [9.7, 952.0], [9.8, 952.0], [9.9, 966.0], [10.0, 966.0], [10.1, 966.0], [10.2, 966.0], [10.3, 966.0], [10.4, 966.0], [10.5, 966.0], [10.6, 966.0], [10.7, 966.0], [10.8, 966.0], [10.9, 966.0], [11.0, 966.0], [11.1, 966.0], [11.2, 971.0], [11.3, 971.0], [11.4, 971.0], [11.5, 971.0], [11.6, 971.0], [11.7, 971.0], [11.8, 971.0], [11.9, 971.0], [12.0, 971.0], [12.1, 971.0], [12.2, 971.0], [12.3, 971.0], [12.4, 974.0], [12.5, 974.0], [12.6, 974.0], [12.7, 974.0], [12.8, 974.0], [12.9, 974.0], [13.0, 974.0], [13.1, 974.0], [13.2, 974.0], [13.3, 974.0], [13.4, 974.0], [13.5, 974.0], [13.6, 977.0], [13.7, 977.0], [13.8, 977.0], [13.9, 977.0], [14.0, 977.0], [14.1, 977.0], [14.2, 977.0], [14.3, 977.0], [14.4, 977.0], [14.5, 977.0], [14.6, 977.0], [14.7, 977.0], [14.8, 977.0], [14.9, 978.0], [15.0, 978.0], [15.1, 978.0], [15.2, 978.0], [15.3, 978.0], [15.4, 978.0], [15.5, 978.0], [15.6, 978.0], [15.7, 978.0], [15.8, 978.0], [15.9, 978.0], [16.0, 978.0], [16.1, 997.0], [16.2, 997.0], [16.3, 997.0], [16.4, 997.0], [16.5, 997.0], [16.6, 997.0], [16.7, 997.0], [16.8, 997.0], [16.9, 997.0], [17.0, 997.0], [17.1, 997.0], [17.2, 997.0], [17.3, 1002.0], [17.4, 1002.0], [17.5, 1002.0], [17.6, 1002.0], [17.7, 1002.0], [17.8, 1002.0], [17.9, 1002.0], [18.0, 1002.0], [18.1, 1002.0], [18.2, 1002.0], [18.3, 1002.0], [18.4, 1002.0], [18.5, 1002.0], [18.6, 1006.0], [18.7, 1006.0], [18.8, 1006.0], [18.9, 1006.0], [19.0, 1006.0], [19.1, 1006.0], [19.2, 1006.0], [19.3, 1006.0], [19.4, 1006.0], [19.5, 1006.0], [19.6, 1006.0], [19.7, 1006.0], [19.8, 1006.0], [19.9, 1006.0], [20.0, 1006.0], [20.1, 1006.0], [20.2, 1006.0], [20.3, 1006.0], [20.4, 1006.0], [20.5, 1006.0], [20.6, 1006.0], [20.7, 1006.0], [20.8, 1006.0], [20.9, 1006.0], [21.0, 1013.0], [21.1, 1013.0], [21.2, 1013.0], [21.3, 1013.0], [21.4, 1013.0], [21.5, 1013.0], [21.6, 1013.0], [21.7, 1013.0], [21.8, 1013.0], [21.9, 1013.0], [22.0, 1013.0], [22.1, 1013.0], [22.2, 1013.0], [22.3, 1055.0], [22.4, 1055.0], [22.5, 1055.0], [22.6, 1055.0], [22.7, 1055.0], [22.8, 1055.0], [22.9, 1055.0], [23.0, 1055.0], [23.1, 1055.0], [23.2, 1055.0], [23.3, 1055.0], [23.4, 1055.0], [23.5, 1079.0], [23.6, 1079.0], [23.7, 1079.0], [23.8, 1079.0], [23.9, 1079.0], [24.0, 1079.0], [24.1, 1079.0], [24.2, 1079.0], [24.3, 1079.0], [24.4, 1079.0], [24.5, 1079.0], [24.6, 1079.0], [24.7, 1081.0], [24.8, 1081.0], [24.9, 1081.0], [25.0, 1081.0], [25.1, 1081.0], [25.2, 1081.0], [25.3, 1081.0], [25.4, 1081.0], [25.5, 1081.0], [25.6, 1081.0], [25.7, 1081.0], [25.8, 1081.0], [25.9, 1081.0], [26.0, 1081.0], [26.1, 1081.0], [26.2, 1081.0], [26.3, 1081.0], [26.4, 1081.0], [26.5, 1081.0], [26.6, 1081.0], [26.7, 1081.0], [26.8, 1081.0], [26.9, 1081.0], [27.0, 1081.0], [27.1, 1081.0], [27.2, 1081.0], [27.3, 1081.0], [27.4, 1081.0], [27.5, 1081.0], [27.6, 1081.0], [27.7, 1081.0], [27.8, 1081.0], [27.9, 1081.0], [28.0, 1081.0], [28.1, 1081.0], [28.2, 1081.0], [28.3, 1081.0], [28.4, 1082.0], [28.5, 1082.0], [28.6, 1082.0], [28.7, 1082.0], [28.8, 1082.0], [28.9, 1082.0], [29.0, 1082.0], [29.1, 1082.0], [29.2, 1082.0], [29.3, 1082.0], [29.4, 1082.0], [29.5, 1082.0], [29.6, 1082.0], [29.7, 1085.0], [29.8, 1085.0], [29.9, 1085.0], [30.0, 1085.0], [30.1, 1085.0], [30.2, 1085.0], [30.3, 1085.0], [30.4, 1085.0], [30.5, 1085.0], [30.6, 1085.0], [30.7, 1085.0], [30.8, 1085.0], [30.9, 1091.0], [31.0, 1091.0], [31.1, 1091.0], [31.2, 1091.0], [31.3, 1091.0], [31.4, 1091.0], [31.5, 1091.0], [31.6, 1091.0], [31.7, 1091.0], [31.8, 1091.0], [31.9, 1091.0], [32.0, 1091.0], [32.1, 1102.0], [32.2, 1102.0], [32.3, 1102.0], [32.4, 1102.0], [32.5, 1102.0], [32.6, 1102.0], [32.7, 1102.0], [32.8, 1102.0], [32.9, 1102.0], [33.0, 1102.0], [33.1, 1102.0], [33.2, 1102.0], [33.3, 1102.0], [33.4, 1131.0], [33.5, 1131.0], [33.6, 1131.0], [33.7, 1131.0], [33.8, 1131.0], [33.9, 1131.0], [34.0, 1131.0], [34.1, 1131.0], [34.2, 1131.0], [34.3, 1131.0], [34.4, 1131.0], [34.5, 1131.0], [34.6, 1138.0], [34.7, 1138.0], [34.8, 1138.0], [34.9, 1138.0], [35.0, 1138.0], [35.1, 1138.0], [35.2, 1138.0], [35.3, 1138.0], [35.4, 1138.0], [35.5, 1138.0], [35.6, 1138.0], [35.7, 1138.0], [35.8, 1138.0], [35.9, 1146.0], [36.0, 1146.0], [36.1, 1146.0], [36.2, 1146.0], [36.3, 1146.0], [36.4, 1146.0], [36.5, 1146.0], [36.6, 1146.0], [36.7, 1146.0], [36.8, 1146.0], [36.9, 1146.0], [37.0, 1146.0], [37.1, 1159.0], [37.2, 1159.0], [37.3, 1159.0], [37.4, 1159.0], [37.5, 1159.0], [37.6, 1159.0], [37.7, 1159.0], [37.8, 1159.0], [37.9, 1159.0], [38.0, 1159.0], [38.1, 1159.0], [38.2, 1159.0], [38.3, 1170.0], [38.4, 1170.0], [38.5, 1170.0], [38.6, 1170.0], [38.7, 1170.0], [38.8, 1170.0], [38.9, 1170.0], [39.0, 1170.0], [39.1, 1170.0], [39.2, 1170.0], [39.3, 1170.0], [39.4, 1170.0], [39.5, 1170.0], [39.6, 1173.0], [39.7, 1173.0], [39.8, 1173.0], [39.9, 1173.0], [40.0, 1173.0], [40.1, 1173.0], [40.2, 1173.0], [40.3, 1173.0], [40.4, 1173.0], [40.5, 1173.0], [40.6, 1173.0], [40.7, 1173.0], [40.8, 1180.0], [40.9, 1180.0], [41.0, 1180.0], [41.1, 1180.0], [41.2, 1180.0], [41.3, 1180.0], [41.4, 1180.0], [41.5, 1180.0], [41.6, 1180.0], [41.7, 1180.0], [41.8, 1180.0], [41.9, 1180.0], [42.0, 1185.0], [42.1, 1185.0], [42.2, 1185.0], [42.3, 1185.0], [42.4, 1185.0], [42.5, 1185.0], [42.6, 1185.0], [42.7, 1185.0], [42.8, 1185.0], [42.9, 1185.0], [43.0, 1185.0], [43.1, 1185.0], [43.2, 1185.0], [43.3, 1226.0], [43.4, 1226.0], [43.5, 1226.0], [43.6, 1226.0], [43.7, 1226.0], [43.8, 1226.0], [43.9, 1226.0], [44.0, 1226.0], [44.1, 1226.0], [44.2, 1226.0], [44.3, 1226.0], [44.4, 1226.0], [44.5, 1227.0], [44.6, 1227.0], [44.7, 1227.0], [44.8, 1227.0], [44.9, 1227.0], [45.0, 1227.0], [45.1, 1227.0], [45.2, 1227.0], [45.3, 1227.0], [45.4, 1227.0], [45.5, 1227.0], [45.6, 1227.0], [45.7, 1255.0], [45.8, 1255.0], [45.9, 1255.0], [46.0, 1255.0], [46.1, 1255.0], [46.2, 1255.0], [46.3, 1255.0], [46.4, 1255.0], [46.5, 1255.0], [46.6, 1255.0], [46.7, 1255.0], [46.8, 1255.0], [46.9, 1255.0], [47.0, 1255.0], [47.1, 1255.0], [47.2, 1255.0], [47.3, 1255.0], [47.4, 1255.0], [47.5, 1255.0], [47.6, 1255.0], [47.7, 1255.0], [47.8, 1255.0], [47.9, 1255.0], [48.0, 1255.0], [48.1, 1255.0], [48.2, 1269.0], [48.3, 1269.0], [48.4, 1269.0], [48.5, 1269.0], [48.6, 1269.0], [48.7, 1269.0], [48.8, 1269.0], [48.9, 1269.0], [49.0, 1269.0], [49.1, 1269.0], [49.2, 1269.0], [49.3, 1269.0], [49.4, 1277.0], [49.5, 1277.0], [49.6, 1277.0], [49.7, 1277.0], [49.8, 1277.0], [49.9, 1277.0], [50.0, 1277.0], [50.1, 1277.0], [50.2, 1277.0], [50.3, 1277.0], [50.4, 1277.0], [50.5, 1277.0], [50.6, 1277.0], [50.7, 1354.0], [50.8, 1354.0], [50.9, 1354.0], [51.0, 1354.0], [51.1, 1354.0], [51.2, 1354.0], [51.3, 1354.0], [51.4, 1354.0], [51.5, 1354.0], [51.6, 1354.0], [51.7, 1354.0], [51.8, 1354.0], [51.9, 1354.0], [52.0, 1354.0], [52.1, 1354.0], [52.2, 1354.0], [52.3, 1354.0], [52.4, 1354.0], [52.5, 1354.0], [52.6, 1354.0], [52.7, 1354.0], [52.8, 1354.0], [52.9, 1354.0], [53.0, 1354.0], [53.1, 1364.0], [53.2, 1364.0], [53.3, 1364.0], [53.4, 1364.0], [53.5, 1364.0], [53.6, 1364.0], [53.7, 1364.0], [53.8, 1364.0], [53.9, 1364.0], [54.0, 1364.0], [54.1, 1364.0], [54.2, 1364.0], [54.3, 1364.0], [54.4, 1373.0], [54.5, 1373.0], [54.6, 1373.0], [54.7, 1373.0], [54.8, 1373.0], [54.9, 1373.0], [55.0, 1373.0], [55.1, 1373.0], [55.2, 1373.0], [55.3, 1373.0], [55.4, 1373.0], [55.5, 1373.0], [55.6, 1377.0], [55.7, 1377.0], [55.8, 1377.0], [55.9, 1377.0], [56.0, 1377.0], [56.1, 1377.0], [56.2, 1377.0], [56.3, 1377.0], [56.4, 1377.0], [56.5, 1377.0], [56.6, 1377.0], [56.7, 1377.0], [56.8, 1422.0], [56.9, 1422.0], [57.0, 1422.0], [57.1, 1422.0], [57.2, 1422.0], [57.3, 1422.0], [57.4, 1422.0], [57.5, 1422.0], [57.6, 1422.0], [57.7, 1422.0], [57.8, 1422.0], [57.9, 1422.0], [58.0, 1422.0], [58.1, 1426.0], [58.2, 1426.0], [58.3, 1426.0], [58.4, 1426.0], [58.5, 1426.0], [58.6, 1426.0], [58.7, 1426.0], [58.8, 1426.0], [58.9, 1426.0], [59.0, 1426.0], [59.1, 1426.0], [59.2, 1426.0], [59.3, 1430.0], [59.4, 1430.0], [59.5, 1430.0], [59.6, 1430.0], [59.7, 1430.0], [59.8, 1430.0], [59.9, 1430.0], [60.0, 1430.0], [60.1, 1430.0], [60.2, 1430.0], [60.3, 1430.0], [60.4, 1430.0], [60.5, 1458.0], [60.6, 1458.0], [60.7, 1458.0], [60.8, 1458.0], [60.9, 1458.0], [61.0, 1458.0], [61.1, 1458.0], [61.2, 1458.0], [61.3, 1458.0], [61.4, 1458.0], [61.5, 1458.0], [61.6, 1458.0], [61.7, 1458.0], [61.8, 1488.0], [61.9, 1488.0], [62.0, 1488.0], [62.1, 1488.0], [62.2, 1488.0], [62.3, 1488.0], [62.4, 1488.0], [62.5, 1488.0], [62.6, 1488.0], [62.7, 1488.0], [62.8, 1488.0], [62.9, 1488.0], [63.0, 1495.0], [63.1, 1495.0], [63.2, 1495.0], [63.3, 1495.0], [63.4, 1495.0], [63.5, 1495.0], [63.6, 1495.0], [63.7, 1495.0], [63.8, 1495.0], [63.9, 1495.0], [64.0, 1495.0], [64.1, 1495.0], [64.2, 1501.0], [64.3, 1501.0], [64.4, 1501.0], [64.5, 1501.0], [64.6, 1501.0], [64.7, 1501.0], [64.8, 1501.0], [64.9, 1501.0], [65.0, 1501.0], [65.1, 1501.0], [65.2, 1501.0], [65.3, 1501.0], [65.4, 1501.0], [65.5, 1513.0], [65.6, 1513.0], [65.7, 1513.0], [65.8, 1513.0], [65.9, 1513.0], [66.0, 1513.0], [66.1, 1513.0], [66.2, 1513.0], [66.3, 1513.0], [66.4, 1513.0], [66.5, 1513.0], [66.6, 1513.0], [66.7, 1526.0], [66.8, 1526.0], [66.9, 1526.0], [67.0, 1526.0], [67.1, 1526.0], [67.2, 1526.0], [67.3, 1526.0], [67.4, 1526.0], [67.5, 1526.0], [67.6, 1526.0], [67.7, 1526.0], [67.8, 1526.0], [67.9, 1526.0], [68.0, 1534.0], [68.1, 1534.0], [68.2, 1534.0], [68.3, 1534.0], [68.4, 1534.0], [68.5, 1534.0], [68.6, 1534.0], [68.7, 1534.0], [68.8, 1534.0], [68.9, 1534.0], [69.0, 1534.0], [69.1, 1534.0], [69.2, 1545.0], [69.3, 1545.0], [69.4, 1545.0], [69.5, 1545.0], [69.6, 1545.0], [69.7, 1545.0], [69.8, 1545.0], [69.9, 1545.0], [70.0, 1545.0], [70.1, 1545.0], [70.2, 1545.0], [70.3, 1545.0], [70.4, 1558.0], [70.5, 1558.0], [70.6, 1558.0], [70.7, 1558.0], [70.8, 1558.0], [70.9, 1558.0], [71.0, 1558.0], [71.1, 1558.0], [71.2, 1558.0], [71.3, 1558.0], [71.4, 1558.0], [71.5, 1558.0], [71.6, 1558.0], [71.7, 1585.0], [71.8, 1585.0], [71.9, 1585.0], [72.0, 1585.0], [72.1, 1585.0], [72.2, 1585.0], [72.3, 1585.0], [72.4, 1585.0], [72.5, 1585.0], [72.6, 1585.0], [72.7, 1585.0], [72.8, 1585.0], [72.9, 1609.0], [73.0, 1609.0], [73.1, 1609.0], [73.2, 1609.0], [73.3, 1609.0], [73.4, 1609.0], [73.5, 1609.0], [73.6, 1609.0], [73.7, 1609.0], [73.8, 1609.0], [73.9, 1609.0], [74.0, 1609.0], [74.1, 1616.0], [74.2, 1616.0], [74.3, 1616.0], [74.4, 1616.0], [74.5, 1616.0], [74.6, 1616.0], [74.7, 1616.0], [74.8, 1616.0], [74.9, 1616.0], [75.0, 1616.0], [75.1, 1616.0], [75.2, 1616.0], [75.3, 1616.0], [75.4, 1628.0], [75.5, 1628.0], [75.6, 1628.0], [75.7, 1628.0], [75.8, 1628.0], [75.9, 1628.0], [76.0, 1628.0], [76.1, 1628.0], [76.2, 1628.0], [76.3, 1628.0], [76.4, 1628.0], [76.5, 1628.0], [76.6, 1631.0], [76.7, 1631.0], [76.8, 1631.0], [76.9, 1631.0], [77.0, 1631.0], [77.1, 1631.0], [77.2, 1631.0], [77.3, 1631.0], [77.4, 1631.0], [77.5, 1631.0], [77.6, 1631.0], [77.7, 1631.0], [77.8, 1639.0], [77.9, 1639.0], [78.0, 1639.0], [78.1, 1639.0], [78.2, 1639.0], [78.3, 1639.0], [78.4, 1639.0], [78.5, 1639.0], [78.6, 1639.0], [78.7, 1639.0], [78.8, 1639.0], [78.9, 1639.0], [79.0, 1639.0], [79.1, 1640.0], [79.2, 1640.0], [79.3, 1640.0], [79.4, 1640.0], [79.5, 1640.0], [79.6, 1640.0], [79.7, 1640.0], [79.8, 1640.0], [79.9, 1640.0], [80.0, 1640.0], [80.1, 1640.0], [80.2, 1640.0], [80.3, 1659.0], [80.4, 1659.0], [80.5, 1659.0], [80.6, 1659.0], [80.7, 1659.0], [80.8, 1659.0], [80.9, 1659.0], [81.0, 1659.0], [81.1, 1659.0], [81.2, 1659.0], [81.3, 1659.0], [81.4, 1659.0], [81.5, 1697.0], [81.6, 1697.0], [81.7, 1697.0], [81.8, 1697.0], [81.9, 1697.0], [82.0, 1697.0], [82.1, 1697.0], [82.2, 1697.0], [82.3, 1697.0], [82.4, 1697.0], [82.5, 1697.0], [82.6, 1697.0], [82.7, 1697.0], [82.8, 1727.0], [82.9, 1727.0], [83.0, 1727.0], [83.1, 1727.0], [83.2, 1727.0], [83.3, 1727.0], [83.4, 1727.0], [83.5, 1727.0], [83.6, 1727.0], [83.7, 1727.0], [83.8, 1727.0], [83.9, 1727.0], [84.0, 1730.0], [84.1, 1730.0], [84.2, 1730.0], [84.3, 1730.0], [84.4, 1730.0], [84.5, 1730.0], [84.6, 1730.0], [84.7, 1730.0], [84.8, 1730.0], [84.9, 1730.0], [85.0, 1730.0], [85.1, 1730.0], [85.2, 1749.0], [85.3, 1749.0], [85.4, 1749.0], [85.5, 1749.0], [85.6, 1749.0], [85.7, 1749.0], [85.8, 1749.0], [85.9, 1749.0], [86.0, 1749.0], [86.1, 1749.0], [86.2, 1749.0], [86.3, 1749.0], [86.4, 1749.0], [86.5, 1771.0], [86.6, 1771.0], [86.7, 1771.0], [86.8, 1771.0], [86.9, 1771.0], [87.0, 1771.0], [87.1, 1771.0], [87.2, 1771.0], [87.3, 1771.0], [87.4, 1771.0], [87.5, 1771.0], [87.6, 1771.0], [87.7, 1784.0], [87.8, 1784.0], [87.9, 1784.0], [88.0, 1784.0], [88.1, 1784.0], [88.2, 1784.0], [88.3, 1784.0], [88.4, 1784.0], [88.5, 1784.0], [88.6, 1784.0], [88.7, 1784.0], [88.8, 1784.0], [88.9, 1824.0], [89.0, 1824.0], [89.1, 1824.0], [89.2, 1824.0], [89.3, 1824.0], [89.4, 1824.0], [89.5, 1824.0], [89.6, 1824.0], [89.7, 1824.0], [89.8, 1824.0], [89.9, 1824.0], [90.0, 1824.0], [90.1, 1824.0], [90.2, 1906.0], [90.3, 1906.0], [90.4, 1906.0], [90.5, 1906.0], [90.6, 1906.0], [90.7, 1906.0], [90.8, 1906.0], [90.9, 1906.0], [91.0, 1906.0], [91.1, 1906.0], [91.2, 1906.0], [91.3, 1906.0], [91.4, 1925.0], [91.5, 1925.0], [91.6, 1925.0], [91.7, 1925.0], [91.8, 1925.0], [91.9, 1925.0], [92.0, 1925.0], [92.1, 1925.0], [92.2, 1925.0], [92.3, 1925.0], [92.4, 1925.0], [92.5, 1925.0], [92.6, 2162.0], [92.7, 2162.0], [92.8, 2162.0], [92.9, 2162.0], [93.0, 2162.0], [93.1, 2162.0], [93.2, 2162.0], [93.3, 2162.0], [93.4, 2162.0], [93.5, 2162.0], [93.6, 2162.0], [93.7, 2162.0], [93.8, 2162.0], [93.9, 2180.0], [94.0, 2180.0], [94.1, 2180.0], [94.2, 2180.0], [94.3, 2180.0], [94.4, 2180.0], [94.5, 2180.0], [94.6, 2180.0], [94.7, 2180.0], [94.8, 2180.0], [94.9, 2180.0], [95.0, 2180.0], [95.1, 2213.0], [95.2, 2213.0], [95.3, 2213.0], [95.4, 2213.0], [95.5, 2213.0], [95.6, 2213.0], [95.7, 2213.0], [95.8, 2213.0], [95.9, 2213.0], [96.0, 2213.0], [96.1, 2213.0], [96.2, 2213.0], [96.3, 2246.0], [96.4, 2246.0], [96.5, 2246.0], [96.6, 2246.0], [96.7, 2246.0], [96.8, 2246.0], [96.9, 2246.0], [97.0, 2246.0], [97.1, 2246.0], [97.2, 2246.0], [97.3, 2246.0], [97.4, 2246.0], [97.5, 2246.0], [97.6, 2580.0], [97.7, 2580.0], [97.8, 2580.0], [97.9, 2580.0], [98.0, 2580.0], [98.1, 2580.0], [98.2, 2580.0], [98.3, 2580.0], [98.4, 2580.0], [98.5, 2580.0], [98.6, 2580.0], [98.7, 2580.0], [98.8, 25878.0], [98.9, 25878.0], [99.0, 25878.0], [99.1, 25878.0], [99.2, 25878.0], [99.3, 25878.0], [99.4, 25878.0], [99.5, 25878.0], [99.6, 25878.0], [99.7, 25878.0], [99.8, 25878.0], [99.9, 25878.0], [100.0, 25878.0]], "isOverall": false, "label": "registrarEntradaSinSalida", "isController": false}, {"data": [[0.0, 326.0], [0.1, 326.0], [0.2, 327.0], [0.3, 338.0], [0.4, 338.0], [0.5, 338.0], [0.6, 339.0], [0.7, 339.0], [0.8, 340.0], [0.9, 342.0], [1.0, 342.0], [1.1, 343.0], [1.2, 344.0], [1.3, 345.0], [1.4, 345.0], [1.5, 345.0], [1.6, 346.0], [1.7, 346.0], [1.8, 346.0], [1.9, 347.0], [2.0, 347.0], [2.1, 347.0], [2.2, 347.0], [2.3, 347.0], [2.4, 347.0], [2.5, 347.0], [2.6, 348.0], [2.7, 348.0], [2.8, 348.0], [2.9, 349.0], [3.0, 349.0], [3.1, 349.0], [3.2, 349.0], [3.3, 349.0], [3.4, 349.0], [3.5, 349.0], [3.6, 349.0], [3.7, 349.0], [3.8, 349.0], [3.9, 349.0], [4.0, 349.0], [4.1, 350.0], [4.2, 350.0], [4.3, 350.0], [4.4, 351.0], [4.5, 351.0], [4.6, 351.0], [4.7, 351.0], [4.8, 352.0], [4.9, 352.0], [5.0, 352.0], [5.1, 353.0], [5.2, 353.0], [5.3, 353.0], [5.4, 353.0], [5.5, 353.0], [5.6, 353.0], [5.7, 354.0], [5.8, 355.0], [5.9, 355.0], [6.0, 355.0], [6.1, 355.0], [6.2, 355.0], [6.3, 355.0], [6.4, 356.0], [6.5, 356.0], [6.6, 356.0], [6.7, 356.0], [6.8, 357.0], [6.9, 357.0], [7.0, 357.0], [7.1, 357.0], [7.2, 357.0], [7.3, 357.0], [7.4, 357.0], [7.5, 357.0], [7.6, 357.0], [7.7, 358.0], [7.8, 358.0], [7.9, 358.0], [8.0, 358.0], [8.1, 359.0], [8.2, 359.0], [8.3, 359.0], [8.4, 359.0], [8.5, 359.0], [8.6, 359.0], [8.7, 359.0], [8.8, 360.0], [8.9, 360.0], [9.0, 360.0], [9.1, 361.0], [9.2, 361.0], [9.3, 361.0], [9.4, 361.0], [9.5, 362.0], [9.6, 362.0], [9.7, 362.0], [9.8, 363.0], [9.9, 363.0], [10.0, 363.0], [10.1, 363.0], [10.2, 363.0], [10.3, 364.0], [10.4, 364.0], [10.5, 364.0], [10.6, 364.0], [10.7, 364.0], [10.8, 364.0], [10.9, 364.0], [11.0, 364.0], [11.1, 365.0], [11.2, 365.0], [11.3, 365.0], [11.4, 365.0], [11.5, 365.0], [11.6, 365.0], [11.7, 365.0], [11.8, 366.0], [11.9, 366.0], [12.0, 366.0], [12.1, 367.0], [12.2, 367.0], [12.3, 367.0], [12.4, 367.0], [12.5, 367.0], [12.6, 367.0], [12.7, 367.0], [12.8, 367.0], [12.9, 367.0], [13.0, 368.0], [13.1, 368.0], [13.2, 368.0], [13.3, 368.0], [13.4, 368.0], [13.5, 368.0], [13.6, 368.0], [13.7, 368.0], [13.8, 368.0], [13.9, 368.0], [14.0, 368.0], [14.1, 368.0], [14.2, 368.0], [14.3, 368.0], [14.4, 369.0], [14.5, 369.0], [14.6, 370.0], [14.7, 370.0], [14.8, 370.0], [14.9, 370.0], [15.0, 371.0], [15.1, 371.0], [15.2, 371.0], [15.3, 372.0], [15.4, 372.0], [15.5, 372.0], [15.6, 372.0], [15.7, 372.0], [15.8, 372.0], [15.9, 373.0], [16.0, 373.0], [16.1, 373.0], [16.2, 373.0], [16.3, 374.0], [16.4, 374.0], [16.5, 374.0], [16.6, 374.0], [16.7, 374.0], [16.8, 374.0], [16.9, 374.0], [17.0, 374.0], [17.1, 374.0], [17.2, 374.0], [17.3, 375.0], [17.4, 375.0], [17.5, 375.0], [17.6, 375.0], [17.7, 376.0], [17.8, 376.0], [17.9, 376.0], [18.0, 376.0], [18.1, 376.0], [18.2, 376.0], [18.3, 376.0], [18.4, 376.0], [18.5, 376.0], [18.6, 376.0], [18.7, 376.0], [18.8, 377.0], [18.9, 377.0], [19.0, 377.0], [19.1, 377.0], [19.2, 378.0], [19.3, 378.0], [19.4, 378.0], [19.5, 378.0], [19.6, 378.0], [19.7, 378.0], [19.8, 378.0], [19.9, 378.0], [20.0, 379.0], [20.1, 379.0], [20.2, 379.0], [20.3, 379.0], [20.4, 379.0], [20.5, 379.0], [20.6, 379.0], [20.7, 379.0], [20.8, 379.0], [20.9, 379.0], [21.0, 379.0], [21.1, 380.0], [21.2, 380.0], [21.3, 380.0], [21.4, 380.0], [21.5, 380.0], [21.6, 380.0], [21.7, 380.0], [21.8, 380.0], [21.9, 380.0], [22.0, 380.0], [22.1, 381.0], [22.2, 381.0], [22.3, 381.0], [22.4, 381.0], [22.5, 381.0], [22.6, 381.0], [22.7, 381.0], [22.8, 381.0], [22.9, 381.0], [23.0, 381.0], [23.1, 381.0], [23.2, 382.0], [23.3, 382.0], [23.4, 382.0], [23.5, 382.0], [23.6, 382.0], [23.7, 382.0], [23.8, 382.0], [23.9, 382.0], [24.0, 382.0], [24.1, 382.0], [24.2, 382.0], [24.3, 382.0], [24.4, 382.0], [24.5, 383.0], [24.6, 383.0], [24.7, 383.0], [24.8, 383.0], [24.9, 383.0], [25.0, 383.0], [25.1, 383.0], [25.2, 383.0], [25.3, 383.0], [25.4, 383.0], [25.5, 383.0], [25.6, 383.0], [25.7, 383.0], [25.8, 384.0], [25.9, 384.0], [26.0, 384.0], [26.1, 384.0], [26.2, 384.0], [26.3, 384.0], [26.4, 384.0], [26.5, 384.0], [26.6, 384.0], [26.7, 384.0], [26.8, 384.0], [26.9, 384.0], [27.0, 385.0], [27.1, 385.0], [27.2, 385.0], [27.3, 385.0], [27.4, 385.0], [27.5, 385.0], [27.6, 385.0], [27.7, 385.0], [27.8, 386.0], [27.9, 386.0], [28.0, 386.0], [28.1, 386.0], [28.2, 386.0], [28.3, 386.0], [28.4, 386.0], [28.5, 386.0], [28.6, 386.0], [28.7, 386.0], [28.8, 386.0], [28.9, 386.0], [29.0, 386.0], [29.1, 386.0], [29.2, 386.0], [29.3, 386.0], [29.4, 386.0], [29.5, 387.0], [29.6, 387.0], [29.7, 387.0], [29.8, 387.0], [29.9, 387.0], [30.0, 387.0], [30.1, 387.0], [30.2, 387.0], [30.3, 387.0], [30.4, 387.0], [30.5, 387.0], [30.6, 387.0], [30.7, 387.0], [30.8, 387.0], [30.9, 387.0], [31.0, 388.0], [31.1, 388.0], [31.2, 388.0], [31.3, 388.0], [31.4, 388.0], [31.5, 388.0], [31.6, 388.0], [31.7, 388.0], [31.8, 388.0], [31.9, 388.0], [32.0, 389.0], [32.1, 389.0], [32.2, 389.0], [32.3, 389.0], [32.4, 389.0], [32.5, 389.0], [32.6, 389.0], [32.7, 389.0], [32.8, 389.0], [32.9, 389.0], [33.0, 389.0], [33.1, 389.0], [33.2, 389.0], [33.3, 389.0], [33.4, 390.0], [33.5, 390.0], [33.6, 390.0], [33.7, 390.0], [33.8, 390.0], [33.9, 390.0], [34.0, 390.0], [34.1, 390.0], [34.2, 390.0], [34.3, 390.0], [34.4, 390.0], [34.5, 390.0], [34.6, 390.0], [34.7, 391.0], [34.8, 391.0], [34.9, 391.0], [35.0, 391.0], [35.1, 391.0], [35.2, 391.0], [35.3, 391.0], [35.4, 391.0], [35.5, 391.0], [35.6, 391.0], [35.7, 391.0], [35.8, 391.0], [35.9, 392.0], [36.0, 392.0], [36.1, 392.0], [36.2, 392.0], [36.3, 392.0], [36.4, 392.0], [36.5, 392.0], [36.6, 392.0], [36.7, 392.0], [36.8, 392.0], [36.9, 392.0], [37.0, 392.0], [37.1, 392.0], [37.2, 393.0], [37.3, 393.0], [37.4, 393.0], [37.5, 393.0], [37.6, 393.0], [37.7, 393.0], [37.8, 393.0], [37.9, 393.0], [38.0, 393.0], [38.1, 393.0], [38.2, 393.0], [38.3, 393.0], [38.4, 393.0], [38.5, 393.0], [38.6, 394.0], [38.7, 394.0], [38.8, 394.0], [38.9, 394.0], [39.0, 394.0], [39.1, 394.0], [39.2, 394.0], [39.3, 394.0], [39.4, 394.0], [39.5, 395.0], [39.6, 395.0], [39.7, 395.0], [39.8, 395.0], [39.9, 395.0], [40.0, 395.0], [40.1, 395.0], [40.2, 395.0], [40.3, 395.0], [40.4, 395.0], [40.5, 395.0], [40.6, 395.0], [40.7, 395.0], [40.8, 395.0], [40.9, 395.0], [41.0, 395.0], [41.1, 395.0], [41.2, 395.0], [41.3, 395.0], [41.4, 395.0], [41.5, 395.0], [41.6, 395.0], [41.7, 395.0], [41.8, 396.0], [41.9, 396.0], [42.0, 396.0], [42.1, 396.0], [42.2, 396.0], [42.3, 396.0], [42.4, 396.0], [42.5, 396.0], [42.6, 396.0], [42.7, 396.0], [42.8, 396.0], [42.9, 397.0], [43.0, 397.0], [43.1, 397.0], [43.2, 397.0], [43.3, 397.0], [43.4, 397.0], [43.5, 397.0], [43.6, 397.0], [43.7, 397.0], [43.8, 397.0], [43.9, 398.0], [44.0, 398.0], [44.1, 398.0], [44.2, 398.0], [44.3, 398.0], [44.4, 398.0], [44.5, 398.0], [44.6, 398.0], [44.7, 399.0], [44.8, 399.0], [44.9, 399.0], [45.0, 399.0], [45.1, 399.0], [45.2, 399.0], [45.3, 399.0], [45.4, 399.0], [45.5, 399.0], [45.6, 399.0], [45.7, 400.0], [45.8, 400.0], [45.9, 400.0], [46.0, 400.0], [46.1, 400.0], [46.2, 400.0], [46.3, 400.0], [46.4, 400.0], [46.5, 400.0], [46.6, 400.0], [46.7, 400.0], [46.8, 400.0], [46.9, 400.0], [47.0, 400.0], [47.1, 400.0], [47.2, 400.0], [47.3, 400.0], [47.4, 400.0], [47.5, 401.0], [47.6, 401.0], [47.7, 401.0], [47.8, 401.0], [47.9, 401.0], [48.0, 401.0], [48.1, 401.0], [48.2, 401.0], [48.3, 402.0], [48.4, 402.0], [48.5, 402.0], [48.6, 402.0], [48.7, 402.0], [48.8, 402.0], [48.9, 402.0], [49.0, 402.0], [49.1, 402.0], [49.2, 402.0], [49.3, 402.0], [49.4, 402.0], [49.5, 403.0], [49.6, 403.0], [49.7, 403.0], [49.8, 403.0], [49.9, 403.0], [50.0, 403.0], [50.1, 404.0], [50.2, 404.0], [50.3, 404.0], [50.4, 404.0], [50.5, 404.0], [50.6, 404.0], [50.7, 404.0], [50.8, 404.0], [50.9, 404.0], [51.0, 404.0], [51.1, 404.0], [51.2, 404.0], [51.3, 404.0], [51.4, 404.0], [51.5, 404.0], [51.6, 405.0], [51.7, 405.0], [51.8, 405.0], [51.9, 405.0], [52.0, 405.0], [52.1, 405.0], [52.2, 405.0], [52.3, 405.0], [52.4, 405.0], [52.5, 405.0], [52.6, 405.0], [52.7, 405.0], [52.8, 405.0], [52.9, 405.0], [53.0, 405.0], [53.1, 405.0], [53.2, 405.0], [53.3, 406.0], [53.4, 406.0], [53.5, 406.0], [53.6, 406.0], [53.7, 406.0], [53.8, 406.0], [53.9, 406.0], [54.0, 406.0], [54.1, 406.0], [54.2, 406.0], [54.3, 406.0], [54.4, 406.0], [54.5, 406.0], [54.6, 406.0], [54.7, 407.0], [54.8, 407.0], [54.9, 407.0], [55.0, 407.0], [55.1, 407.0], [55.2, 407.0], [55.3, 407.0], [55.4, 408.0], [55.5, 408.0], [55.6, 408.0], [55.7, 408.0], [55.8, 408.0], [55.9, 408.0], [56.0, 408.0], [56.1, 408.0], [56.2, 408.0], [56.3, 409.0], [56.4, 409.0], [56.5, 409.0], [56.6, 409.0], [56.7, 409.0], [56.8, 409.0], [56.9, 409.0], [57.0, 409.0], [57.1, 409.0], [57.2, 409.0], [57.3, 409.0], [57.4, 409.0], [57.5, 409.0], [57.6, 409.0], [57.7, 409.0], [57.8, 409.0], [57.9, 409.0], [58.0, 409.0], [58.1, 409.0], [58.2, 409.0], [58.3, 410.0], [58.4, 410.0], [58.5, 410.0], [58.6, 410.0], [58.7, 410.0], [58.8, 410.0], [58.9, 410.0], [59.0, 410.0], [59.1, 410.0], [59.2, 410.0], [59.3, 410.0], [59.4, 410.0], [59.5, 410.0], [59.6, 410.0], [59.7, 410.0], [59.8, 411.0], [59.9, 411.0], [60.0, 411.0], [60.1, 411.0], [60.2, 411.0], [60.3, 411.0], [60.4, 411.0], [60.5, 411.0], [60.6, 411.0], [60.7, 411.0], [60.8, 411.0], [60.9, 412.0], [61.0, 412.0], [61.1, 412.0], [61.2, 412.0], [61.3, 412.0], [61.4, 412.0], [61.5, 412.0], [61.6, 412.0], [61.7, 412.0], [61.8, 412.0], [61.9, 412.0], [62.0, 412.0], [62.1, 413.0], [62.2, 413.0], [62.3, 413.0], [62.4, 413.0], [62.5, 413.0], [62.6, 413.0], [62.7, 413.0], [62.8, 413.0], [62.9, 413.0], [63.0, 413.0], [63.1, 413.0], [63.2, 413.0], [63.3, 413.0], [63.4, 413.0], [63.5, 414.0], [63.6, 414.0], [63.7, 414.0], [63.8, 414.0], [63.9, 414.0], [64.0, 414.0], [64.1, 414.0], [64.2, 414.0], [64.3, 414.0], [64.4, 414.0], [64.5, 415.0], [64.6, 415.0], [64.7, 415.0], [64.8, 415.0], [64.9, 415.0], [65.0, 415.0], [65.1, 416.0], [65.2, 416.0], [65.3, 416.0], [65.4, 416.0], [65.5, 416.0], [65.6, 416.0], [65.7, 416.0], [65.8, 417.0], [65.9, 417.0], [66.0, 417.0], [66.1, 417.0], [66.2, 417.0], [66.3, 417.0], [66.4, 418.0], [66.5, 418.0], [66.6, 418.0], [66.7, 418.0], [66.8, 418.0], [66.9, 418.0], [67.0, 418.0], [67.1, 418.0], [67.2, 418.0], [67.3, 418.0], [67.4, 418.0], [67.5, 418.0], [67.6, 418.0], [67.7, 418.0], [67.8, 419.0], [67.9, 419.0], [68.0, 419.0], [68.1, 419.0], [68.2, 419.0], [68.3, 419.0], [68.4, 420.0], [68.5, 420.0], [68.6, 420.0], [68.7, 420.0], [68.8, 420.0], [68.9, 420.0], [69.0, 420.0], [69.1, 421.0], [69.2, 421.0], [69.3, 421.0], [69.4, 421.0], [69.5, 421.0], [69.6, 421.0], [69.7, 421.0], [69.8, 421.0], [69.9, 421.0], [70.0, 421.0], [70.1, 422.0], [70.2, 422.0], [70.3, 422.0], [70.4, 423.0], [70.5, 423.0], [70.6, 423.0], [70.7, 423.0], [70.8, 423.0], [70.9, 423.0], [71.0, 423.0], [71.1, 423.0], [71.2, 423.0], [71.3, 423.0], [71.4, 423.0], [71.5, 423.0], [71.6, 423.0], [71.7, 424.0], [71.8, 425.0], [71.9, 425.0], [72.0, 425.0], [72.1, 425.0], [72.2, 425.0], [72.3, 425.0], [72.4, 425.0], [72.5, 425.0], [72.6, 425.0], [72.7, 425.0], [72.8, 425.0], [72.9, 425.0], [73.0, 426.0], [73.1, 426.0], [73.2, 426.0], [73.3, 426.0], [73.4, 426.0], [73.5, 426.0], [73.6, 427.0], [73.7, 427.0], [73.8, 427.0], [73.9, 427.0], [74.0, 428.0], [74.1, 428.0], [74.2, 428.0], [74.3, 428.0], [74.4, 428.0], [74.5, 428.0], [74.6, 428.0], [74.7, 429.0], [74.8, 429.0], [74.9, 429.0], [75.0, 430.0], [75.1, 430.0], [75.2, 430.0], [75.3, 430.0], [75.4, 430.0], [75.5, 430.0], [75.6, 430.0], [75.7, 430.0], [75.8, 430.0], [75.9, 430.0], [76.0, 431.0], [76.1, 431.0], [76.2, 431.0], [76.3, 431.0], [76.4, 431.0], [76.5, 432.0], [76.6, 433.0], [76.7, 433.0], [76.8, 433.0], [76.9, 434.0], [77.0, 434.0], [77.1, 434.0], [77.2, 434.0], [77.3, 434.0], [77.4, 434.0], [77.5, 434.0], [77.6, 434.0], [77.7, 434.0], [77.8, 434.0], [77.9, 435.0], [78.0, 435.0], [78.1, 435.0], [78.2, 435.0], [78.3, 435.0], [78.4, 435.0], [78.5, 436.0], [78.6, 436.0], [78.7, 436.0], [78.8, 436.0], [78.9, 436.0], [79.0, 436.0], [79.1, 436.0], [79.2, 436.0], [79.3, 437.0], [79.4, 437.0], [79.5, 437.0], [79.6, 437.0], [79.7, 437.0], [79.8, 437.0], [79.9, 437.0], [80.0, 437.0], [80.1, 437.0], [80.2, 438.0], [80.3, 438.0], [80.4, 438.0], [80.5, 439.0], [80.6, 439.0], [80.7, 439.0], [80.8, 439.0], [80.9, 439.0], [81.0, 439.0], [81.1, 440.0], [81.2, 440.0], [81.3, 440.0], [81.4, 440.0], [81.5, 441.0], [81.6, 441.0], [81.7, 441.0], [81.8, 441.0], [81.9, 441.0], [82.0, 441.0], [82.1, 442.0], [82.2, 442.0], [82.3, 442.0], [82.4, 442.0], [82.5, 442.0], [82.6, 443.0], [82.7, 443.0], [82.8, 443.0], [82.9, 443.0], [83.0, 443.0], [83.1, 443.0], [83.2, 443.0], [83.3, 443.0], [83.4, 443.0], [83.5, 443.0], [83.6, 444.0], [83.7, 444.0], [83.8, 444.0], [83.9, 444.0], [84.0, 444.0], [84.1, 444.0], [84.2, 445.0], [84.3, 445.0], [84.4, 445.0], [84.5, 445.0], [84.6, 445.0], [84.7, 446.0], [84.8, 446.0], [84.9, 447.0], [85.0, 447.0], [85.1, 447.0], [85.2, 447.0], [85.3, 447.0], [85.4, 447.0], [85.5, 448.0], [85.6, 448.0], [85.7, 448.0], [85.8, 448.0], [85.9, 449.0], [86.0, 449.0], [86.1, 449.0], [86.2, 449.0], [86.3, 449.0], [86.4, 450.0], [86.5, 450.0], [86.6, 450.0], [86.7, 451.0], [86.8, 451.0], [86.9, 451.0], [87.0, 452.0], [87.1, 452.0], [87.2, 452.0], [87.3, 452.0], [87.4, 453.0], [87.5, 453.0], [87.6, 453.0], [87.7, 454.0], [87.8, 454.0], [87.9, 454.0], [88.0, 455.0], [88.1, 455.0], [88.2, 455.0], [88.3, 455.0], [88.4, 456.0], [88.5, 457.0], [88.6, 457.0], [88.7, 458.0], [88.8, 458.0], [88.9, 458.0], [89.0, 458.0], [89.1, 458.0], [89.2, 458.0], [89.3, 459.0], [89.4, 459.0], [89.5, 459.0], [89.6, 459.0], [89.7, 459.0], [89.8, 460.0], [89.9, 460.0], [90.0, 461.0], [90.1, 461.0], [90.2, 461.0], [90.3, 462.0], [90.4, 462.0], [90.5, 462.0], [90.6, 462.0], [90.7, 462.0], [90.8, 462.0], [90.9, 462.0], [91.0, 463.0], [91.1, 465.0], [91.2, 465.0], [91.3, 466.0], [91.4, 467.0], [91.5, 467.0], [91.6, 468.0], [91.7, 470.0], [91.8, 471.0], [91.9, 471.0], [92.0, 472.0], [92.1, 472.0], [92.2, 472.0], [92.3, 472.0], [92.4, 473.0], [92.5, 473.0], [92.6, 474.0], [92.7, 475.0], [92.8, 475.0], [92.9, 476.0], [93.0, 477.0], [93.1, 478.0], [93.2, 478.0], [93.3, 480.0], [93.4, 480.0], [93.5, 480.0], [93.6, 482.0], [93.7, 482.0], [93.8, 482.0], [93.9, 482.0], [94.0, 485.0], [94.1, 485.0], [94.2, 487.0], [94.3, 488.0], [94.4, 491.0], [94.5, 491.0], [94.6, 491.0], [94.7, 492.0], [94.8, 492.0], [94.9, 493.0], [95.0, 494.0], [95.1, 494.0], [95.2, 495.0], [95.3, 497.0], [95.4, 499.0], [95.5, 499.0], [95.6, 500.0], [95.7, 501.0], [95.8, 501.0], [95.9, 508.0], [96.0, 510.0], [96.1, 510.0], [96.2, 514.0], [96.3, 515.0], [96.4, 515.0], [96.5, 515.0], [96.6, 516.0], [96.7, 521.0], [96.8, 521.0], [96.9, 522.0], [97.0, 525.0], [97.1, 525.0], [97.2, 526.0], [97.3, 530.0], [97.4, 530.0], [97.5, 531.0], [97.6, 533.0], [97.7, 534.0], [97.8, 534.0], [97.9, 535.0], [98.0, 535.0], [98.1, 535.0], [98.2, 543.0], [98.3, 551.0], [98.4, 551.0], [98.5, 552.0], [98.6, 560.0], [98.7, 560.0], [98.8, 565.0], [98.9, 583.0], [99.0, 596.0], [99.1, 596.0], [99.2, 616.0], [99.3, 651.0], [99.4, 651.0], [99.5, 691.0], [99.6, 704.0], [99.7, 704.0], [99.8, 780.0], [99.9, 825.0], [100.0, 825.0]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[0.0, 1281.0], [0.1, 1281.0], [0.2, 1281.0], [0.3, 1281.0], [0.4, 1281.0], [0.5, 1281.0], [0.6, 1281.0], [0.7, 1281.0], [0.8, 1281.0], [0.9, 1281.0], [1.0, 1281.0], [1.1, 1281.0], [1.2, 1281.0], [1.3, 1281.0], [1.4, 1281.0], [1.5, 1281.0], [1.6, 1281.0], [1.7, 1281.0], [1.8, 1281.0], [1.9, 1281.0], [2.0, 1281.0], [2.1, 1281.0], [2.2, 1281.0], [2.3, 1281.0], [2.4, 1281.0], [2.5, 1281.0], [2.6, 1281.0], [2.7, 1281.0], [2.8, 1281.0], [2.9, 1281.0], [3.0, 1281.0], [3.1, 1281.0], [3.2, 1281.0], [3.3, 1281.0], [3.4, 1281.0], [3.5, 1281.0], [3.6, 1281.0], [3.7, 1281.0], [3.8, 1281.0], [3.9, 1281.0], [4.0, 1281.0], [4.1, 1281.0], [4.2, 1281.0], [4.3, 1281.0], [4.4, 1281.0], [4.5, 1281.0], [4.6, 1281.0], [4.7, 1281.0], [4.8, 1281.0], [4.9, 1281.0], [5.0, 1281.0], [5.1, 1281.0], [5.2, 1281.0], [5.3, 1281.0], [5.4, 1281.0], [5.5, 1281.0], [5.6, 1281.0], [5.7, 1281.0], [5.8, 1281.0], [5.9, 1281.0], [6.0, 1281.0], [6.1, 1281.0], [6.2, 1281.0], [6.3, 1281.0], [6.4, 1281.0], [6.5, 1281.0], [6.6, 1281.0], [6.7, 1281.0], [6.8, 1281.0], [6.9, 1281.0], [7.0, 1281.0], [7.1, 1281.0], [7.2, 1281.0], [7.3, 1281.0], [7.4, 1281.0], [7.5, 1281.0], [7.6, 1281.0], [7.7, 1281.0], [7.8, 1281.0], [7.9, 1281.0], [8.0, 1281.0], [8.1, 1281.0], [8.2, 1281.0], [8.3, 1281.0], [8.4, 1281.0], [8.5, 1281.0], [8.6, 1281.0], [8.7, 1281.0], [8.8, 1281.0], [8.9, 1281.0], [9.0, 1281.0], [9.1, 1281.0], [9.2, 1281.0], [9.3, 1281.0], [9.4, 1281.0], [9.5, 1281.0], [9.6, 1281.0], [9.7, 1281.0], [9.8, 1281.0], [9.9, 1281.0], [10.0, 1281.0], [10.1, 1281.0], [10.2, 1281.0], [10.3, 1281.0], [10.4, 1281.0], [10.5, 1281.0], [10.6, 1281.0], [10.7, 1281.0], [10.8, 1281.0], [10.9, 1281.0], [11.0, 1281.0], [11.1, 1281.0], [11.2, 1281.0], [11.3, 1281.0], [11.4, 1281.0], [11.5, 1281.0], [11.6, 1281.0], [11.7, 1281.0], [11.8, 1281.0], [11.9, 1281.0], [12.0, 1281.0], [12.1, 1281.0], [12.2, 1281.0], [12.3, 1281.0], [12.4, 1281.0], [12.5, 1281.0], [12.6, 1281.0], [12.7, 1281.0], [12.8, 1281.0], [12.9, 1281.0], [13.0, 1281.0], [13.1, 1281.0], [13.2, 1281.0], [13.3, 1281.0], [13.4, 1281.0], [13.5, 1281.0], [13.6, 1281.0], [13.7, 1281.0], [13.8, 1281.0], [13.9, 1281.0], [14.0, 1281.0], [14.1, 1281.0], [14.2, 1281.0], [14.3, 1281.0], [14.4, 1281.0], [14.5, 1281.0], [14.6, 1281.0], [14.7, 1281.0], [14.8, 1281.0], [14.9, 1281.0], [15.0, 1281.0], [15.1, 1281.0], [15.2, 1281.0], [15.3, 1281.0], [15.4, 1281.0], [15.5, 1281.0], [15.6, 1281.0], [15.7, 1281.0], [15.8, 1281.0], [15.9, 1281.0], [16.0, 1281.0], [16.1, 1281.0], [16.2, 1281.0], [16.3, 1281.0], [16.4, 1281.0], [16.5, 1281.0], [16.6, 1281.0], [16.7, 1281.0], [16.8, 1281.0], [16.9, 1281.0], [17.0, 1281.0], [17.1, 1281.0], [17.2, 1281.0], [17.3, 1281.0], [17.4, 1281.0], [17.5, 1281.0], [17.6, 1281.0], [17.7, 1281.0], [17.8, 1281.0], [17.9, 1281.0], [18.0, 1281.0], [18.1, 1281.0], [18.2, 1281.0], [18.3, 1281.0], [18.4, 1281.0], [18.5, 1281.0], [18.6, 1281.0], [18.7, 1281.0], [18.8, 1281.0], [18.9, 1281.0], [19.0, 1281.0], [19.1, 1281.0], [19.2, 1281.0], [19.3, 1281.0], [19.4, 1281.0], [19.5, 1281.0], [19.6, 1281.0], [19.7, 1281.0], [19.8, 1281.0], [19.9, 1281.0], [20.0, 1281.0], [20.1, 1281.0], [20.2, 1281.0], [20.3, 1281.0], [20.4, 1281.0], [20.5, 1281.0], [20.6, 1281.0], [20.7, 1281.0], [20.8, 1281.0], [20.9, 1281.0], [21.0, 1281.0], [21.1, 1281.0], [21.2, 1281.0], [21.3, 1281.0], [21.4, 1281.0], [21.5, 1281.0], [21.6, 1281.0], [21.7, 1281.0], [21.8, 1281.0], [21.9, 1281.0], [22.0, 1281.0], [22.1, 1281.0], [22.2, 1281.0], [22.3, 1281.0], [22.4, 1281.0], [22.5, 1281.0], [22.6, 1281.0], [22.7, 1281.0], [22.8, 1281.0], [22.9, 1281.0], [23.0, 1281.0], [23.1, 1281.0], [23.2, 1281.0], [23.3, 1281.0], [23.4, 1281.0], [23.5, 1281.0], [23.6, 1281.0], [23.7, 1281.0], [23.8, 1281.0], [23.9, 1281.0], [24.0, 1281.0], [24.1, 1281.0], [24.2, 1281.0], [24.3, 1281.0], [24.4, 1281.0], [24.5, 1281.0], [24.6, 1281.0], [24.7, 1281.0], [24.8, 1281.0], [24.9, 1281.0], [25.0, 1281.0], [25.1, 1281.0], [25.2, 1281.0], [25.3, 1281.0], [25.4, 1281.0], [25.5, 1281.0], [25.6, 1281.0], [25.7, 1281.0], [25.8, 1281.0], [25.9, 1281.0], [26.0, 1281.0], [26.1, 1281.0], [26.2, 1281.0], [26.3, 1281.0], [26.4, 1281.0], [26.5, 1281.0], [26.6, 1281.0], [26.7, 1281.0], [26.8, 1281.0], [26.9, 1281.0], [27.0, 1281.0], [27.1, 1281.0], [27.2, 1281.0], [27.3, 1281.0], [27.4, 1281.0], [27.5, 1281.0], [27.6, 1281.0], [27.7, 1281.0], [27.8, 1281.0], [27.9, 1281.0], [28.0, 1281.0], [28.1, 1281.0], [28.2, 1281.0], [28.3, 1281.0], [28.4, 1281.0], [28.5, 1281.0], [28.6, 1281.0], [28.7, 1281.0], [28.8, 1281.0], [28.9, 1281.0], [29.0, 1281.0], [29.1, 1281.0], [29.2, 1281.0], [29.3, 1281.0], [29.4, 1281.0], [29.5, 1281.0], [29.6, 1281.0], [29.7, 1281.0], [29.8, 1281.0], [29.9, 1281.0], [30.0, 1281.0], [30.1, 1281.0], [30.2, 1281.0], [30.3, 1281.0], [30.4, 1281.0], [30.5, 1281.0], [30.6, 1281.0], [30.7, 1281.0], [30.8, 1281.0], [30.9, 1281.0], [31.0, 1281.0], [31.1, 1281.0], [31.2, 1281.0], [31.3, 1281.0], [31.4, 1281.0], [31.5, 1281.0], [31.6, 1281.0], [31.7, 1281.0], [31.8, 1281.0], [31.9, 1281.0], [32.0, 1281.0], [32.1, 1281.0], [32.2, 1281.0], [32.3, 1281.0], [32.4, 1281.0], [32.5, 1281.0], [32.6, 1281.0], [32.7, 1281.0], [32.8, 1281.0], [32.9, 1281.0], [33.0, 1281.0], [33.1, 1281.0], [33.2, 1281.0], [33.3, 1281.0], [33.4, 1281.0], [33.5, 1281.0], [33.6, 1281.0], [33.7, 1281.0], [33.8, 1281.0], [33.9, 1281.0], [34.0, 1281.0], [34.1, 1281.0], [34.2, 1281.0], [34.3, 1281.0], [34.4, 1281.0], [34.5, 1281.0], [34.6, 1281.0], [34.7, 1281.0], [34.8, 1281.0], [34.9, 1281.0], [35.0, 1281.0], [35.1, 1281.0], [35.2, 1281.0], [35.3, 1281.0], [35.4, 1281.0], [35.5, 1281.0], [35.6, 1281.0], [35.7, 1281.0], [35.8, 1281.0], [35.9, 1281.0], [36.0, 1281.0], [36.1, 1281.0], [36.2, 1281.0], [36.3, 1281.0], [36.4, 1281.0], [36.5, 1281.0], [36.6, 1281.0], [36.7, 1281.0], [36.8, 1281.0], [36.9, 1281.0], [37.0, 1281.0], [37.1, 1281.0], [37.2, 1281.0], [37.3, 1281.0], [37.4, 1281.0], [37.5, 1281.0], [37.6, 1281.0], [37.7, 1281.0], [37.8, 1281.0], [37.9, 1281.0], [38.0, 1281.0], [38.1, 1281.0], [38.2, 1281.0], [38.3, 1281.0], [38.4, 1281.0], [38.5, 1281.0], [38.6, 1281.0], [38.7, 1281.0], [38.8, 1281.0], [38.9, 1281.0], [39.0, 1281.0], [39.1, 1281.0], [39.2, 1281.0], [39.3, 1281.0], [39.4, 1281.0], [39.5, 1281.0], [39.6, 1281.0], [39.7, 1281.0], [39.8, 1281.0], [39.9, 1281.0], [40.0, 1281.0], [40.1, 1281.0], [40.2, 1281.0], [40.3, 1281.0], [40.4, 1281.0], [40.5, 1281.0], [40.6, 1281.0], [40.7, 1281.0], [40.8, 1281.0], [40.9, 1281.0], [41.0, 1281.0], [41.1, 1281.0], [41.2, 1281.0], [41.3, 1281.0], [41.4, 1281.0], [41.5, 1281.0], [41.6, 1281.0], [41.7, 1281.0], [41.8, 1281.0], [41.9, 1281.0], [42.0, 1281.0], [42.1, 1281.0], [42.2, 1281.0], [42.3, 1281.0], [42.4, 1281.0], [42.5, 1281.0], [42.6, 1281.0], [42.7, 1281.0], [42.8, 1281.0], [42.9, 1281.0], [43.0, 1281.0], [43.1, 1281.0], [43.2, 1281.0], [43.3, 1281.0], [43.4, 1281.0], [43.5, 1281.0], [43.6, 1281.0], [43.7, 1281.0], [43.8, 1281.0], [43.9, 1281.0], [44.0, 1281.0], [44.1, 1281.0], [44.2, 1281.0], [44.3, 1281.0], [44.4, 1281.0], [44.5, 1281.0], [44.6, 1281.0], [44.7, 1281.0], [44.8, 1281.0], [44.9, 1281.0], [45.0, 1281.0], [45.1, 1281.0], [45.2, 1281.0], [45.3, 1281.0], [45.4, 1281.0], [45.5, 1281.0], [45.6, 1281.0], [45.7, 1281.0], [45.8, 1281.0], [45.9, 1281.0], [46.0, 1281.0], [46.1, 1281.0], [46.2, 1281.0], [46.3, 1281.0], [46.4, 1281.0], [46.5, 1281.0], [46.6, 1281.0], [46.7, 1281.0], [46.8, 1281.0], [46.9, 1281.0], [47.0, 1281.0], [47.1, 1281.0], [47.2, 1281.0], [47.3, 1281.0], [47.4, 1281.0], [47.5, 1281.0], [47.6, 1281.0], [47.7, 1281.0], [47.8, 1281.0], [47.9, 1281.0], [48.0, 1281.0], [48.1, 1281.0], [48.2, 1281.0], [48.3, 1281.0], [48.4, 1281.0], [48.5, 1281.0], [48.6, 1281.0], [48.7, 1281.0], [48.8, 1281.0], [48.9, 1281.0], [49.0, 1281.0], [49.1, 1281.0], [49.2, 1281.0], [49.3, 1281.0], [49.4, 1281.0], [49.5, 1281.0], [49.6, 1281.0], [49.7, 1281.0], [49.8, 1281.0], [49.9, 1281.0], [50.0, 1281.0], [50.1, 1281.0], [50.2, 1281.0], [50.3, 1281.0], [50.4, 1281.0], [50.5, 1281.0], [50.6, 1281.0], [50.7, 1281.0], [50.8, 1281.0], [50.9, 1281.0], [51.0, 1281.0], [51.1, 1281.0], [51.2, 1281.0], [51.3, 1281.0], [51.4, 1281.0], [51.5, 1281.0], [51.6, 1281.0], [51.7, 1281.0], [51.8, 1281.0], [51.9, 1281.0], [52.0, 1281.0], [52.1, 1281.0], [52.2, 1281.0], [52.3, 1281.0], [52.4, 1281.0], [52.5, 1281.0], [52.6, 1281.0], [52.7, 1281.0], [52.8, 1281.0], [52.9, 1281.0], [53.0, 1281.0], [53.1, 1281.0], [53.2, 1281.0], [53.3, 1281.0], [53.4, 1281.0], [53.5, 1281.0], [53.6, 1281.0], [53.7, 1281.0], [53.8, 1281.0], [53.9, 1281.0], [54.0, 1281.0], [54.1, 1281.0], [54.2, 1281.0], [54.3, 1281.0], [54.4, 1281.0], [54.5, 1281.0], [54.6, 1281.0], [54.7, 1281.0], [54.8, 1281.0], [54.9, 1281.0], [55.0, 1281.0], [55.1, 1281.0], [55.2, 1281.0], [55.3, 1281.0], [55.4, 1281.0], [55.5, 1281.0], [55.6, 1281.0], [55.7, 1281.0], [55.8, 1281.0], [55.9, 1281.0], [56.0, 1281.0], [56.1, 1281.0], [56.2, 1281.0], [56.3, 1281.0], [56.4, 1281.0], [56.5, 1281.0], [56.6, 1281.0], [56.7, 1281.0], [56.8, 1281.0], [56.9, 1281.0], [57.0, 1281.0], [57.1, 1281.0], [57.2, 1281.0], [57.3, 1281.0], [57.4, 1281.0], [57.5, 1281.0], [57.6, 1281.0], [57.7, 1281.0], [57.8, 1281.0], [57.9, 1281.0], [58.0, 1281.0], [58.1, 1281.0], [58.2, 1281.0], [58.3, 1281.0], [58.4, 1281.0], [58.5, 1281.0], [58.6, 1281.0], [58.7, 1281.0], [58.8, 1281.0], [58.9, 1281.0], [59.0, 1281.0], [59.1, 1281.0], [59.2, 1281.0], [59.3, 1281.0], [59.4, 1281.0], [59.5, 1281.0], [59.6, 1281.0], [59.7, 1281.0], [59.8, 1281.0], [59.9, 1281.0], [60.0, 1281.0], [60.1, 1281.0], [60.2, 1281.0], [60.3, 1281.0], [60.4, 1281.0], [60.5, 1281.0], [60.6, 1281.0], [60.7, 1281.0], [60.8, 1281.0], [60.9, 1281.0], [61.0, 1281.0], [61.1, 1281.0], [61.2, 1281.0], [61.3, 1281.0], [61.4, 1281.0], [61.5, 1281.0], [61.6, 1281.0], [61.7, 1281.0], [61.8, 1281.0], [61.9, 1281.0], [62.0, 1281.0], [62.1, 1281.0], [62.2, 1281.0], [62.3, 1281.0], [62.4, 1281.0], [62.5, 1281.0], [62.6, 1281.0], [62.7, 1281.0], [62.8, 1281.0], [62.9, 1281.0], [63.0, 1281.0], [63.1, 1281.0], [63.2, 1281.0], [63.3, 1281.0], [63.4, 1281.0], [63.5, 1281.0], [63.6, 1281.0], [63.7, 1281.0], [63.8, 1281.0], [63.9, 1281.0], [64.0, 1281.0], [64.1, 1281.0], [64.2, 1281.0], [64.3, 1281.0], [64.4, 1281.0], [64.5, 1281.0], [64.6, 1281.0], [64.7, 1281.0], [64.8, 1281.0], [64.9, 1281.0], [65.0, 1281.0], [65.1, 1281.0], [65.2, 1281.0], [65.3, 1281.0], [65.4, 1281.0], [65.5, 1281.0], [65.6, 1281.0], [65.7, 1281.0], [65.8, 1281.0], [65.9, 1281.0], [66.0, 1281.0], [66.1, 1281.0], [66.2, 1281.0], [66.3, 1281.0], [66.4, 1281.0], [66.5, 1281.0], [66.6, 1281.0], [66.7, 1281.0], [66.8, 1281.0], [66.9, 1281.0], [67.0, 1281.0], [67.1, 1281.0], [67.2, 1281.0], [67.3, 1281.0], [67.4, 1281.0], [67.5, 1281.0], [67.6, 1281.0], [67.7, 1281.0], [67.8, 1281.0], [67.9, 1281.0], [68.0, 1281.0], [68.1, 1281.0], [68.2, 1281.0], [68.3, 1281.0], [68.4, 1281.0], [68.5, 1281.0], [68.6, 1281.0], [68.7, 1281.0], [68.8, 1281.0], [68.9, 1281.0], [69.0, 1281.0], [69.1, 1281.0], [69.2, 1281.0], [69.3, 1281.0], [69.4, 1281.0], [69.5, 1281.0], [69.6, 1281.0], [69.7, 1281.0], [69.8, 1281.0], [69.9, 1281.0], [70.0, 1281.0], [70.1, 1281.0], [70.2, 1281.0], [70.3, 1281.0], [70.4, 1281.0], [70.5, 1281.0], [70.6, 1281.0], [70.7, 1281.0], [70.8, 1281.0], [70.9, 1281.0], [71.0, 1281.0], [71.1, 1281.0], [71.2, 1281.0], [71.3, 1281.0], [71.4, 1281.0], [71.5, 1281.0], [71.6, 1281.0], [71.7, 1281.0], [71.8, 1281.0], [71.9, 1281.0], [72.0, 1281.0], [72.1, 1281.0], [72.2, 1281.0], [72.3, 1281.0], [72.4, 1281.0], [72.5, 1281.0], [72.6, 1281.0], [72.7, 1281.0], [72.8, 1281.0], [72.9, 1281.0], [73.0, 1281.0], [73.1, 1281.0], [73.2, 1281.0], [73.3, 1281.0], [73.4, 1281.0], [73.5, 1281.0], [73.6, 1281.0], [73.7, 1281.0], [73.8, 1281.0], [73.9, 1281.0], [74.0, 1281.0], [74.1, 1281.0], [74.2, 1281.0], [74.3, 1281.0], [74.4, 1281.0], [74.5, 1281.0], [74.6, 1281.0], [74.7, 1281.0], [74.8, 1281.0], [74.9, 1281.0], [75.0, 1281.0], [75.1, 1281.0], [75.2, 1281.0], [75.3, 1281.0], [75.4, 1281.0], [75.5, 1281.0], [75.6, 1281.0], [75.7, 1281.0], [75.8, 1281.0], [75.9, 1281.0], [76.0, 1281.0], [76.1, 1281.0], [76.2, 1281.0], [76.3, 1281.0], [76.4, 1281.0], [76.5, 1281.0], [76.6, 1281.0], [76.7, 1281.0], [76.8, 1281.0], [76.9, 1281.0], [77.0, 1281.0], [77.1, 1281.0], [77.2, 1281.0], [77.3, 1281.0], [77.4, 1281.0], [77.5, 1281.0], [77.6, 1281.0], [77.7, 1281.0], [77.8, 1281.0], [77.9, 1281.0], [78.0, 1281.0], [78.1, 1281.0], [78.2, 1281.0], [78.3, 1281.0], [78.4, 1281.0], [78.5, 1281.0], [78.6, 1281.0], [78.7, 1281.0], [78.8, 1281.0], [78.9, 1281.0], [79.0, 1281.0], [79.1, 1281.0], [79.2, 1281.0], [79.3, 1281.0], [79.4, 1281.0], [79.5, 1281.0], [79.6, 1281.0], [79.7, 1281.0], [79.8, 1281.0], [79.9, 1281.0], [80.0, 1281.0], [80.1, 1281.0], [80.2, 1281.0], [80.3, 1281.0], [80.4, 1281.0], [80.5, 1281.0], [80.6, 1281.0], [80.7, 1281.0], [80.8, 1281.0], [80.9, 1281.0], [81.0, 1281.0], [81.1, 1281.0], [81.2, 1281.0], [81.3, 1281.0], [81.4, 1281.0], [81.5, 1281.0], [81.6, 1281.0], [81.7, 1281.0], [81.8, 1281.0], [81.9, 1281.0], [82.0, 1281.0], [82.1, 1281.0], [82.2, 1281.0], [82.3, 1281.0], [82.4, 1281.0], [82.5, 1281.0], [82.6, 1281.0], [82.7, 1281.0], [82.8, 1281.0], [82.9, 1281.0], [83.0, 1281.0], [83.1, 1281.0], [83.2, 1281.0], [83.3, 1281.0], [83.4, 1281.0], [83.5, 1281.0], [83.6, 1281.0], [83.7, 1281.0], [83.8, 1281.0], [83.9, 1281.0], [84.0, 1281.0], [84.1, 1281.0], [84.2, 1281.0], [84.3, 1281.0], [84.4, 1281.0], [84.5, 1281.0], [84.6, 1281.0], [84.7, 1281.0], [84.8, 1281.0], [84.9, 1281.0], [85.0, 1281.0], [85.1, 1281.0], [85.2, 1281.0], [85.3, 1281.0], [85.4, 1281.0], [85.5, 1281.0], [85.6, 1281.0], [85.7, 1281.0], [85.8, 1281.0], [85.9, 1281.0], [86.0, 1281.0], [86.1, 1281.0], [86.2, 1281.0], [86.3, 1281.0], [86.4, 1281.0], [86.5, 1281.0], [86.6, 1281.0], [86.7, 1281.0], [86.8, 1281.0], [86.9, 1281.0], [87.0, 1281.0], [87.1, 1281.0], [87.2, 1281.0], [87.3, 1281.0], [87.4, 1281.0], [87.5, 1281.0], [87.6, 1281.0], [87.7, 1281.0], [87.8, 1281.0], [87.9, 1281.0], [88.0, 1281.0], [88.1, 1281.0], [88.2, 1281.0], [88.3, 1281.0], [88.4, 1281.0], [88.5, 1281.0], [88.6, 1281.0], [88.7, 1281.0], [88.8, 1281.0], [88.9, 1281.0], [89.0, 1281.0], [89.1, 1281.0], [89.2, 1281.0], [89.3, 1281.0], [89.4, 1281.0], [89.5, 1281.0], [89.6, 1281.0], [89.7, 1281.0], [89.8, 1281.0], [89.9, 1281.0], [90.0, 1281.0], [90.1, 1281.0], [90.2, 1281.0], [90.3, 1281.0], [90.4, 1281.0], [90.5, 1281.0], [90.6, 1281.0], [90.7, 1281.0], [90.8, 1281.0], [90.9, 1281.0], [91.0, 1281.0], [91.1, 1281.0], [91.2, 1281.0], [91.3, 1281.0], [91.4, 1281.0], [91.5, 1281.0], [91.6, 1281.0], [91.7, 1281.0], [91.8, 1281.0], [91.9, 1281.0], [92.0, 1281.0], [92.1, 1281.0], [92.2, 1281.0], [92.3, 1281.0], [92.4, 1281.0], [92.5, 1281.0], [92.6, 1281.0], [92.7, 1281.0], [92.8, 1281.0], [92.9, 1281.0], [93.0, 1281.0], [93.1, 1281.0], [93.2, 1281.0], [93.3, 1281.0], [93.4, 1281.0], [93.5, 1281.0], [93.6, 1281.0], [93.7, 1281.0], [93.8, 1281.0], [93.9, 1281.0], [94.0, 1281.0], [94.1, 1281.0], [94.2, 1281.0], [94.3, 1281.0], [94.4, 1281.0], [94.5, 1281.0], [94.6, 1281.0], [94.7, 1281.0], [94.8, 1281.0], [94.9, 1281.0], [95.0, 1281.0], [95.1, 1281.0], [95.2, 1281.0], [95.3, 1281.0], [95.4, 1281.0], [95.5, 1281.0], [95.6, 1281.0], [95.7, 1281.0], [95.8, 1281.0], [95.9, 1281.0], [96.0, 1281.0], [96.1, 1281.0], [96.2, 1281.0], [96.3, 1281.0], [96.4, 1281.0], [96.5, 1281.0], [96.6, 1281.0], [96.7, 1281.0], [96.8, 1281.0], [96.9, 1281.0], [97.0, 1281.0], [97.1, 1281.0], [97.2, 1281.0], [97.3, 1281.0], [97.4, 1281.0], [97.5, 1281.0], [97.6, 1281.0], [97.7, 1281.0], [97.8, 1281.0], [97.9, 1281.0], [98.0, 1281.0], [98.1, 1281.0], [98.2, 1281.0], [98.3, 1281.0], [98.4, 1281.0], [98.5, 1281.0], [98.6, 1281.0], [98.7, 1281.0], [98.8, 1281.0], [98.9, 1281.0], [99.0, 1281.0], [99.1, 1281.0], [99.2, 1281.0], [99.3, 1281.0], [99.4, 1281.0], [99.5, 1281.0], [99.6, 1281.0], [99.7, 1281.0], [99.8, 1281.0], [99.9, 1281.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}, {"data": [[0.0, 651.0], [0.1, 651.0], [0.2, 651.0], [0.3, 651.0], [0.4, 651.0], [0.5, 655.0], [0.6, 655.0], [0.7, 655.0], [0.8, 655.0], [0.9, 655.0], [1.0, 678.0], [1.1, 678.0], [1.2, 678.0], [1.3, 678.0], [1.4, 683.0], [1.5, 683.0], [1.6, 683.0], [1.7, 683.0], [1.8, 683.0], [1.9, 683.0], [2.0, 683.0], [2.1, 683.0], [2.2, 683.0], [2.3, 689.0], [2.4, 689.0], [2.5, 689.0], [2.6, 689.0], [2.7, 689.0], [2.8, 699.0], [2.9, 699.0], [3.0, 699.0], [3.1, 699.0], [3.2, 704.0], [3.3, 704.0], [3.4, 704.0], [3.5, 704.0], [3.6, 704.0], [3.7, 707.0], [3.8, 707.0], [3.9, 707.0], [4.0, 707.0], [4.1, 709.0], [4.2, 709.0], [4.3, 709.0], [4.4, 709.0], [4.5, 709.0], [4.6, 718.0], [4.7, 718.0], [4.8, 718.0], [4.9, 718.0], [5.0, 729.0], [5.1, 729.0], [5.2, 729.0], [5.3, 729.0], [5.4, 729.0], [5.5, 733.0], [5.6, 733.0], [5.7, 733.0], [5.8, 733.0], [5.9, 740.0], [6.0, 740.0], [6.1, 740.0], [6.2, 740.0], [6.3, 740.0], [6.4, 746.0], [6.5, 746.0], [6.6, 746.0], [6.7, 746.0], [6.8, 747.0], [6.9, 747.0], [7.0, 747.0], [7.1, 747.0], [7.2, 747.0], [7.3, 758.0], [7.4, 758.0], [7.5, 758.0], [7.6, 758.0], [7.7, 761.0], [7.8, 761.0], [7.9, 761.0], [8.0, 761.0], [8.1, 761.0], [8.2, 764.0], [8.3, 764.0], [8.4, 764.0], [8.5, 764.0], [8.6, 765.0], [8.7, 765.0], [8.8, 765.0], [8.9, 765.0], [9.0, 765.0], [9.1, 770.0], [9.2, 770.0], [9.3, 770.0], [9.4, 770.0], [9.5, 770.0], [9.6, 774.0], [9.7, 774.0], [9.8, 774.0], [9.9, 774.0], [10.0, 777.0], [10.1, 777.0], [10.2, 777.0], [10.3, 777.0], [10.4, 777.0], [10.5, 778.0], [10.6, 778.0], [10.7, 778.0], [10.8, 778.0], [10.9, 779.0], [11.0, 779.0], [11.1, 779.0], [11.2, 779.0], [11.3, 779.0], [11.4, 781.0], [11.5, 781.0], [11.6, 781.0], [11.7, 781.0], [11.8, 783.0], [11.9, 783.0], [12.0, 783.0], [12.1, 783.0], [12.2, 783.0], [12.3, 784.0], [12.4, 784.0], [12.5, 784.0], [12.6, 784.0], [12.7, 789.0], [12.8, 789.0], [12.9, 789.0], [13.0, 789.0], [13.1, 789.0], [13.2, 795.0], [13.3, 795.0], [13.4, 795.0], [13.5, 795.0], [13.6, 798.0], [13.7, 798.0], [13.8, 798.0], [13.9, 798.0], [14.0, 798.0], [14.1, 798.0], [14.2, 798.0], [14.3, 798.0], [14.4, 798.0], [14.5, 809.0], [14.6, 809.0], [14.7, 809.0], [14.8, 809.0], [14.9, 809.0], [15.0, 812.0], [15.1, 812.0], [15.2, 812.0], [15.3, 812.0], [15.4, 812.0], [15.5, 812.0], [15.6, 812.0], [15.7, 812.0], [15.8, 812.0], [15.9, 817.0], [16.0, 817.0], [16.1, 817.0], [16.2, 817.0], [16.3, 823.0], [16.4, 823.0], [16.5, 823.0], [16.6, 823.0], [16.7, 823.0], [16.8, 825.0], [16.9, 825.0], [17.0, 825.0], [17.1, 825.0], [17.2, 825.0], [17.3, 825.0], [17.4, 825.0], [17.5, 825.0], [17.6, 825.0], [17.7, 826.0], [17.8, 826.0], [17.9, 826.0], [18.0, 826.0], [18.1, 826.0], [18.2, 826.0], [18.3, 826.0], [18.4, 826.0], [18.5, 826.0], [18.6, 828.0], [18.7, 828.0], [18.8, 828.0], [18.9, 828.0], [19.0, 828.0], [19.1, 830.0], [19.2, 830.0], [19.3, 830.0], [19.4, 830.0], [19.5, 831.0], [19.6, 831.0], [19.7, 831.0], [19.8, 831.0], [19.9, 831.0], [20.0, 831.0], [20.1, 831.0], [20.2, 831.0], [20.3, 831.0], [20.4, 837.0], [20.5, 837.0], [20.6, 837.0], [20.7, 837.0], [20.8, 837.0], [20.9, 837.0], [21.0, 837.0], [21.1, 837.0], [21.2, 837.0], [21.3, 840.0], [21.4, 840.0], [21.5, 840.0], [21.6, 840.0], [21.7, 840.0], [21.8, 841.0], [21.9, 841.0], [22.0, 841.0], [22.1, 841.0], [22.2, 844.0], [22.3, 844.0], [22.4, 844.0], [22.5, 844.0], [22.6, 844.0], [22.7, 848.0], [22.8, 848.0], [22.9, 848.0], [23.0, 848.0], [23.1, 855.0], [23.2, 855.0], [23.3, 855.0], [23.4, 855.0], [23.5, 855.0], [23.6, 857.0], [23.7, 857.0], [23.8, 857.0], [23.9, 857.0], [24.0, 860.0], [24.1, 860.0], [24.2, 860.0], [24.3, 860.0], [24.4, 860.0], [24.5, 861.0], [24.6, 861.0], [24.7, 861.0], [24.8, 861.0], [24.9, 862.0], [25.0, 862.0], [25.1, 862.0], [25.2, 862.0], [25.3, 862.0], [25.4, 863.0], [25.5, 863.0], [25.6, 863.0], [25.7, 863.0], [25.8, 864.0], [25.9, 864.0], [26.0, 864.0], [26.1, 864.0], [26.2, 864.0], [26.3, 865.0], [26.4, 865.0], [26.5, 865.0], [26.6, 865.0], [26.7, 868.0], [26.8, 868.0], [26.9, 868.0], [27.0, 868.0], [27.1, 868.0], [27.2, 870.0], [27.3, 870.0], [27.4, 870.0], [27.5, 870.0], [27.6, 870.0], [27.7, 873.0], [27.8, 873.0], [27.9, 873.0], [28.0, 873.0], [28.1, 876.0], [28.2, 876.0], [28.3, 876.0], [28.4, 876.0], [28.5, 876.0], [28.6, 876.0], [28.7, 876.0], [28.8, 876.0], [28.9, 876.0], [29.0, 882.0], [29.1, 882.0], [29.2, 882.0], [29.3, 882.0], [29.4, 882.0], [29.5, 884.0], [29.6, 884.0], [29.7, 884.0], [29.8, 884.0], [29.9, 884.0], [30.0, 884.0], [30.1, 884.0], [30.2, 884.0], [30.3, 884.0], [30.4, 884.0], [30.5, 884.0], [30.6, 884.0], [30.7, 884.0], [30.8, 885.0], [30.9, 885.0], [31.0, 885.0], [31.1, 885.0], [31.2, 885.0], [31.3, 891.0], [31.4, 891.0], [31.5, 891.0], [31.6, 891.0], [31.7, 891.0], [31.8, 891.0], [31.9, 891.0], [32.0, 891.0], [32.1, 891.0], [32.2, 892.0], [32.3, 892.0], [32.4, 892.0], [32.5, 892.0], [32.6, 893.0], [32.7, 893.0], [32.8, 893.0], [32.9, 893.0], [33.0, 893.0], [33.1, 912.0], [33.2, 912.0], [33.3, 912.0], [33.4, 912.0], [33.5, 918.0], [33.6, 918.0], [33.7, 918.0], [33.8, 918.0], [33.9, 918.0], [34.0, 919.0], [34.1, 919.0], [34.2, 919.0], [34.3, 919.0], [34.4, 923.0], [34.5, 923.0], [34.6, 923.0], [34.7, 923.0], [34.8, 923.0], [34.9, 927.0], [35.0, 927.0], [35.1, 927.0], [35.2, 927.0], [35.3, 931.0], [35.4, 931.0], [35.5, 931.0], [35.6, 931.0], [35.7, 931.0], [35.8, 932.0], [35.9, 932.0], [36.0, 932.0], [36.1, 932.0], [36.2, 934.0], [36.3, 934.0], [36.4, 934.0], [36.5, 934.0], [36.6, 934.0], [36.7, 936.0], [36.8, 936.0], [36.9, 936.0], [37.0, 936.0], [37.1, 936.0], [37.2, 938.0], [37.3, 938.0], [37.4, 938.0], [37.5, 938.0], [37.6, 940.0], [37.7, 940.0], [37.8, 940.0], [37.9, 940.0], [38.0, 940.0], [38.1, 943.0], [38.2, 943.0], [38.3, 943.0], [38.4, 943.0], [38.5, 946.0], [38.6, 946.0], [38.7, 946.0], [38.8, 946.0], [38.9, 946.0], [39.0, 947.0], [39.1, 947.0], [39.2, 947.0], [39.3, 947.0], [39.4, 949.0], [39.5, 949.0], [39.6, 949.0], [39.7, 949.0], [39.8, 949.0], [39.9, 950.0], [40.0, 950.0], [40.1, 950.0], [40.2, 950.0], [40.3, 951.0], [40.4, 951.0], [40.5, 951.0], [40.6, 951.0], [40.7, 951.0], [40.8, 952.0], [40.9, 952.0], [41.0, 952.0], [41.1, 952.0], [41.2, 954.0], [41.3, 954.0], [41.4, 954.0], [41.5, 954.0], [41.6, 954.0], [41.7, 957.0], [41.8, 957.0], [41.9, 957.0], [42.0, 957.0], [42.1, 958.0], [42.2, 958.0], [42.3, 958.0], [42.4, 958.0], [42.5, 958.0], [42.6, 960.0], [42.7, 960.0], [42.8, 960.0], [42.9, 960.0], [43.0, 964.0], [43.1, 964.0], [43.2, 964.0], [43.3, 964.0], [43.4, 964.0], [43.5, 965.0], [43.6, 965.0], [43.7, 965.0], [43.8, 965.0], [43.9, 965.0], [44.0, 965.0], [44.1, 965.0], [44.2, 965.0], [44.3, 965.0], [44.4, 967.0], [44.5, 967.0], [44.6, 967.0], [44.7, 967.0], [44.8, 968.0], [44.9, 968.0], [45.0, 968.0], [45.1, 968.0], [45.2, 968.0], [45.3, 969.0], [45.4, 969.0], [45.5, 969.0], [45.6, 969.0], [45.7, 969.0], [45.8, 970.0], [45.9, 970.0], [46.0, 970.0], [46.1, 970.0], [46.2, 972.0], [46.3, 972.0], [46.4, 972.0], [46.5, 972.0], [46.6, 972.0], [46.7, 973.0], [46.8, 973.0], [46.9, 973.0], [47.0, 973.0], [47.1, 978.0], [47.2, 978.0], [47.3, 978.0], [47.4, 978.0], [47.5, 978.0], [47.6, 979.0], [47.7, 979.0], [47.8, 979.0], [47.9, 979.0], [48.0, 982.0], [48.1, 982.0], [48.2, 982.0], [48.3, 982.0], [48.4, 982.0], [48.5, 983.0], [48.6, 983.0], [48.7, 983.0], [48.8, 983.0], [48.9, 983.0], [49.0, 983.0], [49.1, 983.0], [49.2, 983.0], [49.3, 983.0], [49.4, 991.0], [49.5, 991.0], [49.6, 991.0], [49.7, 991.0], [49.8, 991.0], [49.9, 991.0], [50.0, 991.0], [50.1, 991.0], [50.2, 991.0], [50.3, 992.0], [50.4, 992.0], [50.5, 992.0], [50.6, 992.0], [50.7, 998.0], [50.8, 998.0], [50.9, 998.0], [51.0, 998.0], [51.1, 998.0], [51.2, 1005.0], [51.3, 1005.0], [51.4, 1005.0], [51.5, 1005.0], [51.6, 1008.0], [51.7, 1008.0], [51.8, 1008.0], [51.9, 1008.0], [52.0, 1008.0], [52.1, 1009.0], [52.2, 1009.0], [52.3, 1009.0], [52.4, 1009.0], [52.5, 1010.0], [52.6, 1010.0], [52.7, 1010.0], [52.8, 1010.0], [52.9, 1010.0], [53.0, 1011.0], [53.1, 1011.0], [53.2, 1011.0], [53.3, 1011.0], [53.4, 1011.0], [53.5, 1011.0], [53.6, 1011.0], [53.7, 1011.0], [53.8, 1011.0], [53.9, 1012.0], [54.0, 1012.0], [54.1, 1012.0], [54.2, 1012.0], [54.3, 1012.0], [54.4, 1012.0], [54.5, 1012.0], [54.6, 1012.0], [54.7, 1012.0], [54.8, 1012.0], [54.9, 1012.0], [55.0, 1012.0], [55.1, 1012.0], [55.2, 1012.0], [55.3, 1012.0], [55.4, 1012.0], [55.5, 1012.0], [55.6, 1012.0], [55.7, 1015.0], [55.8, 1015.0], [55.9, 1015.0], [56.0, 1015.0], [56.1, 1015.0], [56.2, 1018.0], [56.3, 1018.0], [56.4, 1018.0], [56.5, 1018.0], [56.6, 1020.0], [56.7, 1020.0], [56.8, 1020.0], [56.9, 1020.0], [57.0, 1020.0], [57.1, 1020.0], [57.2, 1020.0], [57.3, 1020.0], [57.4, 1020.0], [57.5, 1021.0], [57.6, 1021.0], [57.7, 1021.0], [57.8, 1021.0], [57.9, 1021.0], [58.0, 1021.0], [58.1, 1021.0], [58.2, 1021.0], [58.3, 1021.0], [58.4, 1030.0], [58.5, 1030.0], [58.6, 1030.0], [58.7, 1030.0], [58.8, 1030.0], [58.9, 1031.0], [59.0, 1031.0], [59.1, 1031.0], [59.2, 1031.0], [59.3, 1032.0], [59.4, 1032.0], [59.5, 1032.0], [59.6, 1032.0], [59.7, 1032.0], [59.8, 1035.0], [59.9, 1035.0], [60.0, 1035.0], [60.1, 1035.0], [60.2, 1038.0], [60.3, 1038.0], [60.4, 1038.0], [60.5, 1038.0], [60.6, 1038.0], [60.7, 1038.0], [60.8, 1038.0], [60.9, 1038.0], [61.0, 1038.0], [61.1, 1038.0], [61.2, 1038.0], [61.3, 1038.0], [61.4, 1038.0], [61.5, 1038.0], [61.6, 1041.0], [61.7, 1041.0], [61.8, 1041.0], [61.9, 1041.0], [62.0, 1043.0], [62.1, 1043.0], [62.2, 1043.0], [62.3, 1043.0], [62.4, 1043.0], [62.5, 1045.0], [62.6, 1045.0], [62.7, 1045.0], [62.8, 1045.0], [62.9, 1046.0], [63.0, 1046.0], [63.1, 1046.0], [63.2, 1046.0], [63.3, 1046.0], [63.4, 1048.0], [63.5, 1048.0], [63.6, 1048.0], [63.7, 1048.0], [63.8, 1048.0], [63.9, 1049.0], [64.0, 1049.0], [64.1, 1049.0], [64.2, 1049.0], [64.3, 1050.0], [64.4, 1050.0], [64.5, 1050.0], [64.6, 1050.0], [64.7, 1050.0], [64.8, 1051.0], [64.9, 1051.0], [65.0, 1051.0], [65.1, 1051.0], [65.2, 1052.0], [65.3, 1052.0], [65.4, 1052.0], [65.5, 1052.0], [65.6, 1052.0], [65.7, 1057.0], [65.8, 1057.0], [65.9, 1057.0], [66.0, 1057.0], [66.1, 1063.0], [66.2, 1063.0], [66.3, 1063.0], [66.4, 1063.0], [66.5, 1063.0], [66.6, 1067.0], [66.7, 1067.0], [66.8, 1067.0], [66.9, 1067.0], [67.0, 1068.0], [67.1, 1068.0], [67.2, 1068.0], [67.3, 1068.0], [67.4, 1068.0], [67.5, 1068.0], [67.6, 1068.0], [67.7, 1068.0], [67.8, 1068.0], [67.9, 1073.0], [68.0, 1073.0], [68.1, 1073.0], [68.2, 1073.0], [68.3, 1073.0], [68.4, 1077.0], [68.5, 1077.0], [68.6, 1077.0], [68.7, 1077.0], [68.8, 1081.0], [68.9, 1081.0], [69.0, 1081.0], [69.1, 1081.0], [69.2, 1081.0], [69.3, 1082.0], [69.4, 1082.0], [69.5, 1082.0], [69.6, 1082.0], [69.7, 1084.0], [69.8, 1084.0], [69.9, 1084.0], [70.0, 1084.0], [70.1, 1084.0], [70.2, 1086.0], [70.3, 1086.0], [70.4, 1086.0], [70.5, 1086.0], [70.6, 1100.0], [70.7, 1100.0], [70.8, 1100.0], [70.9, 1100.0], [71.0, 1100.0], [71.1, 1103.0], [71.2, 1103.0], [71.3, 1103.0], [71.4, 1103.0], [71.5, 1106.0], [71.6, 1106.0], [71.7, 1106.0], [71.8, 1106.0], [71.9, 1106.0], [72.0, 1107.0], [72.1, 1107.0], [72.2, 1107.0], [72.3, 1107.0], [72.4, 1110.0], [72.5, 1110.0], [72.6, 1110.0], [72.7, 1110.0], [72.8, 1110.0], [72.9, 1111.0], [73.0, 1111.0], [73.1, 1111.0], [73.2, 1111.0], [73.3, 1111.0], [73.4, 1115.0], [73.5, 1115.0], [73.6, 1115.0], [73.7, 1115.0], [73.8, 1121.0], [73.9, 1121.0], [74.0, 1121.0], [74.1, 1121.0], [74.2, 1121.0], [74.3, 1124.0], [74.4, 1124.0], [74.5, 1124.0], [74.6, 1124.0], [74.7, 1125.0], [74.8, 1125.0], [74.9, 1125.0], [75.0, 1125.0], [75.1, 1125.0], [75.2, 1128.0], [75.3, 1128.0], [75.4, 1128.0], [75.5, 1128.0], [75.6, 1128.0], [75.7, 1128.0], [75.8, 1128.0], [75.9, 1128.0], [76.0, 1128.0], [76.1, 1129.0], [76.2, 1129.0], [76.3, 1129.0], [76.4, 1129.0], [76.5, 1131.0], [76.6, 1131.0], [76.7, 1131.0], [76.8, 1131.0], [76.9, 1131.0], [77.0, 1134.0], [77.1, 1134.0], [77.2, 1134.0], [77.3, 1134.0], [77.4, 1134.0], [77.5, 1134.0], [77.6, 1134.0], [77.7, 1134.0], [77.8, 1134.0], [77.9, 1136.0], [78.0, 1136.0], [78.1, 1136.0], [78.2, 1136.0], [78.3, 1138.0], [78.4, 1138.0], [78.5, 1138.0], [78.6, 1138.0], [78.7, 1138.0], [78.8, 1140.0], [78.9, 1140.0], [79.0, 1140.0], [79.1, 1140.0], [79.2, 1143.0], [79.3, 1143.0], [79.4, 1143.0], [79.5, 1143.0], [79.6, 1143.0], [79.7, 1148.0], [79.8, 1148.0], [79.9, 1148.0], [80.0, 1148.0], [80.1, 1154.0], [80.2, 1154.0], [80.3, 1154.0], [80.4, 1154.0], [80.5, 1154.0], [80.6, 1158.0], [80.7, 1158.0], [80.8, 1158.0], [80.9, 1158.0], [81.0, 1164.0], [81.1, 1164.0], [81.2, 1164.0], [81.3, 1164.0], [81.4, 1164.0], [81.5, 1166.0], [81.6, 1166.0], [81.7, 1166.0], [81.8, 1166.0], [81.9, 1166.0], [82.0, 1169.0], [82.1, 1169.0], [82.2, 1169.0], [82.3, 1169.0], [82.4, 1169.0], [82.5, 1169.0], [82.6, 1169.0], [82.7, 1169.0], [82.8, 1169.0], [82.9, 1173.0], [83.0, 1173.0], [83.1, 1173.0], [83.2, 1173.0], [83.3, 1176.0], [83.4, 1176.0], [83.5, 1176.0], [83.6, 1176.0], [83.7, 1176.0], [83.8, 1177.0], [83.9, 1177.0], [84.0, 1177.0], [84.1, 1177.0], [84.2, 1182.0], [84.3, 1182.0], [84.4, 1182.0], [84.5, 1182.0], [84.6, 1182.0], [84.7, 1192.0], [84.8, 1192.0], [84.9, 1192.0], [85.0, 1192.0], [85.1, 1196.0], [85.2, 1196.0], [85.3, 1196.0], [85.4, 1196.0], [85.5, 1196.0], [85.6, 1198.0], [85.7, 1198.0], [85.8, 1198.0], [85.9, 1198.0], [86.0, 1205.0], [86.1, 1205.0], [86.2, 1205.0], [86.3, 1205.0], [86.4, 1205.0], [86.5, 1206.0], [86.6, 1206.0], [86.7, 1206.0], [86.8, 1206.0], [86.9, 1210.0], [87.0, 1210.0], [87.1, 1210.0], [87.2, 1210.0], [87.3, 1210.0], [87.4, 1216.0], [87.5, 1216.0], [87.6, 1216.0], [87.7, 1216.0], [87.8, 1233.0], [87.9, 1233.0], [88.0, 1233.0], [88.1, 1233.0], [88.2, 1233.0], [88.3, 1234.0], [88.4, 1234.0], [88.5, 1234.0], [88.6, 1234.0], [88.7, 1235.0], [88.8, 1235.0], [88.9, 1235.0], [89.0, 1235.0], [89.1, 1235.0], [89.2, 1236.0], [89.3, 1236.0], [89.4, 1236.0], [89.5, 1236.0], [89.6, 1236.0], [89.7, 1236.0], [89.8, 1236.0], [89.9, 1236.0], [90.0, 1236.0], [90.1, 1238.0], [90.2, 1238.0], [90.3, 1238.0], [90.4, 1238.0], [90.5, 1244.0], [90.6, 1244.0], [90.7, 1244.0], [90.8, 1244.0], [90.9, 1244.0], [91.0, 1248.0], [91.1, 1248.0], [91.2, 1248.0], [91.3, 1248.0], [91.4, 1248.0], [91.5, 1249.0], [91.6, 1249.0], [91.7, 1249.0], [91.8, 1249.0], [91.9, 1254.0], [92.0, 1254.0], [92.1, 1254.0], [92.2, 1254.0], [92.3, 1254.0], [92.4, 1257.0], [92.5, 1257.0], [92.6, 1257.0], [92.7, 1257.0], [92.8, 1298.0], [92.9, 1298.0], [93.0, 1298.0], [93.1, 1298.0], [93.2, 1298.0], [93.3, 1306.0], [93.4, 1306.0], [93.5, 1306.0], [93.6, 1306.0], [93.7, 1315.0], [93.8, 1315.0], [93.9, 1315.0], [94.0, 1315.0], [94.1, 1315.0], [94.2, 1334.0], [94.3, 1334.0], [94.4, 1334.0], [94.5, 1334.0], [94.6, 1340.0], [94.7, 1340.0], [94.8, 1340.0], [94.9, 1340.0], [95.0, 1340.0], [95.1, 1345.0], [95.2, 1345.0], [95.3, 1345.0], [95.4, 1345.0], [95.5, 1388.0], [95.6, 1388.0], [95.7, 1388.0], [95.8, 1388.0], [95.9, 1388.0], [96.0, 1435.0], [96.1, 1435.0], [96.2, 1435.0], [96.3, 1435.0], [96.4, 1436.0], [96.5, 1436.0], [96.6, 1436.0], [96.7, 1436.0], [96.8, 1436.0], [96.9, 1459.0], [97.0, 1459.0], [97.1, 1459.0], [97.2, 1459.0], [97.3, 1512.0], [97.4, 1512.0], [97.5, 1512.0], [97.6, 1512.0], [97.7, 1512.0], [97.8, 1523.0], [97.9, 1523.0], [98.0, 1523.0], [98.1, 1523.0], [98.2, 1566.0], [98.3, 1566.0], [98.4, 1566.0], [98.5, 1566.0], [98.6, 1566.0], [98.7, 1655.0], [98.8, 1655.0], [98.9, 1655.0], [99.0, 1655.0], [99.1, 1813.0], [99.2, 1813.0], [99.3, 1813.0], [99.4, 1813.0], [99.5, 1813.0], [99.6, 1861.0], [99.7, 1861.0], [99.8, 1861.0], [99.9, 1861.0]], "isOverall": false, "label": "registrarSalidaPagoAutomatico", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 300.0, "maxY": 347.0, "series": [{"data": [[1100.0, 1.0], [600.0, 72.0], [300.0, 38.0], [1200.0, 2.0], [700.0, 31.0], [1500.0, 1.0], [800.0, 8.0], [400.0, 101.0], [900.0, 4.0], [2000.0, 1.0], [1000.0, 4.0], [500.0, 106.0]], "isOverall": false, "label": "registrarEntradaEglobalt", "isController": false}, {"data": [[2100.0, 2.0], [2200.0, 2.0], [2500.0, 1.0], [700.0, 1.0], [800.0, 5.0], [900.0, 8.0], [1000.0, 12.0], [1100.0, 9.0], [1200.0, 6.0], [1300.0, 5.0], [1400.0, 6.0], [1500.0, 7.0], [1600.0, 8.0], [25800.0, 1.0], [1700.0, 5.0], [1800.0, 1.0], [1900.0, 2.0]], "isOverall": false, "label": "registrarEntradaSinSalida", "isController": false}, {"data": [[300.0, 317.0], [600.0, 3.0], [700.0, 2.0], [400.0, 347.0], [800.0, 1.0], [500.0, 25.0]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1200.0, 1.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}, {"data": [[1100.0, 34.0], [1200.0, 16.0], [600.0, 7.0], [1300.0, 6.0], [700.0, 25.0], [1400.0, 3.0], [1500.0, 3.0], [800.0, 41.0], [1600.0, 1.0], [900.0, 40.0], [1800.0, 2.0], [1000.0, 43.0]], "isOverall": false, "label": "registrarSalidaPagoAutomatico", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 25800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 34.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 806.0, "series": [{"data": [[0.0, 806.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 451.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 34.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 76.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.72376562E12, "maxY": 1.0, "series": [{"data": [[1.72376562E12, 1.0]], "isOverall": false, "label": "setUpAutenticacionCognito", "isController": false}, {"data": [[1.72376574E12, 1.0], [1.72376622E12, 1.0], [1.72376604E12, 1.0], [1.72376586E12, 1.0], [1.72376568E12, 1.0], [1.72376616E12, 1.0], [1.72376598E12, 1.0], [1.7237658E12, 1.0], [1.7237661E12, 1.0], [1.72376562E12, 1.0], [1.72376592E12, 1.0]], "isOverall": false, "label": "consultarPlaca", "isController": false}, {"data": [[1.72376574E12, 1.0], [1.72376622E12, 1.0], [1.72376604E12, 1.0], [1.72376586E12, 1.0], [1.72376568E12, 1.0], [1.72376616E12, 1.0], [1.72376598E12, 1.0], [1.7237658E12, 1.0], [1.7237661E12, 1.0], [1.72376592E12, 1.0]], "isOverall": false, "label": "registrarEntrada", "isController": false}, {"data": [[1.72376622E12, 1.0], [1.72376604E12, 1.0], [1.72376586E12, 1.0], [1.72376616E12, 1.0], [1.72376598E12, 1.0], [1.7237658E12, 1.0], [1.7237661E12, 1.0], [1.72376592E12, 1.0]], "isOverall": false, "label": "registrarSalidaPagoAutomatico", "isController": false}, {"data": [[1.72376622E12, 1.0], [1.72376604E12, 1.0], [1.72376616E12, 1.0], [1.72376598E12, 1.0], [1.7237661E12, 1.0]], "isOverall": false, "label": "registrarSalidaSinEntrada", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72376622E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 407.14592274678125, "minX": 1.0, "maxY": 1659.05, "series": [{"data": [[2.0, 580.3673469387753], [4.0, 577.2074074074077], [3.0, 553.3897058823532]], "isOverall": false, "label": "registrarEntradaEglobalt", "isController": false}, {"data": [[3.1002710027100275, 569.2682926829267]], "isOverall": false, "label": "registrarEntradaEglobalt-Aggregated", "isController": false}, {"data": [[4.0, 1659.05], [3.0, 1628.0]], "isOverall": false, "label": "registrarEntradaSinSalida", "isController": false}, {"data": [[3.9876543209876543, 1658.6666666666665]], "isOverall": false, "label": "registrarEntradaSinSalida-Aggregated", "isController": false}, {"data": [[1.0, 414.2058823529412], [2.0, 413.82098765432113], [4.0, 412.5215517241379], [3.0, 407.14592274678125]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[2.905035971223023, 411.1870503597124]], "isOverall": false, "label": "getPlate-Aggregated", "isController": false}, {"data": [[1.0, 1281.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}, {"data": [[1.0, 1281.0]], "isOverall": false, "label": "loginAFlypass-Aggregated", "isController": false}, {"data": [[4.0, 1039.174311926605], [1.0, 947.0], [3.0, 976.7117117117119]], "isOverall": false, "label": "registrarSalidaPagoAutomatico", "isController": false}, {"data": [[3.4841628959276005, 1007.3846153846154]], "isOverall": false, "label": "registrarSalidaPagoAutomatico-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 4.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 50.75, "minX": 1.72376562E12, "maxY": 2908.2166666666667, "series": [{"data": [[1.72376574E12, 940.95], [1.72376622E12, 50.75], [1.72376604E12, 1388.8], [1.72376586E12, 1191.0], [1.72376568E12, 856.9833333333333], [1.72376616E12, 1405.1], [1.72376598E12, 1220.3833333333334], [1.7237658E12, 1093.1666666666667], [1.7237661E12, 1463.5166666666667], [1.72376562E12, 543.1666666666666], [1.72376592E12, 1191.0833333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72376574E12, 1849.8833333333334], [1.72376622E12, 102.03333333333333], [1.72376604E12, 2708.5833333333335], [1.72376586E12, 2366.8], [1.72376568E12, 1675.9166666666667], [1.72376616E12, 2809.7833333333333], [1.72376598E12, 2428.4166666666665], [1.7237658E12, 2165.3166666666666], [1.7237661E12, 2908.2166666666667], [1.72376562E12, 953.7666666666667], [1.72376592E12, 2367.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72376622E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 397.4929577464788, "minX": 1.72376562E12, "maxY": 2415.555555555556, "series": [{"data": [[1.72376574E12, 523.1111111111111], [1.72376622E12, 589.0], [1.72376604E12, 568.925], [1.72376586E12, 566.6097560975609], [1.72376568E12, 681.5945945945947], [1.72376616E12, 558.7380952380954], [1.72376598E12, 581.0], [1.7237658E12, 539.1666666666669], [1.7237661E12, 555.1707317073171], [1.72376592E12, 565.2499999999998]], "isOverall": false, "label": "registrarEntradaEglobalt", "isController": false}, {"data": [[1.72376622E12, 1628.0], [1.72376604E12, 2415.555555555556], [1.72376616E12, 1486.5769230769233], [1.72376598E12, 1738.7142857142858], [1.7237661E12, 1324.896551724138]], "isOverall": false, "label": "registrarEntradaSinSalida", "isController": false}, {"data": [[1.72376574E12, 397.4929577464788], [1.72376622E12, 515.0], [1.72376604E12, 410.87323943661977], [1.72376586E12, 417.61428571428576], [1.72376568E12, 422.0434782608697], [1.72376616E12, 414.9705882352941], [1.72376598E12, 399.6911764705882], [1.7237658E12, 411.6857142857143], [1.7237661E12, 411.338028169014], [1.72376562E12, 414.1846153846154], [1.72376592E12, 409.357142857143]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1.72376562E12, 1281.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}, {"data": [[1.72376622E12, 1058.0], [1.72376604E12, 975.3529411764706], [1.72376586E12, 958.060606060606], [1.72376616E12, 1047.75], [1.72376598E12, 1015.6875000000001], [1.7237658E12, 1012.0], [1.7237661E12, 1036.1818181818182], [1.72376592E12, 1007.7058823529411]], "isOverall": false, "label": "registrarSalidaPagoAutomatico", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72376622E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 397.4507042253522, "minX": 1.72376562E12, "maxY": 2415.5000000000005, "series": [{"data": [[1.72376574E12, 522.8444444444443], [1.72376622E12, 589.0], [1.72376604E12, 568.7750000000002], [1.72376586E12, 566.5365853658537], [1.72376568E12, 681.4324324324323], [1.72376616E12, 558.6904761904761], [1.72376598E12, 580.925], [1.7237658E12, 538.952380952381], [1.7237661E12, 555.1463414634146], [1.72376592E12, 565.0250000000001]], "isOverall": false, "label": "registrarEntradaEglobalt", "isController": false}, {"data": [[1.72376622E12, 1628.0], [1.72376604E12, 2415.5000000000005], [1.72376616E12, 1486.5769230769233], [1.72376598E12, 1738.7142857142858], [1.7237661E12, 1324.6896551724137]], "isOverall": false, "label": "registrarEntradaSinSalida", "isController": false}, {"data": [[1.72376574E12, 397.4507042253522], [1.72376622E12, 515.0], [1.72376604E12, 410.84507042253523], [1.72376586E12, 417.49999999999994], [1.72376568E12, 421.913043478261], [1.72376616E12, 414.9117647058823], [1.72376598E12, 399.67647058823525], [1.7237658E12, 411.5571428571431], [1.7237661E12, 411.2253521126761], [1.72376562E12, 413.9076923076922], [1.72376592E12, 409.27142857142866]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1.72376562E12, 1276.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}, {"data": [[1.72376622E12, 1058.0], [1.72376604E12, 975.294117647059], [1.72376586E12, 957.969696969697], [1.72376616E12, 1047.625], [1.72376598E12, 1015.5937500000001], [1.7237658E12, 1011.8571428571429], [1.7237661E12, 1035.8484848484848], [1.72376592E12, 1007.5]], "isOverall": false, "label": "registrarSalidaPagoAutomatico", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72376622E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 278.17500000000007, "minX": 1.72376562E12, "maxY": 1080.0, "series": [{"data": [[1.72376574E12, 287.1777777777778], [1.72376622E12, 297.0], [1.72376604E12, 278.17500000000007], [1.72376586E12, 289.36585365853654], [1.72376568E12, 279.62162162162167], [1.72376616E12, 284.35714285714295], [1.72376598E12, 281.325], [1.7237658E12, 287.0714285714285], [1.7237661E12, 283.2682926829268], [1.72376592E12, 287.175]], "isOverall": false, "label": "registrarEntradaEglobalt", "isController": false}, {"data": [[1.72376622E12, 301.0], [1.72376604E12, 281.8333333333333], [1.72376616E12, 286.03846153846143], [1.72376598E12, 282.85714285714283], [1.7237661E12, 281.58620689655163]], "isOverall": false, "label": "registrarEntradaSinSalida", "isController": false}, {"data": [[1.72376574E12, 284.29577464788736], [1.72376622E12, 318.5], [1.72376604E12, 282.3943661971832], [1.72376586E12, 288.38571428571436], [1.72376568E12, 282.231884057971], [1.72376616E12, 287.1911764705883], [1.72376598E12, 283.70588235294133], [1.7237658E12, 283.1142857142858], [1.7237661E12, 283.52112676056345], [1.72376562E12, 291.9384615384615], [1.72376592E12, 282.61428571428564]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1.72376562E12, 1080.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}, {"data": [[1.72376622E12, 312.5], [1.72376604E12, 281.35294117647067], [1.72376586E12, 283.06060606060606], [1.72376616E12, 288.3125], [1.72376598E12, 294.40624999999994], [1.7237658E12, 284.4761904761905], [1.7237661E12, 287.3030303030303], [1.72376592E12, 284.55882352941177]], "isOverall": false, "label": "registrarSalidaPagoAutomatico", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72376622E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 326.0, "minX": 1.72376562E12, "maxY": 2580.0, "series": [{"data": [[1.72376574E12, 1038.0], [1.72376622E12, 1628.0], [1.72376604E12, 1116.0], [1.72376586E12, 1192.0], [1.72376568E12, 2071.0], [1.72376616E12, 2213.0], [1.72376598E12, 2580.0], [1.7237658E12, 1196.0], [1.7237661E12, 2246.0], [1.72376562E12, 1281.0], [1.72376592E12, 1345.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72376574E12, 595.3], [1.72376622E12, 1628.0], [1.72376604E12, 642.4], [1.72376586E12, 1016.0], [1.72376568E12, 723.8], [1.72376616E12, 1488.7], [1.72376598E12, 1155.5], [1.7237658E12, 970.4000000000001], [1.7237661E12, 1273.8], [1.72376562E12, 465.6], [1.72376592E12, 1052.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72376574E12, 1031.37], [1.72376622E12, 1628.0], [1.72376604E12, 1103.1599999999994], [1.72376586E12, 1179.4000000000003], [1.72376568E12, 1999.1099999999924], [1.72376616E12, 2001.1700000000008], [1.72376598E12, 2400.0000000000045], [1.7237658E12, 1189.1999999999998], [1.7237661E12, 2072.6600000000026], [1.72376562E12, 1281.0], [1.72376592E12, 1304.050000000001]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72376574E12, 655.8999999999997], [1.72376622E12, 1628.0], [1.72376604E12, 757.9999999999999], [1.72376586E12, 1051.75], [1.72376568E12, 793.4499999999999], [1.72376616E12, 1624.2499999999998], [1.72376598E12, 1462.25], [1.7237658E12, 1066.0], [1.7237661E12, 1670.3999999999994], [1.72376562E12, 508.75], [1.72376592E12, 1141.25]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.72376574E12, 338.0], [1.72376622E12, 495.0], [1.72376604E12, 338.0], [1.72376586E12, 347.0], [1.72376568E12, 356.0], [1.72376616E12, 345.0], [1.72376598E12, 326.0], [1.7237658E12, 357.0], [1.7237661E12, 343.0], [1.72376562E12, 347.0], [1.72376592E12, 347.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72376574E12, 412.5], [1.72376622E12, 768.0], [1.72376604E12, 412.0], [1.72376586E12, 456.0], [1.72376568E12, 440.0], [1.72376616E12, 512.0], [1.72376598E12, 430.0], [1.7237658E12, 437.0], [1.7237661E12, 471.0], [1.72376562E12, 404.0], [1.72376592E12, 455.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72376622E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 412.0, "minX": 1.0, "maxY": 1085.0, "series": [{"data": [[1.0, 412.0], [2.0, 433.5], [4.0, 449.0], [5.0, 606.0], [3.0, 457.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 1079.0], [2.0, 1029.5], [5.0, 1085.0], [3.0, 977.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 5.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 412.0, "minX": 1.0, "maxY": 1085.0, "series": [{"data": [[1.0, 412.0], [2.0, 433.0], [4.0, 449.0], [5.0, 606.0], [3.0, 457.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 1079.0], [2.0, 1029.5], [5.0, 1085.0], [3.0, 977.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 5.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.72376556E12, "maxY": 2.8666666666666667, "series": [{"data": [[1.72376574E12, 1.9333333333333333], [1.72376622E12, 0.06666666666666667], [1.72376604E12, 2.7333333333333334], [1.72376556E12, 0.016666666666666666], [1.72376586E12, 2.4], [1.72376568E12, 1.7666666666666666], [1.72376616E12, 2.816666666666667], [1.72376598E12, 2.466666666666667], [1.7237658E12, 2.2333333333333334], [1.7237661E12, 2.8666666666666667], [1.72376562E12, 1.1], [1.72376592E12, 2.3833333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72376622E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.72376562E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.72376574E12, 1.1833333333333333], [1.72376622E12, 0.03333333333333333], [1.72376604E12, 1.1833333333333333], [1.72376586E12, 1.1666666666666667], [1.72376568E12, 1.15], [1.72376616E12, 1.1333333333333333], [1.72376598E12, 1.1333333333333333], [1.7237658E12, 1.1666666666666667], [1.7237661E12, 1.1833333333333333], [1.72376562E12, 1.1], [1.72376592E12, 1.1666666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.72376574E12, 0.75], [1.72376622E12, 0.06666666666666667], [1.72376604E12, 1.2333333333333334], [1.72376586E12, 1.2333333333333334], [1.72376568E12, 0.6166666666666667], [1.72376616E12, 1.6666666666666667], [1.72376598E12, 1.2833333333333334], [1.7237658E12, 1.05], [1.7237661E12, 1.5333333333333334], [1.72376592E12, 1.2333333333333334]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.72376604E12, 0.3], [1.72376598E12, 0.03333333333333333], [1.7237661E12, 0.18333333333333332]], "isOverall": false, "label": "404", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72376622E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.72376562E12, "maxY": 1.1833333333333333, "series": [{"data": [[1.72376562E12, 0.016666666666666666]], "isOverall": false, "label": "loginAFlypass-success", "isController": false}, {"data": [[1.72376622E12, 0.03333333333333333], [1.72376586E12, 0.55], [1.72376616E12, 0.5333333333333333], [1.72376598E12, 0.5166666666666667], [1.7237658E12, 0.35], [1.7237661E12, 0.38333333333333336], [1.72376592E12, 0.5666666666666667]], "isOverall": false, "label": "registrarSalidaPagoAutomatico-success", "isController": false}, {"data": [[1.72376604E12, 0.5666666666666667], [1.72376598E12, 0.016666666666666666], [1.7237661E12, 0.16666666666666666]], "isOverall": false, "label": "registrarSalidaPagoAutomatico-failure", "isController": false}, {"data": [[1.72376574E12, 1.1833333333333333], [1.72376622E12, 0.03333333333333333], [1.72376604E12, 1.1833333333333333], [1.72376586E12, 1.1666666666666667], [1.72376568E12, 1.15], [1.72376616E12, 1.1333333333333333], [1.72376598E12, 1.1333333333333333], [1.7237658E12, 1.1666666666666667], [1.7237661E12, 1.1833333333333333], [1.72376562E12, 1.0833333333333333], [1.72376592E12, 1.1666666666666667]], "isOverall": false, "label": "getPlate-success", "isController": false}, {"data": [[1.72376604E12, 0.3], [1.72376598E12, 0.03333333333333333], [1.7237661E12, 0.18333333333333332]], "isOverall": false, "label": "registrarEntradaSinSalida-failure", "isController": false}, {"data": [[1.72376574E12, 0.75], [1.72376622E12, 0.016666666666666666], [1.72376604E12, 0.6666666666666666], [1.72376586E12, 0.6833333333333333], [1.72376568E12, 0.6166666666666667], [1.72376616E12, 0.7], [1.72376598E12, 0.6666666666666666], [1.7237658E12, 0.7], [1.7237661E12, 0.6833333333333333], [1.72376592E12, 0.6666666666666666]], "isOverall": false, "label": "registrarEntradaEglobalt-success", "isController": false}, {"data": [[1.72376622E12, 0.016666666666666666], [1.72376616E12, 0.43333333333333335], [1.72376598E12, 0.08333333333333333], [1.7237661E12, 0.3]], "isOverall": false, "label": "registrarEntradaSinSalida-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72376622E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.72376562E12, "maxY": 2.8, "series": [{"data": [[1.72376574E12, 1.9333333333333333], [1.72376622E12, 0.1], [1.72376604E12, 1.85], [1.72376586E12, 2.4], [1.72376568E12, 1.7666666666666666], [1.72376616E12, 2.8], [1.72376598E12, 2.4], [1.7237658E12, 2.216666666666667], [1.7237661E12, 2.55], [1.72376562E12, 1.1], [1.72376592E12, 2.4]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.72376604E12, 0.8666666666666667], [1.72376598E12, 0.05], [1.7237661E12, 0.35]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72376622E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

