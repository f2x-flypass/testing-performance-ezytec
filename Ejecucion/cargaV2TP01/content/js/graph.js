/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 327.0, "minX": 0.0, "maxY": 24903.0, "series": [{"data": [[0.0, 370.0], [0.1, 370.0], [0.2, 370.0], [0.3, 370.0], [0.4, 370.0], [0.5, 370.0], [0.6, 372.0], [0.7, 372.0], [0.8, 372.0], [0.9, 377.0], [1.0, 377.0], [1.1, 377.0], [1.2, 379.0], [1.3, 379.0], [1.4, 379.0], [1.5, 380.0], [1.6, 380.0], [1.7, 380.0], [1.8, 384.0], [1.9, 384.0], [2.0, 384.0], [2.1, 384.0], [2.2, 384.0], [2.3, 384.0], [2.4, 385.0], [2.5, 385.0], [2.6, 385.0], [2.7, 385.0], [2.8, 385.0], [2.9, 386.0], [3.0, 386.0], [3.1, 386.0], [3.2, 386.0], [3.3, 386.0], [3.4, 386.0], [3.5, 389.0], [3.6, 389.0], [3.7, 389.0], [3.8, 391.0], [3.9, 391.0], [4.0, 391.0], [4.1, 391.0], [4.2, 391.0], [4.3, 391.0], [4.4, 392.0], [4.5, 392.0], [4.6, 392.0], [4.7, 394.0], [4.8, 394.0], [4.9, 394.0], [5.0, 395.0], [5.1, 395.0], [5.2, 395.0], [5.3, 395.0], [5.4, 395.0], [5.5, 395.0], [5.6, 396.0], [5.7, 396.0], [5.8, 398.0], [5.9, 398.0], [6.0, 398.0], [6.1, 399.0], [6.2, 399.0], [6.3, 399.0], [6.4, 400.0], [6.5, 400.0], [6.6, 400.0], [6.7, 401.0], [6.8, 401.0], [6.9, 401.0], [7.0, 403.0], [7.1, 403.0], [7.2, 403.0], [7.3, 404.0], [7.4, 404.0], [7.5, 404.0], [7.6, 404.0], [7.7, 404.0], [7.8, 404.0], [7.9, 405.0], [8.0, 405.0], [8.1, 405.0], [8.2, 406.0], [8.3, 406.0], [8.4, 406.0], [8.5, 407.0], [8.6, 407.0], [8.7, 407.0], [8.8, 407.0], [8.9, 407.0], [9.0, 409.0], [9.1, 409.0], [9.2, 409.0], [9.3, 410.0], [9.4, 410.0], [9.5, 410.0], [9.6, 410.0], [9.7, 410.0], [9.8, 410.0], [9.9, 411.0], [10.0, 411.0], [10.1, 411.0], [10.2, 411.0], [10.3, 411.0], [10.4, 411.0], [10.5, 411.0], [10.6, 411.0], [10.7, 411.0], [10.8, 413.0], [10.9, 413.0], [11.0, 413.0], [11.1, 413.0], [11.2, 413.0], [11.3, 413.0], [11.4, 413.0], [11.5, 413.0], [11.6, 414.0], [11.7, 414.0], [11.8, 414.0], [11.9, 415.0], [12.0, 415.0], [12.1, 415.0], [12.2, 417.0], [12.3, 417.0], [12.4, 417.0], [12.5, 417.0], [12.6, 417.0], [12.7, 417.0], [12.8, 417.0], [12.9, 417.0], [13.0, 417.0], [13.1, 417.0], [13.2, 417.0], [13.3, 417.0], [13.4, 418.0], [13.5, 418.0], [13.6, 418.0], [13.7, 418.0], [13.8, 418.0], [13.9, 418.0], [14.0, 419.0], [14.1, 419.0], [14.2, 419.0], [14.3, 419.0], [14.4, 419.0], [14.5, 419.0], [14.6, 419.0], [14.7, 419.0], [14.8, 419.0], [14.9, 419.0], [15.0, 419.0], [15.1, 420.0], [15.2, 420.0], [15.3, 420.0], [15.4, 421.0], [15.5, 421.0], [15.6, 421.0], [15.7, 422.0], [15.8, 422.0], [15.9, 422.0], [16.0, 422.0], [16.1, 422.0], [16.2, 422.0], [16.3, 423.0], [16.4, 423.0], [16.5, 423.0], [16.6, 424.0], [16.7, 424.0], [16.8, 424.0], [16.9, 424.0], [17.0, 424.0], [17.1, 424.0], [17.2, 424.0], [17.3, 424.0], [17.4, 424.0], [17.5, 424.0], [17.6, 424.0], [17.7, 424.0], [17.8, 424.0], [17.9, 424.0], [18.0, 426.0], [18.1, 426.0], [18.2, 426.0], [18.3, 428.0], [18.4, 428.0], [18.5, 428.0], [18.6, 429.0], [18.7, 429.0], [18.8, 429.0], [18.9, 429.0], [19.0, 429.0], [19.1, 429.0], [19.2, 430.0], [19.3, 430.0], [19.4, 430.0], [19.5, 431.0], [19.6, 431.0], [19.7, 431.0], [19.8, 431.0], [19.9, 431.0], [20.0, 431.0], [20.1, 431.0], [20.2, 431.0], [20.3, 431.0], [20.4, 431.0], [20.5, 431.0], [20.6, 432.0], [20.7, 432.0], [20.8, 432.0], [20.9, 432.0], [21.0, 432.0], [21.1, 432.0], [21.2, 432.0], [21.3, 432.0], [21.4, 432.0], [21.5, 433.0], [21.6, 433.0], [21.7, 433.0], [21.8, 433.0], [21.9, 433.0], [22.0, 433.0], [22.1, 434.0], [22.2, 434.0], [22.3, 434.0], [22.4, 435.0], [22.5, 435.0], [22.6, 435.0], [22.7, 438.0], [22.8, 438.0], [22.9, 438.0], [23.0, 438.0], [23.1, 438.0], [23.2, 439.0], [23.3, 439.0], [23.4, 439.0], [23.5, 440.0], [23.6, 440.0], [23.7, 440.0], [23.8, 440.0], [23.9, 440.0], [24.0, 440.0], [24.1, 440.0], [24.2, 440.0], [24.3, 440.0], [24.4, 441.0], [24.5, 441.0], [24.6, 441.0], [24.7, 441.0], [24.8, 441.0], [24.9, 441.0], [25.0, 442.0], [25.1, 442.0], [25.2, 442.0], [25.3, 443.0], [25.4, 443.0], [25.5, 443.0], [25.6, 443.0], [25.7, 443.0], [25.8, 444.0], [25.9, 444.0], [26.0, 444.0], [26.1, 446.0], [26.2, 446.0], [26.3, 446.0], [26.4, 448.0], [26.5, 448.0], [26.6, 448.0], [26.7, 450.0], [26.8, 450.0], [26.9, 450.0], [27.0, 451.0], [27.1, 451.0], [27.2, 451.0], [27.3, 454.0], [27.4, 454.0], [27.5, 454.0], [27.6, 455.0], [27.7, 455.0], [27.8, 455.0], [27.9, 456.0], [28.0, 456.0], [28.1, 456.0], [28.2, 456.0], [28.3, 456.0], [28.4, 456.0], [28.5, 459.0], [28.6, 459.0], [28.7, 459.0], [28.8, 459.0], [28.9, 459.0], [29.0, 459.0], [29.1, 459.0], [29.2, 459.0], [29.3, 460.0], [29.4, 460.0], [29.5, 460.0], [29.6, 465.0], [29.7, 465.0], [29.8, 465.0], [29.9, 466.0], [30.0, 466.0], [30.1, 466.0], [30.2, 467.0], [30.3, 467.0], [30.4, 467.0], [30.5, 468.0], [30.6, 468.0], [30.7, 468.0], [30.8, 468.0], [30.9, 468.0], [31.0, 468.0], [31.1, 469.0], [31.2, 469.0], [31.3, 469.0], [31.4, 470.0], [31.5, 470.0], [31.6, 477.0], [31.7, 477.0], [31.8, 477.0], [31.9, 479.0], [32.0, 479.0], [32.1, 479.0], [32.2, 483.0], [32.3, 483.0], [32.4, 483.0], [32.5, 483.0], [32.6, 483.0], [32.7, 483.0], [32.8, 484.0], [32.9, 484.0], [33.0, 484.0], [33.1, 487.0], [33.2, 487.0], [33.3, 487.0], [33.4, 488.0], [33.5, 488.0], [33.6, 488.0], [33.7, 489.0], [33.8, 489.0], [33.9, 489.0], [34.0, 491.0], [34.1, 491.0], [34.2, 491.0], [34.3, 492.0], [34.4, 492.0], [34.5, 492.0], [34.6, 492.0], [34.7, 492.0], [34.8, 493.0], [34.9, 493.0], [35.0, 493.0], [35.1, 494.0], [35.2, 494.0], [35.3, 494.0], [35.4, 495.0], [35.5, 495.0], [35.6, 495.0], [35.7, 497.0], [35.8, 497.0], [35.9, 497.0], [36.0, 498.0], [36.1, 498.0], [36.2, 498.0], [36.3, 498.0], [36.4, 498.0], [36.5, 498.0], [36.6, 499.0], [36.7, 499.0], [36.8, 499.0], [36.9, 506.0], [37.0, 506.0], [37.1, 506.0], [37.2, 510.0], [37.3, 510.0], [37.4, 510.0], [37.5, 510.0], [37.6, 510.0], [37.7, 510.0], [37.8, 510.0], [37.9, 510.0], [38.0, 513.0], [38.1, 513.0], [38.2, 513.0], [38.3, 516.0], [38.4, 516.0], [38.5, 516.0], [38.6, 525.0], [38.7, 525.0], [38.8, 525.0], [38.9, 527.0], [39.0, 527.0], [39.1, 527.0], [39.2, 529.0], [39.3, 529.0], [39.4, 529.0], [39.5, 530.0], [39.6, 530.0], [39.7, 530.0], [39.8, 532.0], [39.9, 532.0], [40.0, 534.0], [40.1, 534.0], [40.2, 534.0], [40.3, 535.0], [40.4, 535.0], [40.5, 535.0], [40.6, 536.0], [40.7, 536.0], [40.8, 536.0], [40.9, 544.0], [41.0, 544.0], [41.1, 544.0], [41.2, 544.0], [41.3, 544.0], [41.4, 544.0], [41.5, 545.0], [41.6, 545.0], [41.7, 545.0], [41.8, 546.0], [41.9, 546.0], [42.0, 546.0], [42.1, 546.0], [42.2, 546.0], [42.3, 546.0], [42.4, 546.0], [42.5, 546.0], [42.6, 546.0], [42.7, 548.0], [42.8, 548.0], [42.9, 548.0], [43.0, 548.0], [43.1, 548.0], [43.2, 548.0], [43.3, 548.0], [43.4, 548.0], [43.5, 552.0], [43.6, 552.0], [43.7, 552.0], [43.8, 554.0], [43.9, 554.0], [44.0, 554.0], [44.1, 554.0], [44.2, 554.0], [44.3, 554.0], [44.4, 560.0], [44.5, 560.0], [44.6, 560.0], [44.7, 563.0], [44.8, 563.0], [44.9, 563.0], [45.0, 564.0], [45.1, 564.0], [45.2, 564.0], [45.3, 565.0], [45.4, 565.0], [45.5, 565.0], [45.6, 567.0], [45.7, 567.0], [45.8, 569.0], [45.9, 569.0], [46.0, 569.0], [46.1, 569.0], [46.2, 569.0], [46.3, 569.0], [46.4, 570.0], [46.5, 570.0], [46.6, 570.0], [46.7, 575.0], [46.8, 575.0], [46.9, 575.0], [47.0, 577.0], [47.1, 577.0], [47.2, 577.0], [47.3, 577.0], [47.4, 577.0], [47.5, 577.0], [47.6, 578.0], [47.7, 578.0], [47.8, 578.0], [47.9, 579.0], [48.0, 579.0], [48.1, 579.0], [48.2, 579.0], [48.3, 579.0], [48.4, 579.0], [48.5, 581.0], [48.6, 581.0], [48.7, 581.0], [48.8, 581.0], [48.9, 581.0], [49.0, 581.0], [49.1, 581.0], [49.2, 581.0], [49.3, 582.0], [49.4, 582.0], [49.5, 582.0], [49.6, 583.0], [49.7, 583.0], [49.8, 583.0], [49.9, 584.0], [50.0, 584.0], [50.1, 584.0], [50.2, 586.0], [50.3, 586.0], [50.4, 586.0], [50.5, 590.0], [50.6, 590.0], [50.7, 590.0], [50.8, 593.0], [50.9, 593.0], [51.0, 593.0], [51.1, 594.0], [51.2, 594.0], [51.3, 594.0], [51.4, 595.0], [51.5, 595.0], [51.6, 596.0], [51.7, 596.0], [51.8, 596.0], [51.9, 597.0], [52.0, 597.0], [52.1, 597.0], [52.2, 598.0], [52.3, 598.0], [52.4, 598.0], [52.5, 602.0], [52.6, 602.0], [52.7, 602.0], [52.8, 603.0], [52.9, 603.0], [53.0, 603.0], [53.1, 605.0], [53.2, 605.0], [53.3, 605.0], [53.4, 607.0], [53.5, 607.0], [53.6, 607.0], [53.7, 607.0], [53.8, 607.0], [53.9, 607.0], [54.0, 608.0], [54.1, 608.0], [54.2, 608.0], [54.3, 609.0], [54.4, 609.0], [54.5, 609.0], [54.6, 609.0], [54.7, 609.0], [54.8, 613.0], [54.9, 613.0], [55.0, 613.0], [55.1, 615.0], [55.2, 615.0], [55.3, 615.0], [55.4, 616.0], [55.5, 616.0], [55.6, 616.0], [55.7, 618.0], [55.8, 618.0], [55.9, 618.0], [56.0, 619.0], [56.1, 619.0], [56.2, 619.0], [56.3, 620.0], [56.4, 620.0], [56.5, 620.0], [56.6, 622.0], [56.7, 622.0], [56.8, 622.0], [56.9, 629.0], [57.0, 629.0], [57.1, 629.0], [57.2, 631.0], [57.3, 631.0], [57.4, 632.0], [57.5, 632.0], [57.6, 632.0], [57.7, 634.0], [57.8, 634.0], [57.9, 634.0], [58.0, 634.0], [58.1, 634.0], [58.2, 634.0], [58.3, 635.0], [58.4, 635.0], [58.5, 635.0], [58.6, 637.0], [58.7, 637.0], [58.8, 637.0], [58.9, 641.0], [59.0, 641.0], [59.1, 641.0], [59.2, 642.0], [59.3, 642.0], [59.4, 642.0], [59.5, 643.0], [59.6, 643.0], [59.7, 643.0], [59.8, 644.0], [59.9, 644.0], [60.0, 645.0], [60.1, 645.0], [60.2, 645.0], [60.3, 645.0], [60.4, 645.0], [60.5, 645.0], [60.6, 649.0], [60.7, 649.0], [60.8, 649.0], [60.9, 651.0], [61.0, 651.0], [61.1, 651.0], [61.2, 652.0], [61.3, 652.0], [61.4, 652.0], [61.5, 652.0], [61.6, 652.0], [61.7, 652.0], [61.8, 653.0], [61.9, 653.0], [62.0, 653.0], [62.1, 658.0], [62.2, 658.0], [62.3, 658.0], [62.4, 658.0], [62.5, 658.0], [62.6, 658.0], [62.7, 659.0], [62.8, 659.0], [62.9, 661.0], [63.0, 661.0], [63.1, 661.0], [63.2, 661.0], [63.3, 661.0], [63.4, 661.0], [63.5, 664.0], [63.6, 664.0], [63.7, 664.0], [63.8, 666.0], [63.9, 666.0], [64.0, 666.0], [64.1, 667.0], [64.2, 667.0], [64.3, 667.0], [64.4, 667.0], [64.5, 667.0], [64.6, 667.0], [64.7, 668.0], [64.8, 668.0], [64.9, 668.0], [65.0, 672.0], [65.1, 672.0], [65.2, 672.0], [65.3, 674.0], [65.4, 674.0], [65.5, 674.0], [65.6, 678.0], [65.7, 678.0], [65.8, 679.0], [65.9, 679.0], [66.0, 679.0], [66.1, 682.0], [66.2, 682.0], [66.3, 682.0], [66.4, 685.0], [66.5, 685.0], [66.6, 685.0], [66.7, 685.0], [66.8, 685.0], [66.9, 685.0], [67.0, 686.0], [67.1, 686.0], [67.2, 686.0], [67.3, 688.0], [67.4, 688.0], [67.5, 688.0], [67.6, 688.0], [67.7, 688.0], [67.8, 688.0], [67.9, 693.0], [68.0, 693.0], [68.1, 693.0], [68.2, 693.0], [68.3, 693.0], [68.4, 693.0], [68.5, 695.0], [68.6, 695.0], [68.7, 697.0], [68.8, 697.0], [68.9, 697.0], [69.0, 699.0], [69.1, 699.0], [69.2, 699.0], [69.3, 699.0], [69.4, 699.0], [69.5, 699.0], [69.6, 700.0], [69.7, 700.0], [69.8, 700.0], [69.9, 701.0], [70.0, 701.0], [70.1, 701.0], [70.2, 704.0], [70.3, 704.0], [70.4, 704.0], [70.5, 704.0], [70.6, 704.0], [70.7, 704.0], [70.8, 705.0], [70.9, 705.0], [71.0, 705.0], [71.1, 705.0], [71.2, 705.0], [71.3, 705.0], [71.4, 709.0], [71.5, 709.0], [71.6, 709.0], [71.7, 709.0], [71.8, 709.0], [71.9, 712.0], [72.0, 712.0], [72.1, 712.0], [72.2, 712.0], [72.3, 712.0], [72.4, 712.0], [72.5, 712.0], [72.6, 712.0], [72.7, 712.0], [72.8, 715.0], [72.9, 715.0], [73.0, 715.0], [73.1, 719.0], [73.2, 719.0], [73.3, 719.0], [73.4, 720.0], [73.5, 720.0], [73.6, 720.0], [73.7, 720.0], [73.8, 720.0], [73.9, 720.0], [74.0, 720.0], [74.1, 720.0], [74.2, 720.0], [74.3, 730.0], [74.4, 730.0], [74.5, 730.0], [74.6, 730.0], [74.7, 730.0], [74.8, 731.0], [74.9, 731.0], [75.0, 731.0], [75.1, 733.0], [75.2, 733.0], [75.3, 733.0], [75.4, 735.0], [75.5, 735.0], [75.6, 735.0], [75.7, 736.0], [75.8, 736.0], [75.9, 736.0], [76.0, 738.0], [76.1, 738.0], [76.2, 738.0], [76.3, 741.0], [76.4, 741.0], [76.5, 741.0], [76.6, 741.0], [76.7, 741.0], [76.8, 741.0], [76.9, 745.0], [77.0, 745.0], [77.1, 745.0], [77.2, 747.0], [77.3, 747.0], [77.4, 748.0], [77.5, 748.0], [77.6, 748.0], [77.7, 748.0], [77.8, 748.0], [77.9, 748.0], [78.0, 748.0], [78.1, 748.0], [78.2, 748.0], [78.3, 754.0], [78.4, 754.0], [78.5, 754.0], [78.6, 754.0], [78.7, 754.0], [78.8, 754.0], [78.9, 756.0], [79.0, 756.0], [79.1, 756.0], [79.2, 758.0], [79.3, 758.0], [79.4, 758.0], [79.5, 759.0], [79.6, 759.0], [79.7, 759.0], [79.8, 760.0], [79.9, 760.0], [80.0, 761.0], [80.1, 761.0], [80.2, 761.0], [80.3, 761.0], [80.4, 761.0], [80.5, 761.0], [80.6, 762.0], [80.7, 762.0], [80.8, 762.0], [80.9, 764.0], [81.0, 764.0], [81.1, 764.0], [81.2, 764.0], [81.3, 764.0], [81.4, 764.0], [81.5, 766.0], [81.6, 766.0], [81.7, 766.0], [81.8, 766.0], [81.9, 766.0], [82.0, 766.0], [82.1, 771.0], [82.2, 771.0], [82.3, 771.0], [82.4, 773.0], [82.5, 773.0], [82.6, 773.0], [82.7, 774.0], [82.8, 774.0], [82.9, 774.0], [83.0, 774.0], [83.1, 774.0], [83.2, 777.0], [83.3, 777.0], [83.4, 777.0], [83.5, 780.0], [83.6, 780.0], [83.7, 780.0], [83.8, 783.0], [83.9, 783.0], [84.0, 783.0], [84.1, 784.0], [84.2, 784.0], [84.3, 784.0], [84.4, 794.0], [84.5, 794.0], [84.6, 794.0], [84.7, 796.0], [84.8, 796.0], [84.9, 796.0], [85.0, 797.0], [85.1, 797.0], [85.2, 797.0], [85.3, 801.0], [85.4, 801.0], [85.5, 801.0], [85.6, 805.0], [85.7, 805.0], [85.8, 805.0], [85.9, 805.0], [86.0, 805.0], [86.1, 822.0], [86.2, 822.0], [86.3, 822.0], [86.4, 823.0], [86.5, 823.0], [86.6, 823.0], [86.7, 823.0], [86.8, 823.0], [86.9, 823.0], [87.0, 825.0], [87.1, 825.0], [87.2, 825.0], [87.3, 828.0], [87.4, 828.0], [87.5, 828.0], [87.6, 835.0], [87.7, 835.0], [87.8, 835.0], [87.9, 836.0], [88.0, 836.0], [88.1, 836.0], [88.2, 841.0], [88.3, 841.0], [88.4, 841.0], [88.5, 842.0], [88.6, 842.0], [88.7, 846.0], [88.8, 846.0], [88.9, 846.0], [89.0, 850.0], [89.1, 850.0], [89.2, 850.0], [89.3, 852.0], [89.4, 852.0], [89.5, 852.0], [89.6, 854.0], [89.7, 854.0], [89.8, 854.0], [89.9, 855.0], [90.0, 855.0], [90.1, 855.0], [90.2, 862.0], [90.3, 862.0], [90.4, 862.0], [90.5, 871.0], [90.6, 871.0], [90.7, 871.0], [90.8, 881.0], [90.9, 881.0], [91.0, 881.0], [91.1, 881.0], [91.2, 881.0], [91.3, 881.0], [91.4, 886.0], [91.5, 886.0], [91.6, 898.0], [91.7, 898.0], [91.8, 898.0], [91.9, 914.0], [92.0, 914.0], [92.1, 914.0], [92.2, 915.0], [92.3, 915.0], [92.4, 915.0], [92.5, 917.0], [92.6, 917.0], [92.7, 917.0], [92.8, 923.0], [92.9, 923.0], [93.0, 923.0], [93.1, 926.0], [93.2, 926.0], [93.3, 926.0], [93.4, 932.0], [93.5, 932.0], [93.6, 932.0], [93.7, 948.0], [93.8, 948.0], [93.9, 948.0], [94.0, 955.0], [94.1, 955.0], [94.2, 955.0], [94.3, 991.0], [94.4, 991.0], [94.5, 1013.0], [94.6, 1013.0], [94.7, 1013.0], [94.8, 1018.0], [94.9, 1018.0], [95.0, 1018.0], [95.1, 1024.0], [95.2, 1024.0], [95.3, 1024.0], [95.4, 1028.0], [95.5, 1028.0], [95.6, 1028.0], [95.7, 1030.0], [95.8, 1030.0], [95.9, 1030.0], [96.0, 1089.0], [96.1, 1089.0], [96.2, 1089.0], [96.3, 1102.0], [96.4, 1102.0], [96.5, 1102.0], [96.6, 1136.0], [96.7, 1136.0], [96.8, 1136.0], [96.9, 1145.0], [97.0, 1145.0], [97.1, 1145.0], [97.2, 1177.0], [97.3, 1177.0], [97.4, 1194.0], [97.5, 1194.0], [97.6, 1194.0], [97.7, 1201.0], [97.8, 1201.0], [97.9, 1201.0], [98.0, 1215.0], [98.1, 1215.0], [98.2, 1215.0], [98.3, 1215.0], [98.4, 1215.0], [98.5, 1215.0], [98.6, 1236.0], [98.7, 1236.0], [98.8, 1236.0], [98.9, 1274.0], [99.0, 1274.0], [99.1, 1274.0], [99.2, 1376.0], [99.3, 1376.0], [99.4, 1376.0], [99.5, 1484.0], [99.6, 1484.0], [99.7, 1484.0], [99.8, 21453.0], [99.9, 21453.0]], "isOverall": false, "label": "registrarEntradaEglobalt", "isController": false}, {"data": [[0.0, 744.0], [0.1, 744.0], [0.2, 744.0], [0.3, 744.0], [0.4, 744.0], [0.5, 744.0], [0.6, 744.0], [0.7, 744.0], [0.8, 744.0], [0.9, 744.0], [1.0, 744.0], [1.1, 744.0], [1.2, 744.0], [1.3, 793.0], [1.4, 793.0], [1.5, 793.0], [1.6, 793.0], [1.7, 793.0], [1.8, 793.0], [1.9, 793.0], [2.0, 793.0], [2.1, 793.0], [2.2, 793.0], [2.3, 793.0], [2.4, 793.0], [2.5, 793.0], [2.6, 808.0], [2.7, 808.0], [2.8, 808.0], [2.9, 808.0], [3.0, 808.0], [3.1, 808.0], [3.2, 808.0], [3.3, 808.0], [3.4, 808.0], [3.5, 808.0], [3.6, 808.0], [3.7, 808.0], [3.8, 818.0], [3.9, 818.0], [4.0, 818.0], [4.1, 818.0], [4.2, 818.0], [4.3, 818.0], [4.4, 818.0], [4.5, 818.0], [4.6, 818.0], [4.7, 818.0], [4.8, 818.0], [4.9, 818.0], [5.0, 818.0], [5.1, 848.0], [5.2, 848.0], [5.3, 848.0], [5.4, 848.0], [5.5, 848.0], [5.6, 848.0], [5.7, 848.0], [5.8, 848.0], [5.9, 848.0], [6.0, 848.0], [6.1, 848.0], [6.2, 848.0], [6.3, 848.0], [6.4, 856.0], [6.5, 856.0], [6.6, 856.0], [6.7, 856.0], [6.8, 856.0], [6.9, 856.0], [7.0, 856.0], [7.1, 856.0], [7.2, 856.0], [7.3, 856.0], [7.4, 856.0], [7.5, 856.0], [7.6, 858.0], [7.7, 858.0], [7.8, 858.0], [7.9, 858.0], [8.0, 858.0], [8.1, 858.0], [8.2, 858.0], [8.3, 858.0], [8.4, 858.0], [8.5, 858.0], [8.6, 858.0], [8.7, 858.0], [8.8, 858.0], [8.9, 860.0], [9.0, 860.0], [9.1, 860.0], [9.2, 860.0], [9.3, 860.0], [9.4, 860.0], [9.5, 860.0], [9.6, 860.0], [9.7, 860.0], [9.8, 860.0], [9.9, 860.0], [10.0, 860.0], [10.1, 860.0], [10.2, 911.0], [10.3, 911.0], [10.4, 911.0], [10.5, 911.0], [10.6, 911.0], [10.7, 911.0], [10.8, 911.0], [10.9, 911.0], [11.0, 911.0], [11.1, 911.0], [11.2, 911.0], [11.3, 911.0], [11.4, 929.0], [11.5, 929.0], [11.6, 929.0], [11.7, 929.0], [11.8, 929.0], [11.9, 929.0], [12.0, 929.0], [12.1, 929.0], [12.2, 929.0], [12.3, 929.0], [12.4, 929.0], [12.5, 929.0], [12.6, 929.0], [12.7, 931.0], [12.8, 931.0], [12.9, 931.0], [13.0, 931.0], [13.1, 931.0], [13.2, 931.0], [13.3, 931.0], [13.4, 931.0], [13.5, 931.0], [13.6, 931.0], [13.7, 931.0], [13.8, 931.0], [13.9, 931.0], [14.0, 954.0], [14.1, 954.0], [14.2, 954.0], [14.3, 954.0], [14.4, 954.0], [14.5, 954.0], [14.6, 954.0], [14.7, 954.0], [14.8, 954.0], [14.9, 954.0], [15.0, 954.0], [15.1, 954.0], [15.2, 985.0], [15.3, 985.0], [15.4, 985.0], [15.5, 985.0], [15.6, 985.0], [15.7, 985.0], [15.8, 985.0], [15.9, 985.0], [16.0, 985.0], [16.1, 985.0], [16.2, 985.0], [16.3, 985.0], [16.4, 985.0], [16.5, 996.0], [16.6, 996.0], [16.7, 996.0], [16.8, 996.0], [16.9, 996.0], [17.0, 996.0], [17.1, 996.0], [17.2, 996.0], [17.3, 996.0], [17.4, 996.0], [17.5, 996.0], [17.6, 996.0], [17.7, 996.0], [17.8, 1007.0], [17.9, 1007.0], [18.0, 1007.0], [18.1, 1007.0], [18.2, 1007.0], [18.3, 1007.0], [18.4, 1007.0], [18.5, 1007.0], [18.6, 1007.0], [18.7, 1007.0], [18.8, 1007.0], [18.9, 1007.0], [19.0, 1019.0], [19.1, 1019.0], [19.2, 1019.0], [19.3, 1019.0], [19.4, 1019.0], [19.5, 1019.0], [19.6, 1019.0], [19.7, 1019.0], [19.8, 1019.0], [19.9, 1019.0], [20.0, 1019.0], [20.1, 1019.0], [20.2, 1019.0], [20.3, 1020.0], [20.4, 1020.0], [20.5, 1020.0], [20.6, 1020.0], [20.7, 1020.0], [20.8, 1020.0], [20.9, 1020.0], [21.0, 1020.0], [21.1, 1020.0], [21.2, 1020.0], [21.3, 1020.0], [21.4, 1020.0], [21.5, 1020.0], [21.6, 1023.0], [21.7, 1023.0], [21.8, 1023.0], [21.9, 1023.0], [22.0, 1023.0], [22.1, 1023.0], [22.2, 1023.0], [22.3, 1023.0], [22.4, 1023.0], [22.5, 1023.0], [22.6, 1023.0], [22.7, 1023.0], [22.8, 1045.0], [22.9, 1045.0], [23.0, 1045.0], [23.1, 1045.0], [23.2, 1045.0], [23.3, 1045.0], [23.4, 1045.0], [23.5, 1045.0], [23.6, 1045.0], [23.7, 1045.0], [23.8, 1045.0], [23.9, 1045.0], [24.0, 1045.0], [24.1, 1049.0], [24.2, 1049.0], [24.3, 1049.0], [24.4, 1049.0], [24.5, 1049.0], [24.6, 1049.0], [24.7, 1049.0], [24.8, 1049.0], [24.9, 1049.0], [25.0, 1049.0], [25.1, 1049.0], [25.2, 1049.0], [25.3, 1049.0], [25.4, 1062.0], [25.5, 1062.0], [25.6, 1062.0], [25.7, 1062.0], [25.8, 1062.0], [25.9, 1062.0], [26.0, 1062.0], [26.1, 1062.0], [26.2, 1062.0], [26.3, 1062.0], [26.4, 1062.0], [26.5, 1062.0], [26.6, 1078.0], [26.7, 1078.0], [26.8, 1078.0], [26.9, 1078.0], [27.0, 1078.0], [27.1, 1078.0], [27.2, 1078.0], [27.3, 1078.0], [27.4, 1078.0], [27.5, 1078.0], [27.6, 1078.0], [27.7, 1078.0], [27.8, 1078.0], [27.9, 1081.0], [28.0, 1081.0], [28.1, 1081.0], [28.2, 1081.0], [28.3, 1081.0], [28.4, 1081.0], [28.5, 1081.0], [28.6, 1081.0], [28.7, 1081.0], [28.8, 1081.0], [28.9, 1081.0], [29.0, 1081.0], [29.1, 1081.0], [29.2, 1090.0], [29.3, 1090.0], [29.4, 1090.0], [29.5, 1090.0], [29.6, 1090.0], [29.7, 1090.0], [29.8, 1090.0], [29.9, 1090.0], [30.0, 1090.0], [30.1, 1090.0], [30.2, 1090.0], [30.3, 1090.0], [30.4, 1106.0], [30.5, 1106.0], [30.6, 1106.0], [30.7, 1106.0], [30.8, 1106.0], [30.9, 1106.0], [31.0, 1106.0], [31.1, 1106.0], [31.2, 1106.0], [31.3, 1106.0], [31.4, 1106.0], [31.5, 1106.0], [31.6, 1106.0], [31.7, 1164.0], [31.8, 1164.0], [31.9, 1164.0], [32.0, 1164.0], [32.1, 1164.0], [32.2, 1164.0], [32.3, 1164.0], [32.4, 1164.0], [32.5, 1164.0], [32.6, 1164.0], [32.7, 1164.0], [32.8, 1164.0], [32.9, 1164.0], [33.0, 1165.0], [33.1, 1165.0], [33.2, 1165.0], [33.3, 1165.0], [33.4, 1165.0], [33.5, 1165.0], [33.6, 1165.0], [33.7, 1165.0], [33.8, 1165.0], [33.9, 1165.0], [34.0, 1165.0], [34.1, 1165.0], [34.2, 1176.0], [34.3, 1176.0], [34.4, 1176.0], [34.5, 1176.0], [34.6, 1176.0], [34.7, 1176.0], [34.8, 1176.0], [34.9, 1176.0], [35.0, 1176.0], [35.1, 1176.0], [35.2, 1176.0], [35.3, 1176.0], [35.4, 1176.0], [35.5, 1185.0], [35.6, 1185.0], [35.7, 1185.0], [35.8, 1185.0], [35.9, 1185.0], [36.0, 1185.0], [36.1, 1185.0], [36.2, 1185.0], [36.3, 1185.0], [36.4, 1185.0], [36.5, 1185.0], [36.6, 1185.0], [36.7, 1185.0], [36.8, 1195.0], [36.9, 1195.0], [37.0, 1195.0], [37.1, 1195.0], [37.2, 1195.0], [37.3, 1195.0], [37.4, 1195.0], [37.5, 1195.0], [37.6, 1195.0], [37.7, 1195.0], [37.8, 1195.0], [37.9, 1195.0], [38.0, 1218.0], [38.1, 1218.0], [38.2, 1218.0], [38.3, 1218.0], [38.4, 1218.0], [38.5, 1218.0], [38.6, 1218.0], [38.7, 1218.0], [38.8, 1218.0], [38.9, 1218.0], [39.0, 1218.0], [39.1, 1218.0], [39.2, 1218.0], [39.3, 1219.0], [39.4, 1219.0], [39.5, 1219.0], [39.6, 1219.0], [39.7, 1219.0], [39.8, 1219.0], [39.9, 1219.0], [40.0, 1219.0], [40.1, 1219.0], [40.2, 1219.0], [40.3, 1219.0], [40.4, 1219.0], [40.5, 1219.0], [40.6, 1261.0], [40.7, 1261.0], [40.8, 1261.0], [40.9, 1261.0], [41.0, 1261.0], [41.1, 1261.0], [41.2, 1261.0], [41.3, 1261.0], [41.4, 1261.0], [41.5, 1261.0], [41.6, 1261.0], [41.7, 1261.0], [41.8, 1270.0], [41.9, 1270.0], [42.0, 1270.0], [42.1, 1270.0], [42.2, 1270.0], [42.3, 1270.0], [42.4, 1270.0], [42.5, 1270.0], [42.6, 1270.0], [42.7, 1270.0], [42.8, 1270.0], [42.9, 1270.0], [43.0, 1270.0], [43.1, 1289.0], [43.2, 1289.0], [43.3, 1289.0], [43.4, 1289.0], [43.5, 1289.0], [43.6, 1289.0], [43.7, 1289.0], [43.8, 1289.0], [43.9, 1289.0], [44.0, 1289.0], [44.1, 1289.0], [44.2, 1289.0], [44.3, 1289.0], [44.4, 1315.0], [44.5, 1315.0], [44.6, 1315.0], [44.7, 1315.0], [44.8, 1315.0], [44.9, 1315.0], [45.0, 1315.0], [45.1, 1315.0], [45.2, 1315.0], [45.3, 1315.0], [45.4, 1315.0], [45.5, 1315.0], [45.6, 1331.0], [45.7, 1331.0], [45.8, 1331.0], [45.9, 1331.0], [46.0, 1331.0], [46.1, 1331.0], [46.2, 1331.0], [46.3, 1331.0], [46.4, 1331.0], [46.5, 1331.0], [46.6, 1331.0], [46.7, 1331.0], [46.8, 1331.0], [46.9, 1344.0], [47.0, 1344.0], [47.1, 1344.0], [47.2, 1344.0], [47.3, 1344.0], [47.4, 1344.0], [47.5, 1344.0], [47.6, 1344.0], [47.7, 1344.0], [47.8, 1344.0], [47.9, 1344.0], [48.0, 1344.0], [48.1, 1344.0], [48.2, 1360.0], [48.3, 1360.0], [48.4, 1360.0], [48.5, 1360.0], [48.6, 1360.0], [48.7, 1360.0], [48.8, 1360.0], [48.9, 1360.0], [49.0, 1360.0], [49.1, 1360.0], [49.2, 1360.0], [49.3, 1360.0], [49.4, 1362.0], [49.5, 1362.0], [49.6, 1362.0], [49.7, 1362.0], [49.8, 1362.0], [49.9, 1362.0], [50.0, 1362.0], [50.1, 1362.0], [50.2, 1362.0], [50.3, 1362.0], [50.4, 1362.0], [50.5, 1362.0], [50.6, 1362.0], [50.7, 1398.0], [50.8, 1398.0], [50.9, 1398.0], [51.0, 1398.0], [51.1, 1398.0], [51.2, 1398.0], [51.3, 1398.0], [51.4, 1398.0], [51.5, 1398.0], [51.6, 1398.0], [51.7, 1398.0], [51.8, 1398.0], [51.9, 1423.0], [52.0, 1423.0], [52.1, 1423.0], [52.2, 1423.0], [52.3, 1423.0], [52.4, 1423.0], [52.5, 1423.0], [52.6, 1423.0], [52.7, 1423.0], [52.8, 1423.0], [52.9, 1423.0], [53.0, 1423.0], [53.1, 1423.0], [53.2, 1430.0], [53.3, 1430.0], [53.4, 1430.0], [53.5, 1430.0], [53.6, 1430.0], [53.7, 1430.0], [53.8, 1430.0], [53.9, 1430.0], [54.0, 1430.0], [54.1, 1430.0], [54.2, 1430.0], [54.3, 1430.0], [54.4, 1430.0], [54.5, 1433.0], [54.6, 1433.0], [54.7, 1433.0], [54.8, 1433.0], [54.9, 1433.0], [55.0, 1433.0], [55.1, 1433.0], [55.2, 1433.0], [55.3, 1433.0], [55.4, 1433.0], [55.5, 1433.0], [55.6, 1433.0], [55.7, 1459.0], [55.8, 1459.0], [55.9, 1459.0], [56.0, 1459.0], [56.1, 1459.0], [56.2, 1459.0], [56.3, 1459.0], [56.4, 1459.0], [56.5, 1459.0], [56.6, 1459.0], [56.7, 1459.0], [56.8, 1459.0], [56.9, 1459.0], [57.0, 1529.0], [57.1, 1529.0], [57.2, 1529.0], [57.3, 1529.0], [57.4, 1529.0], [57.5, 1529.0], [57.6, 1529.0], [57.7, 1529.0], [57.8, 1529.0], [57.9, 1529.0], [58.0, 1529.0], [58.1, 1529.0], [58.2, 1529.0], [58.3, 1595.0], [58.4, 1595.0], [58.5, 1595.0], [58.6, 1595.0], [58.7, 1595.0], [58.8, 1595.0], [58.9, 1595.0], [59.0, 1595.0], [59.1, 1595.0], [59.2, 1595.0], [59.3, 1595.0], [59.4, 1595.0], [59.5, 1616.0], [59.6, 1616.0], [59.7, 1616.0], [59.8, 1616.0], [59.9, 1616.0], [60.0, 1616.0], [60.1, 1616.0], [60.2, 1616.0], [60.3, 1616.0], [60.4, 1616.0], [60.5, 1616.0], [60.6, 1616.0], [60.7, 1616.0], [60.8, 1627.0], [60.9, 1627.0], [61.0, 1627.0], [61.1, 1627.0], [61.2, 1627.0], [61.3, 1627.0], [61.4, 1627.0], [61.5, 1627.0], [61.6, 1627.0], [61.7, 1627.0], [61.8, 1627.0], [61.9, 1627.0], [62.0, 1627.0], [62.1, 1629.0], [62.2, 1629.0], [62.3, 1629.0], [62.4, 1629.0], [62.5, 1629.0], [62.6, 1629.0], [62.7, 1629.0], [62.8, 1629.0], [62.9, 1629.0], [63.0, 1629.0], [63.1, 1629.0], [63.2, 1629.0], [63.3, 1630.0], [63.4, 1630.0], [63.5, 1630.0], [63.6, 1630.0], [63.7, 1630.0], [63.8, 1630.0], [63.9, 1630.0], [64.0, 1630.0], [64.1, 1630.0], [64.2, 1630.0], [64.3, 1630.0], [64.4, 1630.0], [64.5, 1630.0], [64.6, 1653.0], [64.7, 1653.0], [64.8, 1653.0], [64.9, 1653.0], [65.0, 1653.0], [65.1, 1653.0], [65.2, 1653.0], [65.3, 1653.0], [65.4, 1653.0], [65.5, 1653.0], [65.6, 1653.0], [65.7, 1653.0], [65.8, 1653.0], [65.9, 1655.0], [66.0, 1655.0], [66.1, 1655.0], [66.2, 1655.0], [66.3, 1655.0], [66.4, 1655.0], [66.5, 1655.0], [66.6, 1655.0], [66.7, 1655.0], [66.8, 1655.0], [66.9, 1655.0], [67.0, 1655.0], [67.1, 1684.0], [67.2, 1684.0], [67.3, 1684.0], [67.4, 1684.0], [67.5, 1684.0], [67.6, 1684.0], [67.7, 1684.0], [67.8, 1684.0], [67.9, 1684.0], [68.0, 1684.0], [68.1, 1684.0], [68.2, 1684.0], [68.3, 1684.0], [68.4, 1712.0], [68.5, 1712.0], [68.6, 1712.0], [68.7, 1712.0], [68.8, 1712.0], [68.9, 1712.0], [69.0, 1712.0], [69.1, 1712.0], [69.2, 1712.0], [69.3, 1712.0], [69.4, 1712.0], [69.5, 1712.0], [69.6, 1712.0], [69.7, 1714.0], [69.8, 1714.0], [69.9, 1714.0], [70.0, 1714.0], [70.1, 1714.0], [70.2, 1714.0], [70.3, 1714.0], [70.4, 1714.0], [70.5, 1714.0], [70.6, 1714.0], [70.7, 1714.0], [70.8, 1714.0], [70.9, 1745.0], [71.0, 1745.0], [71.1, 1745.0], [71.2, 1745.0], [71.3, 1745.0], [71.4, 1745.0], [71.5, 1745.0], [71.6, 1745.0], [71.7, 1745.0], [71.8, 1745.0], [71.9, 1745.0], [72.0, 1745.0], [72.1, 1745.0], [72.2, 1757.0], [72.3, 1757.0], [72.4, 1757.0], [72.5, 1757.0], [72.6, 1757.0], [72.7, 1757.0], [72.8, 1757.0], [72.9, 1757.0], [73.0, 1757.0], [73.1, 1757.0], [73.2, 1757.0], [73.3, 1757.0], [73.4, 1757.0], [73.5, 1772.0], [73.6, 1772.0], [73.7, 1772.0], [73.8, 1772.0], [73.9, 1772.0], [74.0, 1772.0], [74.1, 1772.0], [74.2, 1772.0], [74.3, 1772.0], [74.4, 1772.0], [74.5, 1772.0], [74.6, 1772.0], [74.7, 1833.0], [74.8, 1833.0], [74.9, 1833.0], [75.0, 1833.0], [75.1, 1833.0], [75.2, 1833.0], [75.3, 1833.0], [75.4, 1833.0], [75.5, 1833.0], [75.6, 1833.0], [75.7, 1833.0], [75.8, 1833.0], [75.9, 1833.0], [76.0, 1835.0], [76.1, 1835.0], [76.2, 1835.0], [76.3, 1835.0], [76.4, 1835.0], [76.5, 1835.0], [76.6, 1835.0], [76.7, 1835.0], [76.8, 1835.0], [76.9, 1835.0], [77.0, 1835.0], [77.1, 1835.0], [77.2, 1835.0], [77.3, 1838.0], [77.4, 1838.0], [77.5, 1838.0], [77.6, 1838.0], [77.7, 1838.0], [77.8, 1838.0], [77.9, 1838.0], [78.0, 1838.0], [78.1, 1838.0], [78.2, 1838.0], [78.3, 1838.0], [78.4, 1838.0], [78.5, 1841.0], [78.6, 1841.0], [78.7, 1841.0], [78.8, 1841.0], [78.9, 1841.0], [79.0, 1841.0], [79.1, 1841.0], [79.2, 1841.0], [79.3, 1841.0], [79.4, 1841.0], [79.5, 1841.0], [79.6, 1841.0], [79.7, 1841.0], [79.8, 1846.0], [79.9, 1846.0], [80.0, 1846.0], [80.1, 1846.0], [80.2, 1846.0], [80.3, 1846.0], [80.4, 1846.0], [80.5, 1846.0], [80.6, 1846.0], [80.7, 1846.0], [80.8, 1846.0], [80.9, 1846.0], [81.0, 1846.0], [81.1, 1924.0], [81.2, 1924.0], [81.3, 1924.0], [81.4, 1924.0], [81.5, 1924.0], [81.6, 1924.0], [81.7, 1924.0], [81.8, 1924.0], [81.9, 1924.0], [82.0, 1924.0], [82.1, 1924.0], [82.2, 1924.0], [82.3, 1943.0], [82.4, 1943.0], [82.5, 1943.0], [82.6, 1943.0], [82.7, 1943.0], [82.8, 1943.0], [82.9, 1943.0], [83.0, 1943.0], [83.1, 1943.0], [83.2, 1943.0], [83.3, 1943.0], [83.4, 1943.0], [83.5, 1943.0], [83.6, 1961.0], [83.7, 1961.0], [83.8, 1961.0], [83.9, 1961.0], [84.0, 1961.0], [84.1, 1961.0], [84.2, 1961.0], [84.3, 1961.0], [84.4, 1961.0], [84.5, 1961.0], [84.6, 1961.0], [84.7, 1961.0], [84.8, 1961.0], [84.9, 1980.0], [85.0, 1980.0], [85.1, 1980.0], [85.2, 1980.0], [85.3, 1980.0], [85.4, 1980.0], [85.5, 1980.0], [85.6, 1980.0], [85.7, 1980.0], [85.8, 1980.0], [85.9, 1980.0], [86.0, 1980.0], [86.1, 1982.0], [86.2, 1982.0], [86.3, 1982.0], [86.4, 1982.0], [86.5, 1982.0], [86.6, 1982.0], [86.7, 1982.0], [86.8, 1982.0], [86.9, 1982.0], [87.0, 1982.0], [87.1, 1982.0], [87.2, 1982.0], [87.3, 1982.0], [87.4, 1986.0], [87.5, 1986.0], [87.6, 1986.0], [87.7, 1986.0], [87.8, 1986.0], [87.9, 1986.0], [88.0, 1986.0], [88.1, 1986.0], [88.2, 1986.0], [88.3, 1986.0], [88.4, 1986.0], [88.5, 1986.0], [88.6, 1986.0], [88.7, 2021.0], [88.8, 2021.0], [88.9, 2021.0], [89.0, 2021.0], [89.1, 2021.0], [89.2, 2021.0], [89.3, 2021.0], [89.4, 2021.0], [89.5, 2021.0], [89.6, 2021.0], [89.7, 2021.0], [89.8, 2021.0], [89.9, 2038.0], [90.0, 2038.0], [90.1, 2038.0], [90.2, 2038.0], [90.3, 2038.0], [90.4, 2038.0], [90.5, 2038.0], [90.6, 2038.0], [90.7, 2038.0], [90.8, 2038.0], [90.9, 2038.0], [91.0, 2038.0], [91.1, 2038.0], [91.2, 2045.0], [91.3, 2045.0], [91.4, 2045.0], [91.5, 2045.0], [91.6, 2045.0], [91.7, 2045.0], [91.8, 2045.0], [91.9, 2045.0], [92.0, 2045.0], [92.1, 2045.0], [92.2, 2045.0], [92.3, 2045.0], [92.4, 2045.0], [92.5, 2046.0], [92.6, 2046.0], [92.7, 2046.0], [92.8, 2046.0], [92.9, 2046.0], [93.0, 2046.0], [93.1, 2046.0], [93.2, 2046.0], [93.3, 2046.0], [93.4, 2046.0], [93.5, 2046.0], [93.6, 2046.0], [93.7, 2204.0], [93.8, 2204.0], [93.9, 2204.0], [94.0, 2204.0], [94.1, 2204.0], [94.2, 2204.0], [94.3, 2204.0], [94.4, 2204.0], [94.5, 2204.0], [94.6, 2204.0], [94.7, 2204.0], [94.8, 2204.0], [94.9, 2204.0], [95.0, 2214.0], [95.1, 2214.0], [95.2, 2214.0], [95.3, 2214.0], [95.4, 2214.0], [95.5, 2214.0], [95.6, 2214.0], [95.7, 2214.0], [95.8, 2214.0], [95.9, 2214.0], [96.0, 2214.0], [96.1, 2214.0], [96.2, 2214.0], [96.3, 2345.0], [96.4, 2345.0], [96.5, 2345.0], [96.6, 2345.0], [96.7, 2345.0], [96.8, 2345.0], [96.9, 2345.0], [97.0, 2345.0], [97.1, 2345.0], [97.2, 2345.0], [97.3, 2345.0], [97.4, 2345.0], [97.5, 3222.0], [97.6, 3222.0], [97.7, 3222.0], [97.8, 3222.0], [97.9, 3222.0], [98.0, 3222.0], [98.1, 3222.0], [98.2, 3222.0], [98.3, 3222.0], [98.4, 3222.0], [98.5, 3222.0], [98.6, 3222.0], [98.7, 3222.0], [98.8, 24903.0], [98.9, 24903.0], [99.0, 24903.0], [99.1, 24903.0], [99.2, 24903.0], [99.3, 24903.0], [99.4, 24903.0], [99.5, 24903.0], [99.6, 24903.0], [99.7, 24903.0], [99.8, 24903.0], [99.9, 24903.0]], "isOverall": false, "label": "registrarEntradaSinSalida", "isController": false}, {"data": [[0.0, 327.0], [0.1, 327.0], [0.2, 332.0], [0.3, 339.0], [0.4, 339.0], [0.5, 340.0], [0.6, 340.0], [0.7, 340.0], [0.8, 341.0], [0.9, 342.0], [1.0, 342.0], [1.1, 342.0], [1.2, 342.0], [1.3, 342.0], [1.4, 342.0], [1.5, 343.0], [1.6, 343.0], [1.7, 344.0], [1.8, 344.0], [1.9, 344.0], [2.0, 344.0], [2.1, 344.0], [2.2, 344.0], [2.3, 345.0], [2.4, 346.0], [2.5, 346.0], [2.6, 346.0], [2.7, 346.0], [2.8, 346.0], [2.9, 346.0], [3.0, 347.0], [3.1, 347.0], [3.2, 347.0], [3.3, 347.0], [3.4, 347.0], [3.5, 348.0], [3.6, 348.0], [3.7, 348.0], [3.8, 349.0], [3.9, 350.0], [4.0, 350.0], [4.1, 350.0], [4.2, 350.0], [4.3, 350.0], [4.4, 350.0], [4.5, 350.0], [4.6, 350.0], [4.7, 351.0], [4.8, 351.0], [4.9, 351.0], [5.0, 351.0], [5.1, 351.0], [5.2, 351.0], [5.3, 351.0], [5.4, 351.0], [5.5, 351.0], [5.6, 351.0], [5.7, 351.0], [5.8, 351.0], [5.9, 351.0], [6.0, 351.0], [6.1, 351.0], [6.2, 352.0], [6.3, 352.0], [6.4, 352.0], [6.5, 352.0], [6.6, 352.0], [6.7, 352.0], [6.8, 352.0], [6.9, 353.0], [7.0, 353.0], [7.1, 353.0], [7.2, 353.0], [7.3, 353.0], [7.4, 353.0], [7.5, 354.0], [7.6, 354.0], [7.7, 355.0], [7.8, 355.0], [7.9, 355.0], [8.0, 356.0], [8.1, 356.0], [8.2, 356.0], [8.3, 356.0], [8.4, 356.0], [8.5, 356.0], [8.6, 356.0], [8.7, 357.0], [8.8, 357.0], [8.9, 357.0], [9.0, 358.0], [9.1, 358.0], [9.2, 358.0], [9.3, 359.0], [9.4, 359.0], [9.5, 359.0], [9.6, 360.0], [9.7, 360.0], [9.8, 360.0], [9.9, 360.0], [10.0, 360.0], [10.1, 361.0], [10.2, 361.0], [10.3, 361.0], [10.4, 361.0], [10.5, 362.0], [10.6, 362.0], [10.7, 362.0], [10.8, 362.0], [10.9, 362.0], [11.0, 363.0], [11.1, 363.0], [11.2, 363.0], [11.3, 363.0], [11.4, 363.0], [11.5, 363.0], [11.6, 364.0], [11.7, 364.0], [11.8, 364.0], [11.9, 364.0], [12.0, 365.0], [12.1, 365.0], [12.2, 365.0], [12.3, 365.0], [12.4, 365.0], [12.5, 365.0], [12.6, 366.0], [12.7, 366.0], [12.8, 366.0], [12.9, 366.0], [13.0, 366.0], [13.1, 366.0], [13.2, 367.0], [13.3, 367.0], [13.4, 367.0], [13.5, 367.0], [13.6, 367.0], [13.7, 367.0], [13.8, 368.0], [13.9, 368.0], [14.0, 368.0], [14.1, 368.0], [14.2, 368.0], [14.3, 368.0], [14.4, 369.0], [14.5, 369.0], [14.6, 369.0], [14.7, 369.0], [14.8, 369.0], [14.9, 369.0], [15.0, 370.0], [15.1, 370.0], [15.2, 370.0], [15.3, 371.0], [15.4, 371.0], [15.5, 371.0], [15.6, 371.0], [15.7, 371.0], [15.8, 371.0], [15.9, 371.0], [16.0, 371.0], [16.1, 371.0], [16.2, 372.0], [16.3, 372.0], [16.4, 372.0], [16.5, 372.0], [16.6, 372.0], [16.7, 372.0], [16.8, 372.0], [16.9, 372.0], [17.0, 372.0], [17.1, 372.0], [17.2, 372.0], [17.3, 372.0], [17.4, 372.0], [17.5, 372.0], [17.6, 372.0], [17.7, 373.0], [17.8, 373.0], [17.9, 374.0], [18.0, 374.0], [18.1, 374.0], [18.2, 374.0], [18.3, 374.0], [18.4, 374.0], [18.5, 374.0], [18.6, 374.0], [18.7, 374.0], [18.8, 375.0], [18.9, 375.0], [19.0, 375.0], [19.1, 375.0], [19.2, 375.0], [19.3, 375.0], [19.4, 375.0], [19.5, 375.0], [19.6, 375.0], [19.7, 375.0], [19.8, 375.0], [19.9, 375.0], [20.0, 376.0], [20.1, 376.0], [20.2, 376.0], [20.3, 376.0], [20.4, 376.0], [20.5, 376.0], [20.6, 376.0], [20.7, 376.0], [20.8, 376.0], [20.9, 377.0], [21.0, 377.0], [21.1, 377.0], [21.2, 377.0], [21.3, 377.0], [21.4, 377.0], [21.5, 377.0], [21.6, 377.0], [21.7, 377.0], [21.8, 377.0], [21.9, 377.0], [22.0, 377.0], [22.1, 377.0], [22.2, 377.0], [22.3, 377.0], [22.4, 377.0], [22.5, 378.0], [22.6, 378.0], [22.7, 378.0], [22.8, 378.0], [22.9, 378.0], [23.0, 378.0], [23.1, 378.0], [23.2, 378.0], [23.3, 378.0], [23.4, 378.0], [23.5, 378.0], [23.6, 378.0], [23.7, 378.0], [23.8, 378.0], [23.9, 378.0], [24.0, 378.0], [24.1, 378.0], [24.2, 378.0], [24.3, 378.0], [24.4, 378.0], [24.5, 379.0], [24.6, 379.0], [24.7, 379.0], [24.8, 379.0], [24.9, 380.0], [25.0, 380.0], [25.1, 380.0], [25.2, 380.0], [25.3, 380.0], [25.4, 380.0], [25.5, 380.0], [25.6, 380.0], [25.7, 380.0], [25.8, 380.0], [25.9, 381.0], [26.0, 381.0], [26.1, 381.0], [26.2, 381.0], [26.3, 381.0], [26.4, 381.0], [26.5, 381.0], [26.6, 381.0], [26.7, 381.0], [26.8, 381.0], [26.9, 381.0], [27.0, 381.0], [27.1, 381.0], [27.2, 381.0], [27.3, 381.0], [27.4, 381.0], [27.5, 381.0], [27.6, 382.0], [27.7, 382.0], [27.8, 382.0], [27.9, 382.0], [28.0, 382.0], [28.1, 382.0], [28.2, 382.0], [28.3, 382.0], [28.4, 382.0], [28.5, 382.0], [28.6, 383.0], [28.7, 383.0], [28.8, 383.0], [28.9, 383.0], [29.0, 383.0], [29.1, 383.0], [29.2, 383.0], [29.3, 383.0], [29.4, 384.0], [29.5, 384.0], [29.6, 384.0], [29.7, 384.0], [29.8, 384.0], [29.9, 384.0], [30.0, 384.0], [30.1, 385.0], [30.2, 385.0], [30.3, 385.0], [30.4, 385.0], [30.5, 385.0], [30.6, 385.0], [30.7, 385.0], [30.8, 385.0], [30.9, 385.0], [31.0, 385.0], [31.1, 385.0], [31.2, 385.0], [31.3, 385.0], [31.4, 385.0], [31.5, 385.0], [31.6, 386.0], [31.7, 386.0], [31.8, 386.0], [31.9, 386.0], [32.0, 386.0], [32.1, 386.0], [32.2, 386.0], [32.3, 386.0], [32.4, 386.0], [32.5, 387.0], [32.6, 387.0], [32.7, 387.0], [32.8, 387.0], [32.9, 387.0], [33.0, 387.0], [33.1, 387.0], [33.2, 387.0], [33.3, 387.0], [33.4, 387.0], [33.5, 387.0], [33.6, 387.0], [33.7, 387.0], [33.8, 387.0], [33.9, 387.0], [34.0, 387.0], [34.1, 387.0], [34.2, 388.0], [34.3, 388.0], [34.4, 388.0], [34.5, 388.0], [34.6, 388.0], [34.7, 388.0], [34.8, 388.0], [34.9, 388.0], [35.0, 388.0], [35.1, 388.0], [35.2, 388.0], [35.3, 388.0], [35.4, 388.0], [35.5, 388.0], [35.6, 388.0], [35.7, 388.0], [35.8, 388.0], [35.9, 388.0], [36.0, 389.0], [36.1, 389.0], [36.2, 389.0], [36.3, 389.0], [36.4, 389.0], [36.5, 389.0], [36.6, 389.0], [36.7, 389.0], [36.8, 389.0], [36.9, 389.0], [37.0, 390.0], [37.1, 390.0], [37.2, 390.0], [37.3, 390.0], [37.4, 390.0], [37.5, 390.0], [37.6, 390.0], [37.7, 390.0], [37.8, 390.0], [37.9, 390.0], [38.0, 390.0], [38.1, 391.0], [38.2, 391.0], [38.3, 391.0], [38.4, 391.0], [38.5, 391.0], [38.6, 391.0], [38.7, 391.0], [38.8, 391.0], [38.9, 391.0], [39.0, 391.0], [39.1, 391.0], [39.2, 391.0], [39.3, 392.0], [39.4, 392.0], [39.5, 392.0], [39.6, 392.0], [39.7, 392.0], [39.8, 392.0], [39.9, 393.0], [40.0, 393.0], [40.1, 393.0], [40.2, 393.0], [40.3, 393.0], [40.4, 393.0], [40.5, 393.0], [40.6, 393.0], [40.7, 393.0], [40.8, 393.0], [40.9, 393.0], [41.0, 393.0], [41.1, 393.0], [41.2, 394.0], [41.3, 394.0], [41.4, 394.0], [41.5, 394.0], [41.6, 394.0], [41.7, 394.0], [41.8, 394.0], [41.9, 394.0], [42.0, 394.0], [42.1, 394.0], [42.2, 394.0], [42.3, 394.0], [42.4, 394.0], [42.5, 394.0], [42.6, 394.0], [42.7, 394.0], [42.8, 394.0], [42.9, 394.0], [43.0, 395.0], [43.1, 395.0], [43.2, 395.0], [43.3, 395.0], [43.4, 395.0], [43.5, 395.0], [43.6, 395.0], [43.7, 395.0], [43.8, 395.0], [43.9, 395.0], [44.0, 395.0], [44.1, 395.0], [44.2, 395.0], [44.3, 395.0], [44.4, 395.0], [44.5, 395.0], [44.6, 395.0], [44.7, 395.0], [44.8, 395.0], [44.9, 395.0], [45.0, 396.0], [45.1, 396.0], [45.2, 396.0], [45.3, 396.0], [45.4, 396.0], [45.5, 396.0], [45.6, 396.0], [45.7, 396.0], [45.8, 396.0], [45.9, 396.0], [46.0, 396.0], [46.1, 396.0], [46.2, 396.0], [46.3, 396.0], [46.4, 396.0], [46.5, 396.0], [46.6, 397.0], [46.7, 397.0], [46.8, 397.0], [46.9, 397.0], [47.0, 397.0], [47.1, 397.0], [47.2, 397.0], [47.3, 397.0], [47.4, 397.0], [47.5, 397.0], [47.6, 397.0], [47.7, 397.0], [47.8, 397.0], [47.9, 397.0], [48.0, 398.0], [48.1, 398.0], [48.2, 398.0], [48.3, 398.0], [48.4, 398.0], [48.5, 398.0], [48.6, 398.0], [48.7, 398.0], [48.8, 398.0], [48.9, 398.0], [49.0, 399.0], [49.1, 399.0], [49.2, 399.0], [49.3, 399.0], [49.4, 399.0], [49.5, 399.0], [49.6, 400.0], [49.7, 400.0], [49.8, 400.0], [49.9, 400.0], [50.0, 400.0], [50.1, 400.0], [50.2, 400.0], [50.3, 400.0], [50.4, 400.0], [50.5, 400.0], [50.6, 400.0], [50.7, 400.0], [50.8, 401.0], [50.9, 401.0], [51.0, 401.0], [51.1, 401.0], [51.2, 401.0], [51.3, 401.0], [51.4, 401.0], [51.5, 401.0], [51.6, 401.0], [51.7, 401.0], [51.8, 401.0], [51.9, 401.0], [52.0, 402.0], [52.1, 402.0], [52.2, 402.0], [52.3, 402.0], [52.4, 402.0], [52.5, 402.0], [52.6, 402.0], [52.7, 402.0], [52.8, 402.0], [52.9, 402.0], [53.0, 402.0], [53.1, 402.0], [53.2, 402.0], [53.3, 402.0], [53.4, 402.0], [53.5, 402.0], [53.6, 402.0], [53.7, 402.0], [53.8, 402.0], [53.9, 402.0], [54.0, 402.0], [54.1, 403.0], [54.2, 403.0], [54.3, 403.0], [54.4, 403.0], [54.5, 403.0], [54.6, 403.0], [54.7, 403.0], [54.8, 403.0], [54.9, 403.0], [55.0, 404.0], [55.1, 404.0], [55.2, 404.0], [55.3, 404.0], [55.4, 404.0], [55.5, 404.0], [55.6, 404.0], [55.7, 404.0], [55.8, 404.0], [55.9, 404.0], [56.0, 404.0], [56.1, 404.0], [56.2, 404.0], [56.3, 405.0], [56.4, 405.0], [56.5, 405.0], [56.6, 405.0], [56.7, 405.0], [56.8, 405.0], [56.9, 405.0], [57.0, 405.0], [57.1, 405.0], [57.2, 405.0], [57.3, 405.0], [57.4, 405.0], [57.5, 405.0], [57.6, 405.0], [57.7, 405.0], [57.8, 405.0], [57.9, 405.0], [58.0, 405.0], [58.1, 405.0], [58.2, 405.0], [58.3, 405.0], [58.4, 406.0], [58.5, 406.0], [58.6, 406.0], [58.7, 406.0], [58.8, 406.0], [58.9, 406.0], [59.0, 407.0], [59.1, 407.0], [59.2, 407.0], [59.3, 407.0], [59.4, 407.0], [59.5, 407.0], [59.6, 407.0], [59.7, 407.0], [59.8, 407.0], [59.9, 408.0], [60.0, 408.0], [60.1, 408.0], [60.2, 408.0], [60.3, 408.0], [60.4, 408.0], [60.5, 408.0], [60.6, 408.0], [60.7, 408.0], [60.8, 408.0], [60.9, 408.0], [61.0, 408.0], [61.1, 408.0], [61.2, 408.0], [61.3, 409.0], [61.4, 409.0], [61.5, 409.0], [61.6, 409.0], [61.7, 409.0], [61.8, 409.0], [61.9, 409.0], [62.0, 409.0], [62.1, 409.0], [62.2, 409.0], [62.3, 409.0], [62.4, 409.0], [62.5, 410.0], [62.6, 410.0], [62.7, 410.0], [62.8, 410.0], [62.9, 410.0], [63.0, 410.0], [63.1, 410.0], [63.2, 410.0], [63.3, 410.0], [63.4, 411.0], [63.5, 411.0], [63.6, 411.0], [63.7, 411.0], [63.8, 411.0], [63.9, 411.0], [64.0, 411.0], [64.1, 411.0], [64.2, 411.0], [64.3, 412.0], [64.4, 412.0], [64.5, 412.0], [64.6, 412.0], [64.7, 412.0], [64.8, 412.0], [64.9, 412.0], [65.0, 412.0], [65.1, 412.0], [65.2, 413.0], [65.3, 413.0], [65.4, 413.0], [65.5, 413.0], [65.6, 413.0], [65.7, 413.0], [65.8, 413.0], [65.9, 413.0], [66.0, 413.0], [66.1, 414.0], [66.2, 414.0], [66.3, 414.0], [66.4, 414.0], [66.5, 414.0], [66.6, 414.0], [66.7, 414.0], [66.8, 415.0], [66.9, 415.0], [67.0, 416.0], [67.1, 416.0], [67.2, 416.0], [67.3, 416.0], [67.4, 416.0], [67.5, 416.0], [67.6, 416.0], [67.7, 417.0], [67.8, 417.0], [67.9, 417.0], [68.0, 417.0], [68.1, 417.0], [68.2, 417.0], [68.3, 418.0], [68.4, 418.0], [68.5, 418.0], [68.6, 418.0], [68.7, 418.0], [68.8, 418.0], [68.9, 418.0], [69.0, 418.0], [69.1, 419.0], [69.2, 419.0], [69.3, 419.0], [69.4, 419.0], [69.5, 419.0], [69.6, 419.0], [69.7, 419.0], [69.8, 419.0], [69.9, 419.0], [70.0, 419.0], [70.1, 419.0], [70.2, 419.0], [70.3, 420.0], [70.4, 420.0], [70.5, 420.0], [70.6, 420.0], [70.7, 420.0], [70.8, 420.0], [70.9, 420.0], [71.0, 421.0], [71.1, 421.0], [71.2, 421.0], [71.3, 421.0], [71.4, 421.0], [71.5, 421.0], [71.6, 421.0], [71.7, 421.0], [71.8, 421.0], [71.9, 422.0], [72.0, 422.0], [72.1, 422.0], [72.2, 422.0], [72.3, 422.0], [72.4, 422.0], [72.5, 422.0], [72.6, 422.0], [72.7, 423.0], [72.8, 423.0], [72.9, 423.0], [73.0, 423.0], [73.1, 423.0], [73.2, 423.0], [73.3, 423.0], [73.4, 423.0], [73.5, 423.0], [73.6, 423.0], [73.7, 424.0], [73.8, 424.0], [73.9, 424.0], [74.0, 424.0], [74.1, 424.0], [74.2, 424.0], [74.3, 425.0], [74.4, 425.0], [74.5, 425.0], [74.6, 425.0], [74.7, 425.0], [74.8, 426.0], [74.9, 426.0], [75.0, 426.0], [75.1, 426.0], [75.2, 427.0], [75.3, 427.0], [75.4, 427.0], [75.5, 428.0], [75.6, 429.0], [75.7, 429.0], [75.8, 429.0], [75.9, 429.0], [76.0, 429.0], [76.1, 429.0], [76.2, 429.0], [76.3, 429.0], [76.4, 430.0], [76.5, 430.0], [76.6, 430.0], [76.7, 431.0], [76.8, 431.0], [76.9, 431.0], [77.0, 431.0], [77.1, 431.0], [77.2, 431.0], [77.3, 431.0], [77.4, 431.0], [77.5, 431.0], [77.6, 432.0], [77.7, 432.0], [77.8, 432.0], [77.9, 432.0], [78.0, 432.0], [78.1, 432.0], [78.2, 433.0], [78.3, 433.0], [78.4, 433.0], [78.5, 433.0], [78.6, 434.0], [78.7, 434.0], [78.8, 434.0], [78.9, 434.0], [79.0, 434.0], [79.1, 434.0], [79.2, 434.0], [79.3, 434.0], [79.4, 434.0], [79.5, 434.0], [79.6, 434.0], [79.7, 435.0], [79.8, 435.0], [79.9, 435.0], [80.0, 435.0], [80.1, 436.0], [80.2, 436.0], [80.3, 436.0], [80.4, 436.0], [80.5, 436.0], [80.6, 436.0], [80.7, 436.0], [80.8, 436.0], [80.9, 437.0], [81.0, 437.0], [81.1, 437.0], [81.2, 437.0], [81.3, 438.0], [81.4, 438.0], [81.5, 438.0], [81.6, 438.0], [81.7, 438.0], [81.8, 438.0], [81.9, 439.0], [82.0, 439.0], [82.1, 439.0], [82.2, 439.0], [82.3, 439.0], [82.4, 439.0], [82.5, 439.0], [82.6, 439.0], [82.7, 439.0], [82.8, 439.0], [82.9, 439.0], [83.0, 440.0], [83.1, 440.0], [83.2, 440.0], [83.3, 441.0], [83.4, 441.0], [83.5, 441.0], [83.6, 441.0], [83.7, 441.0], [83.8, 441.0], [83.9, 442.0], [84.0, 442.0], [84.1, 442.0], [84.2, 442.0], [84.3, 442.0], [84.4, 442.0], [84.5, 443.0], [84.6, 443.0], [84.7, 443.0], [84.8, 444.0], [84.9, 445.0], [85.0, 445.0], [85.1, 445.0], [85.2, 445.0], [85.3, 445.0], [85.4, 445.0], [85.5, 445.0], [85.6, 445.0], [85.7, 446.0], [85.8, 446.0], [85.9, 446.0], [86.0, 446.0], [86.1, 447.0], [86.2, 447.0], [86.3, 447.0], [86.4, 448.0], [86.5, 448.0], [86.6, 448.0], [86.7, 449.0], [86.8, 449.0], [86.9, 449.0], [87.0, 450.0], [87.1, 450.0], [87.2, 450.0], [87.3, 451.0], [87.4, 451.0], [87.5, 452.0], [87.6, 453.0], [87.7, 453.0], [87.8, 453.0], [87.9, 453.0], [88.0, 453.0], [88.1, 453.0], [88.2, 453.0], [88.3, 453.0], [88.4, 454.0], [88.5, 454.0], [88.6, 454.0], [88.7, 456.0], [88.8, 456.0], [88.9, 456.0], [89.0, 459.0], [89.1, 459.0], [89.2, 459.0], [89.3, 462.0], [89.4, 463.0], [89.5, 463.0], [89.6, 463.0], [89.7, 465.0], [89.8, 465.0], [89.9, 465.0], [90.0, 466.0], [90.1, 466.0], [90.2, 468.0], [90.3, 470.0], [90.4, 470.0], [90.5, 471.0], [90.6, 471.0], [90.7, 471.0], [90.8, 473.0], [90.9, 475.0], [91.0, 475.0], [91.1, 476.0], [91.2, 478.0], [91.3, 478.0], [91.4, 478.0], [91.5, 479.0], [91.6, 479.0], [91.7, 479.0], [91.8, 480.0], [91.9, 480.0], [92.0, 480.0], [92.1, 480.0], [92.2, 480.0], [92.3, 481.0], [92.4, 481.0], [92.5, 481.0], [92.6, 481.0], [92.7, 483.0], [92.8, 483.0], [92.9, 484.0], [93.0, 484.0], [93.1, 484.0], [93.2, 485.0], [93.3, 487.0], [93.4, 487.0], [93.5, 488.0], [93.6, 489.0], [93.7, 489.0], [93.8, 491.0], [93.9, 491.0], [94.0, 491.0], [94.1, 492.0], [94.2, 492.0], [94.3, 492.0], [94.4, 493.0], [94.5, 493.0], [94.6, 493.0], [94.7, 494.0], [94.8, 497.0], [94.9, 497.0], [95.0, 498.0], [95.1, 501.0], [95.2, 501.0], [95.3, 502.0], [95.4, 503.0], [95.5, 503.0], [95.6, 503.0], [95.7, 506.0], [95.8, 506.0], [95.9, 506.0], [96.0, 509.0], [96.1, 509.0], [96.2, 511.0], [96.3, 515.0], [96.4, 515.0], [96.5, 515.0], [96.6, 517.0], [96.7, 517.0], [96.8, 518.0], [96.9, 519.0], [97.0, 519.0], [97.1, 521.0], [97.2, 523.0], [97.3, 523.0], [97.4, 526.0], [97.5, 534.0], [97.6, 534.0], [97.7, 534.0], [97.8, 538.0], [97.9, 538.0], [98.0, 542.0], [98.1, 546.0], [98.2, 546.0], [98.3, 547.0], [98.4, 551.0], [98.5, 551.0], [98.6, 554.0], [98.7, 564.0], [98.8, 564.0], [98.9, 591.0], [99.0, 598.0], [99.1, 598.0], [99.2, 606.0], [99.3, 655.0], [99.4, 655.0], [99.5, 667.0], [99.6, 674.0], [99.7, 674.0], [99.8, 1115.0], [99.9, 21412.0], [100.0, 21412.0]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[0.0, 1222.0], [0.1, 1222.0], [0.2, 1222.0], [0.3, 1222.0], [0.4, 1222.0], [0.5, 1222.0], [0.6, 1222.0], [0.7, 1222.0], [0.8, 1222.0], [0.9, 1222.0], [1.0, 1222.0], [1.1, 1222.0], [1.2, 1222.0], [1.3, 1222.0], [1.4, 1222.0], [1.5, 1222.0], [1.6, 1222.0], [1.7, 1222.0], [1.8, 1222.0], [1.9, 1222.0], [2.0, 1222.0], [2.1, 1222.0], [2.2, 1222.0], [2.3, 1222.0], [2.4, 1222.0], [2.5, 1222.0], [2.6, 1222.0], [2.7, 1222.0], [2.8, 1222.0], [2.9, 1222.0], [3.0, 1222.0], [3.1, 1222.0], [3.2, 1222.0], [3.3, 1222.0], [3.4, 1222.0], [3.5, 1222.0], [3.6, 1222.0], [3.7, 1222.0], [3.8, 1222.0], [3.9, 1222.0], [4.0, 1222.0], [4.1, 1222.0], [4.2, 1222.0], [4.3, 1222.0], [4.4, 1222.0], [4.5, 1222.0], [4.6, 1222.0], [4.7, 1222.0], [4.8, 1222.0], [4.9, 1222.0], [5.0, 1222.0], [5.1, 1222.0], [5.2, 1222.0], [5.3, 1222.0], [5.4, 1222.0], [5.5, 1222.0], [5.6, 1222.0], [5.7, 1222.0], [5.8, 1222.0], [5.9, 1222.0], [6.0, 1222.0], [6.1, 1222.0], [6.2, 1222.0], [6.3, 1222.0], [6.4, 1222.0], [6.5, 1222.0], [6.6, 1222.0], [6.7, 1222.0], [6.8, 1222.0], [6.9, 1222.0], [7.0, 1222.0], [7.1, 1222.0], [7.2, 1222.0], [7.3, 1222.0], [7.4, 1222.0], [7.5, 1222.0], [7.6, 1222.0], [7.7, 1222.0], [7.8, 1222.0], [7.9, 1222.0], [8.0, 1222.0], [8.1, 1222.0], [8.2, 1222.0], [8.3, 1222.0], [8.4, 1222.0], [8.5, 1222.0], [8.6, 1222.0], [8.7, 1222.0], [8.8, 1222.0], [8.9, 1222.0], [9.0, 1222.0], [9.1, 1222.0], [9.2, 1222.0], [9.3, 1222.0], [9.4, 1222.0], [9.5, 1222.0], [9.6, 1222.0], [9.7, 1222.0], [9.8, 1222.0], [9.9, 1222.0], [10.0, 1222.0], [10.1, 1222.0], [10.2, 1222.0], [10.3, 1222.0], [10.4, 1222.0], [10.5, 1222.0], [10.6, 1222.0], [10.7, 1222.0], [10.8, 1222.0], [10.9, 1222.0], [11.0, 1222.0], [11.1, 1222.0], [11.2, 1222.0], [11.3, 1222.0], [11.4, 1222.0], [11.5, 1222.0], [11.6, 1222.0], [11.7, 1222.0], [11.8, 1222.0], [11.9, 1222.0], [12.0, 1222.0], [12.1, 1222.0], [12.2, 1222.0], [12.3, 1222.0], [12.4, 1222.0], [12.5, 1222.0], [12.6, 1222.0], [12.7, 1222.0], [12.8, 1222.0], [12.9, 1222.0], [13.0, 1222.0], [13.1, 1222.0], [13.2, 1222.0], [13.3, 1222.0], [13.4, 1222.0], [13.5, 1222.0], [13.6, 1222.0], [13.7, 1222.0], [13.8, 1222.0], [13.9, 1222.0], [14.0, 1222.0], [14.1, 1222.0], [14.2, 1222.0], [14.3, 1222.0], [14.4, 1222.0], [14.5, 1222.0], [14.6, 1222.0], [14.7, 1222.0], [14.8, 1222.0], [14.9, 1222.0], [15.0, 1222.0], [15.1, 1222.0], [15.2, 1222.0], [15.3, 1222.0], [15.4, 1222.0], [15.5, 1222.0], [15.6, 1222.0], [15.7, 1222.0], [15.8, 1222.0], [15.9, 1222.0], [16.0, 1222.0], [16.1, 1222.0], [16.2, 1222.0], [16.3, 1222.0], [16.4, 1222.0], [16.5, 1222.0], [16.6, 1222.0], [16.7, 1222.0], [16.8, 1222.0], [16.9, 1222.0], [17.0, 1222.0], [17.1, 1222.0], [17.2, 1222.0], [17.3, 1222.0], [17.4, 1222.0], [17.5, 1222.0], [17.6, 1222.0], [17.7, 1222.0], [17.8, 1222.0], [17.9, 1222.0], [18.0, 1222.0], [18.1, 1222.0], [18.2, 1222.0], [18.3, 1222.0], [18.4, 1222.0], [18.5, 1222.0], [18.6, 1222.0], [18.7, 1222.0], [18.8, 1222.0], [18.9, 1222.0], [19.0, 1222.0], [19.1, 1222.0], [19.2, 1222.0], [19.3, 1222.0], [19.4, 1222.0], [19.5, 1222.0], [19.6, 1222.0], [19.7, 1222.0], [19.8, 1222.0], [19.9, 1222.0], [20.0, 1222.0], [20.1, 1222.0], [20.2, 1222.0], [20.3, 1222.0], [20.4, 1222.0], [20.5, 1222.0], [20.6, 1222.0], [20.7, 1222.0], [20.8, 1222.0], [20.9, 1222.0], [21.0, 1222.0], [21.1, 1222.0], [21.2, 1222.0], [21.3, 1222.0], [21.4, 1222.0], [21.5, 1222.0], [21.6, 1222.0], [21.7, 1222.0], [21.8, 1222.0], [21.9, 1222.0], [22.0, 1222.0], [22.1, 1222.0], [22.2, 1222.0], [22.3, 1222.0], [22.4, 1222.0], [22.5, 1222.0], [22.6, 1222.0], [22.7, 1222.0], [22.8, 1222.0], [22.9, 1222.0], [23.0, 1222.0], [23.1, 1222.0], [23.2, 1222.0], [23.3, 1222.0], [23.4, 1222.0], [23.5, 1222.0], [23.6, 1222.0], [23.7, 1222.0], [23.8, 1222.0], [23.9, 1222.0], [24.0, 1222.0], [24.1, 1222.0], [24.2, 1222.0], [24.3, 1222.0], [24.4, 1222.0], [24.5, 1222.0], [24.6, 1222.0], [24.7, 1222.0], [24.8, 1222.0], [24.9, 1222.0], [25.0, 1222.0], [25.1, 1222.0], [25.2, 1222.0], [25.3, 1222.0], [25.4, 1222.0], [25.5, 1222.0], [25.6, 1222.0], [25.7, 1222.0], [25.8, 1222.0], [25.9, 1222.0], [26.0, 1222.0], [26.1, 1222.0], [26.2, 1222.0], [26.3, 1222.0], [26.4, 1222.0], [26.5, 1222.0], [26.6, 1222.0], [26.7, 1222.0], [26.8, 1222.0], [26.9, 1222.0], [27.0, 1222.0], [27.1, 1222.0], [27.2, 1222.0], [27.3, 1222.0], [27.4, 1222.0], [27.5, 1222.0], [27.6, 1222.0], [27.7, 1222.0], [27.8, 1222.0], [27.9, 1222.0], [28.0, 1222.0], [28.1, 1222.0], [28.2, 1222.0], [28.3, 1222.0], [28.4, 1222.0], [28.5, 1222.0], [28.6, 1222.0], [28.7, 1222.0], [28.8, 1222.0], [28.9, 1222.0], [29.0, 1222.0], [29.1, 1222.0], [29.2, 1222.0], [29.3, 1222.0], [29.4, 1222.0], [29.5, 1222.0], [29.6, 1222.0], [29.7, 1222.0], [29.8, 1222.0], [29.9, 1222.0], [30.0, 1222.0], [30.1, 1222.0], [30.2, 1222.0], [30.3, 1222.0], [30.4, 1222.0], [30.5, 1222.0], [30.6, 1222.0], [30.7, 1222.0], [30.8, 1222.0], [30.9, 1222.0], [31.0, 1222.0], [31.1, 1222.0], [31.2, 1222.0], [31.3, 1222.0], [31.4, 1222.0], [31.5, 1222.0], [31.6, 1222.0], [31.7, 1222.0], [31.8, 1222.0], [31.9, 1222.0], [32.0, 1222.0], [32.1, 1222.0], [32.2, 1222.0], [32.3, 1222.0], [32.4, 1222.0], [32.5, 1222.0], [32.6, 1222.0], [32.7, 1222.0], [32.8, 1222.0], [32.9, 1222.0], [33.0, 1222.0], [33.1, 1222.0], [33.2, 1222.0], [33.3, 1222.0], [33.4, 1222.0], [33.5, 1222.0], [33.6, 1222.0], [33.7, 1222.0], [33.8, 1222.0], [33.9, 1222.0], [34.0, 1222.0], [34.1, 1222.0], [34.2, 1222.0], [34.3, 1222.0], [34.4, 1222.0], [34.5, 1222.0], [34.6, 1222.0], [34.7, 1222.0], [34.8, 1222.0], [34.9, 1222.0], [35.0, 1222.0], [35.1, 1222.0], [35.2, 1222.0], [35.3, 1222.0], [35.4, 1222.0], [35.5, 1222.0], [35.6, 1222.0], [35.7, 1222.0], [35.8, 1222.0], [35.9, 1222.0], [36.0, 1222.0], [36.1, 1222.0], [36.2, 1222.0], [36.3, 1222.0], [36.4, 1222.0], [36.5, 1222.0], [36.6, 1222.0], [36.7, 1222.0], [36.8, 1222.0], [36.9, 1222.0], [37.0, 1222.0], [37.1, 1222.0], [37.2, 1222.0], [37.3, 1222.0], [37.4, 1222.0], [37.5, 1222.0], [37.6, 1222.0], [37.7, 1222.0], [37.8, 1222.0], [37.9, 1222.0], [38.0, 1222.0], [38.1, 1222.0], [38.2, 1222.0], [38.3, 1222.0], [38.4, 1222.0], [38.5, 1222.0], [38.6, 1222.0], [38.7, 1222.0], [38.8, 1222.0], [38.9, 1222.0], [39.0, 1222.0], [39.1, 1222.0], [39.2, 1222.0], [39.3, 1222.0], [39.4, 1222.0], [39.5, 1222.0], [39.6, 1222.0], [39.7, 1222.0], [39.8, 1222.0], [39.9, 1222.0], [40.0, 1222.0], [40.1, 1222.0], [40.2, 1222.0], [40.3, 1222.0], [40.4, 1222.0], [40.5, 1222.0], [40.6, 1222.0], [40.7, 1222.0], [40.8, 1222.0], [40.9, 1222.0], [41.0, 1222.0], [41.1, 1222.0], [41.2, 1222.0], [41.3, 1222.0], [41.4, 1222.0], [41.5, 1222.0], [41.6, 1222.0], [41.7, 1222.0], [41.8, 1222.0], [41.9, 1222.0], [42.0, 1222.0], [42.1, 1222.0], [42.2, 1222.0], [42.3, 1222.0], [42.4, 1222.0], [42.5, 1222.0], [42.6, 1222.0], [42.7, 1222.0], [42.8, 1222.0], [42.9, 1222.0], [43.0, 1222.0], [43.1, 1222.0], [43.2, 1222.0], [43.3, 1222.0], [43.4, 1222.0], [43.5, 1222.0], [43.6, 1222.0], [43.7, 1222.0], [43.8, 1222.0], [43.9, 1222.0], [44.0, 1222.0], [44.1, 1222.0], [44.2, 1222.0], [44.3, 1222.0], [44.4, 1222.0], [44.5, 1222.0], [44.6, 1222.0], [44.7, 1222.0], [44.8, 1222.0], [44.9, 1222.0], [45.0, 1222.0], [45.1, 1222.0], [45.2, 1222.0], [45.3, 1222.0], [45.4, 1222.0], [45.5, 1222.0], [45.6, 1222.0], [45.7, 1222.0], [45.8, 1222.0], [45.9, 1222.0], [46.0, 1222.0], [46.1, 1222.0], [46.2, 1222.0], [46.3, 1222.0], [46.4, 1222.0], [46.5, 1222.0], [46.6, 1222.0], [46.7, 1222.0], [46.8, 1222.0], [46.9, 1222.0], [47.0, 1222.0], [47.1, 1222.0], [47.2, 1222.0], [47.3, 1222.0], [47.4, 1222.0], [47.5, 1222.0], [47.6, 1222.0], [47.7, 1222.0], [47.8, 1222.0], [47.9, 1222.0], [48.0, 1222.0], [48.1, 1222.0], [48.2, 1222.0], [48.3, 1222.0], [48.4, 1222.0], [48.5, 1222.0], [48.6, 1222.0], [48.7, 1222.0], [48.8, 1222.0], [48.9, 1222.0], [49.0, 1222.0], [49.1, 1222.0], [49.2, 1222.0], [49.3, 1222.0], [49.4, 1222.0], [49.5, 1222.0], [49.6, 1222.0], [49.7, 1222.0], [49.8, 1222.0], [49.9, 1222.0], [50.0, 1222.0], [50.1, 1222.0], [50.2, 1222.0], [50.3, 1222.0], [50.4, 1222.0], [50.5, 1222.0], [50.6, 1222.0], [50.7, 1222.0], [50.8, 1222.0], [50.9, 1222.0], [51.0, 1222.0], [51.1, 1222.0], [51.2, 1222.0], [51.3, 1222.0], [51.4, 1222.0], [51.5, 1222.0], [51.6, 1222.0], [51.7, 1222.0], [51.8, 1222.0], [51.9, 1222.0], [52.0, 1222.0], [52.1, 1222.0], [52.2, 1222.0], [52.3, 1222.0], [52.4, 1222.0], [52.5, 1222.0], [52.6, 1222.0], [52.7, 1222.0], [52.8, 1222.0], [52.9, 1222.0], [53.0, 1222.0], [53.1, 1222.0], [53.2, 1222.0], [53.3, 1222.0], [53.4, 1222.0], [53.5, 1222.0], [53.6, 1222.0], [53.7, 1222.0], [53.8, 1222.0], [53.9, 1222.0], [54.0, 1222.0], [54.1, 1222.0], [54.2, 1222.0], [54.3, 1222.0], [54.4, 1222.0], [54.5, 1222.0], [54.6, 1222.0], [54.7, 1222.0], [54.8, 1222.0], [54.9, 1222.0], [55.0, 1222.0], [55.1, 1222.0], [55.2, 1222.0], [55.3, 1222.0], [55.4, 1222.0], [55.5, 1222.0], [55.6, 1222.0], [55.7, 1222.0], [55.8, 1222.0], [55.9, 1222.0], [56.0, 1222.0], [56.1, 1222.0], [56.2, 1222.0], [56.3, 1222.0], [56.4, 1222.0], [56.5, 1222.0], [56.6, 1222.0], [56.7, 1222.0], [56.8, 1222.0], [56.9, 1222.0], [57.0, 1222.0], [57.1, 1222.0], [57.2, 1222.0], [57.3, 1222.0], [57.4, 1222.0], [57.5, 1222.0], [57.6, 1222.0], [57.7, 1222.0], [57.8, 1222.0], [57.9, 1222.0], [58.0, 1222.0], [58.1, 1222.0], [58.2, 1222.0], [58.3, 1222.0], [58.4, 1222.0], [58.5, 1222.0], [58.6, 1222.0], [58.7, 1222.0], [58.8, 1222.0], [58.9, 1222.0], [59.0, 1222.0], [59.1, 1222.0], [59.2, 1222.0], [59.3, 1222.0], [59.4, 1222.0], [59.5, 1222.0], [59.6, 1222.0], [59.7, 1222.0], [59.8, 1222.0], [59.9, 1222.0], [60.0, 1222.0], [60.1, 1222.0], [60.2, 1222.0], [60.3, 1222.0], [60.4, 1222.0], [60.5, 1222.0], [60.6, 1222.0], [60.7, 1222.0], [60.8, 1222.0], [60.9, 1222.0], [61.0, 1222.0], [61.1, 1222.0], [61.2, 1222.0], [61.3, 1222.0], [61.4, 1222.0], [61.5, 1222.0], [61.6, 1222.0], [61.7, 1222.0], [61.8, 1222.0], [61.9, 1222.0], [62.0, 1222.0], [62.1, 1222.0], [62.2, 1222.0], [62.3, 1222.0], [62.4, 1222.0], [62.5, 1222.0], [62.6, 1222.0], [62.7, 1222.0], [62.8, 1222.0], [62.9, 1222.0], [63.0, 1222.0], [63.1, 1222.0], [63.2, 1222.0], [63.3, 1222.0], [63.4, 1222.0], [63.5, 1222.0], [63.6, 1222.0], [63.7, 1222.0], [63.8, 1222.0], [63.9, 1222.0], [64.0, 1222.0], [64.1, 1222.0], [64.2, 1222.0], [64.3, 1222.0], [64.4, 1222.0], [64.5, 1222.0], [64.6, 1222.0], [64.7, 1222.0], [64.8, 1222.0], [64.9, 1222.0], [65.0, 1222.0], [65.1, 1222.0], [65.2, 1222.0], [65.3, 1222.0], [65.4, 1222.0], [65.5, 1222.0], [65.6, 1222.0], [65.7, 1222.0], [65.8, 1222.0], [65.9, 1222.0], [66.0, 1222.0], [66.1, 1222.0], [66.2, 1222.0], [66.3, 1222.0], [66.4, 1222.0], [66.5, 1222.0], [66.6, 1222.0], [66.7, 1222.0], [66.8, 1222.0], [66.9, 1222.0], [67.0, 1222.0], [67.1, 1222.0], [67.2, 1222.0], [67.3, 1222.0], [67.4, 1222.0], [67.5, 1222.0], [67.6, 1222.0], [67.7, 1222.0], [67.8, 1222.0], [67.9, 1222.0], [68.0, 1222.0], [68.1, 1222.0], [68.2, 1222.0], [68.3, 1222.0], [68.4, 1222.0], [68.5, 1222.0], [68.6, 1222.0], [68.7, 1222.0], [68.8, 1222.0], [68.9, 1222.0], [69.0, 1222.0], [69.1, 1222.0], [69.2, 1222.0], [69.3, 1222.0], [69.4, 1222.0], [69.5, 1222.0], [69.6, 1222.0], [69.7, 1222.0], [69.8, 1222.0], [69.9, 1222.0], [70.0, 1222.0], [70.1, 1222.0], [70.2, 1222.0], [70.3, 1222.0], [70.4, 1222.0], [70.5, 1222.0], [70.6, 1222.0], [70.7, 1222.0], [70.8, 1222.0], [70.9, 1222.0], [71.0, 1222.0], [71.1, 1222.0], [71.2, 1222.0], [71.3, 1222.0], [71.4, 1222.0], [71.5, 1222.0], [71.6, 1222.0], [71.7, 1222.0], [71.8, 1222.0], [71.9, 1222.0], [72.0, 1222.0], [72.1, 1222.0], [72.2, 1222.0], [72.3, 1222.0], [72.4, 1222.0], [72.5, 1222.0], [72.6, 1222.0], [72.7, 1222.0], [72.8, 1222.0], [72.9, 1222.0], [73.0, 1222.0], [73.1, 1222.0], [73.2, 1222.0], [73.3, 1222.0], [73.4, 1222.0], [73.5, 1222.0], [73.6, 1222.0], [73.7, 1222.0], [73.8, 1222.0], [73.9, 1222.0], [74.0, 1222.0], [74.1, 1222.0], [74.2, 1222.0], [74.3, 1222.0], [74.4, 1222.0], [74.5, 1222.0], [74.6, 1222.0], [74.7, 1222.0], [74.8, 1222.0], [74.9, 1222.0], [75.0, 1222.0], [75.1, 1222.0], [75.2, 1222.0], [75.3, 1222.0], [75.4, 1222.0], [75.5, 1222.0], [75.6, 1222.0], [75.7, 1222.0], [75.8, 1222.0], [75.9, 1222.0], [76.0, 1222.0], [76.1, 1222.0], [76.2, 1222.0], [76.3, 1222.0], [76.4, 1222.0], [76.5, 1222.0], [76.6, 1222.0], [76.7, 1222.0], [76.8, 1222.0], [76.9, 1222.0], [77.0, 1222.0], [77.1, 1222.0], [77.2, 1222.0], [77.3, 1222.0], [77.4, 1222.0], [77.5, 1222.0], [77.6, 1222.0], [77.7, 1222.0], [77.8, 1222.0], [77.9, 1222.0], [78.0, 1222.0], [78.1, 1222.0], [78.2, 1222.0], [78.3, 1222.0], [78.4, 1222.0], [78.5, 1222.0], [78.6, 1222.0], [78.7, 1222.0], [78.8, 1222.0], [78.9, 1222.0], [79.0, 1222.0], [79.1, 1222.0], [79.2, 1222.0], [79.3, 1222.0], [79.4, 1222.0], [79.5, 1222.0], [79.6, 1222.0], [79.7, 1222.0], [79.8, 1222.0], [79.9, 1222.0], [80.0, 1222.0], [80.1, 1222.0], [80.2, 1222.0], [80.3, 1222.0], [80.4, 1222.0], [80.5, 1222.0], [80.6, 1222.0], [80.7, 1222.0], [80.8, 1222.0], [80.9, 1222.0], [81.0, 1222.0], [81.1, 1222.0], [81.2, 1222.0], [81.3, 1222.0], [81.4, 1222.0], [81.5, 1222.0], [81.6, 1222.0], [81.7, 1222.0], [81.8, 1222.0], [81.9, 1222.0], [82.0, 1222.0], [82.1, 1222.0], [82.2, 1222.0], [82.3, 1222.0], [82.4, 1222.0], [82.5, 1222.0], [82.6, 1222.0], [82.7, 1222.0], [82.8, 1222.0], [82.9, 1222.0], [83.0, 1222.0], [83.1, 1222.0], [83.2, 1222.0], [83.3, 1222.0], [83.4, 1222.0], [83.5, 1222.0], [83.6, 1222.0], [83.7, 1222.0], [83.8, 1222.0], [83.9, 1222.0], [84.0, 1222.0], [84.1, 1222.0], [84.2, 1222.0], [84.3, 1222.0], [84.4, 1222.0], [84.5, 1222.0], [84.6, 1222.0], [84.7, 1222.0], [84.8, 1222.0], [84.9, 1222.0], [85.0, 1222.0], [85.1, 1222.0], [85.2, 1222.0], [85.3, 1222.0], [85.4, 1222.0], [85.5, 1222.0], [85.6, 1222.0], [85.7, 1222.0], [85.8, 1222.0], [85.9, 1222.0], [86.0, 1222.0], [86.1, 1222.0], [86.2, 1222.0], [86.3, 1222.0], [86.4, 1222.0], [86.5, 1222.0], [86.6, 1222.0], [86.7, 1222.0], [86.8, 1222.0], [86.9, 1222.0], [87.0, 1222.0], [87.1, 1222.0], [87.2, 1222.0], [87.3, 1222.0], [87.4, 1222.0], [87.5, 1222.0], [87.6, 1222.0], [87.7, 1222.0], [87.8, 1222.0], [87.9, 1222.0], [88.0, 1222.0], [88.1, 1222.0], [88.2, 1222.0], [88.3, 1222.0], [88.4, 1222.0], [88.5, 1222.0], [88.6, 1222.0], [88.7, 1222.0], [88.8, 1222.0], [88.9, 1222.0], [89.0, 1222.0], [89.1, 1222.0], [89.2, 1222.0], [89.3, 1222.0], [89.4, 1222.0], [89.5, 1222.0], [89.6, 1222.0], [89.7, 1222.0], [89.8, 1222.0], [89.9, 1222.0], [90.0, 1222.0], [90.1, 1222.0], [90.2, 1222.0], [90.3, 1222.0], [90.4, 1222.0], [90.5, 1222.0], [90.6, 1222.0], [90.7, 1222.0], [90.8, 1222.0], [90.9, 1222.0], [91.0, 1222.0], [91.1, 1222.0], [91.2, 1222.0], [91.3, 1222.0], [91.4, 1222.0], [91.5, 1222.0], [91.6, 1222.0], [91.7, 1222.0], [91.8, 1222.0], [91.9, 1222.0], [92.0, 1222.0], [92.1, 1222.0], [92.2, 1222.0], [92.3, 1222.0], [92.4, 1222.0], [92.5, 1222.0], [92.6, 1222.0], [92.7, 1222.0], [92.8, 1222.0], [92.9, 1222.0], [93.0, 1222.0], [93.1, 1222.0], [93.2, 1222.0], [93.3, 1222.0], [93.4, 1222.0], [93.5, 1222.0], [93.6, 1222.0], [93.7, 1222.0], [93.8, 1222.0], [93.9, 1222.0], [94.0, 1222.0], [94.1, 1222.0], [94.2, 1222.0], [94.3, 1222.0], [94.4, 1222.0], [94.5, 1222.0], [94.6, 1222.0], [94.7, 1222.0], [94.8, 1222.0], [94.9, 1222.0], [95.0, 1222.0], [95.1, 1222.0], [95.2, 1222.0], [95.3, 1222.0], [95.4, 1222.0], [95.5, 1222.0], [95.6, 1222.0], [95.7, 1222.0], [95.8, 1222.0], [95.9, 1222.0], [96.0, 1222.0], [96.1, 1222.0], [96.2, 1222.0], [96.3, 1222.0], [96.4, 1222.0], [96.5, 1222.0], [96.6, 1222.0], [96.7, 1222.0], [96.8, 1222.0], [96.9, 1222.0], [97.0, 1222.0], [97.1, 1222.0], [97.2, 1222.0], [97.3, 1222.0], [97.4, 1222.0], [97.5, 1222.0], [97.6, 1222.0], [97.7, 1222.0], [97.8, 1222.0], [97.9, 1222.0], [98.0, 1222.0], [98.1, 1222.0], [98.2, 1222.0], [98.3, 1222.0], [98.4, 1222.0], [98.5, 1222.0], [98.6, 1222.0], [98.7, 1222.0], [98.8, 1222.0], [98.9, 1222.0], [99.0, 1222.0], [99.1, 1222.0], [99.2, 1222.0], [99.3, 1222.0], [99.4, 1222.0], [99.5, 1222.0], [99.6, 1222.0], [99.7, 1222.0], [99.8, 1222.0], [99.9, 1222.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}, {"data": [[0.0, 715.0], [0.1, 715.0], [0.2, 715.0], [0.3, 715.0], [0.4, 715.0], [0.5, 749.0], [0.6, 749.0], [0.7, 749.0], [0.8, 749.0], [0.9, 749.0], [1.0, 757.0], [1.1, 757.0], [1.2, 757.0], [1.3, 757.0], [1.4, 757.0], [1.5, 765.0], [1.6, 765.0], [1.7, 765.0], [1.8, 765.0], [1.9, 765.0], [2.0, 794.0], [2.1, 794.0], [2.2, 794.0], [2.3, 794.0], [2.4, 794.0], [2.5, 803.0], [2.6, 803.0], [2.7, 803.0], [2.8, 803.0], [2.9, 803.0], [3.0, 806.0], [3.1, 806.0], [3.2, 806.0], [3.3, 806.0], [3.4, 806.0], [3.5, 815.0], [3.6, 815.0], [3.7, 815.0], [3.8, 815.0], [3.9, 815.0], [4.0, 824.0], [4.1, 824.0], [4.2, 824.0], [4.3, 824.0], [4.4, 824.0], [4.5, 826.0], [4.6, 826.0], [4.7, 826.0], [4.8, 826.0], [4.9, 826.0], [5.0, 826.0], [5.1, 826.0], [5.2, 826.0], [5.3, 826.0], [5.4, 826.0], [5.5, 827.0], [5.6, 827.0], [5.7, 827.0], [5.8, 827.0], [5.9, 827.0], [6.0, 829.0], [6.1, 829.0], [6.2, 829.0], [6.3, 829.0], [6.4, 829.0], [6.5, 830.0], [6.6, 830.0], [6.7, 830.0], [6.8, 830.0], [6.9, 830.0], [7.0, 832.0], [7.1, 832.0], [7.2, 832.0], [7.3, 832.0], [7.4, 832.0], [7.5, 834.0], [7.6, 834.0], [7.7, 834.0], [7.8, 834.0], [7.9, 834.0], [8.0, 840.0], [8.1, 840.0], [8.2, 840.0], [8.3, 840.0], [8.4, 840.0], [8.5, 840.0], [8.6, 840.0], [8.7, 840.0], [8.8, 840.0], [8.9, 840.0], [9.0, 843.0], [9.1, 843.0], [9.2, 843.0], [9.3, 843.0], [9.4, 843.0], [9.5, 844.0], [9.6, 844.0], [9.7, 844.0], [9.8, 844.0], [9.9, 844.0], [10.0, 846.0], [10.1, 846.0], [10.2, 846.0], [10.3, 846.0], [10.4, 846.0], [10.5, 846.0], [10.6, 846.0], [10.7, 846.0], [10.8, 846.0], [10.9, 846.0], [11.0, 847.0], [11.1, 847.0], [11.2, 847.0], [11.3, 847.0], [11.4, 847.0], [11.5, 847.0], [11.6, 847.0], [11.7, 847.0], [11.8, 847.0], [11.9, 847.0], [12.0, 856.0], [12.1, 856.0], [12.2, 856.0], [12.3, 856.0], [12.4, 856.0], [12.5, 858.0], [12.6, 858.0], [12.7, 858.0], [12.8, 858.0], [12.9, 858.0], [13.0, 860.0], [13.1, 860.0], [13.2, 860.0], [13.3, 860.0], [13.4, 860.0], [13.5, 861.0], [13.6, 861.0], [13.7, 861.0], [13.8, 861.0], [13.9, 861.0], [14.0, 864.0], [14.1, 864.0], [14.2, 864.0], [14.3, 864.0], [14.4, 864.0], [14.5, 867.0], [14.6, 867.0], [14.7, 867.0], [14.8, 867.0], [14.9, 867.0], [15.0, 867.0], [15.1, 867.0], [15.2, 867.0], [15.3, 867.0], [15.4, 867.0], [15.5, 868.0], [15.6, 868.0], [15.7, 868.0], [15.8, 868.0], [15.9, 868.0], [16.0, 873.0], [16.1, 873.0], [16.2, 873.0], [16.3, 873.0], [16.4, 873.0], [16.5, 875.0], [16.6, 875.0], [16.7, 875.0], [16.8, 875.0], [16.9, 875.0], [17.0, 879.0], [17.1, 879.0], [17.2, 879.0], [17.3, 879.0], [17.4, 879.0], [17.5, 880.0], [17.6, 880.0], [17.7, 880.0], [17.8, 880.0], [17.9, 880.0], [18.0, 882.0], [18.1, 882.0], [18.2, 882.0], [18.3, 882.0], [18.4, 882.0], [18.5, 883.0], [18.6, 883.0], [18.7, 883.0], [18.8, 883.0], [18.9, 883.0], [19.0, 884.0], [19.1, 884.0], [19.2, 884.0], [19.3, 884.0], [19.4, 884.0], [19.5, 884.0], [19.6, 884.0], [19.7, 884.0], [19.8, 884.0], [19.9, 884.0], [20.0, 887.0], [20.1, 887.0], [20.2, 887.0], [20.3, 887.0], [20.4, 896.0], [20.5, 896.0], [20.6, 896.0], [20.7, 896.0], [20.8, 896.0], [20.9, 896.0], [21.0, 896.0], [21.1, 896.0], [21.2, 896.0], [21.3, 896.0], [21.4, 900.0], [21.5, 900.0], [21.6, 900.0], [21.7, 900.0], [21.8, 900.0], [21.9, 901.0], [22.0, 901.0], [22.1, 901.0], [22.2, 901.0], [22.3, 901.0], [22.4, 908.0], [22.5, 908.0], [22.6, 908.0], [22.7, 908.0], [22.8, 908.0], [22.9, 908.0], [23.0, 908.0], [23.1, 908.0], [23.2, 908.0], [23.3, 908.0], [23.4, 913.0], [23.5, 913.0], [23.6, 913.0], [23.7, 913.0], [23.8, 913.0], [23.9, 915.0], [24.0, 915.0], [24.1, 915.0], [24.2, 915.0], [24.3, 915.0], [24.4, 919.0], [24.5, 919.0], [24.6, 919.0], [24.7, 919.0], [24.8, 919.0], [24.9, 919.0], [25.0, 919.0], [25.1, 919.0], [25.2, 919.0], [25.3, 919.0], [25.4, 926.0], [25.5, 926.0], [25.6, 926.0], [25.7, 926.0], [25.8, 926.0], [25.9, 926.0], [26.0, 926.0], [26.1, 926.0], [26.2, 926.0], [26.3, 926.0], [26.4, 927.0], [26.5, 927.0], [26.6, 927.0], [26.7, 927.0], [26.8, 927.0], [26.9, 931.0], [27.0, 931.0], [27.1, 931.0], [27.2, 931.0], [27.3, 931.0], [27.4, 933.0], [27.5, 933.0], [27.6, 933.0], [27.7, 933.0], [27.8, 933.0], [27.9, 937.0], [28.0, 937.0], [28.1, 937.0], [28.2, 937.0], [28.3, 937.0], [28.4, 942.0], [28.5, 942.0], [28.6, 942.0], [28.7, 942.0], [28.8, 942.0], [28.9, 945.0], [29.0, 945.0], [29.1, 945.0], [29.2, 945.0], [29.3, 945.0], [29.4, 952.0], [29.5, 952.0], [29.6, 952.0], [29.7, 952.0], [29.8, 952.0], [29.9, 953.0], [30.0, 953.0], [30.1, 953.0], [30.2, 953.0], [30.3, 953.0], [30.4, 957.0], [30.5, 957.0], [30.6, 957.0], [30.7, 957.0], [30.8, 957.0], [30.9, 959.0], [31.0, 959.0], [31.1, 959.0], [31.2, 959.0], [31.3, 959.0], [31.4, 959.0], [31.5, 959.0], [31.6, 959.0], [31.7, 959.0], [31.8, 959.0], [31.9, 961.0], [32.0, 961.0], [32.1, 961.0], [32.2, 961.0], [32.3, 961.0], [32.4, 961.0], [32.5, 961.0], [32.6, 961.0], [32.7, 961.0], [32.8, 961.0], [32.9, 961.0], [33.0, 961.0], [33.1, 961.0], [33.2, 961.0], [33.3, 961.0], [33.4, 965.0], [33.5, 965.0], [33.6, 965.0], [33.7, 965.0], [33.8, 965.0], [33.9, 966.0], [34.0, 966.0], [34.1, 966.0], [34.2, 966.0], [34.3, 966.0], [34.4, 975.0], [34.5, 975.0], [34.6, 975.0], [34.7, 975.0], [34.8, 975.0], [34.9, 975.0], [35.0, 975.0], [35.1, 975.0], [35.2, 975.0], [35.3, 975.0], [35.4, 978.0], [35.5, 978.0], [35.6, 978.0], [35.7, 978.0], [35.8, 978.0], [35.9, 978.0], [36.0, 978.0], [36.1, 978.0], [36.2, 978.0], [36.3, 978.0], [36.4, 981.0], [36.5, 981.0], [36.6, 981.0], [36.7, 981.0], [36.8, 981.0], [36.9, 983.0], [37.0, 983.0], [37.1, 983.0], [37.2, 983.0], [37.3, 983.0], [37.4, 984.0], [37.5, 984.0], [37.6, 984.0], [37.7, 984.0], [37.8, 984.0], [37.9, 987.0], [38.0, 987.0], [38.1, 987.0], [38.2, 987.0], [38.3, 987.0], [38.4, 992.0], [38.5, 992.0], [38.6, 992.0], [38.7, 992.0], [38.8, 992.0], [38.9, 995.0], [39.0, 995.0], [39.1, 995.0], [39.2, 995.0], [39.3, 995.0], [39.4, 999.0], [39.5, 999.0], [39.6, 999.0], [39.7, 999.0], [39.8, 999.0], [39.9, 1000.0], [40.0, 1000.0], [40.1, 1000.0], [40.2, 1000.0], [40.3, 1001.0], [40.4, 1001.0], [40.5, 1001.0], [40.6, 1001.0], [40.7, 1001.0], [40.8, 1001.0], [40.9, 1001.0], [41.0, 1001.0], [41.1, 1001.0], [41.2, 1001.0], [41.3, 1004.0], [41.4, 1004.0], [41.5, 1004.0], [41.6, 1004.0], [41.7, 1004.0], [41.8, 1004.0], [41.9, 1004.0], [42.0, 1004.0], [42.1, 1004.0], [42.2, 1004.0], [42.3, 1005.0], [42.4, 1005.0], [42.5, 1005.0], [42.6, 1005.0], [42.7, 1005.0], [42.8, 1009.0], [42.9, 1009.0], [43.0, 1009.0], [43.1, 1009.0], [43.2, 1009.0], [43.3, 1010.0], [43.4, 1010.0], [43.5, 1010.0], [43.6, 1010.0], [43.7, 1010.0], [43.8, 1013.0], [43.9, 1013.0], [44.0, 1013.0], [44.1, 1013.0], [44.2, 1013.0], [44.3, 1017.0], [44.4, 1017.0], [44.5, 1017.0], [44.6, 1017.0], [44.7, 1017.0], [44.8, 1019.0], [44.9, 1019.0], [45.0, 1019.0], [45.1, 1019.0], [45.2, 1019.0], [45.3, 1020.0], [45.4, 1020.0], [45.5, 1020.0], [45.6, 1020.0], [45.7, 1020.0], [45.8, 1022.0], [45.9, 1022.0], [46.0, 1022.0], [46.1, 1022.0], [46.2, 1022.0], [46.3, 1024.0], [46.4, 1024.0], [46.5, 1024.0], [46.6, 1024.0], [46.7, 1024.0], [46.8, 1027.0], [46.9, 1027.0], [47.0, 1027.0], [47.1, 1027.0], [47.2, 1027.0], [47.3, 1029.0], [47.4, 1029.0], [47.5, 1029.0], [47.6, 1029.0], [47.7, 1029.0], [47.8, 1034.0], [47.9, 1034.0], [48.0, 1034.0], [48.1, 1034.0], [48.2, 1034.0], [48.3, 1034.0], [48.4, 1034.0], [48.5, 1034.0], [48.6, 1034.0], [48.7, 1034.0], [48.8, 1035.0], [48.9, 1035.0], [49.0, 1035.0], [49.1, 1035.0], [49.2, 1035.0], [49.3, 1036.0], [49.4, 1036.0], [49.5, 1036.0], [49.6, 1036.0], [49.7, 1036.0], [49.8, 1037.0], [49.9, 1037.0], [50.0, 1037.0], [50.1, 1037.0], [50.2, 1037.0], [50.3, 1038.0], [50.4, 1038.0], [50.5, 1038.0], [50.6, 1038.0], [50.7, 1038.0], [50.8, 1039.0], [50.9, 1039.0], [51.0, 1039.0], [51.1, 1039.0], [51.2, 1039.0], [51.3, 1042.0], [51.4, 1042.0], [51.5, 1042.0], [51.6, 1042.0], [51.7, 1042.0], [51.8, 1042.0], [51.9, 1042.0], [52.0, 1042.0], [52.1, 1042.0], [52.2, 1042.0], [52.3, 1043.0], [52.4, 1043.0], [52.5, 1043.0], [52.6, 1043.0], [52.7, 1043.0], [52.8, 1045.0], [52.9, 1045.0], [53.0, 1045.0], [53.1, 1045.0], [53.2, 1045.0], [53.3, 1047.0], [53.4, 1047.0], [53.5, 1047.0], [53.6, 1047.0], [53.7, 1047.0], [53.8, 1051.0], [53.9, 1051.0], [54.0, 1051.0], [54.1, 1051.0], [54.2, 1051.0], [54.3, 1053.0], [54.4, 1053.0], [54.5, 1053.0], [54.6, 1053.0], [54.7, 1053.0], [54.8, 1053.0], [54.9, 1053.0], [55.0, 1053.0], [55.1, 1053.0], [55.2, 1053.0], [55.3, 1053.0], [55.4, 1053.0], [55.5, 1053.0], [55.6, 1053.0], [55.7, 1053.0], [55.8, 1055.0], [55.9, 1055.0], [56.0, 1055.0], [56.1, 1055.0], [56.2, 1055.0], [56.3, 1063.0], [56.4, 1063.0], [56.5, 1063.0], [56.6, 1063.0], [56.7, 1063.0], [56.8, 1068.0], [56.9, 1068.0], [57.0, 1068.0], [57.1, 1068.0], [57.2, 1068.0], [57.3, 1072.0], [57.4, 1072.0], [57.5, 1072.0], [57.6, 1072.0], [57.7, 1072.0], [57.8, 1074.0], [57.9, 1074.0], [58.0, 1074.0], [58.1, 1074.0], [58.2, 1074.0], [58.3, 1074.0], [58.4, 1074.0], [58.5, 1074.0], [58.6, 1074.0], [58.7, 1074.0], [58.8, 1076.0], [58.9, 1076.0], [59.0, 1076.0], [59.1, 1076.0], [59.2, 1076.0], [59.3, 1079.0], [59.4, 1079.0], [59.5, 1079.0], [59.6, 1079.0], [59.7, 1079.0], [59.8, 1080.0], [59.9, 1080.0], [60.0, 1080.0], [60.1, 1080.0], [60.2, 1080.0], [60.3, 1080.0], [60.4, 1080.0], [60.5, 1080.0], [60.6, 1080.0], [60.7, 1092.0], [60.8, 1092.0], [60.9, 1092.0], [61.0, 1092.0], [61.1, 1092.0], [61.2, 1098.0], [61.3, 1098.0], [61.4, 1098.0], [61.5, 1098.0], [61.6, 1098.0], [61.7, 1100.0], [61.8, 1100.0], [61.9, 1100.0], [62.0, 1100.0], [62.1, 1100.0], [62.2, 1100.0], [62.3, 1100.0], [62.4, 1100.0], [62.5, 1100.0], [62.6, 1100.0], [62.7, 1101.0], [62.8, 1101.0], [62.9, 1101.0], [63.0, 1101.0], [63.1, 1101.0], [63.2, 1103.0], [63.3, 1103.0], [63.4, 1103.0], [63.5, 1103.0], [63.6, 1103.0], [63.7, 1103.0], [63.8, 1103.0], [63.9, 1103.0], [64.0, 1103.0], [64.1, 1103.0], [64.2, 1104.0], [64.3, 1104.0], [64.4, 1104.0], [64.5, 1104.0], [64.6, 1104.0], [64.7, 1106.0], [64.8, 1106.0], [64.9, 1106.0], [65.0, 1106.0], [65.1, 1106.0], [65.2, 1114.0], [65.3, 1114.0], [65.4, 1114.0], [65.5, 1114.0], [65.6, 1114.0], [65.7, 1116.0], [65.8, 1116.0], [65.9, 1116.0], [66.0, 1116.0], [66.1, 1116.0], [66.2, 1117.0], [66.3, 1117.0], [66.4, 1117.0], [66.5, 1117.0], [66.6, 1117.0], [66.7, 1118.0], [66.8, 1118.0], [66.9, 1118.0], [67.0, 1118.0], [67.1, 1118.0], [67.2, 1119.0], [67.3, 1119.0], [67.4, 1119.0], [67.5, 1119.0], [67.6, 1119.0], [67.7, 1120.0], [67.8, 1120.0], [67.9, 1120.0], [68.0, 1120.0], [68.1, 1120.0], [68.2, 1124.0], [68.3, 1124.0], [68.4, 1124.0], [68.5, 1124.0], [68.6, 1124.0], [68.7, 1128.0], [68.8, 1128.0], [68.9, 1128.0], [69.0, 1128.0], [69.1, 1128.0], [69.2, 1134.0], [69.3, 1134.0], [69.4, 1134.0], [69.5, 1134.0], [69.6, 1134.0], [69.7, 1139.0], [69.8, 1139.0], [69.9, 1139.0], [70.0, 1139.0], [70.1, 1139.0], [70.2, 1141.0], [70.3, 1141.0], [70.4, 1141.0], [70.5, 1141.0], [70.6, 1141.0], [70.7, 1144.0], [70.8, 1144.0], [70.9, 1144.0], [71.0, 1144.0], [71.1, 1144.0], [71.2, 1147.0], [71.3, 1147.0], [71.4, 1147.0], [71.5, 1147.0], [71.6, 1147.0], [71.7, 1148.0], [71.8, 1148.0], [71.9, 1148.0], [72.0, 1148.0], [72.1, 1148.0], [72.2, 1149.0], [72.3, 1149.0], [72.4, 1149.0], [72.5, 1149.0], [72.6, 1149.0], [72.7, 1152.0], [72.8, 1152.0], [72.9, 1152.0], [73.0, 1152.0], [73.1, 1152.0], [73.2, 1158.0], [73.3, 1158.0], [73.4, 1158.0], [73.5, 1158.0], [73.6, 1158.0], [73.7, 1161.0], [73.8, 1161.0], [73.9, 1161.0], [74.0, 1161.0], [74.1, 1161.0], [74.2, 1168.0], [74.3, 1168.0], [74.4, 1168.0], [74.5, 1168.0], [74.6, 1168.0], [74.7, 1170.0], [74.8, 1170.0], [74.9, 1170.0], [75.0, 1170.0], [75.1, 1170.0], [75.2, 1172.0], [75.3, 1172.0], [75.4, 1172.0], [75.5, 1172.0], [75.6, 1172.0], [75.7, 1172.0], [75.8, 1172.0], [75.9, 1172.0], [76.0, 1172.0], [76.1, 1172.0], [76.2, 1175.0], [76.3, 1175.0], [76.4, 1175.0], [76.5, 1175.0], [76.6, 1175.0], [76.7, 1179.0], [76.8, 1179.0], [76.9, 1179.0], [77.0, 1179.0], [77.1, 1179.0], [77.2, 1182.0], [77.3, 1182.0], [77.4, 1182.0], [77.5, 1182.0], [77.6, 1182.0], [77.7, 1201.0], [77.8, 1201.0], [77.9, 1201.0], [78.0, 1201.0], [78.1, 1201.0], [78.2, 1203.0], [78.3, 1203.0], [78.4, 1203.0], [78.5, 1203.0], [78.6, 1203.0], [78.7, 1211.0], [78.8, 1211.0], [78.9, 1211.0], [79.0, 1211.0], [79.1, 1211.0], [79.2, 1214.0], [79.3, 1214.0], [79.4, 1214.0], [79.5, 1214.0], [79.6, 1214.0], [79.7, 1216.0], [79.8, 1216.0], [79.9, 1216.0], [80.0, 1216.0], [80.1, 1218.0], [80.2, 1218.0], [80.3, 1218.0], [80.4, 1218.0], [80.5, 1218.0], [80.6, 1220.0], [80.7, 1220.0], [80.8, 1220.0], [80.9, 1220.0], [81.0, 1220.0], [81.1, 1220.0], [81.2, 1220.0], [81.3, 1220.0], [81.4, 1220.0], [81.5, 1220.0], [81.6, 1223.0], [81.7, 1223.0], [81.8, 1223.0], [81.9, 1223.0], [82.0, 1223.0], [82.1, 1226.0], [82.2, 1226.0], [82.3, 1226.0], [82.4, 1226.0], [82.5, 1226.0], [82.6, 1229.0], [82.7, 1229.0], [82.8, 1229.0], [82.9, 1229.0], [83.0, 1229.0], [83.1, 1229.0], [83.2, 1229.0], [83.3, 1229.0], [83.4, 1229.0], [83.5, 1229.0], [83.6, 1237.0], [83.7, 1237.0], [83.8, 1237.0], [83.9, 1237.0], [84.0, 1237.0], [84.1, 1241.0], [84.2, 1241.0], [84.3, 1241.0], [84.4, 1241.0], [84.5, 1241.0], [84.6, 1258.0], [84.7, 1258.0], [84.8, 1258.0], [84.9, 1258.0], [85.0, 1258.0], [85.1, 1269.0], [85.2, 1269.0], [85.3, 1269.0], [85.4, 1269.0], [85.5, 1269.0], [85.6, 1288.0], [85.7, 1288.0], [85.8, 1288.0], [85.9, 1288.0], [86.0, 1288.0], [86.1, 1298.0], [86.2, 1298.0], [86.3, 1298.0], [86.4, 1298.0], [86.5, 1298.0], [86.6, 1310.0], [86.7, 1310.0], [86.8, 1310.0], [86.9, 1310.0], [87.0, 1310.0], [87.1, 1319.0], [87.2, 1319.0], [87.3, 1319.0], [87.4, 1319.0], [87.5, 1319.0], [87.6, 1323.0], [87.7, 1323.0], [87.8, 1323.0], [87.9, 1323.0], [88.0, 1323.0], [88.1, 1324.0], [88.2, 1324.0], [88.3, 1324.0], [88.4, 1324.0], [88.5, 1324.0], [88.6, 1328.0], [88.7, 1328.0], [88.8, 1328.0], [88.9, 1328.0], [89.0, 1328.0], [89.1, 1342.0], [89.2, 1342.0], [89.3, 1342.0], [89.4, 1342.0], [89.5, 1342.0], [89.6, 1350.0], [89.7, 1350.0], [89.8, 1350.0], [89.9, 1350.0], [90.0, 1350.0], [90.1, 1354.0], [90.2, 1354.0], [90.3, 1354.0], [90.4, 1354.0], [90.5, 1354.0], [90.6, 1362.0], [90.7, 1362.0], [90.8, 1362.0], [90.9, 1362.0], [91.0, 1362.0], [91.1, 1384.0], [91.2, 1384.0], [91.3, 1384.0], [91.4, 1384.0], [91.5, 1384.0], [91.6, 1387.0], [91.7, 1387.0], [91.8, 1387.0], [91.9, 1387.0], [92.0, 1387.0], [92.1, 1400.0], [92.2, 1400.0], [92.3, 1400.0], [92.4, 1400.0], [92.5, 1400.0], [92.6, 1404.0], [92.7, 1404.0], [92.8, 1404.0], [92.9, 1404.0], [93.0, 1404.0], [93.1, 1416.0], [93.2, 1416.0], [93.3, 1416.0], [93.4, 1416.0], [93.5, 1416.0], [93.6, 1423.0], [93.7, 1423.0], [93.8, 1423.0], [93.9, 1423.0], [94.0, 1423.0], [94.1, 1428.0], [94.2, 1428.0], [94.3, 1428.0], [94.4, 1428.0], [94.5, 1428.0], [94.6, 1454.0], [94.7, 1454.0], [94.8, 1454.0], [94.9, 1454.0], [95.0, 1454.0], [95.1, 1475.0], [95.2, 1475.0], [95.3, 1475.0], [95.4, 1475.0], [95.5, 1475.0], [95.6, 1521.0], [95.7, 1521.0], [95.8, 1521.0], [95.9, 1521.0], [96.0, 1521.0], [96.1, 1541.0], [96.2, 1541.0], [96.3, 1541.0], [96.4, 1541.0], [96.5, 1541.0], [96.6, 1657.0], [96.7, 1657.0], [96.8, 1657.0], [96.9, 1657.0], [97.0, 1657.0], [97.1, 1660.0], [97.2, 1660.0], [97.3, 1660.0], [97.4, 1660.0], [97.5, 1660.0], [97.6, 1765.0], [97.7, 1765.0], [97.8, 1765.0], [97.9, 1765.0], [98.0, 1765.0], [98.1, 1770.0], [98.2, 1770.0], [98.3, 1770.0], [98.4, 1770.0], [98.5, 1770.0], [98.6, 1903.0], [98.7, 1903.0], [98.8, 1903.0], [98.9, 1903.0], [99.0, 1903.0], [99.1, 2160.0], [99.2, 2160.0], [99.3, 2160.0], [99.4, 2160.0], [99.5, 2160.0], [99.6, 22508.0], [99.7, 22508.0], [99.8, 22508.0], [99.9, 22508.0]], "isOverall": false, "label": "registrarSalidaPagoAutomatico", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 300.0, "maxY": 331.0, "series": [{"data": [[600.0, 59.0], [700.0, 54.0], [800.0, 23.0], [900.0, 9.0], [1000.0, 6.0], [1100.0, 5.0], [1200.0, 5.0], [300.0, 22.0], [1300.0, 1.0], [21400.0, 1.0], [1400.0, 1.0], [400.0, 105.0], [500.0, 54.0]], "isOverall": false, "label": "registrarEntradaEglobalt", "isController": false}, {"data": [[2300.0, 1.0], [2200.0, 2.0], [700.0, 2.0], [3200.0, 1.0], [800.0, 6.0], [900.0, 6.0], [1000.0, 10.0], [1100.0, 6.0], [1200.0, 5.0], [1300.0, 6.0], [1400.0, 4.0], [1500.0, 2.0], [24900.0, 1.0], [1600.0, 7.0], [1700.0, 5.0], [1800.0, 5.0], [1900.0, 6.0], [2000.0, 4.0]], "isOverall": false, "label": "registrarEntradaSinSalida", "isController": false}, {"data": [[1100.0, 1.0], [300.0, 331.0], [600.0, 4.0], [21400.0, 1.0], [400.0, 304.0], [500.0, 27.0]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1200.0, 1.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}, {"data": [[2100.0, 1.0], [700.0, 5.0], [800.0, 38.0], [900.0, 37.0], [1000.0, 44.0], [1100.0, 32.0], [1200.0, 18.0], [1300.0, 11.0], [1400.0, 7.0], [22500.0, 1.0], [1500.0, 2.0], [1600.0, 2.0], [1700.0, 2.0], [1900.0, 1.0]], "isOverall": false, "label": "registrarSalidaPagoAutomatico", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 24900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 42.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 762.0, "series": [{"data": [[0.0, 762.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 370.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 42.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 120.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.72374138E12, "maxY": 1.0, "series": [{"data": [[1.72374138E12, 1.0]], "isOverall": false, "label": "setUpAutenticacionCognito", "isController": false}, {"data": [[1.7237415E12, 1.0], [1.72374168E12, 1.0], [1.72374186E12, 1.0], [1.72374156E12, 1.0], [1.72374144E12, 1.0], [1.72374174E12, 1.0], [1.72374192E12, 1.0], [1.72374162E12, 1.0], [1.72374138E12, 1.0], [1.7237418E12, 1.0], [1.72374198E12, 1.0]], "isOverall": false, "label": "consultarPlaca", "isController": false}, {"data": [[1.7237415E12, 1.0], [1.72374168E12, 1.0], [1.72374186E12, 1.0], [1.72374156E12, 1.0], [1.72374144E12, 1.0], [1.72374174E12, 1.0], [1.72374192E12, 1.0], [1.72374162E12, 1.0], [1.7237418E12, 1.0], [1.72374198E12, 1.0]], "isOverall": false, "label": "registrarEntrada", "isController": false}, {"data": [[1.72374168E12, 1.0], [1.72374186E12, 1.0], [1.72374156E12, 1.0], [1.72374174E12, 1.0], [1.72374192E12, 1.0], [1.72374162E12, 1.0], [1.7237418E12, 1.0], [1.72374198E12, 1.0]], "isOverall": false, "label": "registrarSalidaPagoAutomatico", "isController": false}, {"data": [[1.72374186E12, 1.0], [1.72374192E12, 1.0], [1.7237418E12, 1.0], [1.72374198E12, 1.0]], "isOverall": false, "label": "registrarSalidaSinEntrada", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72374198E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 400.2428571428571, "minX": 1.0, "maxY": 1745.0, "series": [{"data": [[2.0, 728.2470588235294], [4.0, 734.1935483870967], [3.0, 594.0220588235293]], "isOverall": false, "label": "registrarEntradaEglobalt", "isController": false}, {"data": [[3.1130434782608685, 677.4724637681159]], "isOverall": false, "label": "registrarEntradaEglobalt-Aggregated", "isController": false}, {"data": [[4.0, 1736.51282051282], [1.0, 1745.0]], "isOverall": false, "label": "registrarEntradaSinSalida", "isController": false}, {"data": [[3.962025316455696, 1736.6202531645565]], "isOverall": false, "label": "registrarEntradaSinSalida-Aggregated", "isController": false}, {"data": [[1.0, 400.2428571428571], [2.0, 414.22784810126575], [4.0, 511.917073170732], [3.0, 408.0851063829786]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[2.8607784431137726, 440.58083832335285]], "isOverall": false, "label": "getPlate-Aggregated", "isController": false}, {"data": [[1.0, 1222.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}, {"data": [[1.0, 1222.0]], "isOverall": false, "label": "loginAFlypass-Aggregated", "isController": false}, {"data": [[4.0, 1338.3695652173915], [2.0, 1220.0], [3.0, 1043.120370370371]], "isOverall": false, "label": "registrarSalidaPagoAutomatico", "isController": false}, {"data": [[3.452736318407959, 1179.1393034825871]], "isOverall": false, "label": "registrarSalidaPagoAutomatico-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 4.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 340.05, "minX": 1.72374138E12, "maxY": 2893.616666666667, "series": [{"data": [[1.7237415E12, 890.15], [1.72374168E12, 1215.05], [1.72374186E12, 1258.2333333333333], [1.72374156E12, 869.1], [1.72374144E12, 685.6833333333333], [1.72374174E12, 1188.0333333333333], [1.72374192E12, 1466.7333333333333], [1.72374162E12, 1245.7833333333333], [1.72374138E12, 340.05], [1.7237418E12, 969.2166666666667], [1.72374198E12, 648.35]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7237415E12, 1743.4666666666667], [1.72374168E12, 2349.75], [1.72374186E12, 2498.983333333333], [1.72374156E12, 1704.4], [1.72374144E12, 1316.85], [1.72374174E12, 2313.616666666667], [1.72374192E12, 2893.616666666667], [1.72374162E12, 2462.3], [1.72374138E12, 574.6], [1.7237418E12, 1943.5], [1.72374198E12, 1283.3166666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72374198E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 384.4615384615385, "minX": 1.72374138E12, "maxY": 3914.3636363636365, "series": [{"data": [[1.7237415E12, 613.8250000000002], [1.72374168E12, 603.0731707317071], [1.72374186E12, 1297.4642857142858], [1.72374156E12, 784.8857142857142], [1.72374144E12, 865.3888888888889], [1.72374174E12, 649.8717948717948], [1.72374192E12, 539.0975609756097], [1.72374162E12, 497.5227272727273], [1.7237418E12, 607.9756097560975], [1.72374198E12, 600.3333333333334]], "isOverall": false, "label": "registrarEntradaEglobalt", "isController": false}, {"data": [[1.72374186E12, 1676.1666666666667], [1.72374192E12, 1178.9677419354837], [1.7237418E12, 3914.3636363636365], [1.72374198E12, 1335.3076923076922]], "isOverall": false, "label": "registrarEntradaSinSalida", "isController": false}, {"data": [[1.7237415E12, 409.0285714285714], [1.72374168E12, 409.4927536231883], [1.72374186E12, 401.61764705882354], [1.72374156E12, 425.8030303030302], [1.72374144E12, 417.0735294117647], [1.72374174E12, 411.11594202898556], [1.72374192E12, 410.536231884058], [1.72374162E12, 388.13698630136986], [1.72374138E12, 384.4615384615385], [1.7237418E12, 894.8666666666667], [1.72374198E12, 417.375]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1.72374138E12, 1222.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}, {"data": [[1.72374168E12, 1013.9090909090908], [1.72374186E12, 1126.6774193548385], [1.72374156E12, 1222.8333333333333], [1.72374174E12, 1066.9393939393944], [1.72374192E12, 1077.0624999999998], [1.72374162E12, 990.3939393939393], [1.7237418E12, 2270.2631578947367], [1.72374198E12, 1127.9285714285713]], "isOverall": false, "label": "registrarSalidaPagoAutomatico", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72374198E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 384.0769230769231, "minX": 1.72374138E12, "maxY": 3914.2727272727275, "series": [{"data": [[1.7237415E12, 613.7249999999999], [1.72374168E12, 602.8292682926827], [1.72374186E12, 1297.4642857142858], [1.72374156E12, 784.8000000000001], [1.72374144E12, 865.2777777777779], [1.72374174E12, 649.8205128205128], [1.72374192E12, 539.048780487805], [1.72374162E12, 497.34090909090907], [1.7237418E12, 607.8780487804877], [1.72374198E12, 600.3333333333334]], "isOverall": false, "label": "registrarEntradaEglobalt", "isController": false}, {"data": [[1.72374186E12, 1676.1250000000002], [1.72374192E12, 1178.9677419354837], [1.7237418E12, 3914.2727272727275], [1.72374198E12, 1335.1538461538462]], "isOverall": false, "label": "registrarEntradaSinSalida", "isController": false}, {"data": [[1.7237415E12, 408.82857142857137], [1.72374168E12, 409.37681159420293], [1.72374186E12, 401.5294117647059], [1.72374156E12, 425.68181818181824], [1.72374144E12, 416.8970588235296], [1.72374174E12, 410.94202898550725], [1.72374192E12, 410.5072463768117], [1.72374162E12, 387.95890410958896], [1.72374138E12, 384.0769230769231], [1.7237418E12, 894.7999999999998], [1.72374198E12, 417.34374999999994]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1.72374138E12, 1220.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}, {"data": [[1.72374168E12, 1013.818181818182], [1.72374186E12, 1126.5806451612907], [1.72374156E12, 1222.8333333333333], [1.72374174E12, 1066.818181818182], [1.72374192E12, 1077.0624999999998], [1.72374162E12, 990.3030303030301], [1.7237418E12, 2270.2105263157896], [1.72374198E12, 1127.9285714285713]], "isOverall": false, "label": "registrarSalidaPagoAutomatico", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72374198E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 276.38461538461536, "minX": 1.72374138E12, "maxY": 1389.0, "series": [{"data": [[1.7237415E12, 281.72499999999997], [1.72374168E12, 281.51219512195127], [1.72374186E12, 1030.8928571428569], [1.72374156E12, 284.31428571428575], [1.72374144E12, 282.7222222222222], [1.72374174E12, 276.38461538461536], [1.72374192E12, 282.24390243902445], [1.72374162E12, 279.590909090909], [1.7237418E12, 279.48780487804885], [1.72374198E12, 278.7777777777777]], "isOverall": false, "label": "registrarEntradaEglobalt", "isController": false}, {"data": [[1.72374186E12, 278.08333333333337], [1.72374192E12, 282.41935483870964], [1.7237418E12, 278.1818181818182], [1.72374198E12, 277.0769230769231]], "isOverall": false, "label": "registrarEntradaSinSalida", "isController": false}, {"data": [[1.7237415E12, 283.3285714285713], [1.72374168E12, 280.69565217391306], [1.72374186E12, 284.4264705882353], [1.72374156E12, 288.74242424242425], [1.72374144E12, 281.4852941176471], [1.72374174E12, 283.2898550724638], [1.72374192E12, 279.7391304347827], [1.72374162E12, 281.82191780821927], [1.72374138E12, 280.17948717948707], [1.7237418E12, 746.511111111111], [1.72374198E12, 279.7812500000001]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1.72374138E12, 1046.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}, {"data": [[1.72374168E12, 288.3333333333333], [1.72374186E12, 278.38709677419354], [1.72374156E12, 292.0], [1.72374174E12, 281.4848484848484], [1.72374192E12, 278.25], [1.72374162E12, 280.09090909090907], [1.7237418E12, 1389.0], [1.72374198E12, 279.2142857142857]], "isOverall": false, "label": "registrarSalidaPagoAutomatico", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72374198E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 327.0, "minX": 1.72374138E12, "maxY": 24903.0, "series": [{"data": [[1.7237415E12, 1201.0], [1.72374168E12, 881.0], [1.72374186E12, 21453.0], [1.72374156E12, 1903.0], [1.72374144E12, 1376.0], [1.72374174E12, 1158.0], [1.72374192E12, 2214.0], [1.72374162E12, 1350.0], [1.72374138E12, 1222.0], [1.7237418E12, 24903.0], [1.72374198E12, 1841.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7237415E12, 718.9000000000001], [1.72374168E12, 733.6000000000001], [1.72374186E12, 1611.8000000000002], [1.72374156E12, 992.8000000000002], [1.72374144E12, 841.8999999999999], [1.72374174E12, 837.1000000000001], [1.72374192E12, 1149.5000000000002], [1.72374162E12, 982.5], [1.72374138E12, 417.3], [1.7237418E12, 1685.5999999999997], [1.72374198E12, 1512.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7237415E12, 1190.1100000000001], [1.72374168E12, 879.9], [1.72374186E12, 11972.879999999814], [1.72374156E12, 1859.0800000000008], [1.72374144E12, 1376.0], [1.72374174E12, 1138.0500000000002], [1.72374192E12, 2135.4099999999985], [1.72374162E12, 1255.0500000000025], [1.72374138E12, 1222.0], [1.7237418E12, 24495.849999999995], [1.72374198E12, 1841.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7237415E12, 842.9499999999985], [1.72374168E12, 802.8], [1.72374186E12, 1900.4000000000008], [1.72374156E12, 1206.6], [1.72374144E12, 1094.699999999999], [1.72374174E12, 992.6499999999999], [1.72374192E12, 1428.5], [1.72374162E12, 1033.0], [1.72374138E12, 465.79999999999984], [1.7237418E12, 2023.55], [1.72374198E12, 1737.25]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.7237415E12, 342.0], [1.72374168E12, 346.0], [1.72374186E12, 327.0], [1.72374156E12, 364.0], [1.72374144E12, 364.0], [1.72374174E12, 347.0], [1.72374192E12, 344.0], [1.72374162E12, 340.0], [1.72374138E12, 347.0], [1.7237418E12, 340.0], [1.72374198E12, 353.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7237415E12, 419.0], [1.72374168E12, 431.5], [1.72374186E12, 453.0], [1.72374156E12, 443.0], [1.72374144E12, 420.0], [1.72374174E12, 437.5], [1.72374192E12, 435.0], [1.72374162E12, 417.5], [1.72374138E12, 385.0], [1.7237418E12, 571.5], [1.72374198E12, 517.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72374198E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 407.0, "minX": 1.0, "maxY": 1051.0, "series": [{"data": [[1.0, 407.0], [2.0, 429.0], [4.0, 465.0], [5.0, 431.0], [3.0, 446.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 961.0], [4.0, 1051.0], [5.0, 945.0], [3.0, 1032.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 5.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 407.0, "minX": 1.0, "maxY": 1051.0, "series": [{"data": [[1.0, 407.0], [2.0, 428.0], [4.0, 464.0], [5.0, 430.5], [3.0, 446.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 960.0], [4.0, 1051.0], [5.0, 945.0], [3.0, 1031.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 5.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.6666666666666666, "minX": 1.72374138E12, "maxY": 2.8333333333333335, "series": [{"data": [[1.7237415E12, 1.8166666666666667], [1.72374168E12, 2.3833333333333333], [1.72374186E12, 2.5166666666666666], [1.72374156E12, 1.8166666666666667], [1.72374144E12, 1.4666666666666666], [1.72374174E12, 2.3333333333333335], [1.72374192E12, 2.8333333333333335], [1.72374162E12, 2.4833333333333334], [1.72374138E12, 0.6666666666666666], [1.7237418E12, 1.9666666666666666], [1.72374198E12, 1.2833333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72374198E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.11666666666666667, "minX": 1.72374138E12, "maxY": 1.3833333333333333, "series": [{"data": [[1.7237415E12, 1.1666666666666667], [1.72374168E12, 1.15], [1.72374186E12, 1.1333333333333333], [1.72374156E12, 1.1], [1.72374144E12, 1.1333333333333333], [1.72374174E12, 1.15], [1.72374192E12, 1.15], [1.72374162E12, 1.2166666666666666], [1.72374138E12, 0.6666666666666666], [1.7237418E12, 0.75], [1.72374198E12, 0.5333333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.7237415E12, 0.6666666666666666], [1.72374168E12, 1.2333333333333334], [1.72374186E12, 1.3833333333333333], [1.72374156E12, 0.6833333333333333], [1.72374144E12, 0.3], [1.72374174E12, 1.2], [1.72374192E12, 1.35], [1.72374162E12, 1.2833333333333334], [1.7237418E12, 1.1833333333333333], [1.72374198E12, 0.6333333333333333]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.72374192E12, 0.38333333333333336], [1.72374198E12, 0.11666666666666667]], "isOverall": false, "label": "404", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72374198E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.72374138E12, "maxY": 1.2166666666666666, "series": [{"data": [[1.72374138E12, 0.016666666666666666]], "isOverall": false, "label": "loginAFlypass-success", "isController": false}, {"data": [[1.72374186E12, 0.5166666666666667], [1.72374156E12, 0.1], [1.72374174E12, 0.16666666666666666], [1.72374192E12, 0.16666666666666666], [1.72374162E12, 0.45], [1.7237418E12, 0.31666666666666665], [1.72374198E12, 0.13333333333333333]], "isOverall": false, "label": "registrarSalidaPagoAutomatico-success", "isController": false}, {"data": [[1.72374168E12, 0.55], [1.72374174E12, 0.38333333333333336], [1.72374192E12, 0.36666666666666664], [1.72374162E12, 0.1], [1.72374198E12, 0.1]], "isOverall": false, "label": "registrarSalidaPagoAutomatico-failure", "isController": false}, {"data": [[1.7237415E12, 1.1666666666666667], [1.72374168E12, 1.15], [1.72374186E12, 1.1333333333333333], [1.72374156E12, 1.1], [1.72374144E12, 1.1333333333333333], [1.72374174E12, 1.15], [1.72374192E12, 1.15], [1.72374162E12, 1.2166666666666666], [1.72374138E12, 0.65], [1.7237418E12, 0.75], [1.72374198E12, 0.5333333333333333]], "isOverall": false, "label": "getPlate-success", "isController": false}, {"data": [[1.72374192E12, 0.38333333333333336], [1.72374198E12, 0.11666666666666667]], "isOverall": false, "label": "registrarEntradaSinSalida-failure", "isController": false}, {"data": [[1.7237415E12, 0.6666666666666666], [1.72374168E12, 0.6833333333333333], [1.72374186E12, 0.4666666666666667], [1.72374156E12, 0.5833333333333334], [1.72374144E12, 0.3], [1.72374174E12, 0.65], [1.72374192E12, 0.6833333333333333], [1.72374162E12, 0.7333333333333333], [1.7237418E12, 0.6833333333333333], [1.72374198E12, 0.3]], "isOverall": false, "label": "registrarEntradaEglobalt-success", "isController": false}, {"data": [[1.72374186E12, 0.4], [1.72374192E12, 0.13333333333333333], [1.7237418E12, 0.18333333333333332], [1.72374198E12, 0.1]], "isOverall": false, "label": "registrarEntradaSinSalida-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72374198E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.72374138E12, "maxY": 2.5166666666666666, "series": [{"data": [[1.7237415E12, 1.8333333333333333], [1.72374168E12, 1.8333333333333333], [1.72374186E12, 2.5166666666666666], [1.72374156E12, 1.7833333333333334], [1.72374144E12, 1.4333333333333333], [1.72374174E12, 1.9666666666666666], [1.72374192E12, 2.1333333333333333], [1.72374162E12, 2.4], [1.72374138E12, 0.6666666666666666], [1.7237418E12, 1.9333333333333333], [1.72374198E12, 1.0666666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.72374168E12, 0.55], [1.72374174E12, 0.38333333333333336], [1.72374192E12, 0.75], [1.72374162E12, 0.1], [1.72374198E12, 0.21666666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72374198E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

