/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 307.0, "minX": 0.0, "maxY": 26291.0, "series": [{"data": [[0.0, 773.0], [0.1, 773.0], [0.2, 773.0], [0.3, 773.0], [0.4, 773.0], [0.5, 773.0], [0.6, 774.0], [0.7, 774.0], [0.8, 774.0], [0.9, 774.0], [1.0, 774.0], [1.1, 777.0], [1.2, 777.0], [1.3, 777.0], [1.4, 777.0], [1.5, 777.0], [1.6, 785.0], [1.7, 785.0], [1.8, 785.0], [1.9, 785.0], [2.0, 785.0], [2.1, 785.0], [2.2, 788.0], [2.3, 788.0], [2.4, 788.0], [2.5, 788.0], [2.6, 788.0], [2.7, 810.0], [2.8, 810.0], [2.9, 810.0], [3.0, 810.0], [3.1, 810.0], [3.2, 819.0], [3.3, 819.0], [3.4, 819.0], [3.5, 819.0], [3.6, 819.0], [3.7, 819.0], [3.8, 828.0], [3.9, 828.0], [4.0, 828.0], [4.1, 828.0], [4.2, 828.0], [4.3, 849.0], [4.4, 849.0], [4.5, 849.0], [4.6, 849.0], [4.7, 849.0], [4.8, 865.0], [4.9, 865.0], [5.0, 865.0], [5.1, 865.0], [5.2, 865.0], [5.3, 865.0], [5.4, 870.0], [5.5, 870.0], [5.6, 870.0], [5.7, 870.0], [5.8, 870.0], [5.9, 877.0], [6.0, 877.0], [6.1, 877.0], [6.2, 877.0], [6.3, 877.0], [6.4, 884.0], [6.5, 884.0], [6.6, 884.0], [6.7, 884.0], [6.8, 884.0], [6.9, 884.0], [7.0, 892.0], [7.1, 892.0], [7.2, 892.0], [7.3, 892.0], [7.4, 892.0], [7.5, 895.0], [7.6, 895.0], [7.7, 895.0], [7.8, 895.0], [7.9, 895.0], [8.0, 896.0], [8.1, 896.0], [8.2, 896.0], [8.3, 896.0], [8.4, 896.0], [8.5, 896.0], [8.6, 897.0], [8.7, 897.0], [8.8, 897.0], [8.9, 897.0], [9.0, 897.0], [9.1, 897.0], [9.2, 897.0], [9.3, 897.0], [9.4, 897.0], [9.5, 897.0], [9.6, 914.0], [9.7, 914.0], [9.8, 914.0], [9.9, 914.0], [10.0, 914.0], [10.1, 914.0], [10.2, 914.0], [10.3, 914.0], [10.4, 914.0], [10.5, 914.0], [10.6, 914.0], [10.7, 921.0], [10.8, 921.0], [10.9, 921.0], [11.0, 921.0], [11.1, 921.0], [11.2, 922.0], [11.3, 922.0], [11.4, 922.0], [11.5, 922.0], [11.6, 922.0], [11.7, 922.0], [11.8, 922.0], [11.9, 922.0], [12.0, 922.0], [12.1, 922.0], [12.2, 922.0], [12.3, 924.0], [12.4, 924.0], [12.5, 924.0], [12.6, 924.0], [12.7, 924.0], [12.8, 929.0], [12.9, 929.0], [13.0, 929.0], [13.1, 929.0], [13.2, 929.0], [13.3, 929.0], [13.4, 929.0], [13.5, 929.0], [13.6, 929.0], [13.7, 929.0], [13.8, 929.0], [13.9, 934.0], [14.0, 934.0], [14.1, 934.0], [14.2, 934.0], [14.3, 934.0], [14.4, 939.0], [14.5, 939.0], [14.6, 939.0], [14.7, 939.0], [14.8, 939.0], [14.9, 941.0], [15.0, 941.0], [15.1, 941.0], [15.2, 941.0], [15.3, 941.0], [15.4, 941.0], [15.5, 942.0], [15.6, 942.0], [15.7, 942.0], [15.8, 942.0], [15.9, 942.0], [16.0, 946.0], [16.1, 946.0], [16.2, 946.0], [16.3, 946.0], [16.4, 946.0], [16.5, 953.0], [16.6, 953.0], [16.7, 953.0], [16.8, 953.0], [16.9, 953.0], [17.0, 953.0], [17.1, 955.0], [17.2, 955.0], [17.3, 955.0], [17.4, 955.0], [17.5, 955.0], [17.6, 955.0], [17.7, 955.0], [17.8, 955.0], [17.9, 955.0], [18.0, 955.0], [18.1, 956.0], [18.2, 956.0], [18.3, 956.0], [18.4, 956.0], [18.5, 956.0], [18.6, 956.0], [18.7, 964.0], [18.8, 964.0], [18.9, 964.0], [19.0, 964.0], [19.1, 964.0], [19.2, 967.0], [19.3, 967.0], [19.4, 967.0], [19.5, 967.0], [19.6, 967.0], [19.7, 968.0], [19.8, 968.0], [19.9, 968.0], [20.0, 968.0], [20.1, 968.0], [20.2, 968.0], [20.3, 971.0], [20.4, 971.0], [20.5, 971.0], [20.6, 971.0], [20.7, 971.0], [20.8, 975.0], [20.9, 975.0], [21.0, 975.0], [21.1, 975.0], [21.2, 975.0], [21.3, 976.0], [21.4, 976.0], [21.5, 976.0], [21.6, 976.0], [21.7, 976.0], [21.8, 976.0], [21.9, 986.0], [22.0, 986.0], [22.1, 986.0], [22.2, 986.0], [22.3, 986.0], [22.4, 986.0], [22.5, 986.0], [22.6, 986.0], [22.7, 986.0], [22.8, 986.0], [22.9, 993.0], [23.0, 993.0], [23.1, 993.0], [23.2, 993.0], [23.3, 993.0], [23.4, 993.0], [23.5, 993.0], [23.6, 993.0], [23.7, 993.0], [23.8, 993.0], [23.9, 993.0], [24.0, 997.0], [24.1, 997.0], [24.2, 997.0], [24.3, 997.0], [24.4, 997.0], [24.5, 997.0], [24.6, 997.0], [24.7, 997.0], [24.8, 997.0], [24.9, 997.0], [25.0, 1000.0], [25.1, 1000.0], [25.2, 1000.0], [25.3, 1000.0], [25.4, 1000.0], [25.5, 1000.0], [25.6, 1006.0], [25.7, 1006.0], [25.8, 1006.0], [25.9, 1006.0], [26.0, 1006.0], [26.1, 1007.0], [26.2, 1007.0], [26.3, 1007.0], [26.4, 1007.0], [26.5, 1007.0], [26.6, 1007.0], [26.7, 1007.0], [26.8, 1007.0], [26.9, 1007.0], [27.0, 1007.0], [27.1, 1007.0], [27.2, 1012.0], [27.3, 1012.0], [27.4, 1012.0], [27.5, 1012.0], [27.6, 1012.0], [27.7, 1012.0], [27.8, 1012.0], [27.9, 1012.0], [28.0, 1012.0], [28.1, 1012.0], [28.2, 1012.0], [28.3, 1012.0], [28.4, 1012.0], [28.5, 1012.0], [28.6, 1012.0], [28.7, 1012.0], [28.8, 1013.0], [28.9, 1013.0], [29.0, 1013.0], [29.1, 1013.0], [29.2, 1013.0], [29.3, 1014.0], [29.4, 1014.0], [29.5, 1014.0], [29.6, 1014.0], [29.7, 1014.0], [29.8, 1016.0], [29.9, 1016.0], [30.0, 1016.0], [30.1, 1016.0], [30.2, 1016.0], [30.3, 1016.0], [30.4, 1017.0], [30.5, 1017.0], [30.6, 1017.0], [30.7, 1017.0], [30.8, 1017.0], [30.9, 1021.0], [31.0, 1021.0], [31.1, 1021.0], [31.2, 1021.0], [31.3, 1021.0], [31.4, 1021.0], [31.5, 1021.0], [31.6, 1021.0], [31.7, 1021.0], [31.8, 1021.0], [31.9, 1021.0], [32.0, 1022.0], [32.1, 1022.0], [32.2, 1022.0], [32.3, 1022.0], [32.4, 1022.0], [32.5, 1029.0], [32.6, 1029.0], [32.7, 1029.0], [32.8, 1029.0], [32.9, 1029.0], [33.0, 1031.0], [33.1, 1031.0], [33.2, 1031.0], [33.3, 1031.0], [33.4, 1031.0], [33.5, 1031.0], [33.6, 1033.0], [33.7, 1033.0], [33.8, 1033.0], [33.9, 1033.0], [34.0, 1033.0], [34.1, 1034.0], [34.2, 1034.0], [34.3, 1034.0], [34.4, 1034.0], [34.5, 1034.0], [34.6, 1040.0], [34.7, 1040.0], [34.8, 1040.0], [34.9, 1040.0], [35.0, 1040.0], [35.1, 1040.0], [35.2, 1044.0], [35.3, 1044.0], [35.4, 1044.0], [35.5, 1044.0], [35.6, 1044.0], [35.7, 1052.0], [35.8, 1052.0], [35.9, 1052.0], [36.0, 1052.0], [36.1, 1052.0], [36.2, 1053.0], [36.3, 1053.0], [36.4, 1053.0], [36.5, 1053.0], [36.6, 1053.0], [36.7, 1053.0], [36.8, 1056.0], [36.9, 1056.0], [37.0, 1056.0], [37.1, 1056.0], [37.2, 1056.0], [37.3, 1056.0], [37.4, 1056.0], [37.5, 1056.0], [37.6, 1056.0], [37.7, 1056.0], [37.8, 1061.0], [37.9, 1061.0], [38.0, 1061.0], [38.1, 1061.0], [38.2, 1061.0], [38.3, 1062.0], [38.4, 1062.0], [38.5, 1062.0], [38.6, 1062.0], [38.7, 1062.0], [38.8, 1062.0], [38.9, 1065.0], [39.0, 1065.0], [39.1, 1065.0], [39.2, 1065.0], [39.3, 1065.0], [39.4, 1071.0], [39.5, 1071.0], [39.6, 1071.0], [39.7, 1071.0], [39.8, 1071.0], [39.9, 1073.0], [40.0, 1073.0], [40.1, 1073.0], [40.2, 1073.0], [40.3, 1073.0], [40.4, 1073.0], [40.5, 1074.0], [40.6, 1074.0], [40.7, 1074.0], [40.8, 1074.0], [40.9, 1074.0], [41.0, 1075.0], [41.1, 1075.0], [41.2, 1075.0], [41.3, 1075.0], [41.4, 1075.0], [41.5, 1075.0], [41.6, 1075.0], [41.7, 1075.0], [41.8, 1075.0], [41.9, 1075.0], [42.0, 1075.0], [42.1, 1077.0], [42.2, 1077.0], [42.3, 1077.0], [42.4, 1077.0], [42.5, 1077.0], [42.6, 1077.0], [42.7, 1077.0], [42.8, 1077.0], [42.9, 1077.0], [43.0, 1077.0], [43.1, 1081.0], [43.2, 1081.0], [43.3, 1081.0], [43.4, 1081.0], [43.5, 1081.0], [43.6, 1081.0], [43.7, 1088.0], [43.8, 1088.0], [43.9, 1088.0], [44.0, 1088.0], [44.1, 1088.0], [44.2, 1090.0], [44.3, 1090.0], [44.4, 1090.0], [44.5, 1090.0], [44.6, 1090.0], [44.7, 1091.0], [44.8, 1091.0], [44.9, 1091.0], [45.0, 1091.0], [45.1, 1091.0], [45.2, 1091.0], [45.3, 1092.0], [45.4, 1092.0], [45.5, 1092.0], [45.6, 1092.0], [45.7, 1092.0], [45.8, 1095.0], [45.9, 1095.0], [46.0, 1095.0], [46.1, 1095.0], [46.2, 1095.0], [46.3, 1095.0], [46.4, 1095.0], [46.5, 1095.0], [46.6, 1095.0], [46.7, 1095.0], [46.8, 1095.0], [46.9, 1096.0], [47.0, 1096.0], [47.1, 1096.0], [47.2, 1096.0], [47.3, 1096.0], [47.4, 1097.0], [47.5, 1097.0], [47.6, 1097.0], [47.7, 1097.0], [47.8, 1097.0], [47.9, 1102.0], [48.0, 1102.0], [48.1, 1102.0], [48.2, 1102.0], [48.3, 1102.0], [48.4, 1102.0], [48.5, 1106.0], [48.6, 1106.0], [48.7, 1106.0], [48.8, 1106.0], [48.9, 1106.0], [49.0, 1116.0], [49.1, 1116.0], [49.2, 1116.0], [49.3, 1116.0], [49.4, 1116.0], [49.5, 1117.0], [49.6, 1117.0], [49.7, 1117.0], [49.8, 1117.0], [49.9, 1117.0], [50.0, 1118.0], [50.1, 1118.0], [50.2, 1118.0], [50.3, 1118.0], [50.4, 1118.0], [50.5, 1118.0], [50.6, 1138.0], [50.7, 1138.0], [50.8, 1138.0], [50.9, 1138.0], [51.0, 1138.0], [51.1, 1153.0], [51.2, 1153.0], [51.3, 1153.0], [51.4, 1153.0], [51.5, 1153.0], [51.6, 1153.0], [51.7, 1153.0], [51.8, 1153.0], [51.9, 1153.0], [52.0, 1153.0], [52.1, 1153.0], [52.2, 1157.0], [52.3, 1157.0], [52.4, 1157.0], [52.5, 1157.0], [52.6, 1157.0], [52.7, 1160.0], [52.8, 1160.0], [52.9, 1160.0], [53.0, 1160.0], [53.1, 1160.0], [53.2, 1163.0], [53.3, 1163.0], [53.4, 1163.0], [53.5, 1163.0], [53.6, 1163.0], [53.7, 1163.0], [53.8, 1164.0], [53.9, 1164.0], [54.0, 1164.0], [54.1, 1164.0], [54.2, 1164.0], [54.3, 1166.0], [54.4, 1166.0], [54.5, 1166.0], [54.6, 1166.0], [54.7, 1166.0], [54.8, 1168.0], [54.9, 1168.0], [55.0, 1168.0], [55.1, 1168.0], [55.2, 1168.0], [55.3, 1168.0], [55.4, 1169.0], [55.5, 1169.0], [55.6, 1169.0], [55.7, 1169.0], [55.8, 1169.0], [55.9, 1172.0], [56.0, 1172.0], [56.1, 1172.0], [56.2, 1172.0], [56.3, 1172.0], [56.4, 1174.0], [56.5, 1174.0], [56.6, 1174.0], [56.7, 1174.0], [56.8, 1174.0], [56.9, 1174.0], [57.0, 1178.0], [57.1, 1178.0], [57.2, 1178.0], [57.3, 1178.0], [57.4, 1178.0], [57.5, 1182.0], [57.6, 1182.0], [57.7, 1182.0], [57.8, 1182.0], [57.9, 1182.0], [58.0, 1185.0], [58.1, 1185.0], [58.2, 1185.0], [58.3, 1185.0], [58.4, 1185.0], [58.5, 1185.0], [58.6, 1194.0], [58.7, 1194.0], [58.8, 1194.0], [58.9, 1194.0], [59.0, 1194.0], [59.1, 1198.0], [59.2, 1198.0], [59.3, 1198.0], [59.4, 1198.0], [59.5, 1198.0], [59.6, 1199.0], [59.7, 1199.0], [59.8, 1199.0], [59.9, 1199.0], [60.0, 1199.0], [60.1, 1199.0], [60.2, 1199.0], [60.3, 1199.0], [60.4, 1199.0], [60.5, 1199.0], [60.6, 1199.0], [60.7, 1200.0], [60.8, 1200.0], [60.9, 1200.0], [61.0, 1200.0], [61.1, 1200.0], [61.2, 1205.0], [61.3, 1205.0], [61.4, 1205.0], [61.5, 1205.0], [61.6, 1205.0], [61.7, 1205.0], [61.8, 1206.0], [61.9, 1206.0], [62.0, 1206.0], [62.1, 1206.0], [62.2, 1206.0], [62.3, 1206.0], [62.4, 1206.0], [62.5, 1206.0], [62.6, 1206.0], [62.7, 1206.0], [62.8, 1212.0], [62.9, 1212.0], [63.0, 1212.0], [63.1, 1212.0], [63.2, 1212.0], [63.3, 1213.0], [63.4, 1213.0], [63.5, 1213.0], [63.6, 1213.0], [63.7, 1213.0], [63.8, 1213.0], [63.9, 1218.0], [64.0, 1218.0], [64.1, 1218.0], [64.2, 1218.0], [64.3, 1218.0], [64.4, 1219.0], [64.5, 1219.0], [64.6, 1219.0], [64.7, 1219.0], [64.8, 1219.0], [64.9, 1222.0], [65.0, 1222.0], [65.1, 1222.0], [65.2, 1222.0], [65.3, 1222.0], [65.4, 1222.0], [65.5, 1225.0], [65.6, 1225.0], [65.7, 1225.0], [65.8, 1225.0], [65.9, 1225.0], [66.0, 1225.0], [66.1, 1225.0], [66.2, 1225.0], [66.3, 1225.0], [66.4, 1225.0], [66.5, 1230.0], [66.6, 1230.0], [66.7, 1230.0], [66.8, 1230.0], [66.9, 1230.0], [67.0, 1230.0], [67.1, 1231.0], [67.2, 1231.0], [67.3, 1231.0], [67.4, 1231.0], [67.5, 1231.0], [67.6, 1232.0], [67.7, 1232.0], [67.8, 1232.0], [67.9, 1232.0], [68.0, 1232.0], [68.1, 1232.0], [68.2, 1232.0], [68.3, 1232.0], [68.4, 1232.0], [68.5, 1232.0], [68.6, 1232.0], [68.7, 1234.0], [68.8, 1234.0], [68.9, 1234.0], [69.0, 1234.0], [69.1, 1234.0], [69.2, 1235.0], [69.3, 1235.0], [69.4, 1235.0], [69.5, 1235.0], [69.6, 1235.0], [69.7, 1237.0], [69.8, 1237.0], [69.9, 1237.0], [70.0, 1237.0], [70.1, 1237.0], [70.2, 1237.0], [70.3, 1239.0], [70.4, 1239.0], [70.5, 1239.0], [70.6, 1239.0], [70.7, 1239.0], [70.8, 1247.0], [70.9, 1247.0], [71.0, 1247.0], [71.1, 1247.0], [71.2, 1247.0], [71.3, 1254.0], [71.4, 1254.0], [71.5, 1254.0], [71.6, 1254.0], [71.7, 1254.0], [71.8, 1254.0], [71.9, 1255.0], [72.0, 1255.0], [72.1, 1255.0], [72.2, 1255.0], [72.3, 1255.0], [72.4, 1260.0], [72.5, 1260.0], [72.6, 1260.0], [72.7, 1260.0], [72.8, 1260.0], [72.9, 1261.0], [73.0, 1261.0], [73.1, 1261.0], [73.2, 1261.0], [73.3, 1261.0], [73.4, 1261.0], [73.5, 1263.0], [73.6, 1263.0], [73.7, 1263.0], [73.8, 1263.0], [73.9, 1263.0], [74.0, 1267.0], [74.1, 1267.0], [74.2, 1267.0], [74.3, 1267.0], [74.4, 1267.0], [74.5, 1273.0], [74.6, 1273.0], [74.7, 1273.0], [74.8, 1273.0], [74.9, 1273.0], [75.0, 1273.0], [75.1, 1279.0], [75.2, 1279.0], [75.3, 1279.0], [75.4, 1279.0], [75.5, 1279.0], [75.6, 1279.0], [75.7, 1279.0], [75.8, 1279.0], [75.9, 1279.0], [76.0, 1279.0], [76.1, 1280.0], [76.2, 1280.0], [76.3, 1280.0], [76.4, 1280.0], [76.5, 1280.0], [76.6, 1281.0], [76.7, 1281.0], [76.8, 1281.0], [76.9, 1281.0], [77.0, 1281.0], [77.1, 1281.0], [77.2, 1284.0], [77.3, 1284.0], [77.4, 1284.0], [77.5, 1284.0], [77.6, 1284.0], [77.7, 1320.0], [77.8, 1320.0], [77.9, 1320.0], [78.0, 1320.0], [78.1, 1320.0], [78.2, 1324.0], [78.3, 1324.0], [78.4, 1324.0], [78.5, 1324.0], [78.6, 1324.0], [78.7, 1324.0], [78.8, 1328.0], [78.9, 1328.0], [79.0, 1328.0], [79.1, 1328.0], [79.2, 1328.0], [79.3, 1331.0], [79.4, 1331.0], [79.5, 1331.0], [79.6, 1331.0], [79.7, 1331.0], [79.8, 1346.0], [79.9, 1346.0], [80.0, 1346.0], [80.1, 1346.0], [80.2, 1346.0], [80.3, 1346.0], [80.4, 1348.0], [80.5, 1348.0], [80.6, 1348.0], [80.7, 1348.0], [80.8, 1348.0], [80.9, 1355.0], [81.0, 1355.0], [81.1, 1355.0], [81.2, 1355.0], [81.3, 1355.0], [81.4, 1356.0], [81.5, 1356.0], [81.6, 1356.0], [81.7, 1356.0], [81.8, 1356.0], [81.9, 1356.0], [82.0, 1370.0], [82.1, 1370.0], [82.2, 1370.0], [82.3, 1370.0], [82.4, 1370.0], [82.5, 1370.0], [82.6, 1370.0], [82.7, 1370.0], [82.8, 1370.0], [82.9, 1370.0], [83.0, 1377.0], [83.1, 1377.0], [83.2, 1377.0], [83.3, 1377.0], [83.4, 1377.0], [83.5, 1377.0], [83.6, 1380.0], [83.7, 1380.0], [83.8, 1380.0], [83.9, 1380.0], [84.0, 1380.0], [84.1, 1403.0], [84.2, 1403.0], [84.3, 1403.0], [84.4, 1403.0], [84.5, 1403.0], [84.6, 1413.0], [84.7, 1413.0], [84.8, 1413.0], [84.9, 1413.0], [85.0, 1413.0], [85.1, 1413.0], [85.2, 1426.0], [85.3, 1426.0], [85.4, 1426.0], [85.5, 1426.0], [85.6, 1426.0], [85.7, 1435.0], [85.8, 1435.0], [85.9, 1435.0], [86.0, 1435.0], [86.1, 1435.0], [86.2, 1450.0], [86.3, 1450.0], [86.4, 1450.0], [86.5, 1450.0], [86.6, 1450.0], [86.7, 1450.0], [86.8, 1459.0], [86.9, 1459.0], [87.0, 1459.0], [87.1, 1459.0], [87.2, 1459.0], [87.3, 1488.0], [87.4, 1488.0], [87.5, 1488.0], [87.6, 1488.0], [87.7, 1488.0], [87.8, 1491.0], [87.9, 1491.0], [88.0, 1491.0], [88.1, 1491.0], [88.2, 1491.0], [88.3, 1493.0], [88.4, 1493.0], [88.5, 1493.0], [88.6, 1493.0], [88.7, 1493.0], [88.8, 1493.0], [88.9, 1495.0], [89.0, 1495.0], [89.1, 1495.0], [89.2, 1495.0], [89.3, 1495.0], [89.4, 1505.0], [89.5, 1505.0], [89.6, 1505.0], [89.7, 1505.0], [89.8, 1505.0], [89.9, 1505.0], [90.0, 1505.0], [90.1, 1505.0], [90.2, 1505.0], [90.3, 1505.0], [90.4, 1505.0], [90.5, 1526.0], [90.6, 1526.0], [90.7, 1526.0], [90.8, 1526.0], [90.9, 1526.0], [91.0, 1536.0], [91.1, 1536.0], [91.2, 1536.0], [91.3, 1536.0], [91.4, 1536.0], [91.5, 1550.0], [91.6, 1550.0], [91.7, 1550.0], [91.8, 1550.0], [91.9, 1550.0], [92.0, 1550.0], [92.1, 1578.0], [92.2, 1578.0], [92.3, 1578.0], [92.4, 1578.0], [92.5, 1578.0], [92.6, 1629.0], [92.7, 1629.0], [92.8, 1629.0], [92.9, 1629.0], [93.0, 1629.0], [93.1, 1644.0], [93.2, 1644.0], [93.3, 1644.0], [93.4, 1644.0], [93.5, 1644.0], [93.6, 1644.0], [93.7, 1693.0], [93.8, 1693.0], [93.9, 1693.0], [94.0, 1693.0], [94.1, 1693.0], [94.2, 1706.0], [94.3, 1706.0], [94.4, 1706.0], [94.5, 1706.0], [94.6, 1706.0], [94.7, 1713.0], [94.8, 1713.0], [94.9, 1713.0], [95.0, 1713.0], [95.1, 1713.0], [95.2, 1713.0], [95.3, 1750.0], [95.4, 1750.0], [95.5, 1750.0], [95.6, 1750.0], [95.7, 1750.0], [95.8, 1835.0], [95.9, 1835.0], [96.0, 1835.0], [96.1, 1835.0], [96.2, 1835.0], [96.3, 1889.0], [96.4, 1889.0], [96.5, 1889.0], [96.6, 1889.0], [96.7, 1889.0], [96.8, 1889.0], [96.9, 1933.0], [97.0, 1933.0], [97.1, 1933.0], [97.2, 1933.0], [97.3, 1933.0], [97.4, 1983.0], [97.5, 1983.0], [97.6, 1983.0], [97.7, 1983.0], [97.8, 1983.0], [97.9, 2089.0], [98.0, 2089.0], [98.1, 2089.0], [98.2, 2089.0], [98.3, 2089.0], [98.4, 2089.0], [98.5, 2305.0], [98.6, 2305.0], [98.7, 2305.0], [98.8, 2305.0], [98.9, 2305.0], [99.0, 23906.0], [99.1, 23906.0], [99.2, 23906.0], [99.3, 23906.0], [99.4, 23906.0], [99.5, 26271.0], [99.6, 26271.0], [99.7, 26271.0], [99.8, 26271.0], [99.9, 26271.0], [100.0, 26271.0]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[0.0, 361.0], [0.1, 361.0], [0.2, 361.0], [0.3, 361.0], [0.4, 361.0], [0.5, 361.0], [0.6, 401.0], [0.7, 401.0], [0.8, 411.0], [0.9, 411.0], [1.0, 411.0], [1.1, 413.0], [1.2, 413.0], [1.3, 413.0], [1.4, 414.0], [1.5, 414.0], [1.6, 414.0], [1.7, 414.0], [1.8, 414.0], [1.9, 415.0], [2.0, 415.0], [2.1, 415.0], [2.2, 415.0], [2.3, 415.0], [2.4, 416.0], [2.5, 416.0], [2.6, 416.0], [2.7, 422.0], [2.8, 422.0], [2.9, 422.0], [3.0, 423.0], [3.1, 423.0], [3.2, 424.0], [3.3, 424.0], [3.4, 424.0], [3.5, 426.0], [3.6, 426.0], [3.7, 426.0], [3.8, 427.0], [3.9, 427.0], [4.0, 427.0], [4.1, 427.0], [4.2, 427.0], [4.3, 429.0], [4.4, 429.0], [4.5, 429.0], [4.6, 431.0], [4.7, 431.0], [4.8, 433.0], [4.9, 433.0], [5.0, 433.0], [5.1, 435.0], [5.2, 435.0], [5.3, 435.0], [5.4, 435.0], [5.5, 435.0], [5.6, 436.0], [5.7, 436.0], [5.8, 436.0], [5.9, 444.0], [6.0, 444.0], [6.1, 444.0], [6.2, 444.0], [6.3, 444.0], [6.4, 446.0], [6.5, 446.0], [6.6, 446.0], [6.7, 447.0], [6.8, 447.0], [6.9, 448.0], [7.0, 448.0], [7.1, 448.0], [7.2, 448.0], [7.3, 448.0], [7.4, 448.0], [7.5, 452.0], [7.6, 452.0], [7.7, 452.0], [7.8, 452.0], [7.9, 452.0], [8.0, 453.0], [8.1, 453.0], [8.2, 453.0], [8.3, 456.0], [8.4, 456.0], [8.5, 457.0], [8.6, 457.0], [8.7, 457.0], [8.8, 457.0], [8.9, 457.0], [9.0, 457.0], [9.1, 457.0], [9.2, 457.0], [9.3, 458.0], [9.4, 458.0], [9.5, 458.0], [9.6, 461.0], [9.7, 461.0], [9.8, 461.0], [9.9, 461.0], [10.0, 461.0], [10.1, 462.0], [10.2, 462.0], [10.3, 462.0], [10.4, 462.0], [10.5, 462.0], [10.6, 462.0], [10.7, 462.0], [10.8, 462.0], [10.9, 462.0], [11.0, 462.0], [11.1, 462.0], [11.2, 462.0], [11.3, 462.0], [11.4, 462.0], [11.5, 463.0], [11.6, 463.0], [11.7, 464.0], [11.8, 464.0], [11.9, 464.0], [12.0, 464.0], [12.1, 464.0], [12.2, 464.0], [12.3, 465.0], [12.4, 465.0], [12.5, 466.0], [12.6, 466.0], [12.7, 466.0], [12.8, 466.0], [12.9, 466.0], [13.0, 467.0], [13.1, 467.0], [13.2, 467.0], [13.3, 468.0], [13.4, 468.0], [13.5, 468.0], [13.6, 468.0], [13.7, 468.0], [13.8, 469.0], [13.9, 469.0], [14.0, 469.0], [14.1, 470.0], [14.2, 470.0], [14.3, 470.0], [14.4, 470.0], [14.5, 470.0], [14.6, 473.0], [14.7, 473.0], [14.8, 473.0], [14.9, 474.0], [15.0, 474.0], [15.1, 474.0], [15.2, 474.0], [15.3, 474.0], [15.4, 474.0], [15.5, 474.0], [15.6, 474.0], [15.7, 475.0], [15.8, 475.0], [15.9, 475.0], [16.0, 475.0], [16.1, 475.0], [16.2, 476.0], [16.3, 476.0], [16.4, 476.0], [16.5, 478.0], [16.6, 478.0], [16.7, 478.0], [16.8, 478.0], [16.9, 478.0], [17.0, 478.0], [17.1, 478.0], [17.2, 478.0], [17.3, 478.0], [17.4, 478.0], [17.5, 478.0], [17.6, 479.0], [17.7, 479.0], [17.8, 481.0], [17.9, 481.0], [18.0, 481.0], [18.1, 481.0], [18.2, 481.0], [18.3, 481.0], [18.4, 482.0], [18.5, 482.0], [18.6, 482.0], [18.7, 482.0], [18.8, 482.0], [18.9, 483.0], [19.0, 483.0], [19.1, 483.0], [19.2, 483.0], [19.3, 483.0], [19.4, 484.0], [19.5, 484.0], [19.6, 484.0], [19.7, 485.0], [19.8, 485.0], [19.9, 485.0], [20.0, 485.0], [20.1, 485.0], [20.2, 486.0], [20.3, 486.0], [20.4, 486.0], [20.5, 486.0], [20.6, 486.0], [20.7, 487.0], [20.8, 487.0], [20.9, 487.0], [21.0, 487.0], [21.1, 487.0], [21.2, 487.0], [21.3, 488.0], [21.4, 488.0], [21.5, 488.0], [21.6, 488.0], [21.7, 488.0], [21.8, 488.0], [21.9, 488.0], [22.0, 488.0], [22.1, 490.0], [22.2, 490.0], [22.3, 490.0], [22.4, 490.0], [22.5, 490.0], [22.6, 490.0], [22.7, 490.0], [22.8, 490.0], [22.9, 491.0], [23.0, 491.0], [23.1, 491.0], [23.2, 491.0], [23.3, 491.0], [23.4, 492.0], [23.5, 492.0], [23.6, 492.0], [23.7, 493.0], [23.8, 493.0], [23.9, 493.0], [24.0, 493.0], [24.1, 493.0], [24.2, 493.0], [24.3, 493.0], [24.4, 493.0], [24.5, 495.0], [24.6, 495.0], [24.7, 495.0], [24.8, 495.0], [24.9, 495.0], [25.0, 496.0], [25.1, 496.0], [25.2, 496.0], [25.3, 496.0], [25.4, 496.0], [25.5, 497.0], [25.6, 497.0], [25.7, 497.0], [25.8, 499.0], [25.9, 499.0], [26.0, 499.0], [26.1, 499.0], [26.2, 499.0], [26.3, 499.0], [26.4, 499.0], [26.5, 499.0], [26.6, 499.0], [26.7, 499.0], [26.8, 500.0], [26.9, 500.0], [27.0, 500.0], [27.1, 501.0], [27.2, 501.0], [27.3, 501.0], [27.4, 502.0], [27.5, 502.0], [27.6, 502.0], [27.7, 502.0], [27.8, 502.0], [27.9, 503.0], [28.0, 503.0], [28.1, 503.0], [28.2, 503.0], [28.3, 503.0], [28.4, 504.0], [28.5, 504.0], [28.6, 504.0], [28.7, 505.0], [28.8, 505.0], [28.9, 505.0], [29.0, 505.0], [29.1, 505.0], [29.2, 506.0], [29.3, 506.0], [29.4, 506.0], [29.5, 507.0], [29.6, 507.0], [29.7, 507.0], [29.8, 507.0], [29.9, 507.0], [30.0, 507.0], [30.1, 507.0], [30.2, 507.0], [30.3, 509.0], [30.4, 509.0], [30.5, 509.0], [30.6, 509.0], [30.7, 509.0], [30.8, 509.0], [30.9, 509.0], [31.0, 509.0], [31.1, 510.0], [31.2, 510.0], [31.3, 510.0], [31.4, 510.0], [31.5, 510.0], [31.6, 510.0], [31.7, 510.0], [31.8, 510.0], [31.9, 510.0], [32.0, 510.0], [32.1, 510.0], [32.2, 510.0], [32.3, 510.0], [32.4, 511.0], [32.5, 511.0], [32.6, 511.0], [32.7, 512.0], [32.8, 512.0], [32.9, 512.0], [33.0, 512.0], [33.1, 512.0], [33.2, 512.0], [33.3, 512.0], [33.4, 512.0], [33.5, 512.0], [33.6, 512.0], [33.7, 513.0], [33.8, 513.0], [33.9, 513.0], [34.0, 514.0], [34.1, 514.0], [34.2, 514.0], [34.3, 515.0], [34.4, 515.0], [34.5, 515.0], [34.6, 515.0], [34.7, 515.0], [34.8, 515.0], [34.9, 515.0], [35.0, 515.0], [35.1, 516.0], [35.2, 516.0], [35.3, 519.0], [35.4, 519.0], [35.5, 519.0], [35.6, 520.0], [35.7, 520.0], [35.8, 520.0], [35.9, 520.0], [36.0, 520.0], [36.1, 522.0], [36.2, 522.0], [36.3, 522.0], [36.4, 522.0], [36.5, 522.0], [36.6, 522.0], [36.7, 523.0], [36.8, 523.0], [36.9, 523.0], [37.0, 523.0], [37.1, 523.0], [37.2, 524.0], [37.3, 524.0], [37.4, 524.0], [37.5, 524.0], [37.6, 524.0], [37.7, 524.0], [37.8, 524.0], [37.9, 524.0], [38.0, 525.0], [38.1, 525.0], [38.2, 525.0], [38.3, 525.0], [38.4, 525.0], [38.5, 525.0], [38.6, 525.0], [38.7, 525.0], [38.8, 526.0], [38.9, 526.0], [39.0, 527.0], [39.1, 527.0], [39.2, 527.0], [39.3, 527.0], [39.4, 527.0], [39.5, 527.0], [39.6, 527.0], [39.7, 527.0], [39.8, 528.0], [39.9, 528.0], [40.0, 528.0], [40.1, 529.0], [40.2, 529.0], [40.3, 529.0], [40.4, 530.0], [40.5, 530.0], [40.6, 531.0], [40.7, 531.0], [40.8, 531.0], [40.9, 532.0], [41.0, 532.0], [41.1, 532.0], [41.2, 533.0], [41.3, 533.0], [41.4, 533.0], [41.5, 533.0], [41.6, 533.0], [41.7, 534.0], [41.8, 534.0], [41.9, 534.0], [42.0, 534.0], [42.1, 534.0], [42.2, 535.0], [42.3, 535.0], [42.4, 535.0], [42.5, 535.0], [42.6, 535.0], [42.7, 535.0], [42.8, 535.0], [42.9, 535.0], [43.0, 538.0], [43.1, 538.0], [43.2, 538.0], [43.3, 538.0], [43.4, 538.0], [43.5, 538.0], [43.6, 538.0], [43.7, 538.0], [43.8, 538.0], [43.9, 538.0], [44.0, 538.0], [44.1, 538.0], [44.2, 538.0], [44.3, 539.0], [44.4, 539.0], [44.5, 539.0], [44.6, 539.0], [44.7, 539.0], [44.8, 539.0], [44.9, 540.0], [45.0, 540.0], [45.1, 540.0], [45.2, 540.0], [45.3, 540.0], [45.4, 541.0], [45.5, 541.0], [45.6, 541.0], [45.7, 542.0], [45.8, 542.0], [45.9, 542.0], [46.0, 542.0], [46.1, 542.0], [46.2, 542.0], [46.3, 542.0], [46.4, 542.0], [46.5, 544.0], [46.6, 544.0], [46.7, 546.0], [46.8, 546.0], [46.9, 546.0], [47.0, 546.0], [47.1, 546.0], [47.2, 546.0], [47.3, 547.0], [47.4, 547.0], [47.5, 547.0], [47.6, 547.0], [47.7, 547.0], [47.8, 547.0], [47.9, 547.0], [48.0, 547.0], [48.1, 550.0], [48.2, 550.0], [48.3, 551.0], [48.4, 551.0], [48.5, 551.0], [48.6, 551.0], [48.7, 551.0], [48.8, 551.0], [48.9, 552.0], [49.0, 552.0], [49.1, 552.0], [49.2, 552.0], [49.3, 552.0], [49.4, 552.0], [49.5, 552.0], [49.6, 552.0], [49.7, 552.0], [49.8, 552.0], [49.9, 556.0], [50.0, 556.0], [50.1, 556.0], [50.2, 556.0], [50.3, 556.0], [50.4, 557.0], [50.5, 557.0], [50.6, 557.0], [50.7, 558.0], [50.8, 558.0], [50.9, 558.0], [51.0, 558.0], [51.1, 558.0], [51.2, 558.0], [51.3, 558.0], [51.4, 558.0], [51.5, 559.0], [51.6, 559.0], [51.7, 559.0], [51.8, 560.0], [51.9, 560.0], [52.0, 562.0], [52.1, 562.0], [52.2, 562.0], [52.3, 562.0], [52.4, 562.0], [52.5, 562.0], [52.6, 563.0], [52.7, 563.0], [52.8, 563.0], [52.9, 563.0], [53.0, 563.0], [53.1, 563.0], [53.2, 563.0], [53.3, 563.0], [53.4, 563.0], [53.5, 563.0], [53.6, 563.0], [53.7, 563.0], [53.8, 563.0], [53.9, 565.0], [54.0, 565.0], [54.1, 565.0], [54.2, 565.0], [54.3, 565.0], [54.4, 566.0], [54.5, 566.0], [54.6, 566.0], [54.7, 567.0], [54.8, 567.0], [54.9, 567.0], [55.0, 568.0], [55.1, 568.0], [55.2, 568.0], [55.3, 568.0], [55.4, 568.0], [55.5, 568.0], [55.6, 568.0], [55.7, 568.0], [55.8, 569.0], [55.9, 569.0], [56.0, 569.0], [56.1, 569.0], [56.2, 569.0], [56.3, 570.0], [56.4, 570.0], [56.5, 570.0], [56.6, 570.0], [56.7, 570.0], [56.8, 570.0], [56.9, 570.0], [57.0, 570.0], [57.1, 571.0], [57.2, 571.0], [57.3, 571.0], [57.4, 571.0], [57.5, 571.0], [57.6, 573.0], [57.7, 573.0], [57.8, 573.0], [57.9, 576.0], [58.0, 576.0], [58.1, 576.0], [58.2, 576.0], [58.3, 576.0], [58.4, 576.0], [58.5, 576.0], [58.6, 576.0], [58.7, 577.0], [58.8, 577.0], [58.9, 577.0], [59.0, 577.0], [59.1, 577.0], [59.2, 578.0], [59.3, 578.0], [59.4, 578.0], [59.5, 579.0], [59.6, 579.0], [59.7, 580.0], [59.8, 580.0], [59.9, 580.0], [60.0, 580.0], [60.1, 580.0], [60.2, 580.0], [60.3, 580.0], [60.4, 580.0], [60.5, 581.0], [60.6, 581.0], [60.7, 581.0], [60.8, 582.0], [60.9, 582.0], [61.0, 582.0], [61.1, 584.0], [61.2, 584.0], [61.3, 585.0], [61.4, 585.0], [61.5, 585.0], [61.6, 586.0], [61.7, 586.0], [61.8, 586.0], [61.9, 587.0], [62.0, 587.0], [62.1, 590.0], [62.2, 590.0], [62.3, 590.0], [62.4, 592.0], [62.5, 592.0], [62.6, 593.0], [62.7, 593.0], [62.8, 593.0], [62.9, 593.0], [63.0, 593.0], [63.1, 593.0], [63.2, 596.0], [63.3, 596.0], [63.4, 597.0], [63.5, 597.0], [63.6, 597.0], [63.7, 597.0], [63.8, 597.0], [63.9, 597.0], [64.0, 598.0], [64.1, 598.0], [64.2, 599.0], [64.3, 599.0], [64.4, 599.0], [64.5, 599.0], [64.6, 599.0], [64.7, 599.0], [64.8, 600.0], [64.9, 600.0], [65.0, 600.0], [65.1, 600.0], [65.2, 600.0], [65.3, 602.0], [65.4, 602.0], [65.5, 602.0], [65.6, 604.0], [65.7, 604.0], [65.8, 604.0], [65.9, 604.0], [66.0, 604.0], [66.1, 605.0], [66.2, 605.0], [66.3, 605.0], [66.4, 605.0], [66.5, 605.0], [66.6, 605.0], [66.7, 605.0], [66.8, 605.0], [66.9, 607.0], [67.0, 607.0], [67.1, 607.0], [67.2, 607.0], [67.3, 607.0], [67.4, 608.0], [67.5, 608.0], [67.6, 608.0], [67.7, 612.0], [67.8, 612.0], [67.9, 612.0], [68.0, 614.0], [68.1, 614.0], [68.2, 615.0], [68.3, 615.0], [68.4, 615.0], [68.5, 618.0], [68.6, 618.0], [68.7, 618.0], [68.8, 620.0], [68.9, 620.0], [69.0, 622.0], [69.1, 622.0], [69.2, 622.0], [69.3, 623.0], [69.4, 623.0], [69.5, 625.0], [69.6, 625.0], [69.7, 625.0], [69.8, 633.0], [69.9, 633.0], [70.0, 633.0], [70.1, 634.0], [70.2, 634.0], [70.3, 634.0], [70.4, 634.0], [70.5, 634.0], [70.6, 641.0], [70.7, 641.0], [70.8, 641.0], [70.9, 642.0], [71.0, 642.0], [71.1, 643.0], [71.2, 643.0], [71.3, 643.0], [71.4, 644.0], [71.5, 644.0], [71.6, 644.0], [71.7, 645.0], [71.8, 645.0], [71.9, 647.0], [72.0, 647.0], [72.1, 647.0], [72.2, 649.0], [72.3, 649.0], [72.4, 649.0], [72.5, 649.0], [72.6, 649.0], [72.7, 651.0], [72.8, 651.0], [72.9, 651.0], [73.0, 656.0], [73.1, 656.0], [73.2, 656.0], [73.3, 658.0], [73.4, 658.0], [73.5, 659.0], [73.6, 659.0], [73.7, 659.0], [73.8, 660.0], [73.9, 660.0], [74.0, 660.0], [74.1, 660.0], [74.2, 660.0], [74.3, 663.0], [74.4, 663.0], [74.5, 663.0], [74.6, 666.0], [74.7, 666.0], [74.8, 666.0], [74.9, 671.0], [75.0, 671.0], [75.1, 673.0], [75.2, 673.0], [75.3, 673.0], [75.4, 674.0], [75.5, 674.0], [75.6, 678.0], [75.7, 678.0], [75.8, 678.0], [75.9, 678.0], [76.0, 678.0], [76.1, 678.0], [76.2, 686.0], [76.3, 686.0], [76.4, 687.0], [76.5, 687.0], [76.6, 687.0], [76.7, 688.0], [76.8, 688.0], [76.9, 688.0], [77.0, 689.0], [77.1, 689.0], [77.2, 691.0], [77.3, 691.0], [77.4, 691.0], [77.5, 691.0], [77.6, 691.0], [77.7, 691.0], [77.8, 691.0], [77.9, 691.0], [78.0, 691.0], [78.1, 691.0], [78.2, 691.0], [78.3, 691.0], [78.4, 691.0], [78.5, 691.0], [78.6, 703.0], [78.7, 703.0], [78.8, 703.0], [78.9, 703.0], [79.0, 703.0], [79.1, 705.0], [79.2, 705.0], [79.3, 705.0], [79.4, 707.0], [79.5, 707.0], [79.6, 707.0], [79.7, 707.0], [79.8, 707.0], [79.9, 709.0], [80.0, 709.0], [80.1, 709.0], [80.2, 709.0], [80.3, 709.0], [80.4, 711.0], [80.5, 711.0], [80.6, 711.0], [80.7, 712.0], [80.8, 712.0], [80.9, 712.0], [81.0, 714.0], [81.1, 714.0], [81.2, 717.0], [81.3, 717.0], [81.4, 717.0], [81.5, 718.0], [81.6, 718.0], [81.7, 719.0], [81.8, 719.0], [81.9, 719.0], [82.0, 723.0], [82.1, 723.0], [82.2, 723.0], [82.3, 724.0], [82.4, 724.0], [82.5, 728.0], [82.6, 728.0], [82.7, 728.0], [82.8, 729.0], [82.9, 729.0], [83.0, 729.0], [83.1, 730.0], [83.2, 730.0], [83.3, 730.0], [83.4, 730.0], [83.5, 730.0], [83.6, 733.0], [83.7, 733.0], [83.8, 733.0], [83.9, 734.0], [84.0, 734.0], [84.1, 737.0], [84.2, 737.0], [84.3, 737.0], [84.4, 747.0], [84.5, 747.0], [84.6, 747.0], [84.7, 754.0], [84.8, 754.0], [84.9, 760.0], [85.0, 760.0], [85.1, 760.0], [85.2, 764.0], [85.3, 764.0], [85.4, 764.0], [85.5, 771.0], [85.6, 771.0], [85.7, 783.0], [85.8, 783.0], [85.9, 783.0], [86.0, 792.0], [86.1, 792.0], [86.2, 792.0], [86.3, 792.0], [86.4, 792.0], [86.5, 793.0], [86.6, 793.0], [86.7, 793.0], [86.8, 797.0], [86.9, 797.0], [87.0, 797.0], [87.1, 797.0], [87.2, 797.0], [87.3, 801.0], [87.4, 801.0], [87.5, 801.0], [87.6, 801.0], [87.7, 801.0], [87.8, 804.0], [87.9, 804.0], [88.0, 804.0], [88.1, 808.0], [88.2, 808.0], [88.3, 808.0], [88.4, 808.0], [88.5, 808.0], [88.6, 809.0], [88.7, 809.0], [88.8, 809.0], [88.9, 814.0], [89.0, 814.0], [89.1, 814.0], [89.2, 816.0], [89.3, 816.0], [89.4, 818.0], [89.5, 818.0], [89.6, 818.0], [89.7, 819.0], [89.8, 819.0], [89.9, 819.0], [90.0, 832.0], [90.1, 832.0], [90.2, 833.0], [90.3, 833.0], [90.4, 833.0], [90.5, 834.0], [90.6, 834.0], [90.7, 834.0], [90.8, 843.0], [90.9, 843.0], [91.0, 843.0], [91.1, 843.0], [91.2, 843.0], [91.3, 849.0], [91.4, 849.0], [91.5, 849.0], [91.6, 851.0], [91.7, 851.0], [91.8, 854.0], [91.9, 854.0], [92.0, 854.0], [92.1, 854.0], [92.2, 854.0], [92.3, 854.0], [92.4, 870.0], [92.5, 870.0], [92.6, 872.0], [92.7, 872.0], [92.8, 872.0], [92.9, 873.0], [93.0, 873.0], [93.1, 873.0], [93.2, 881.0], [93.3, 881.0], [93.4, 888.0], [93.5, 888.0], [93.6, 888.0], [93.7, 893.0], [93.8, 893.0], [93.9, 894.0], [94.0, 894.0], [94.1, 894.0], [94.2, 904.0], [94.3, 904.0], [94.4, 904.0], [94.5, 919.0], [94.6, 919.0], [94.7, 939.0], [94.8, 939.0], [94.9, 939.0], [95.0, 949.0], [95.1, 949.0], [95.2, 949.0], [95.3, 960.0], [95.4, 960.0], [95.5, 977.0], [95.6, 977.0], [95.7, 977.0], [95.8, 985.0], [95.9, 985.0], [96.0, 985.0], [96.1, 989.0], [96.2, 989.0], [96.3, 1048.0], [96.4, 1048.0], [96.5, 1048.0], [96.6, 1060.0], [96.7, 1060.0], [96.8, 1060.0], [96.9, 1101.0], [97.0, 1101.0], [97.1, 1133.0], [97.2, 1133.0], [97.3, 1133.0], [97.4, 1136.0], [97.5, 1136.0], [97.6, 1136.0], [97.7, 1145.0], [97.8, 1145.0], [97.9, 1208.0], [98.0, 1208.0], [98.1, 1208.0], [98.2, 1219.0], [98.3, 1219.0], [98.4, 1219.0], [98.5, 1318.0], [98.6, 1318.0], [98.7, 1368.0], [98.8, 1368.0], [98.9, 1368.0], [99.0, 1461.0], [99.1, 1461.0], [99.2, 1461.0], [99.3, 1568.0], [99.4, 1568.0], [99.5, 2196.0], [99.6, 2196.0], [99.7, 2196.0], [99.8, 2479.0], [99.9, 2479.0], [100.0, 2479.0]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[0.0, 307.0], [0.1, 308.0], [0.2, 309.0], [0.3, 310.0], [0.4, 311.0], [0.5, 311.0], [0.6, 311.0], [0.7, 312.0], [0.8, 313.0], [0.9, 314.0], [1.0, 314.0], [1.1, 314.0], [1.2, 314.0], [1.3, 314.0], [1.4, 314.0], [1.5, 314.0], [1.6, 315.0], [1.7, 315.0], [1.8, 315.0], [1.9, 315.0], [2.0, 315.0], [2.1, 315.0], [2.2, 315.0], [2.3, 316.0], [2.4, 316.0], [2.5, 316.0], [2.6, 316.0], [2.7, 316.0], [2.8, 316.0], [2.9, 316.0], [3.0, 316.0], [3.1, 316.0], [3.2, 316.0], [3.3, 317.0], [3.4, 317.0], [3.5, 317.0], [3.6, 317.0], [3.7, 318.0], [3.8, 318.0], [3.9, 318.0], [4.0, 318.0], [4.1, 319.0], [4.2, 319.0], [4.3, 319.0], [4.4, 319.0], [4.5, 319.0], [4.6, 319.0], [4.7, 319.0], [4.8, 319.0], [4.9, 319.0], [5.0, 320.0], [5.1, 320.0], [5.2, 320.0], [5.3, 320.0], [5.4, 321.0], [5.5, 321.0], [5.6, 321.0], [5.7, 321.0], [5.8, 321.0], [5.9, 321.0], [6.0, 321.0], [6.1, 321.0], [6.2, 321.0], [6.3, 321.0], [6.4, 321.0], [6.5, 321.0], [6.6, 321.0], [6.7, 322.0], [6.8, 322.0], [6.9, 322.0], [7.0, 322.0], [7.1, 322.0], [7.2, 322.0], [7.3, 322.0], [7.4, 322.0], [7.5, 322.0], [7.6, 322.0], [7.7, 323.0], [7.8, 323.0], [7.9, 323.0], [8.0, 323.0], [8.1, 324.0], [8.2, 324.0], [8.3, 324.0], [8.4, 324.0], [8.5, 324.0], [8.6, 325.0], [8.7, 325.0], [8.8, 325.0], [8.9, 325.0], [9.0, 325.0], [9.1, 326.0], [9.2, 326.0], [9.3, 326.0], [9.4, 326.0], [9.5, 326.0], [9.6, 326.0], [9.7, 327.0], [9.8, 327.0], [9.9, 327.0], [10.0, 328.0], [10.1, 328.0], [10.2, 328.0], [10.3, 328.0], [10.4, 328.0], [10.5, 329.0], [10.6, 329.0], [10.7, 329.0], [10.8, 329.0], [10.9, 329.0], [11.0, 329.0], [11.1, 329.0], [11.2, 329.0], [11.3, 330.0], [11.4, 330.0], [11.5, 330.0], [11.6, 330.0], [11.7, 331.0], [11.8, 331.0], [11.9, 331.0], [12.0, 331.0], [12.1, 331.0], [12.2, 331.0], [12.3, 332.0], [12.4, 332.0], [12.5, 332.0], [12.6, 332.0], [12.7, 332.0], [12.8, 333.0], [12.9, 333.0], [13.0, 333.0], [13.1, 333.0], [13.2, 333.0], [13.3, 334.0], [13.4, 334.0], [13.5, 334.0], [13.6, 334.0], [13.7, 334.0], [13.8, 335.0], [13.9, 335.0], [14.0, 335.0], [14.1, 335.0], [14.2, 335.0], [14.3, 335.0], [14.4, 336.0], [14.5, 336.0], [14.6, 336.0], [14.7, 336.0], [14.8, 336.0], [14.9, 336.0], [15.0, 336.0], [15.1, 336.0], [15.2, 337.0], [15.3, 338.0], [15.4, 338.0], [15.5, 339.0], [15.6, 340.0], [15.7, 340.0], [15.8, 340.0], [15.9, 340.0], [16.0, 341.0], [16.1, 342.0], [16.2, 342.0], [16.3, 342.0], [16.4, 342.0], [16.5, 343.0], [16.6, 343.0], [16.7, 343.0], [16.8, 344.0], [16.9, 346.0], [17.0, 347.0], [17.1, 348.0], [17.2, 348.0], [17.3, 348.0], [17.4, 350.0], [17.5, 351.0], [17.6, 353.0], [17.7, 354.0], [17.8, 356.0], [17.9, 356.0], [18.0, 356.0], [18.1, 356.0], [18.2, 357.0], [18.3, 357.0], [18.4, 357.0], [18.5, 357.0], [18.6, 358.0], [18.7, 358.0], [18.8, 358.0], [18.9, 358.0], [19.0, 358.0], [19.1, 358.0], [19.2, 358.0], [19.3, 359.0], [19.4, 359.0], [19.5, 359.0], [19.6, 359.0], [19.7, 360.0], [19.8, 360.0], [19.9, 360.0], [20.0, 360.0], [20.1, 360.0], [20.2, 360.0], [20.3, 361.0], [20.4, 361.0], [20.5, 361.0], [20.6, 361.0], [20.7, 361.0], [20.8, 362.0], [20.9, 362.0], [21.0, 362.0], [21.1, 362.0], [21.2, 362.0], [21.3, 362.0], [21.4, 362.0], [21.5, 363.0], [21.6, 363.0], [21.7, 363.0], [21.8, 363.0], [21.9, 363.0], [22.0, 363.0], [22.1, 363.0], [22.2, 364.0], [22.3, 364.0], [22.4, 364.0], [22.5, 364.0], [22.6, 364.0], [22.7, 364.0], [22.8, 364.0], [22.9, 364.0], [23.0, 365.0], [23.1, 365.0], [23.2, 365.0], [23.3, 365.0], [23.4, 365.0], [23.5, 365.0], [23.6, 365.0], [23.7, 366.0], [23.8, 366.0], [23.9, 366.0], [24.0, 366.0], [24.1, 366.0], [24.2, 366.0], [24.3, 366.0], [24.4, 366.0], [24.5, 366.0], [24.6, 366.0], [24.7, 367.0], [24.8, 367.0], [24.9, 367.0], [25.0, 367.0], [25.1, 367.0], [25.2, 367.0], [25.3, 367.0], [25.4, 367.0], [25.5, 367.0], [25.6, 367.0], [25.7, 367.0], [25.8, 367.0], [25.9, 367.0], [26.0, 367.0], [26.1, 368.0], [26.2, 368.0], [26.3, 368.0], [26.4, 368.0], [26.5, 368.0], [26.6, 368.0], [26.7, 368.0], [26.8, 368.0], [26.9, 368.0], [27.0, 368.0], [27.1, 368.0], [27.2, 368.0], [27.3, 368.0], [27.4, 368.0], [27.5, 368.0], [27.6, 368.0], [27.7, 368.0], [27.8, 368.0], [27.9, 368.0], [28.0, 369.0], [28.1, 369.0], [28.2, 369.0], [28.3, 369.0], [28.4, 369.0], [28.5, 369.0], [28.6, 369.0], [28.7, 369.0], [28.8, 369.0], [28.9, 369.0], [29.0, 369.0], [29.1, 369.0], [29.2, 369.0], [29.3, 369.0], [29.4, 369.0], [29.5, 369.0], [29.6, 369.0], [29.7, 369.0], [29.8, 369.0], [29.9, 370.0], [30.0, 370.0], [30.1, 370.0], [30.2, 370.0], [30.3, 370.0], [30.4, 370.0], [30.5, 370.0], [30.6, 370.0], [30.7, 370.0], [30.8, 370.0], [30.9, 370.0], [31.0, 371.0], [31.1, 371.0], [31.2, 371.0], [31.3, 371.0], [31.4, 371.0], [31.5, 371.0], [31.6, 371.0], [31.7, 371.0], [31.8, 371.0], [31.9, 371.0], [32.0, 371.0], [32.1, 371.0], [32.2, 371.0], [32.3, 371.0], [32.4, 371.0], [32.5, 371.0], [32.6, 371.0], [32.7, 371.0], [32.8, 371.0], [32.9, 371.0], [33.0, 371.0], [33.1, 371.0], [33.2, 371.0], [33.3, 372.0], [33.4, 372.0], [33.5, 372.0], [33.6, 372.0], [33.7, 372.0], [33.8, 372.0], [33.9, 372.0], [34.0, 372.0], [34.1, 372.0], [34.2, 372.0], [34.3, 372.0], [34.4, 372.0], [34.5, 372.0], [34.6, 372.0], [34.7, 373.0], [34.8, 373.0], [34.9, 373.0], [35.0, 373.0], [35.1, 373.0], [35.2, 373.0], [35.3, 373.0], [35.4, 373.0], [35.5, 373.0], [35.6, 373.0], [35.7, 373.0], [35.8, 374.0], [35.9, 374.0], [36.0, 374.0], [36.1, 374.0], [36.2, 374.0], [36.3, 374.0], [36.4, 374.0], [36.5, 374.0], [36.6, 374.0], [36.7, 374.0], [36.8, 374.0], [36.9, 374.0], [37.0, 374.0], [37.1, 374.0], [37.2, 374.0], [37.3, 374.0], [37.4, 374.0], [37.5, 374.0], [37.6, 374.0], [37.7, 374.0], [37.8, 374.0], [37.9, 375.0], [38.0, 375.0], [38.1, 375.0], [38.2, 375.0], [38.3, 375.0], [38.4, 375.0], [38.5, 375.0], [38.6, 375.0], [38.7, 375.0], [38.8, 375.0], [38.9, 375.0], [39.0, 375.0], [39.1, 375.0], [39.2, 375.0], [39.3, 375.0], [39.4, 375.0], [39.5, 375.0], [39.6, 375.0], [39.7, 375.0], [39.8, 375.0], [39.9, 375.0], [40.0, 375.0], [40.1, 375.0], [40.2, 376.0], [40.3, 376.0], [40.4, 376.0], [40.5, 376.0], [40.6, 376.0], [40.7, 376.0], [40.8, 376.0], [40.9, 376.0], [41.0, 376.0], [41.1, 376.0], [41.2, 376.0], [41.3, 376.0], [41.4, 376.0], [41.5, 376.0], [41.6, 376.0], [41.7, 376.0], [41.8, 376.0], [41.9, 376.0], [42.0, 377.0], [42.1, 377.0], [42.2, 377.0], [42.3, 377.0], [42.4, 377.0], [42.5, 377.0], [42.6, 377.0], [42.7, 377.0], [42.8, 377.0], [42.9, 377.0], [43.0, 377.0], [43.1, 377.0], [43.2, 377.0], [43.3, 377.0], [43.4, 377.0], [43.5, 377.0], [43.6, 378.0], [43.7, 378.0], [43.8, 378.0], [43.9, 378.0], [44.0, 378.0], [44.1, 378.0], [44.2, 378.0], [44.3, 378.0], [44.4, 378.0], [44.5, 378.0], [44.6, 378.0], [44.7, 378.0], [44.8, 378.0], [44.9, 378.0], [45.0, 378.0], [45.1, 378.0], [45.2, 378.0], [45.3, 378.0], [45.4, 378.0], [45.5, 378.0], [45.6, 378.0], [45.7, 378.0], [45.8, 378.0], [45.9, 379.0], [46.0, 379.0], [46.1, 379.0], [46.2, 379.0], [46.3, 379.0], [46.4, 379.0], [46.5, 379.0], [46.6, 379.0], [46.7, 379.0], [46.8, 379.0], [46.9, 379.0], [47.0, 379.0], [47.1, 379.0], [47.2, 379.0], [47.3, 379.0], [47.4, 379.0], [47.5, 379.0], [47.6, 379.0], [47.7, 380.0], [47.8, 380.0], [47.9, 380.0], [48.0, 380.0], [48.1, 380.0], [48.2, 380.0], [48.3, 380.0], [48.4, 380.0], [48.5, 380.0], [48.6, 380.0], [48.7, 380.0], [48.8, 381.0], [48.9, 381.0], [49.0, 381.0], [49.1, 381.0], [49.2, 381.0], [49.3, 381.0], [49.4, 381.0], [49.5, 381.0], [49.6, 381.0], [49.7, 381.0], [49.8, 381.0], [49.9, 381.0], [50.0, 381.0], [50.1, 381.0], [50.2, 381.0], [50.3, 382.0], [50.4, 382.0], [50.5, 382.0], [50.6, 382.0], [50.7, 382.0], [50.8, 382.0], [50.9, 382.0], [51.0, 382.0], [51.1, 382.0], [51.2, 382.0], [51.3, 382.0], [51.4, 383.0], [51.5, 383.0], [51.6, 383.0], [51.7, 383.0], [51.8, 383.0], [51.9, 383.0], [52.0, 384.0], [52.1, 384.0], [52.2, 384.0], [52.3, 384.0], [52.4, 384.0], [52.5, 384.0], [52.6, 384.0], [52.7, 384.0], [52.8, 384.0], [52.9, 384.0], [53.0, 384.0], [53.1, 384.0], [53.2, 384.0], [53.3, 384.0], [53.4, 385.0], [53.5, 385.0], [53.6, 385.0], [53.7, 385.0], [53.8, 385.0], [53.9, 385.0], [54.0, 385.0], [54.1, 385.0], [54.2, 385.0], [54.3, 386.0], [54.4, 386.0], [54.5, 386.0], [54.6, 386.0], [54.7, 386.0], [54.8, 386.0], [54.9, 386.0], [55.0, 386.0], [55.1, 386.0], [55.2, 387.0], [55.3, 387.0], [55.4, 387.0], [55.5, 387.0], [55.6, 387.0], [55.7, 387.0], [55.8, 387.0], [55.9, 387.0], [56.0, 387.0], [56.1, 387.0], [56.2, 387.0], [56.3, 387.0], [56.4, 387.0], [56.5, 387.0], [56.6, 387.0], [56.7, 388.0], [56.8, 388.0], [56.9, 388.0], [57.0, 388.0], [57.1, 388.0], [57.2, 388.0], [57.3, 389.0], [57.4, 389.0], [57.5, 389.0], [57.6, 389.0], [57.7, 389.0], [57.8, 389.0], [57.9, 390.0], [58.0, 390.0], [58.1, 390.0], [58.2, 390.0], [58.3, 390.0], [58.4, 390.0], [58.5, 391.0], [58.6, 391.0], [58.7, 391.0], [58.8, 391.0], [58.9, 392.0], [59.0, 392.0], [59.1, 392.0], [59.2, 392.0], [59.3, 392.0], [59.4, 392.0], [59.5, 392.0], [59.6, 392.0], [59.7, 392.0], [59.8, 392.0], [59.9, 393.0], [60.0, 393.0], [60.1, 393.0], [60.2, 393.0], [60.3, 393.0], [60.4, 394.0], [60.5, 394.0], [60.6, 394.0], [60.7, 394.0], [60.8, 394.0], [60.9, 394.0], [61.0, 394.0], [61.1, 394.0], [61.2, 395.0], [61.3, 395.0], [61.4, 395.0], [61.5, 395.0], [61.6, 395.0], [61.7, 395.0], [61.8, 395.0], [61.9, 396.0], [62.0, 396.0], [62.1, 396.0], [62.2, 396.0], [62.3, 397.0], [62.4, 397.0], [62.5, 397.0], [62.6, 397.0], [62.7, 397.0], [62.8, 397.0], [62.9, 397.0], [63.0, 398.0], [63.1, 398.0], [63.2, 398.0], [63.3, 398.0], [63.4, 398.0], [63.5, 399.0], [63.6, 399.0], [63.7, 399.0], [63.8, 399.0], [63.9, 399.0], [64.0, 400.0], [64.1, 400.0], [64.2, 400.0], [64.3, 400.0], [64.4, 401.0], [64.5, 401.0], [64.6, 401.0], [64.7, 401.0], [64.8, 401.0], [64.9, 402.0], [65.0, 402.0], [65.1, 402.0], [65.2, 403.0], [65.3, 403.0], [65.4, 403.0], [65.5, 403.0], [65.6, 403.0], [65.7, 403.0], [65.8, 404.0], [65.9, 404.0], [66.0, 404.0], [66.1, 404.0], [66.2, 405.0], [66.3, 405.0], [66.4, 405.0], [66.5, 405.0], [66.6, 405.0], [66.7, 406.0], [66.8, 406.0], [66.9, 406.0], [67.0, 406.0], [67.1, 406.0], [67.2, 406.0], [67.3, 407.0], [67.4, 407.0], [67.5, 407.0], [67.6, 407.0], [67.7, 407.0], [67.8, 408.0], [67.9, 408.0], [68.0, 408.0], [68.1, 408.0], [68.2, 408.0], [68.3, 408.0], [68.4, 408.0], [68.5, 408.0], [68.6, 409.0], [68.7, 409.0], [68.8, 409.0], [68.9, 409.0], [69.0, 409.0], [69.1, 409.0], [69.2, 409.0], [69.3, 410.0], [69.4, 410.0], [69.5, 410.0], [69.6, 410.0], [69.7, 411.0], [69.8, 411.0], [69.9, 412.0], [70.0, 412.0], [70.1, 412.0], [70.2, 412.0], [70.3, 412.0], [70.4, 412.0], [70.5, 412.0], [70.6, 413.0], [70.7, 413.0], [70.8, 413.0], [70.9, 413.0], [71.0, 413.0], [71.1, 413.0], [71.2, 414.0], [71.3, 414.0], [71.4, 414.0], [71.5, 414.0], [71.6, 414.0], [71.7, 414.0], [71.8, 414.0], [71.9, 415.0], [72.0, 415.0], [72.1, 415.0], [72.2, 416.0], [72.3, 416.0], [72.4, 416.0], [72.5, 416.0], [72.6, 416.0], [72.7, 416.0], [72.8, 416.0], [72.9, 416.0], [73.0, 416.0], [73.1, 416.0], [73.2, 417.0], [73.3, 417.0], [73.4, 417.0], [73.5, 417.0], [73.6, 417.0], [73.7, 418.0], [73.8, 418.0], [73.9, 418.0], [74.0, 418.0], [74.1, 418.0], [74.2, 418.0], [74.3, 418.0], [74.4, 418.0], [74.5, 418.0], [74.6, 418.0], [74.7, 418.0], [74.8, 419.0], [74.9, 419.0], [75.0, 419.0], [75.1, 419.0], [75.2, 419.0], [75.3, 419.0], [75.4, 419.0], [75.5, 419.0], [75.6, 419.0], [75.7, 419.0], [75.8, 419.0], [75.9, 420.0], [76.0, 420.0], [76.1, 420.0], [76.2, 420.0], [76.3, 420.0], [76.4, 420.0], [76.5, 420.0], [76.6, 420.0], [76.7, 420.0], [76.8, 420.0], [76.9, 420.0], [77.0, 420.0], [77.1, 420.0], [77.2, 421.0], [77.3, 421.0], [77.4, 421.0], [77.5, 421.0], [77.6, 421.0], [77.7, 421.0], [77.8, 421.0], [77.9, 421.0], [78.0, 421.0], [78.1, 421.0], [78.2, 421.0], [78.3, 421.0], [78.4, 422.0], [78.5, 422.0], [78.6, 422.0], [78.7, 422.0], [78.8, 422.0], [78.9, 422.0], [79.0, 422.0], [79.1, 422.0], [79.2, 422.0], [79.3, 422.0], [79.4, 422.0], [79.5, 422.0], [79.6, 423.0], [79.7, 423.0], [79.8, 423.0], [79.9, 423.0], [80.0, 423.0], [80.1, 423.0], [80.2, 423.0], [80.3, 424.0], [80.4, 424.0], [80.5, 424.0], [80.6, 424.0], [80.7, 424.0], [80.8, 424.0], [80.9, 424.0], [81.0, 424.0], [81.1, 424.0], [81.2, 424.0], [81.3, 425.0], [81.4, 425.0], [81.5, 425.0], [81.6, 425.0], [81.7, 425.0], [81.8, 425.0], [81.9, 425.0], [82.0, 425.0], [82.1, 425.0], [82.2, 425.0], [82.3, 425.0], [82.4, 425.0], [82.5, 425.0], [82.6, 425.0], [82.7, 425.0], [82.8, 426.0], [82.9, 426.0], [83.0, 426.0], [83.1, 426.0], [83.2, 426.0], [83.3, 426.0], [83.4, 426.0], [83.5, 426.0], [83.6, 426.0], [83.7, 426.0], [83.8, 426.0], [83.9, 427.0], [84.0, 427.0], [84.1, 427.0], [84.2, 427.0], [84.3, 427.0], [84.4, 427.0], [84.5, 427.0], [84.6, 427.0], [84.7, 427.0], [84.8, 427.0], [84.9, 427.0], [85.0, 427.0], [85.1, 427.0], [85.2, 428.0], [85.3, 428.0], [85.4, 428.0], [85.5, 428.0], [85.6, 428.0], [85.7, 428.0], [85.8, 428.0], [85.9, 428.0], [86.0, 428.0], [86.1, 428.0], [86.2, 428.0], [86.3, 428.0], [86.4, 428.0], [86.5, 429.0], [86.6, 429.0], [86.7, 429.0], [86.8, 429.0], [86.9, 430.0], [87.0, 430.0], [87.1, 430.0], [87.2, 430.0], [87.3, 431.0], [87.4, 431.0], [87.5, 431.0], [87.6, 431.0], [87.7, 431.0], [87.8, 431.0], [87.9, 431.0], [88.0, 432.0], [88.1, 432.0], [88.2, 432.0], [88.3, 432.0], [88.4, 432.0], [88.5, 432.0], [88.6, 432.0], [88.7, 433.0], [88.8, 433.0], [88.9, 433.0], [89.0, 433.0], [89.1, 433.0], [89.2, 433.0], [89.3, 433.0], [89.4, 434.0], [89.5, 434.0], [89.6, 434.0], [89.7, 435.0], [89.8, 435.0], [89.9, 435.0], [90.0, 435.0], [90.1, 435.0], [90.2, 435.0], [90.3, 435.0], [90.4, 435.0], [90.5, 436.0], [90.6, 436.0], [90.7, 436.0], [90.8, 437.0], [90.9, 437.0], [91.0, 437.0], [91.1, 437.0], [91.2, 437.0], [91.3, 437.0], [91.4, 437.0], [91.5, 437.0], [91.6, 437.0], [91.7, 437.0], [91.8, 438.0], [91.9, 438.0], [92.0, 438.0], [92.1, 438.0], [92.2, 438.0], [92.3, 439.0], [92.4, 439.0], [92.5, 439.0], [92.6, 440.0], [92.7, 440.0], [92.8, 441.0], [92.9, 441.0], [93.0, 441.0], [93.1, 441.0], [93.2, 441.0], [93.3, 442.0], [93.4, 442.0], [93.5, 442.0], [93.6, 442.0], [93.7, 443.0], [93.8, 443.0], [93.9, 443.0], [94.0, 443.0], [94.1, 444.0], [94.2, 444.0], [94.3, 445.0], [94.4, 446.0], [94.5, 446.0], [94.6, 446.0], [94.7, 446.0], [94.8, 446.0], [94.9, 447.0], [95.0, 447.0], [95.1, 448.0], [95.2, 451.0], [95.3, 452.0], [95.4, 452.0], [95.5, 453.0], [95.6, 453.0], [95.7, 453.0], [95.8, 455.0], [95.9, 455.0], [96.0, 456.0], [96.1, 456.0], [96.2, 456.0], [96.3, 457.0], [96.4, 458.0], [96.5, 460.0], [96.6, 463.0], [96.7, 464.0], [96.8, 465.0], [96.9, 466.0], [97.0, 469.0], [97.1, 470.0], [97.2, 473.0], [97.3, 473.0], [97.4, 474.0], [97.5, 475.0], [97.6, 476.0], [97.7, 477.0], [97.8, 478.0], [97.9, 479.0], [98.0, 481.0], [98.1, 481.0], [98.2, 482.0], [98.3, 484.0], [98.4, 484.0], [98.5, 489.0], [98.6, 489.0], [98.7, 493.0], [98.8, 498.0], [98.9, 504.0], [99.0, 512.0], [99.1, 543.0], [99.2, 558.0], [99.3, 577.0], [99.4, 584.0], [99.5, 585.0], [99.6, 591.0], [99.7, 601.0], [99.8, 610.0], [99.9, 613.0]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[0.0, 1334.0], [0.1, 1334.0], [0.2, 1334.0], [0.3, 1334.0], [0.4, 1334.0], [0.5, 1334.0], [0.6, 1334.0], [0.7, 1334.0], [0.8, 1334.0], [0.9, 1334.0], [1.0, 1364.0], [1.1, 1364.0], [1.2, 1364.0], [1.3, 1364.0], [1.4, 1364.0], [1.5, 1364.0], [1.6, 1364.0], [1.7, 1364.0], [1.8, 1364.0], [1.9, 1364.0], [2.0, 1405.0], [2.1, 1405.0], [2.2, 1405.0], [2.3, 1405.0], [2.4, 1405.0], [2.5, 1405.0], [2.6, 1405.0], [2.7, 1405.0], [2.8, 1405.0], [2.9, 1405.0], [3.0, 1410.0], [3.1, 1410.0], [3.2, 1410.0], [3.3, 1410.0], [3.4, 1410.0], [3.5, 1410.0], [3.6, 1410.0], [3.7, 1410.0], [3.8, 1410.0], [3.9, 1410.0], [4.0, 1419.0], [4.1, 1419.0], [4.2, 1419.0], [4.3, 1419.0], [4.4, 1419.0], [4.5, 1419.0], [4.6, 1419.0], [4.7, 1419.0], [4.8, 1419.0], [4.9, 1419.0], [5.0, 1441.0], [5.1, 1441.0], [5.2, 1441.0], [5.3, 1441.0], [5.4, 1441.0], [5.5, 1441.0], [5.6, 1441.0], [5.7, 1441.0], [5.8, 1441.0], [5.9, 1441.0], [6.0, 1445.0], [6.1, 1445.0], [6.2, 1445.0], [6.3, 1445.0], [6.4, 1445.0], [6.5, 1445.0], [6.6, 1445.0], [6.7, 1445.0], [6.8, 1445.0], [6.9, 1445.0], [7.0, 1484.0], [7.1, 1484.0], [7.2, 1484.0], [7.3, 1484.0], [7.4, 1484.0], [7.5, 1484.0], [7.6, 1484.0], [7.7, 1484.0], [7.8, 1484.0], [7.9, 1484.0], [8.0, 1492.0], [8.1, 1492.0], [8.2, 1492.0], [8.3, 1492.0], [8.4, 1492.0], [8.5, 1492.0], [8.6, 1492.0], [8.7, 1492.0], [8.8, 1492.0], [8.9, 1492.0], [9.0, 1499.0], [9.1, 1499.0], [9.2, 1499.0], [9.3, 1499.0], [9.4, 1499.0], [9.5, 1499.0], [9.6, 1499.0], [9.7, 1499.0], [9.8, 1499.0], [9.9, 1499.0], [10.0, 1505.0], [10.1, 1505.0], [10.2, 1505.0], [10.3, 1505.0], [10.4, 1505.0], [10.5, 1505.0], [10.6, 1505.0], [10.7, 1505.0], [10.8, 1505.0], [10.9, 1505.0], [11.0, 1535.0], [11.1, 1535.0], [11.2, 1535.0], [11.3, 1535.0], [11.4, 1535.0], [11.5, 1535.0], [11.6, 1535.0], [11.7, 1535.0], [11.8, 1535.0], [11.9, 1535.0], [12.0, 1540.0], [12.1, 1540.0], [12.2, 1540.0], [12.3, 1540.0], [12.4, 1540.0], [12.5, 1540.0], [12.6, 1540.0], [12.7, 1540.0], [12.8, 1540.0], [12.9, 1540.0], [13.0, 1542.0], [13.1, 1542.0], [13.2, 1542.0], [13.3, 1542.0], [13.4, 1542.0], [13.5, 1542.0], [13.6, 1542.0], [13.7, 1542.0], [13.8, 1542.0], [13.9, 1542.0], [14.0, 1578.0], [14.1, 1578.0], [14.2, 1578.0], [14.3, 1578.0], [14.4, 1578.0], [14.5, 1578.0], [14.6, 1578.0], [14.7, 1578.0], [14.8, 1578.0], [14.9, 1578.0], [15.0, 1580.0], [15.1, 1580.0], [15.2, 1580.0], [15.3, 1580.0], [15.4, 1580.0], [15.5, 1580.0], [15.6, 1580.0], [15.7, 1580.0], [15.8, 1580.0], [15.9, 1580.0], [16.0, 1606.0], [16.1, 1606.0], [16.2, 1606.0], [16.3, 1606.0], [16.4, 1606.0], [16.5, 1606.0], [16.6, 1606.0], [16.7, 1606.0], [16.8, 1606.0], [16.9, 1606.0], [17.0, 1612.0], [17.1, 1612.0], [17.2, 1612.0], [17.3, 1612.0], [17.4, 1612.0], [17.5, 1612.0], [17.6, 1612.0], [17.7, 1612.0], [17.8, 1612.0], [17.9, 1612.0], [18.0, 1626.0], [18.1, 1626.0], [18.2, 1626.0], [18.3, 1626.0], [18.4, 1626.0], [18.5, 1626.0], [18.6, 1626.0], [18.7, 1626.0], [18.8, 1626.0], [18.9, 1626.0], [19.0, 1633.0], [19.1, 1633.0], [19.2, 1633.0], [19.3, 1633.0], [19.4, 1633.0], [19.5, 1633.0], [19.6, 1633.0], [19.7, 1633.0], [19.8, 1633.0], [19.9, 1633.0], [20.0, 1645.0], [20.1, 1645.0], [20.2, 1645.0], [20.3, 1645.0], [20.4, 1645.0], [20.5, 1645.0], [20.6, 1645.0], [20.7, 1645.0], [20.8, 1645.0], [20.9, 1645.0], [21.0, 1647.0], [21.1, 1647.0], [21.2, 1647.0], [21.3, 1647.0], [21.4, 1647.0], [21.5, 1647.0], [21.6, 1647.0], [21.7, 1647.0], [21.8, 1647.0], [21.9, 1647.0], [22.0, 1658.0], [22.1, 1658.0], [22.2, 1658.0], [22.3, 1658.0], [22.4, 1658.0], [22.5, 1658.0], [22.6, 1658.0], [22.7, 1658.0], [22.8, 1658.0], [22.9, 1658.0], [23.0, 1667.0], [23.1, 1667.0], [23.2, 1667.0], [23.3, 1667.0], [23.4, 1667.0], [23.5, 1667.0], [23.6, 1667.0], [23.7, 1667.0], [23.8, 1667.0], [23.9, 1667.0], [24.0, 1676.0], [24.1, 1676.0], [24.2, 1676.0], [24.3, 1676.0], [24.4, 1676.0], [24.5, 1676.0], [24.6, 1676.0], [24.7, 1676.0], [24.8, 1676.0], [24.9, 1676.0], [25.0, 1681.0], [25.1, 1681.0], [25.2, 1681.0], [25.3, 1681.0], [25.4, 1681.0], [25.5, 1681.0], [25.6, 1681.0], [25.7, 1681.0], [25.8, 1681.0], [25.9, 1681.0], [26.0, 1684.0], [26.1, 1684.0], [26.2, 1684.0], [26.3, 1684.0], [26.4, 1684.0], [26.5, 1684.0], [26.6, 1684.0], [26.7, 1684.0], [26.8, 1684.0], [26.9, 1684.0], [27.0, 1685.0], [27.1, 1685.0], [27.2, 1685.0], [27.3, 1685.0], [27.4, 1685.0], [27.5, 1685.0], [27.6, 1685.0], [27.7, 1685.0], [27.8, 1685.0], [27.9, 1685.0], [28.0, 1686.0], [28.1, 1686.0], [28.2, 1686.0], [28.3, 1686.0], [28.4, 1686.0], [28.5, 1686.0], [28.6, 1686.0], [28.7, 1686.0], [28.8, 1686.0], [28.9, 1686.0], [29.0, 1693.0], [29.1, 1693.0], [29.2, 1693.0], [29.3, 1693.0], [29.4, 1693.0], [29.5, 1693.0], [29.6, 1693.0], [29.7, 1693.0], [29.8, 1693.0], [29.9, 1693.0], [30.0, 1705.0], [30.1, 1705.0], [30.2, 1705.0], [30.3, 1705.0], [30.4, 1705.0], [30.5, 1705.0], [30.6, 1705.0], [30.7, 1705.0], [30.8, 1705.0], [30.9, 1705.0], [31.0, 1709.0], [31.1, 1709.0], [31.2, 1709.0], [31.3, 1709.0], [31.4, 1709.0], [31.5, 1709.0], [31.6, 1709.0], [31.7, 1709.0], [31.8, 1709.0], [31.9, 1709.0], [32.0, 1726.0], [32.1, 1726.0], [32.2, 1726.0], [32.3, 1726.0], [32.4, 1726.0], [32.5, 1726.0], [32.6, 1726.0], [32.7, 1726.0], [32.8, 1726.0], [32.9, 1726.0], [33.0, 1734.0], [33.1, 1734.0], [33.2, 1734.0], [33.3, 1734.0], [33.4, 1734.0], [33.5, 1734.0], [33.6, 1734.0], [33.7, 1734.0], [33.8, 1734.0], [33.9, 1734.0], [34.0, 1736.0], [34.1, 1736.0], [34.2, 1736.0], [34.3, 1736.0], [34.4, 1736.0], [34.5, 1736.0], [34.6, 1736.0], [34.7, 1736.0], [34.8, 1736.0], [34.9, 1736.0], [35.0, 1741.0], [35.1, 1741.0], [35.2, 1741.0], [35.3, 1741.0], [35.4, 1741.0], [35.5, 1741.0], [35.6, 1741.0], [35.7, 1741.0], [35.8, 1741.0], [35.9, 1741.0], [36.0, 1745.0], [36.1, 1745.0], [36.2, 1745.0], [36.3, 1745.0], [36.4, 1745.0], [36.5, 1745.0], [36.6, 1745.0], [36.7, 1745.0], [36.8, 1745.0], [36.9, 1745.0], [37.0, 1749.0], [37.1, 1749.0], [37.2, 1749.0], [37.3, 1749.0], [37.4, 1749.0], [37.5, 1749.0], [37.6, 1749.0], [37.7, 1749.0], [37.8, 1749.0], [37.9, 1749.0], [38.0, 1757.0], [38.1, 1757.0], [38.2, 1757.0], [38.3, 1757.0], [38.4, 1757.0], [38.5, 1757.0], [38.6, 1757.0], [38.7, 1757.0], [38.8, 1757.0], [38.9, 1757.0], [39.0, 1768.0], [39.1, 1768.0], [39.2, 1768.0], [39.3, 1768.0], [39.4, 1768.0], [39.5, 1768.0], [39.6, 1768.0], [39.7, 1768.0], [39.8, 1768.0], [39.9, 1768.0], [40.0, 1777.0], [40.1, 1777.0], [40.2, 1777.0], [40.3, 1777.0], [40.4, 1777.0], [40.5, 1777.0], [40.6, 1777.0], [40.7, 1777.0], [40.8, 1777.0], [40.9, 1777.0], [41.0, 1783.0], [41.1, 1783.0], [41.2, 1783.0], [41.3, 1783.0], [41.4, 1783.0], [41.5, 1783.0], [41.6, 1783.0], [41.7, 1783.0], [41.8, 1783.0], [41.9, 1783.0], [42.0, 1784.0], [42.1, 1784.0], [42.2, 1784.0], [42.3, 1784.0], [42.4, 1784.0], [42.5, 1784.0], [42.6, 1784.0], [42.7, 1784.0], [42.8, 1784.0], [42.9, 1784.0], [43.0, 1796.0], [43.1, 1796.0], [43.2, 1796.0], [43.3, 1796.0], [43.4, 1796.0], [43.5, 1796.0], [43.6, 1796.0], [43.7, 1796.0], [43.8, 1796.0], [43.9, 1796.0], [44.0, 1800.0], [44.1, 1800.0], [44.2, 1800.0], [44.3, 1800.0], [44.4, 1800.0], [44.5, 1800.0], [44.6, 1800.0], [44.7, 1800.0], [44.8, 1800.0], [44.9, 1800.0], [45.0, 1801.0], [45.1, 1801.0], [45.2, 1801.0], [45.3, 1801.0], [45.4, 1801.0], [45.5, 1801.0], [45.6, 1801.0], [45.7, 1801.0], [45.8, 1801.0], [45.9, 1801.0], [46.0, 1803.0], [46.1, 1803.0], [46.2, 1803.0], [46.3, 1803.0], [46.4, 1803.0], [46.5, 1803.0], [46.6, 1803.0], [46.7, 1803.0], [46.8, 1803.0], [46.9, 1803.0], [47.0, 1845.0], [47.1, 1845.0], [47.2, 1845.0], [47.3, 1845.0], [47.4, 1845.0], [47.5, 1845.0], [47.6, 1845.0], [47.7, 1845.0], [47.8, 1845.0], [47.9, 1845.0], [48.0, 1860.0], [48.1, 1860.0], [48.2, 1860.0], [48.3, 1860.0], [48.4, 1860.0], [48.5, 1860.0], [48.6, 1860.0], [48.7, 1860.0], [48.8, 1860.0], [48.9, 1860.0], [49.0, 1864.0], [49.1, 1864.0], [49.2, 1864.0], [49.3, 1864.0], [49.4, 1864.0], [49.5, 1864.0], [49.6, 1864.0], [49.7, 1864.0], [49.8, 1864.0], [49.9, 1864.0], [50.0, 1864.0], [50.1, 1864.0], [50.2, 1864.0], [50.3, 1864.0], [50.4, 1864.0], [50.5, 1864.0], [50.6, 1864.0], [50.7, 1864.0], [50.8, 1864.0], [50.9, 1864.0], [51.0, 1867.0], [51.1, 1867.0], [51.2, 1867.0], [51.3, 1867.0], [51.4, 1867.0], [51.5, 1867.0], [51.6, 1867.0], [51.7, 1867.0], [51.8, 1867.0], [51.9, 1867.0], [52.0, 1874.0], [52.1, 1874.0], [52.2, 1874.0], [52.3, 1874.0], [52.4, 1874.0], [52.5, 1874.0], [52.6, 1874.0], [52.7, 1874.0], [52.8, 1874.0], [52.9, 1874.0], [53.0, 1876.0], [53.1, 1876.0], [53.2, 1876.0], [53.3, 1876.0], [53.4, 1876.0], [53.5, 1876.0], [53.6, 1876.0], [53.7, 1876.0], [53.8, 1876.0], [53.9, 1876.0], [54.0, 1877.0], [54.1, 1877.0], [54.2, 1877.0], [54.3, 1877.0], [54.4, 1877.0], [54.5, 1877.0], [54.6, 1877.0], [54.7, 1877.0], [54.8, 1877.0], [54.9, 1877.0], [55.0, 1881.0], [55.1, 1881.0], [55.2, 1881.0], [55.3, 1881.0], [55.4, 1881.0], [55.5, 1881.0], [55.6, 1881.0], [55.7, 1881.0], [55.8, 1881.0], [55.9, 1881.0], [56.0, 1892.0], [56.1, 1892.0], [56.2, 1892.0], [56.3, 1892.0], [56.4, 1892.0], [56.5, 1892.0], [56.6, 1892.0], [56.7, 1892.0], [56.8, 1892.0], [56.9, 1892.0], [57.0, 1896.0], [57.1, 1896.0], [57.2, 1896.0], [57.3, 1896.0], [57.4, 1896.0], [57.5, 1896.0], [57.6, 1896.0], [57.7, 1896.0], [57.8, 1896.0], [57.9, 1896.0], [58.0, 1905.0], [58.1, 1905.0], [58.2, 1905.0], [58.3, 1905.0], [58.4, 1905.0], [58.5, 1905.0], [58.6, 1905.0], [58.7, 1905.0], [58.8, 1905.0], [58.9, 1905.0], [59.0, 1913.0], [59.1, 1913.0], [59.2, 1913.0], [59.3, 1913.0], [59.4, 1913.0], [59.5, 1913.0], [59.6, 1913.0], [59.7, 1913.0], [59.8, 1913.0], [59.9, 1913.0], [60.0, 1924.0], [60.1, 1924.0], [60.2, 1924.0], [60.3, 1924.0], [60.4, 1924.0], [60.5, 1924.0], [60.6, 1924.0], [60.7, 1924.0], [60.8, 1924.0], [60.9, 1924.0], [61.0, 1924.0], [61.1, 1924.0], [61.2, 1924.0], [61.3, 1924.0], [61.4, 1924.0], [61.5, 1924.0], [61.6, 1924.0], [61.7, 1924.0], [61.8, 1924.0], [61.9, 1924.0], [62.0, 1925.0], [62.1, 1925.0], [62.2, 1925.0], [62.3, 1925.0], [62.4, 1925.0], [62.5, 1925.0], [62.6, 1925.0], [62.7, 1925.0], [62.8, 1925.0], [62.9, 1925.0], [63.0, 1927.0], [63.1, 1927.0], [63.2, 1927.0], [63.3, 1927.0], [63.4, 1927.0], [63.5, 1927.0], [63.6, 1927.0], [63.7, 1927.0], [63.8, 1927.0], [63.9, 1927.0], [64.0, 1947.0], [64.1, 1947.0], [64.2, 1947.0], [64.3, 1947.0], [64.4, 1947.0], [64.5, 1947.0], [64.6, 1947.0], [64.7, 1947.0], [64.8, 1947.0], [64.9, 1947.0], [65.0, 1975.0], [65.1, 1975.0], [65.2, 1975.0], [65.3, 1975.0], [65.4, 1975.0], [65.5, 1975.0], [65.6, 1975.0], [65.7, 1975.0], [65.8, 1975.0], [65.9, 1975.0], [66.0, 1994.0], [66.1, 1994.0], [66.2, 1994.0], [66.3, 1994.0], [66.4, 1994.0], [66.5, 1994.0], [66.6, 1994.0], [66.7, 1994.0], [66.8, 1994.0], [66.9, 1994.0], [67.0, 2002.0], [67.1, 2002.0], [67.2, 2002.0], [67.3, 2002.0], [67.4, 2002.0], [67.5, 2002.0], [67.6, 2002.0], [67.7, 2002.0], [67.8, 2002.0], [67.9, 2002.0], [68.0, 2026.0], [68.1, 2026.0], [68.2, 2026.0], [68.3, 2026.0], [68.4, 2026.0], [68.5, 2026.0], [68.6, 2026.0], [68.7, 2026.0], [68.8, 2026.0], [68.9, 2026.0], [69.0, 2057.0], [69.1, 2057.0], [69.2, 2057.0], [69.3, 2057.0], [69.4, 2057.0], [69.5, 2057.0], [69.6, 2057.0], [69.7, 2057.0], [69.8, 2057.0], [69.9, 2057.0], [70.0, 2064.0], [70.1, 2064.0], [70.2, 2064.0], [70.3, 2064.0], [70.4, 2064.0], [70.5, 2064.0], [70.6, 2064.0], [70.7, 2064.0], [70.8, 2064.0], [70.9, 2064.0], [71.0, 2073.0], [71.1, 2073.0], [71.2, 2073.0], [71.3, 2073.0], [71.4, 2073.0], [71.5, 2073.0], [71.6, 2073.0], [71.7, 2073.0], [71.8, 2073.0], [71.9, 2073.0], [72.0, 2080.0], [72.1, 2080.0], [72.2, 2080.0], [72.3, 2080.0], [72.4, 2080.0], [72.5, 2080.0], [72.6, 2080.0], [72.7, 2080.0], [72.8, 2080.0], [72.9, 2080.0], [73.0, 2086.0], [73.1, 2086.0], [73.2, 2086.0], [73.3, 2086.0], [73.4, 2086.0], [73.5, 2086.0], [73.6, 2086.0], [73.7, 2086.0], [73.8, 2086.0], [73.9, 2086.0], [74.0, 2099.0], [74.1, 2099.0], [74.2, 2099.0], [74.3, 2099.0], [74.4, 2099.0], [74.5, 2099.0], [74.6, 2099.0], [74.7, 2099.0], [74.8, 2099.0], [74.9, 2099.0], [75.0, 2126.0], [75.1, 2126.0], [75.2, 2126.0], [75.3, 2126.0], [75.4, 2126.0], [75.5, 2126.0], [75.6, 2126.0], [75.7, 2126.0], [75.8, 2126.0], [75.9, 2126.0], [76.0, 2163.0], [76.1, 2163.0], [76.2, 2163.0], [76.3, 2163.0], [76.4, 2163.0], [76.5, 2163.0], [76.6, 2163.0], [76.7, 2163.0], [76.8, 2163.0], [76.9, 2163.0], [77.0, 2204.0], [77.1, 2204.0], [77.2, 2204.0], [77.3, 2204.0], [77.4, 2204.0], [77.5, 2204.0], [77.6, 2204.0], [77.7, 2204.0], [77.8, 2204.0], [77.9, 2204.0], [78.0, 2207.0], [78.1, 2207.0], [78.2, 2207.0], [78.3, 2207.0], [78.4, 2207.0], [78.5, 2207.0], [78.6, 2207.0], [78.7, 2207.0], [78.8, 2207.0], [78.9, 2207.0], [79.0, 2240.0], [79.1, 2240.0], [79.2, 2240.0], [79.3, 2240.0], [79.4, 2240.0], [79.5, 2240.0], [79.6, 2240.0], [79.7, 2240.0], [79.8, 2240.0], [79.9, 2240.0], [80.0, 2275.0], [80.1, 2275.0], [80.2, 2275.0], [80.3, 2275.0], [80.4, 2275.0], [80.5, 2275.0], [80.6, 2275.0], [80.7, 2275.0], [80.8, 2275.0], [80.9, 2275.0], [81.0, 2292.0], [81.1, 2292.0], [81.2, 2292.0], [81.3, 2292.0], [81.4, 2292.0], [81.5, 2292.0], [81.6, 2292.0], [81.7, 2292.0], [81.8, 2292.0], [81.9, 2292.0], [82.0, 2308.0], [82.1, 2308.0], [82.2, 2308.0], [82.3, 2308.0], [82.4, 2308.0], [82.5, 2308.0], [82.6, 2308.0], [82.7, 2308.0], [82.8, 2308.0], [82.9, 2308.0], [83.0, 2361.0], [83.1, 2361.0], [83.2, 2361.0], [83.3, 2361.0], [83.4, 2361.0], [83.5, 2361.0], [83.6, 2361.0], [83.7, 2361.0], [83.8, 2361.0], [83.9, 2361.0], [84.0, 2369.0], [84.1, 2369.0], [84.2, 2369.0], [84.3, 2369.0], [84.4, 2369.0], [84.5, 2369.0], [84.6, 2369.0], [84.7, 2369.0], [84.8, 2369.0], [84.9, 2369.0], [85.0, 2396.0], [85.1, 2396.0], [85.2, 2396.0], [85.3, 2396.0], [85.4, 2396.0], [85.5, 2396.0], [85.6, 2396.0], [85.7, 2396.0], [85.8, 2396.0], [85.9, 2396.0], [86.0, 2441.0], [86.1, 2441.0], [86.2, 2441.0], [86.3, 2441.0], [86.4, 2441.0], [86.5, 2441.0], [86.6, 2441.0], [86.7, 2441.0], [86.8, 2441.0], [86.9, 2441.0], [87.0, 2470.0], [87.1, 2470.0], [87.2, 2470.0], [87.3, 2470.0], [87.4, 2470.0], [87.5, 2470.0], [87.6, 2470.0], [87.7, 2470.0], [87.8, 2470.0], [87.9, 2470.0], [88.0, 2521.0], [88.1, 2521.0], [88.2, 2521.0], [88.3, 2521.0], [88.4, 2521.0], [88.5, 2521.0], [88.6, 2521.0], [88.7, 2521.0], [88.8, 2521.0], [88.9, 2521.0], [89.0, 2566.0], [89.1, 2566.0], [89.2, 2566.0], [89.3, 2566.0], [89.4, 2566.0], [89.5, 2566.0], [89.6, 2566.0], [89.7, 2566.0], [89.8, 2566.0], [89.9, 2566.0], [90.0, 2613.0], [90.1, 2613.0], [90.2, 2613.0], [90.3, 2613.0], [90.4, 2613.0], [90.5, 2613.0], [90.6, 2613.0], [90.7, 2613.0], [90.8, 2613.0], [90.9, 2613.0], [91.0, 2632.0], [91.1, 2632.0], [91.2, 2632.0], [91.3, 2632.0], [91.4, 2632.0], [91.5, 2632.0], [91.6, 2632.0], [91.7, 2632.0], [91.8, 2632.0], [91.9, 2632.0], [92.0, 2647.0], [92.1, 2647.0], [92.2, 2647.0], [92.3, 2647.0], [92.4, 2647.0], [92.5, 2647.0], [92.6, 2647.0], [92.7, 2647.0], [92.8, 2647.0], [92.9, 2647.0], [93.0, 2880.0], [93.1, 2880.0], [93.2, 2880.0], [93.3, 2880.0], [93.4, 2880.0], [93.5, 2880.0], [93.6, 2880.0], [93.7, 2880.0], [93.8, 2880.0], [93.9, 2880.0], [94.0, 2946.0], [94.1, 2946.0], [94.2, 2946.0], [94.3, 2946.0], [94.4, 2946.0], [94.5, 2946.0], [94.6, 2946.0], [94.7, 2946.0], [94.8, 2946.0], [94.9, 2946.0], [95.0, 3003.0], [95.1, 3003.0], [95.2, 3003.0], [95.3, 3003.0], [95.4, 3003.0], [95.5, 3003.0], [95.6, 3003.0], [95.7, 3003.0], [95.8, 3003.0], [95.9, 3003.0], [96.0, 3284.0], [96.1, 3284.0], [96.2, 3284.0], [96.3, 3284.0], [96.4, 3284.0], [96.5, 3284.0], [96.6, 3284.0], [96.7, 3284.0], [96.8, 3284.0], [96.9, 3284.0], [97.0, 3346.0], [97.1, 3346.0], [97.2, 3346.0], [97.3, 3346.0], [97.4, 3346.0], [97.5, 3346.0], [97.6, 3346.0], [97.7, 3346.0], [97.8, 3346.0], [97.9, 3346.0], [98.0, 3491.0], [98.1, 3491.0], [98.2, 3491.0], [98.3, 3491.0], [98.4, 3491.0], [98.5, 3491.0], [98.6, 3491.0], [98.7, 3491.0], [98.8, 3491.0], [98.9, 3491.0], [99.0, 26291.0], [99.1, 26291.0], [99.2, 26291.0], [99.3, 26291.0], [99.4, 26291.0], [99.5, 26291.0], [99.6, 26291.0], [99.7, 26291.0], [99.8, 26291.0], [99.9, 26291.0]], "isOverall": false, "label": "trackVehicleExitOutEntry", "isController": false}, {"data": [[0.0, 1303.0], [0.1, 1303.0], [0.2, 1303.0], [0.3, 1303.0], [0.4, 1303.0], [0.5, 1303.0], [0.6, 1303.0], [0.7, 1303.0], [0.8, 1303.0], [0.9, 1303.0], [1.0, 1303.0], [1.1, 1303.0], [1.2, 1303.0], [1.3, 1303.0], [1.4, 1303.0], [1.5, 1303.0], [1.6, 1303.0], [1.7, 1303.0], [1.8, 1303.0], [1.9, 1303.0], [2.0, 1303.0], [2.1, 1303.0], [2.2, 1303.0], [2.3, 1303.0], [2.4, 1303.0], [2.5, 1303.0], [2.6, 1303.0], [2.7, 1303.0], [2.8, 1303.0], [2.9, 1303.0], [3.0, 1303.0], [3.1, 1303.0], [3.2, 1303.0], [3.3, 1303.0], [3.4, 1303.0], [3.5, 1303.0], [3.6, 1303.0], [3.7, 1303.0], [3.8, 1303.0], [3.9, 1303.0], [4.0, 1303.0], [4.1, 1303.0], [4.2, 1303.0], [4.3, 1303.0], [4.4, 1303.0], [4.5, 1303.0], [4.6, 1303.0], [4.7, 1303.0], [4.8, 1303.0], [4.9, 1303.0], [5.0, 1303.0], [5.1, 1303.0], [5.2, 1303.0], [5.3, 1303.0], [5.4, 1303.0], [5.5, 1303.0], [5.6, 1303.0], [5.7, 1303.0], [5.8, 1303.0], [5.9, 1303.0], [6.0, 1303.0], [6.1, 1303.0], [6.2, 1303.0], [6.3, 1303.0], [6.4, 1303.0], [6.5, 1303.0], [6.6, 1303.0], [6.7, 1303.0], [6.8, 1303.0], [6.9, 1303.0], [7.0, 1303.0], [7.1, 1303.0], [7.2, 1303.0], [7.3, 1303.0], [7.4, 1303.0], [7.5, 1303.0], [7.6, 1303.0], [7.7, 1303.0], [7.8, 1303.0], [7.9, 1303.0], [8.0, 1303.0], [8.1, 1303.0], [8.2, 1303.0], [8.3, 1303.0], [8.4, 1303.0], [8.5, 1303.0], [8.6, 1303.0], [8.7, 1303.0], [8.8, 1303.0], [8.9, 1303.0], [9.0, 1303.0], [9.1, 1303.0], [9.2, 1303.0], [9.3, 1303.0], [9.4, 1303.0], [9.5, 1303.0], [9.6, 1303.0], [9.7, 1303.0], [9.8, 1303.0], [9.9, 1303.0], [10.0, 1303.0], [10.1, 1303.0], [10.2, 1303.0], [10.3, 1303.0], [10.4, 1303.0], [10.5, 1303.0], [10.6, 1303.0], [10.7, 1303.0], [10.8, 1303.0], [10.9, 1303.0], [11.0, 1303.0], [11.1, 1303.0], [11.2, 1303.0], [11.3, 1303.0], [11.4, 1303.0], [11.5, 1303.0], [11.6, 1303.0], [11.7, 1303.0], [11.8, 1303.0], [11.9, 1303.0], [12.0, 1303.0], [12.1, 1303.0], [12.2, 1303.0], [12.3, 1303.0], [12.4, 1303.0], [12.5, 1303.0], [12.6, 1303.0], [12.7, 1303.0], [12.8, 1303.0], [12.9, 1303.0], [13.0, 1303.0], [13.1, 1303.0], [13.2, 1303.0], [13.3, 1303.0], [13.4, 1303.0], [13.5, 1303.0], [13.6, 1303.0], [13.7, 1303.0], [13.8, 1303.0], [13.9, 1303.0], [14.0, 1303.0], [14.1, 1303.0], [14.2, 1303.0], [14.3, 1303.0], [14.4, 1303.0], [14.5, 1303.0], [14.6, 1303.0], [14.7, 1303.0], [14.8, 1303.0], [14.9, 1303.0], [15.0, 1303.0], [15.1, 1303.0], [15.2, 1303.0], [15.3, 1303.0], [15.4, 1303.0], [15.5, 1303.0], [15.6, 1303.0], [15.7, 1303.0], [15.8, 1303.0], [15.9, 1303.0], [16.0, 1303.0], [16.1, 1303.0], [16.2, 1303.0], [16.3, 1303.0], [16.4, 1303.0], [16.5, 1303.0], [16.6, 1303.0], [16.7, 1303.0], [16.8, 1303.0], [16.9, 1303.0], [17.0, 1303.0], [17.1, 1303.0], [17.2, 1303.0], [17.3, 1303.0], [17.4, 1303.0], [17.5, 1303.0], [17.6, 1303.0], [17.7, 1303.0], [17.8, 1303.0], [17.9, 1303.0], [18.0, 1303.0], [18.1, 1303.0], [18.2, 1303.0], [18.3, 1303.0], [18.4, 1303.0], [18.5, 1303.0], [18.6, 1303.0], [18.7, 1303.0], [18.8, 1303.0], [18.9, 1303.0], [19.0, 1303.0], [19.1, 1303.0], [19.2, 1303.0], [19.3, 1303.0], [19.4, 1303.0], [19.5, 1303.0], [19.6, 1303.0], [19.7, 1303.0], [19.8, 1303.0], [19.9, 1303.0], [20.0, 1303.0], [20.1, 1303.0], [20.2, 1303.0], [20.3, 1303.0], [20.4, 1303.0], [20.5, 1303.0], [20.6, 1303.0], [20.7, 1303.0], [20.8, 1303.0], [20.9, 1303.0], [21.0, 1303.0], [21.1, 1303.0], [21.2, 1303.0], [21.3, 1303.0], [21.4, 1303.0], [21.5, 1303.0], [21.6, 1303.0], [21.7, 1303.0], [21.8, 1303.0], [21.9, 1303.0], [22.0, 1303.0], [22.1, 1303.0], [22.2, 1303.0], [22.3, 1303.0], [22.4, 1303.0], [22.5, 1303.0], [22.6, 1303.0], [22.7, 1303.0], [22.8, 1303.0], [22.9, 1303.0], [23.0, 1303.0], [23.1, 1303.0], [23.2, 1303.0], [23.3, 1303.0], [23.4, 1303.0], [23.5, 1303.0], [23.6, 1303.0], [23.7, 1303.0], [23.8, 1303.0], [23.9, 1303.0], [24.0, 1303.0], [24.1, 1303.0], [24.2, 1303.0], [24.3, 1303.0], [24.4, 1303.0], [24.5, 1303.0], [24.6, 1303.0], [24.7, 1303.0], [24.8, 1303.0], [24.9, 1303.0], [25.0, 1303.0], [25.1, 1303.0], [25.2, 1303.0], [25.3, 1303.0], [25.4, 1303.0], [25.5, 1303.0], [25.6, 1303.0], [25.7, 1303.0], [25.8, 1303.0], [25.9, 1303.0], [26.0, 1303.0], [26.1, 1303.0], [26.2, 1303.0], [26.3, 1303.0], [26.4, 1303.0], [26.5, 1303.0], [26.6, 1303.0], [26.7, 1303.0], [26.8, 1303.0], [26.9, 1303.0], [27.0, 1303.0], [27.1, 1303.0], [27.2, 1303.0], [27.3, 1303.0], [27.4, 1303.0], [27.5, 1303.0], [27.6, 1303.0], [27.7, 1303.0], [27.8, 1303.0], [27.9, 1303.0], [28.0, 1303.0], [28.1, 1303.0], [28.2, 1303.0], [28.3, 1303.0], [28.4, 1303.0], [28.5, 1303.0], [28.6, 1303.0], [28.7, 1303.0], [28.8, 1303.0], [28.9, 1303.0], [29.0, 1303.0], [29.1, 1303.0], [29.2, 1303.0], [29.3, 1303.0], [29.4, 1303.0], [29.5, 1303.0], [29.6, 1303.0], [29.7, 1303.0], [29.8, 1303.0], [29.9, 1303.0], [30.0, 1303.0], [30.1, 1303.0], [30.2, 1303.0], [30.3, 1303.0], [30.4, 1303.0], [30.5, 1303.0], [30.6, 1303.0], [30.7, 1303.0], [30.8, 1303.0], [30.9, 1303.0], [31.0, 1303.0], [31.1, 1303.0], [31.2, 1303.0], [31.3, 1303.0], [31.4, 1303.0], [31.5, 1303.0], [31.6, 1303.0], [31.7, 1303.0], [31.8, 1303.0], [31.9, 1303.0], [32.0, 1303.0], [32.1, 1303.0], [32.2, 1303.0], [32.3, 1303.0], [32.4, 1303.0], [32.5, 1303.0], [32.6, 1303.0], [32.7, 1303.0], [32.8, 1303.0], [32.9, 1303.0], [33.0, 1303.0], [33.1, 1303.0], [33.2, 1303.0], [33.3, 1303.0], [33.4, 1303.0], [33.5, 1303.0], [33.6, 1303.0], [33.7, 1303.0], [33.8, 1303.0], [33.9, 1303.0], [34.0, 1303.0], [34.1, 1303.0], [34.2, 1303.0], [34.3, 1303.0], [34.4, 1303.0], [34.5, 1303.0], [34.6, 1303.0], [34.7, 1303.0], [34.8, 1303.0], [34.9, 1303.0], [35.0, 1303.0], [35.1, 1303.0], [35.2, 1303.0], [35.3, 1303.0], [35.4, 1303.0], [35.5, 1303.0], [35.6, 1303.0], [35.7, 1303.0], [35.8, 1303.0], [35.9, 1303.0], [36.0, 1303.0], [36.1, 1303.0], [36.2, 1303.0], [36.3, 1303.0], [36.4, 1303.0], [36.5, 1303.0], [36.6, 1303.0], [36.7, 1303.0], [36.8, 1303.0], [36.9, 1303.0], [37.0, 1303.0], [37.1, 1303.0], [37.2, 1303.0], [37.3, 1303.0], [37.4, 1303.0], [37.5, 1303.0], [37.6, 1303.0], [37.7, 1303.0], [37.8, 1303.0], [37.9, 1303.0], [38.0, 1303.0], [38.1, 1303.0], [38.2, 1303.0], [38.3, 1303.0], [38.4, 1303.0], [38.5, 1303.0], [38.6, 1303.0], [38.7, 1303.0], [38.8, 1303.0], [38.9, 1303.0], [39.0, 1303.0], [39.1, 1303.0], [39.2, 1303.0], [39.3, 1303.0], [39.4, 1303.0], [39.5, 1303.0], [39.6, 1303.0], [39.7, 1303.0], [39.8, 1303.0], [39.9, 1303.0], [40.0, 1303.0], [40.1, 1303.0], [40.2, 1303.0], [40.3, 1303.0], [40.4, 1303.0], [40.5, 1303.0], [40.6, 1303.0], [40.7, 1303.0], [40.8, 1303.0], [40.9, 1303.0], [41.0, 1303.0], [41.1, 1303.0], [41.2, 1303.0], [41.3, 1303.0], [41.4, 1303.0], [41.5, 1303.0], [41.6, 1303.0], [41.7, 1303.0], [41.8, 1303.0], [41.9, 1303.0], [42.0, 1303.0], [42.1, 1303.0], [42.2, 1303.0], [42.3, 1303.0], [42.4, 1303.0], [42.5, 1303.0], [42.6, 1303.0], [42.7, 1303.0], [42.8, 1303.0], [42.9, 1303.0], [43.0, 1303.0], [43.1, 1303.0], [43.2, 1303.0], [43.3, 1303.0], [43.4, 1303.0], [43.5, 1303.0], [43.6, 1303.0], [43.7, 1303.0], [43.8, 1303.0], [43.9, 1303.0], [44.0, 1303.0], [44.1, 1303.0], [44.2, 1303.0], [44.3, 1303.0], [44.4, 1303.0], [44.5, 1303.0], [44.6, 1303.0], [44.7, 1303.0], [44.8, 1303.0], [44.9, 1303.0], [45.0, 1303.0], [45.1, 1303.0], [45.2, 1303.0], [45.3, 1303.0], [45.4, 1303.0], [45.5, 1303.0], [45.6, 1303.0], [45.7, 1303.0], [45.8, 1303.0], [45.9, 1303.0], [46.0, 1303.0], [46.1, 1303.0], [46.2, 1303.0], [46.3, 1303.0], [46.4, 1303.0], [46.5, 1303.0], [46.6, 1303.0], [46.7, 1303.0], [46.8, 1303.0], [46.9, 1303.0], [47.0, 1303.0], [47.1, 1303.0], [47.2, 1303.0], [47.3, 1303.0], [47.4, 1303.0], [47.5, 1303.0], [47.6, 1303.0], [47.7, 1303.0], [47.8, 1303.0], [47.9, 1303.0], [48.0, 1303.0], [48.1, 1303.0], [48.2, 1303.0], [48.3, 1303.0], [48.4, 1303.0], [48.5, 1303.0], [48.6, 1303.0], [48.7, 1303.0], [48.8, 1303.0], [48.9, 1303.0], [49.0, 1303.0], [49.1, 1303.0], [49.2, 1303.0], [49.3, 1303.0], [49.4, 1303.0], [49.5, 1303.0], [49.6, 1303.0], [49.7, 1303.0], [49.8, 1303.0], [49.9, 1303.0], [50.0, 1303.0], [50.1, 1303.0], [50.2, 1303.0], [50.3, 1303.0], [50.4, 1303.0], [50.5, 1303.0], [50.6, 1303.0], [50.7, 1303.0], [50.8, 1303.0], [50.9, 1303.0], [51.0, 1303.0], [51.1, 1303.0], [51.2, 1303.0], [51.3, 1303.0], [51.4, 1303.0], [51.5, 1303.0], [51.6, 1303.0], [51.7, 1303.0], [51.8, 1303.0], [51.9, 1303.0], [52.0, 1303.0], [52.1, 1303.0], [52.2, 1303.0], [52.3, 1303.0], [52.4, 1303.0], [52.5, 1303.0], [52.6, 1303.0], [52.7, 1303.0], [52.8, 1303.0], [52.9, 1303.0], [53.0, 1303.0], [53.1, 1303.0], [53.2, 1303.0], [53.3, 1303.0], [53.4, 1303.0], [53.5, 1303.0], [53.6, 1303.0], [53.7, 1303.0], [53.8, 1303.0], [53.9, 1303.0], [54.0, 1303.0], [54.1, 1303.0], [54.2, 1303.0], [54.3, 1303.0], [54.4, 1303.0], [54.5, 1303.0], [54.6, 1303.0], [54.7, 1303.0], [54.8, 1303.0], [54.9, 1303.0], [55.0, 1303.0], [55.1, 1303.0], [55.2, 1303.0], [55.3, 1303.0], [55.4, 1303.0], [55.5, 1303.0], [55.6, 1303.0], [55.7, 1303.0], [55.8, 1303.0], [55.9, 1303.0], [56.0, 1303.0], [56.1, 1303.0], [56.2, 1303.0], [56.3, 1303.0], [56.4, 1303.0], [56.5, 1303.0], [56.6, 1303.0], [56.7, 1303.0], [56.8, 1303.0], [56.9, 1303.0], [57.0, 1303.0], [57.1, 1303.0], [57.2, 1303.0], [57.3, 1303.0], [57.4, 1303.0], [57.5, 1303.0], [57.6, 1303.0], [57.7, 1303.0], [57.8, 1303.0], [57.9, 1303.0], [58.0, 1303.0], [58.1, 1303.0], [58.2, 1303.0], [58.3, 1303.0], [58.4, 1303.0], [58.5, 1303.0], [58.6, 1303.0], [58.7, 1303.0], [58.8, 1303.0], [58.9, 1303.0], [59.0, 1303.0], [59.1, 1303.0], [59.2, 1303.0], [59.3, 1303.0], [59.4, 1303.0], [59.5, 1303.0], [59.6, 1303.0], [59.7, 1303.0], [59.8, 1303.0], [59.9, 1303.0], [60.0, 1303.0], [60.1, 1303.0], [60.2, 1303.0], [60.3, 1303.0], [60.4, 1303.0], [60.5, 1303.0], [60.6, 1303.0], [60.7, 1303.0], [60.8, 1303.0], [60.9, 1303.0], [61.0, 1303.0], [61.1, 1303.0], [61.2, 1303.0], [61.3, 1303.0], [61.4, 1303.0], [61.5, 1303.0], [61.6, 1303.0], [61.7, 1303.0], [61.8, 1303.0], [61.9, 1303.0], [62.0, 1303.0], [62.1, 1303.0], [62.2, 1303.0], [62.3, 1303.0], [62.4, 1303.0], [62.5, 1303.0], [62.6, 1303.0], [62.7, 1303.0], [62.8, 1303.0], [62.9, 1303.0], [63.0, 1303.0], [63.1, 1303.0], [63.2, 1303.0], [63.3, 1303.0], [63.4, 1303.0], [63.5, 1303.0], [63.6, 1303.0], [63.7, 1303.0], [63.8, 1303.0], [63.9, 1303.0], [64.0, 1303.0], [64.1, 1303.0], [64.2, 1303.0], [64.3, 1303.0], [64.4, 1303.0], [64.5, 1303.0], [64.6, 1303.0], [64.7, 1303.0], [64.8, 1303.0], [64.9, 1303.0], [65.0, 1303.0], [65.1, 1303.0], [65.2, 1303.0], [65.3, 1303.0], [65.4, 1303.0], [65.5, 1303.0], [65.6, 1303.0], [65.7, 1303.0], [65.8, 1303.0], [65.9, 1303.0], [66.0, 1303.0], [66.1, 1303.0], [66.2, 1303.0], [66.3, 1303.0], [66.4, 1303.0], [66.5, 1303.0], [66.6, 1303.0], [66.7, 1303.0], [66.8, 1303.0], [66.9, 1303.0], [67.0, 1303.0], [67.1, 1303.0], [67.2, 1303.0], [67.3, 1303.0], [67.4, 1303.0], [67.5, 1303.0], [67.6, 1303.0], [67.7, 1303.0], [67.8, 1303.0], [67.9, 1303.0], [68.0, 1303.0], [68.1, 1303.0], [68.2, 1303.0], [68.3, 1303.0], [68.4, 1303.0], [68.5, 1303.0], [68.6, 1303.0], [68.7, 1303.0], [68.8, 1303.0], [68.9, 1303.0], [69.0, 1303.0], [69.1, 1303.0], [69.2, 1303.0], [69.3, 1303.0], [69.4, 1303.0], [69.5, 1303.0], [69.6, 1303.0], [69.7, 1303.0], [69.8, 1303.0], [69.9, 1303.0], [70.0, 1303.0], [70.1, 1303.0], [70.2, 1303.0], [70.3, 1303.0], [70.4, 1303.0], [70.5, 1303.0], [70.6, 1303.0], [70.7, 1303.0], [70.8, 1303.0], [70.9, 1303.0], [71.0, 1303.0], [71.1, 1303.0], [71.2, 1303.0], [71.3, 1303.0], [71.4, 1303.0], [71.5, 1303.0], [71.6, 1303.0], [71.7, 1303.0], [71.8, 1303.0], [71.9, 1303.0], [72.0, 1303.0], [72.1, 1303.0], [72.2, 1303.0], [72.3, 1303.0], [72.4, 1303.0], [72.5, 1303.0], [72.6, 1303.0], [72.7, 1303.0], [72.8, 1303.0], [72.9, 1303.0], [73.0, 1303.0], [73.1, 1303.0], [73.2, 1303.0], [73.3, 1303.0], [73.4, 1303.0], [73.5, 1303.0], [73.6, 1303.0], [73.7, 1303.0], [73.8, 1303.0], [73.9, 1303.0], [74.0, 1303.0], [74.1, 1303.0], [74.2, 1303.0], [74.3, 1303.0], [74.4, 1303.0], [74.5, 1303.0], [74.6, 1303.0], [74.7, 1303.0], [74.8, 1303.0], [74.9, 1303.0], [75.0, 1303.0], [75.1, 1303.0], [75.2, 1303.0], [75.3, 1303.0], [75.4, 1303.0], [75.5, 1303.0], [75.6, 1303.0], [75.7, 1303.0], [75.8, 1303.0], [75.9, 1303.0], [76.0, 1303.0], [76.1, 1303.0], [76.2, 1303.0], [76.3, 1303.0], [76.4, 1303.0], [76.5, 1303.0], [76.6, 1303.0], [76.7, 1303.0], [76.8, 1303.0], [76.9, 1303.0], [77.0, 1303.0], [77.1, 1303.0], [77.2, 1303.0], [77.3, 1303.0], [77.4, 1303.0], [77.5, 1303.0], [77.6, 1303.0], [77.7, 1303.0], [77.8, 1303.0], [77.9, 1303.0], [78.0, 1303.0], [78.1, 1303.0], [78.2, 1303.0], [78.3, 1303.0], [78.4, 1303.0], [78.5, 1303.0], [78.6, 1303.0], [78.7, 1303.0], [78.8, 1303.0], [78.9, 1303.0], [79.0, 1303.0], [79.1, 1303.0], [79.2, 1303.0], [79.3, 1303.0], [79.4, 1303.0], [79.5, 1303.0], [79.6, 1303.0], [79.7, 1303.0], [79.8, 1303.0], [79.9, 1303.0], [80.0, 1303.0], [80.1, 1303.0], [80.2, 1303.0], [80.3, 1303.0], [80.4, 1303.0], [80.5, 1303.0], [80.6, 1303.0], [80.7, 1303.0], [80.8, 1303.0], [80.9, 1303.0], [81.0, 1303.0], [81.1, 1303.0], [81.2, 1303.0], [81.3, 1303.0], [81.4, 1303.0], [81.5, 1303.0], [81.6, 1303.0], [81.7, 1303.0], [81.8, 1303.0], [81.9, 1303.0], [82.0, 1303.0], [82.1, 1303.0], [82.2, 1303.0], [82.3, 1303.0], [82.4, 1303.0], [82.5, 1303.0], [82.6, 1303.0], [82.7, 1303.0], [82.8, 1303.0], [82.9, 1303.0], [83.0, 1303.0], [83.1, 1303.0], [83.2, 1303.0], [83.3, 1303.0], [83.4, 1303.0], [83.5, 1303.0], [83.6, 1303.0], [83.7, 1303.0], [83.8, 1303.0], [83.9, 1303.0], [84.0, 1303.0], [84.1, 1303.0], [84.2, 1303.0], [84.3, 1303.0], [84.4, 1303.0], [84.5, 1303.0], [84.6, 1303.0], [84.7, 1303.0], [84.8, 1303.0], [84.9, 1303.0], [85.0, 1303.0], [85.1, 1303.0], [85.2, 1303.0], [85.3, 1303.0], [85.4, 1303.0], [85.5, 1303.0], [85.6, 1303.0], [85.7, 1303.0], [85.8, 1303.0], [85.9, 1303.0], [86.0, 1303.0], [86.1, 1303.0], [86.2, 1303.0], [86.3, 1303.0], [86.4, 1303.0], [86.5, 1303.0], [86.6, 1303.0], [86.7, 1303.0], [86.8, 1303.0], [86.9, 1303.0], [87.0, 1303.0], [87.1, 1303.0], [87.2, 1303.0], [87.3, 1303.0], [87.4, 1303.0], [87.5, 1303.0], [87.6, 1303.0], [87.7, 1303.0], [87.8, 1303.0], [87.9, 1303.0], [88.0, 1303.0], [88.1, 1303.0], [88.2, 1303.0], [88.3, 1303.0], [88.4, 1303.0], [88.5, 1303.0], [88.6, 1303.0], [88.7, 1303.0], [88.8, 1303.0], [88.9, 1303.0], [89.0, 1303.0], [89.1, 1303.0], [89.2, 1303.0], [89.3, 1303.0], [89.4, 1303.0], [89.5, 1303.0], [89.6, 1303.0], [89.7, 1303.0], [89.8, 1303.0], [89.9, 1303.0], [90.0, 1303.0], [90.1, 1303.0], [90.2, 1303.0], [90.3, 1303.0], [90.4, 1303.0], [90.5, 1303.0], [90.6, 1303.0], [90.7, 1303.0], [90.8, 1303.0], [90.9, 1303.0], [91.0, 1303.0], [91.1, 1303.0], [91.2, 1303.0], [91.3, 1303.0], [91.4, 1303.0], [91.5, 1303.0], [91.6, 1303.0], [91.7, 1303.0], [91.8, 1303.0], [91.9, 1303.0], [92.0, 1303.0], [92.1, 1303.0], [92.2, 1303.0], [92.3, 1303.0], [92.4, 1303.0], [92.5, 1303.0], [92.6, 1303.0], [92.7, 1303.0], [92.8, 1303.0], [92.9, 1303.0], [93.0, 1303.0], [93.1, 1303.0], [93.2, 1303.0], [93.3, 1303.0], [93.4, 1303.0], [93.5, 1303.0], [93.6, 1303.0], [93.7, 1303.0], [93.8, 1303.0], [93.9, 1303.0], [94.0, 1303.0], [94.1, 1303.0], [94.2, 1303.0], [94.3, 1303.0], [94.4, 1303.0], [94.5, 1303.0], [94.6, 1303.0], [94.7, 1303.0], [94.8, 1303.0], [94.9, 1303.0], [95.0, 1303.0], [95.1, 1303.0], [95.2, 1303.0], [95.3, 1303.0], [95.4, 1303.0], [95.5, 1303.0], [95.6, 1303.0], [95.7, 1303.0], [95.8, 1303.0], [95.9, 1303.0], [96.0, 1303.0], [96.1, 1303.0], [96.2, 1303.0], [96.3, 1303.0], [96.4, 1303.0], [96.5, 1303.0], [96.6, 1303.0], [96.7, 1303.0], [96.8, 1303.0], [96.9, 1303.0], [97.0, 1303.0], [97.1, 1303.0], [97.2, 1303.0], [97.3, 1303.0], [97.4, 1303.0], [97.5, 1303.0], [97.6, 1303.0], [97.7, 1303.0], [97.8, 1303.0], [97.9, 1303.0], [98.0, 1303.0], [98.1, 1303.0], [98.2, 1303.0], [98.3, 1303.0], [98.4, 1303.0], [98.5, 1303.0], [98.6, 1303.0], [98.7, 1303.0], [98.8, 1303.0], [98.9, 1303.0], [99.0, 1303.0], [99.1, 1303.0], [99.2, 1303.0], [99.3, 1303.0], [99.4, 1303.0], [99.5, 1303.0], [99.6, 1303.0], [99.7, 1303.0], [99.8, 1303.0], [99.9, 1303.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 300.0, "maxY": 679.0, "series": [{"data": [[2300.0, 1.0], [700.0, 5.0], [800.0, 13.0], [900.0, 29.0], [1000.0, 43.0], [1100.0, 24.0], [1200.0, 32.0], [1300.0, 12.0], [1400.0, 10.0], [23900.0, 1.0], [1500.0, 6.0], [26200.0, 1.0], [1600.0, 3.0], [1700.0, 3.0], [1800.0, 2.0], [1900.0, 2.0], [2000.0, 1.0]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[2100.0, 1.0], [600.0, 52.0], [2400.0, 1.0], [700.0, 33.0], [800.0, 26.0], [900.0, 8.0], [1000.0, 2.0], [1100.0, 4.0], [1200.0, 2.0], [300.0, 2.0], [1300.0, 2.0], [1400.0, 1.0], [1500.0, 1.0], [400.0, 99.0], [500.0, 143.0]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[300.0, 679.0], [600.0, 3.0], [400.0, 371.0], [800.0, 1.0], [500.0, 8.0]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[2100.0, 2.0], [2300.0, 4.0], [2200.0, 5.0], [2400.0, 2.0], [2500.0, 2.0], [2600.0, 3.0], [2800.0, 1.0], [2900.0, 1.0], [3000.0, 1.0], [3300.0, 1.0], [3200.0, 1.0], [3400.0, 1.0], [1300.0, 2.0], [1400.0, 8.0], [1500.0, 6.0], [1600.0, 14.0], [26200.0, 1.0], [1700.0, 14.0], [1800.0, 14.0], [1900.0, 9.0], [2000.0, 8.0]], "isOverall": false, "label": "trackVehicleExitOutEntry", "isController": false}, {"data": [[1300.0, 1.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 26200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 58.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1122.0, "series": [{"data": [[0.0, 1122.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 435.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 113.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 58.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.71997008E12, "maxY": 1.0, "series": [{"data": [[1.71997008E12, 1.0]], "isOverall": false, "label": "setUpAutenticacionCognito", "isController": false}, {"data": [[1.7199705E12, 1.0], [1.71997032E12, 1.0], [1.71997038E12, 1.0], [1.7199702E12, 1.0], [1.71997068E12, 1.0], [1.71997026E12, 1.0], [1.71997008E12, 1.0], [1.71997056E12, 1.0], [1.71997014E12, 1.0], [1.71997062E12, 1.0], [1.71997044E12, 1.0]], "isOverall": false, "label": "consultarPlaca", "isController": false}, {"data": [[1.7199705E12, 1.0], [1.71997032E12, 1.0], [1.71997038E12, 1.0], [1.7199702E12, 1.0], [1.71997068E12, 1.0], [1.71997026E12, 1.0], [1.71997056E12, 1.0], [1.71997014E12, 1.0], [1.71997062E12, 1.0], [1.71997044E12, 1.0]], "isOverall": false, "label": "registrarEntrada", "isController": false}, {"data": [[1.7199705E12, 1.0], [1.71997032E12, 1.0], [1.71997038E12, 1.0], [1.71997068E12, 1.0], [1.71997056E12, 1.0], [1.71997062E12, 1.0], [1.71997044E12, 1.0]], "isOverall": false, "label": "registrarSalida", "isController": false}, {"data": [[1.7199705E12, 1.0], [1.71997038E12, 1.0], [1.71997068E12, 1.0], [1.71997056E12, 1.0], [1.71997062E12, 1.0], [1.71997044E12, 1.0]], "isOverall": false, "label": "registrarSalidaSinEntrada", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71997068E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 381.6682027649766, "minX": 1.0, "maxY": 2351.3157894736846, "series": [{"data": [[4.0, 1191.6442953020128], [1.0, 922.0], [3.0, 2351.3157894736846]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[3.781914893617022, 1424.6117021276598]], "isOverall": false, "label": "trackVehicleExit-Aggregated", "isController": false}, {"data": [[2.0, 587.5529411764708], [4.0, 641.608695652174], [3.0, 571.8235294117645]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[3.3236074270557023, 613.6870026525205]], "isOverall": false, "label": "trackVehicleEntry-Aggregated", "isController": false}, {"data": [[1.0, 392.61538461538464], [2.0, 389.24401913875585], [4.0, 389.1766917293234], [3.0, 381.6682027649766]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[3.108286252354049, 387.9924670433146]], "isOverall": false, "label": "getPlate-Aggregated", "isController": false}, {"data": [[4.0, 2195.787878787878], [2.0, 1892.0]], "isOverall": false, "label": "trackVehicleExitOutEntry", "isController": false}, {"data": [[3.98, 2192.749999999999]], "isOverall": false, "label": "trackVehicleExitOutEntry-Aggregated", "isController": false}, {"data": [[1.0, 1303.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}, {"data": [[1.0, 1303.0]], "isOverall": false, "label": "loginAFlypass-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 4.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 279.1666666666667, "minX": 1.71997008E12, "maxY": 3318.1666666666665, "series": [{"data": [[1.7199705E12, 1680.9666666666667], [1.71997032E12, 1368.8666666666666], [1.71997038E12, 1505.8], [1.7199702E12, 1187.9333333333334], [1.71997068E12, 1191.4], [1.71997026E12, 1212.2666666666667], [1.71997008E12, 279.1666666666667], [1.71997056E12, 1612.7833333333333], [1.71997014E12, 928.4666666666667], [1.71997062E12, 1720.7], [1.71997044E12, 1557.4333333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7199705E12, 3300.016666666667], [1.71997032E12, 2657.7166666666667], [1.71997038E12, 2943.9], [1.7199702E12, 2294.9333333333334], [1.71997068E12, 2271.5], [1.71997026E12, 2342.1833333333334], [1.71997008E12, 457.93333333333334], [1.71997056E12, 3162.116666666667], [1.71997014E12, 1744.8833333333334], [1.71997062E12, 3318.1666666666665], [1.71997044E12, 3045.883333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71997068E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 375.96330275229354, "minX": 1.71997008E12, "maxY": 4143.0, "series": [{"data": [[1.7199705E12, 1118.3870967741937], [1.71997032E12, 4087.3749999999995], [1.71997038E12, 1143.2666666666664], [1.71997068E12, 1259.4761904761906], [1.71997056E12, 1193.5666666666664], [1.71997062E12, 1198.1333333333334], [1.71997044E12, 1175.3666666666666]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[1.7199705E12, 633.8571428571429], [1.71997032E12, 560.511627906977], [1.71997038E12, 607.642857142857], [1.7199702E12, 590.7674418604652], [1.71997068E12, 570.3], [1.71997026E12, 565.9318181818182], [1.71997056E12, 736.5641025641025], [1.71997014E12, 641.6363636363636], [1.71997062E12, 569.4883720930235], [1.71997044E12, 685.75]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[1.7199705E12, 392.96261682243005], [1.71997032E12, 375.96330275229354], [1.71997038E12, 391.55238095238093], [1.7199702E12, 394.64423076923083], [1.71997068E12, 385.93333333333334], [1.71997026E12, 387.0], [1.71997008E12, 389.12903225806446], [1.71997056E12, 392.80952380952385], [1.71997014E12, 389.31132075471686], [1.71997062E12, 390.3925233644859], [1.71997044E12, 378.98130841121485]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1.7199705E12, 1759.7391304347827], [1.71997038E12, 2125.5], [1.71997068E12, 2231.357142857143], [1.71997056E12, 2069.428571428571], [1.71997062E12, 1734.7916666666665], [1.71997044E12, 4143.0]], "isOverall": false, "label": "trackVehicleExitOutEntry", "isController": false}, {"data": [[1.71997008E12, 1303.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71997068E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 375.89908256880744, "minX": 1.71997008E12, "maxY": 4142.833333333333, "series": [{"data": [[1.7199705E12, 1118.1290322580644], [1.71997032E12, 4087.1875000000005], [1.71997038E12, 1143.1], [1.71997068E12, 1259.142857142857], [1.71997056E12, 1193.4999999999998], [1.71997062E12, 1198.0666666666666], [1.71997044E12, 1175.2333333333336]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[1.7199705E12, 633.8333333333334], [1.71997032E12, 560.372093023256], [1.71997038E12, 607.5476190476189], [1.7199702E12, 590.6744186046512], [1.71997068E12, 570.2666666666668], [1.71997026E12, 565.8409090909091], [1.71997056E12, 736.4615384615385], [1.71997014E12, 641.4545454545455], [1.71997062E12, 569.4418604651165], [1.71997044E12, 685.4499999999999]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[1.7199705E12, 392.84112149532706], [1.71997032E12, 375.89908256880744], [1.71997038E12, 391.41904761904755], [1.7199702E12, 394.50961538461536], [1.71997068E12, 385.92], [1.71997026E12, 386.89622641509436], [1.71997008E12, 388.83870967741933], [1.71997056E12, 392.67619047619024], [1.71997014E12, 389.1415094339623], [1.71997062E12, 390.19626168224295], [1.71997044E12, 378.8878504672897]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1.7199705E12, 1759.7391304347827], [1.71997038E12, 2125.5], [1.71997068E12, 2231.357142857143], [1.71997056E12, 2069.428571428571], [1.71997062E12, 1734.7083333333335], [1.71997044E12, 4142.833333333333]], "isOverall": false, "label": "trackVehicleExitOutEntry", "isController": false}, {"data": [[1.71997008E12, 1299.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71997068E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 269.83333333333337, "minX": 1.71997008E12, "maxY": 956.0, "series": [{"data": [[1.7199705E12, 282.29032258064524], [1.71997032E12, 290.0], [1.71997038E12, 283.3666666666666], [1.71997068E12, 283.6666666666667], [1.71997056E12, 282.0999999999999], [1.71997062E12, 287.83333333333337], [1.71997044E12, 276.96666666666664]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[1.7199705E12, 286.6904761904762], [1.71997032E12, 278.046511627907], [1.71997038E12, 281.30952380952385], [1.7199702E12, 278.4186046511629], [1.71997068E12, 269.83333333333337], [1.71997026E12, 280.4772727272727], [1.71997056E12, 282.0], [1.71997014E12, 295.6363636363636], [1.71997062E12, 291.4651162790698], [1.71997044E12, 282.8000000000001]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[1.7199705E12, 283.2336448598131], [1.71997032E12, 278.2477064220183], [1.71997038E12, 285.0285714285716], [1.7199702E12, 289.45192307692304], [1.71997068E12, 280.8399999999999], [1.71997026E12, 287.0943396226416], [1.71997008E12, 284.35483870967744], [1.71997056E12, 284.3523809523808], [1.71997014E12, 288.5943396226415], [1.71997062E12, 286.26168224299056], [1.71997044E12, 277.4766355140187]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1.7199705E12, 279.04347826086956], [1.71997038E12, 297.16666666666663], [1.71997068E12, 285.49999999999994], [1.71997056E12, 289.19047619047626], [1.71997062E12, 284.04166666666663], [1.71997044E12, 288.5833333333333]], "isOverall": false, "label": "trackVehicleExitOutEntry", "isController": false}, {"data": [[1.71997008E12, 956.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71997068E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 307.0, "minX": 1.71997008E12, "maxY": 26291.0, "series": [{"data": [[1.7199705E12, 2946.0], [1.71997032E12, 26271.0], [1.71997038E12, 3491.0], [1.7199702E12, 2479.0], [1.71997068E12, 3003.0], [1.71997026E12, 833.0], [1.71997008E12, 1303.0], [1.71997056E12, 3284.0], [1.71997014E12, 977.0], [1.71997062E12, 2292.0], [1.71997044E12, 26291.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7199705E12, 1532.0], [1.71997032E12, 879.5999999999997], [1.71997038E12, 1145.0], [1.7199702E12, 556.4000000000001], [1.71997068E12, 1970.8000000000002], [1.71997026E12, 568.7], [1.71997008E12, 437.7], [1.71997056E12, 1682.2], [1.71997014E12, 542.0], [1.71997062E12, 1643.2000000000003], [1.71997044E12, 1461.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7199705E12, 2096.0800000000004], [1.71997032E12, 24639.150000000005], [1.71997038E12, 2494.759999999996], [1.7199702E12, 1792.1200000000147], [1.71997068E12, 2963.84], [1.71997026E12, 820.2500000000002], [1.71997008E12, 1303.0], [1.71997056E12, 2896.1599999999967], [1.71997014E12, 950.539999999999], [1.71997062E12, 2116.439999999998], [1.71997044E12, 5640.499999999869]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7199705E12, 1763.3999999999996], [1.71997032E12, 1089.8499999999995], [1.71997038E12, 1319.1999999999994], [1.7199702E12, 633.3999999999997], [1.71997068E12, 2313.699999999999], [1.71997026E12, 679.2999999999998], [1.71997008E12, 749.8499999999982], [1.71997056E12, 2075.6], [1.71997014E12, 648.2999999999998], [1.71997062E12, 1848.3000000000002], [1.71997044E12, 1901.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.7199705E12, 311.0], [1.71997032E12, 307.0], [1.71997038E12, 316.0], [1.7199702E12, 314.0], [1.71997068E12, 311.0], [1.71997026E12, 314.0], [1.71997008E12, 332.0], [1.71997056E12, 315.0], [1.71997014E12, 310.0], [1.71997062E12, 308.0], [1.71997044E12, 311.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7199705E12, 442.0], [1.71997032E12, 401.0], [1.71997038E12, 430.0], [1.7199702E12, 425.0], [1.71997068E12, 417.0], [1.71997026E12, 411.5], [1.71997008E12, 386.5], [1.71997056E12, 457.0], [1.71997014E12, 382.0], [1.71997062E12, 422.5], [1.71997044E12, 425.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71997068E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 395.0, "minX": 1.0, "maxY": 626.0, "series": [{"data": [[1.0, 415.0], [2.0, 395.0], [4.0, 447.0], [5.0, 626.0], [3.0, 419.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 493.5], [2.0, 502.5], [5.0, 509.0], [3.0, 497.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 5.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 395.0, "minX": 1.0, "maxY": 626.0, "series": [{"data": [[1.0, 414.5], [2.0, 395.0], [4.0, 447.0], [5.0, 626.0], [3.0, 419.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 493.5], [2.0, 502.5], [5.0, 509.0], [3.0, 497.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 5.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.55, "minX": 1.71997008E12, "maxY": 3.4, "series": [{"data": [[1.7199705E12, 3.4], [1.71997032E12, 2.783333333333333], [1.71997038E12, 3.066666666666667], [1.7199702E12, 2.45], [1.71997068E12, 2.3], [1.71997026E12, 2.5], [1.71997008E12, 0.55], [1.71997056E12, 3.2333333333333334], [1.71997014E12, 1.9666666666666666], [1.71997062E12, 3.3833333333333333], [1.71997044E12, 3.1666666666666665]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71997068E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.18333333333333332, "minX": 1.71997008E12, "maxY": 1.8166666666666667, "series": [{"data": [[1.7199705E12, 1.7833333333333334], [1.71997032E12, 1.8166666666666667], [1.71997038E12, 1.75], [1.7199702E12, 1.7333333333333334], [1.71997068E12, 1.25], [1.71997026E12, 1.7666666666666666], [1.71997008E12, 0.5333333333333333], [1.71997056E12, 1.75], [1.71997014E12, 1.7666666666666666], [1.71997062E12, 1.7833333333333334], [1.71997044E12, 1.7833333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.7199705E12, 1.6], [1.71997032E12, 0.9833333333333333], [1.71997038E12, 1.3], [1.7199702E12, 0.7166666666666667], [1.71997068E12, 0.5833333333333334], [1.71997026E12, 0.7333333333333333], [1.71997056E12, 1.5], [1.71997014E12, 0.18333333333333332], [1.71997062E12, 1.15], [1.71997044E12, 1.3666666666666667]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.71997068E12, 0.5], [1.71997062E12, 0.4666666666666667]], "isOverall": false, "label": "409", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71997068E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71997008E12, "maxY": 1.8166666666666667, "series": [{"data": [[1.71997008E12, 0.016666666666666666]], "isOverall": false, "label": "loginAFlypass-success", "isController": false}, {"data": [[1.7199705E12, 0.7], [1.71997032E12, 0.7166666666666667], [1.71997038E12, 0.7], [1.7199702E12, 0.7166666666666667], [1.71997026E12, 0.7333333333333333], [1.71997056E12, 0.65], [1.71997014E12, 0.18333333333333332], [1.71997062E12, 0.25], [1.71997044E12, 0.6666666666666666]], "isOverall": false, "label": "trackVehicleEntry-success", "isController": false}, {"data": [[1.7199705E12, 0.5166666666666667], [1.71997032E12, 0.26666666666666666], [1.71997038E12, 0.5], [1.71997068E12, 0.35], [1.71997056E12, 0.5], [1.71997062E12, 0.5], [1.71997044E12, 0.5]], "isOverall": false, "label": "trackVehicleExit-success", "isController": false}, {"data": [[1.71997068E12, 0.5], [1.71997062E12, 0.4666666666666667]], "isOverall": false, "label": "trackVehicleEntry-failure", "isController": false}, {"data": [[1.7199705E12, 1.7833333333333334], [1.71997032E12, 1.8166666666666667], [1.71997038E12, 1.75], [1.7199702E12, 1.7333333333333334], [1.71997068E12, 1.25], [1.71997026E12, 1.7666666666666666], [1.71997008E12, 0.5166666666666667], [1.71997056E12, 1.75], [1.71997014E12, 1.7666666666666666], [1.71997062E12, 1.7833333333333334], [1.71997044E12, 1.7833333333333334]], "isOverall": false, "label": "getPlate-success", "isController": false}, {"data": [[1.7199705E12, 0.38333333333333336], [1.71997038E12, 0.1], [1.71997068E12, 0.23333333333333334], [1.71997056E12, 0.35], [1.71997062E12, 0.4], [1.71997044E12, 0.2]], "isOverall": false, "label": "trackVehicleExitOutEntry-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71997068E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.4666666666666667, "minX": 1.71997008E12, "maxY": 3.3833333333333333, "series": [{"data": [[1.7199705E12, 3.3833333333333333], [1.71997032E12, 2.8], [1.71997038E12, 3.05], [1.7199702E12, 2.45], [1.71997068E12, 1.8333333333333333], [1.71997026E12, 2.5], [1.71997008E12, 0.5333333333333333], [1.71997056E12, 3.25], [1.71997014E12, 1.95], [1.71997062E12, 2.933333333333333], [1.71997044E12, 3.15]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.71997068E12, 0.5], [1.71997062E12, 0.4666666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71997068E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

