/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 309.0, "minX": 0.0, "maxY": 25830.0, "series": [{"data": [[0.0, 678.0], [0.1, 678.0], [0.2, 678.0], [0.3, 678.0], [0.4, 678.0], [0.5, 735.0], [0.6, 735.0], [0.7, 735.0], [0.8, 735.0], [0.9, 735.0], [1.0, 748.0], [1.1, 748.0], [1.2, 748.0], [1.3, 748.0], [1.4, 763.0], [1.5, 763.0], [1.6, 763.0], [1.7, 763.0], [1.8, 763.0], [1.9, 765.0], [2.0, 765.0], [2.1, 765.0], [2.2, 765.0], [2.3, 765.0], [2.4, 765.0], [2.5, 765.0], [2.6, 765.0], [2.7, 765.0], [2.8, 768.0], [2.9, 768.0], [3.0, 768.0], [3.1, 768.0], [3.2, 770.0], [3.3, 770.0], [3.4, 770.0], [3.5, 770.0], [3.6, 770.0], [3.7, 771.0], [3.8, 771.0], [3.9, 771.0], [4.0, 771.0], [4.1, 774.0], [4.2, 774.0], [4.3, 774.0], [4.4, 774.0], [4.5, 774.0], [4.6, 780.0], [4.7, 780.0], [4.8, 780.0], [4.9, 780.0], [5.0, 784.0], [5.1, 784.0], [5.2, 784.0], [5.3, 784.0], [5.4, 784.0], [5.5, 785.0], [5.6, 785.0], [5.7, 785.0], [5.8, 785.0], [5.9, 793.0], [6.0, 793.0], [6.1, 793.0], [6.2, 793.0], [6.3, 793.0], [6.4, 796.0], [6.5, 796.0], [6.6, 796.0], [6.7, 796.0], [6.8, 797.0], [6.9, 797.0], [7.0, 797.0], [7.1, 797.0], [7.2, 797.0], [7.3, 803.0], [7.4, 803.0], [7.5, 803.0], [7.6, 803.0], [7.7, 806.0], [7.8, 806.0], [7.9, 806.0], [8.0, 806.0], [8.1, 806.0], [8.2, 811.0], [8.3, 811.0], [8.4, 811.0], [8.5, 811.0], [8.6, 812.0], [8.7, 812.0], [8.8, 812.0], [8.9, 812.0], [9.0, 812.0], [9.1, 813.0], [9.2, 813.0], [9.3, 813.0], [9.4, 813.0], [9.5, 814.0], [9.6, 814.0], [9.7, 814.0], [9.8, 814.0], [9.9, 814.0], [10.0, 815.0], [10.1, 815.0], [10.2, 815.0], [10.3, 815.0], [10.4, 819.0], [10.5, 819.0], [10.6, 819.0], [10.7, 819.0], [10.8, 819.0], [10.9, 819.0], [11.0, 819.0], [11.1, 819.0], [11.2, 819.0], [11.3, 825.0], [11.4, 825.0], [11.5, 825.0], [11.6, 825.0], [11.7, 825.0], [11.8, 828.0], [11.9, 828.0], [12.0, 828.0], [12.1, 828.0], [12.2, 829.0], [12.3, 829.0], [12.4, 829.0], [12.5, 829.0], [12.6, 829.0], [12.7, 829.0], [12.8, 829.0], [12.9, 829.0], [13.0, 829.0], [13.1, 830.0], [13.2, 830.0], [13.3, 830.0], [13.4, 830.0], [13.5, 830.0], [13.6, 832.0], [13.7, 832.0], [13.8, 832.0], [13.9, 832.0], [14.0, 834.0], [14.1, 834.0], [14.2, 834.0], [14.3, 834.0], [14.4, 834.0], [14.5, 837.0], [14.6, 837.0], [14.7, 837.0], [14.8, 837.0], [14.9, 838.0], [15.0, 838.0], [15.1, 838.0], [15.2, 838.0], [15.3, 838.0], [15.4, 838.0], [15.5, 838.0], [15.6, 838.0], [15.7, 838.0], [15.8, 841.0], [15.9, 841.0], [16.0, 841.0], [16.1, 841.0], [16.2, 841.0], [16.3, 842.0], [16.4, 842.0], [16.5, 842.0], [16.6, 842.0], [16.7, 842.0], [16.8, 842.0], [16.9, 842.0], [17.0, 842.0], [17.1, 842.0], [17.2, 843.0], [17.3, 843.0], [17.4, 843.0], [17.5, 843.0], [17.6, 843.0], [17.7, 843.0], [17.8, 843.0], [17.9, 843.0], [18.0, 843.0], [18.1, 843.0], [18.2, 843.0], [18.3, 843.0], [18.4, 843.0], [18.5, 850.0], [18.6, 850.0], [18.7, 850.0], [18.8, 850.0], [18.9, 850.0], [19.0, 852.0], [19.1, 852.0], [19.2, 852.0], [19.3, 852.0], [19.4, 853.0], [19.5, 853.0], [19.6, 853.0], [19.7, 853.0], [19.8, 853.0], [19.9, 853.0], [20.0, 853.0], [20.1, 853.0], [20.2, 853.0], [20.3, 857.0], [20.4, 857.0], [20.5, 857.0], [20.6, 857.0], [20.7, 857.0], [20.8, 858.0], [20.9, 858.0], [21.0, 858.0], [21.1, 858.0], [21.2, 859.0], [21.3, 859.0], [21.4, 859.0], [21.5, 859.0], [21.6, 859.0], [21.7, 863.0], [21.8, 863.0], [21.9, 863.0], [22.0, 863.0], [22.1, 864.0], [22.2, 864.0], [22.3, 864.0], [22.4, 864.0], [22.5, 864.0], [22.6, 866.0], [22.7, 866.0], [22.8, 866.0], [22.9, 866.0], [23.0, 866.0], [23.1, 866.0], [23.2, 866.0], [23.3, 866.0], [23.4, 866.0], [23.5, 867.0], [23.6, 867.0], [23.7, 867.0], [23.8, 867.0], [23.9, 868.0], [24.0, 868.0], [24.1, 868.0], [24.2, 868.0], [24.3, 868.0], [24.4, 869.0], [24.5, 869.0], [24.6, 869.0], [24.7, 869.0], [24.8, 869.0], [24.9, 869.0], [25.0, 869.0], [25.1, 869.0], [25.2, 869.0], [25.3, 870.0], [25.4, 870.0], [25.5, 870.0], [25.6, 870.0], [25.7, 872.0], [25.8, 872.0], [25.9, 872.0], [26.0, 872.0], [26.1, 872.0], [26.2, 873.0], [26.3, 873.0], [26.4, 873.0], [26.5, 873.0], [26.6, 874.0], [26.7, 874.0], [26.8, 874.0], [26.9, 874.0], [27.0, 874.0], [27.1, 875.0], [27.2, 875.0], [27.3, 875.0], [27.4, 875.0], [27.5, 876.0], [27.6, 876.0], [27.7, 876.0], [27.8, 876.0], [27.9, 876.0], [28.0, 877.0], [28.1, 877.0], [28.2, 877.0], [28.3, 877.0], [28.4, 882.0], [28.5, 882.0], [28.6, 882.0], [28.7, 882.0], [28.8, 882.0], [28.9, 883.0], [29.0, 883.0], [29.1, 883.0], [29.2, 883.0], [29.3, 885.0], [29.4, 885.0], [29.5, 885.0], [29.6, 885.0], [29.7, 885.0], [29.8, 885.0], [29.9, 885.0], [30.0, 885.0], [30.1, 885.0], [30.2, 890.0], [30.3, 890.0], [30.4, 890.0], [30.5, 890.0], [30.6, 890.0], [30.7, 893.0], [30.8, 893.0], [30.9, 893.0], [31.0, 893.0], [31.1, 894.0], [31.2, 894.0], [31.3, 894.0], [31.4, 894.0], [31.5, 894.0], [31.6, 895.0], [31.7, 895.0], [31.8, 895.0], [31.9, 895.0], [32.0, 896.0], [32.1, 896.0], [32.2, 896.0], [32.3, 896.0], [32.4, 896.0], [32.5, 896.0], [32.6, 896.0], [32.7, 896.0], [32.8, 896.0], [32.9, 897.0], [33.0, 897.0], [33.1, 897.0], [33.2, 897.0], [33.3, 897.0], [33.4, 897.0], [33.5, 897.0], [33.6, 897.0], [33.7, 897.0], [33.8, 898.0], [33.9, 898.0], [34.0, 898.0], [34.1, 898.0], [34.2, 898.0], [34.3, 899.0], [34.4, 899.0], [34.5, 899.0], [34.6, 899.0], [34.7, 900.0], [34.8, 900.0], [34.9, 900.0], [35.0, 900.0], [35.1, 900.0], [35.2, 900.0], [35.3, 900.0], [35.4, 900.0], [35.5, 900.0], [35.6, 901.0], [35.7, 901.0], [35.8, 901.0], [35.9, 901.0], [36.0, 901.0], [36.1, 901.0], [36.2, 901.0], [36.3, 901.0], [36.4, 901.0], [36.5, 902.0], [36.6, 902.0], [36.7, 902.0], [36.8, 902.0], [36.9, 902.0], [37.0, 903.0], [37.1, 903.0], [37.2, 903.0], [37.3, 903.0], [37.4, 903.0], [37.5, 903.0], [37.6, 903.0], [37.7, 903.0], [37.8, 903.0], [37.9, 904.0], [38.0, 904.0], [38.1, 904.0], [38.2, 904.0], [38.3, 905.0], [38.4, 905.0], [38.5, 905.0], [38.6, 905.0], [38.7, 905.0], [38.8, 906.0], [38.9, 906.0], [39.0, 906.0], [39.1, 906.0], [39.2, 906.0], [39.3, 906.0], [39.4, 906.0], [39.5, 906.0], [39.6, 906.0], [39.7, 909.0], [39.8, 909.0], [39.9, 909.0], [40.0, 909.0], [40.1, 910.0], [40.2, 910.0], [40.3, 910.0], [40.4, 910.0], [40.5, 910.0], [40.6, 910.0], [40.7, 910.0], [40.8, 910.0], [40.9, 910.0], [41.0, 910.0], [41.1, 910.0], [41.2, 910.0], [41.3, 910.0], [41.4, 910.0], [41.5, 914.0], [41.6, 914.0], [41.7, 914.0], [41.8, 914.0], [41.9, 914.0], [42.0, 914.0], [42.1, 914.0], [42.2, 914.0], [42.3, 914.0], [42.4, 916.0], [42.5, 916.0], [42.6, 916.0], [42.7, 916.0], [42.8, 916.0], [42.9, 916.0], [43.0, 916.0], [43.1, 916.0], [43.2, 916.0], [43.3, 917.0], [43.4, 917.0], [43.5, 917.0], [43.6, 917.0], [43.7, 919.0], [43.8, 919.0], [43.9, 919.0], [44.0, 919.0], [44.1, 919.0], [44.2, 920.0], [44.3, 920.0], [44.4, 920.0], [44.5, 920.0], [44.6, 923.0], [44.7, 923.0], [44.8, 923.0], [44.9, 923.0], [45.0, 923.0], [45.1, 923.0], [45.2, 923.0], [45.3, 923.0], [45.4, 923.0], [45.5, 924.0], [45.6, 924.0], [45.7, 924.0], [45.8, 924.0], [45.9, 924.0], [46.0, 927.0], [46.1, 927.0], [46.2, 927.0], [46.3, 927.0], [46.4, 928.0], [46.5, 928.0], [46.6, 928.0], [46.7, 928.0], [46.8, 928.0], [46.9, 929.0], [47.0, 929.0], [47.1, 929.0], [47.2, 929.0], [47.3, 931.0], [47.4, 931.0], [47.5, 931.0], [47.6, 931.0], [47.7, 931.0], [47.8, 933.0], [47.9, 933.0], [48.0, 933.0], [48.1, 933.0], [48.2, 933.0], [48.3, 933.0], [48.4, 933.0], [48.5, 933.0], [48.6, 933.0], [48.7, 934.0], [48.8, 934.0], [48.9, 934.0], [49.0, 934.0], [49.1, 937.0], [49.2, 937.0], [49.3, 937.0], [49.4, 937.0], [49.5, 937.0], [49.6, 937.0], [49.7, 937.0], [49.8, 937.0], [49.9, 937.0], [50.0, 937.0], [50.1, 938.0], [50.2, 938.0], [50.3, 938.0], [50.4, 938.0], [50.5, 939.0], [50.6, 939.0], [50.7, 939.0], [50.8, 939.0], [50.9, 939.0], [51.0, 940.0], [51.1, 940.0], [51.2, 940.0], [51.3, 940.0], [51.4, 942.0], [51.5, 942.0], [51.6, 942.0], [51.7, 942.0], [51.8, 942.0], [51.9, 945.0], [52.0, 945.0], [52.1, 945.0], [52.2, 945.0], [52.3, 946.0], [52.4, 946.0], [52.5, 946.0], [52.6, 946.0], [52.7, 946.0], [52.8, 950.0], [52.9, 950.0], [53.0, 950.0], [53.1, 950.0], [53.2, 953.0], [53.3, 953.0], [53.4, 953.0], [53.5, 953.0], [53.6, 953.0], [53.7, 953.0], [53.8, 953.0], [53.9, 953.0], [54.0, 953.0], [54.1, 953.0], [54.2, 953.0], [54.3, 953.0], [54.4, 953.0], [54.5, 953.0], [54.6, 954.0], [54.7, 954.0], [54.8, 954.0], [54.9, 954.0], [55.0, 954.0], [55.1, 954.0], [55.2, 954.0], [55.3, 954.0], [55.4, 954.0], [55.5, 960.0], [55.6, 960.0], [55.7, 960.0], [55.8, 960.0], [55.9, 961.0], [56.0, 961.0], [56.1, 961.0], [56.2, 961.0], [56.3, 961.0], [56.4, 964.0], [56.5, 964.0], [56.6, 964.0], [56.7, 964.0], [56.8, 970.0], [56.9, 970.0], [57.0, 970.0], [57.1, 970.0], [57.2, 970.0], [57.3, 970.0], [57.4, 970.0], [57.5, 970.0], [57.6, 970.0], [57.7, 971.0], [57.8, 971.0], [57.9, 971.0], [58.0, 971.0], [58.1, 971.0], [58.2, 972.0], [58.3, 972.0], [58.4, 972.0], [58.5, 972.0], [58.6, 973.0], [58.7, 973.0], [58.8, 973.0], [58.9, 973.0], [59.0, 973.0], [59.1, 973.0], [59.2, 973.0], [59.3, 973.0], [59.4, 973.0], [59.5, 976.0], [59.6, 976.0], [59.7, 976.0], [59.8, 976.0], [59.9, 976.0], [60.0, 977.0], [60.1, 977.0], [60.2, 977.0], [60.3, 977.0], [60.4, 980.0], [60.5, 980.0], [60.6, 980.0], [60.7, 980.0], [60.8, 980.0], [60.9, 981.0], [61.0, 981.0], [61.1, 981.0], [61.2, 981.0], [61.3, 981.0], [61.4, 981.0], [61.5, 981.0], [61.6, 981.0], [61.7, 981.0], [61.8, 982.0], [61.9, 982.0], [62.0, 982.0], [62.1, 982.0], [62.2, 985.0], [62.3, 985.0], [62.4, 985.0], [62.5, 985.0], [62.6, 985.0], [62.7, 988.0], [62.8, 988.0], [62.9, 988.0], [63.0, 988.0], [63.1, 992.0], [63.2, 992.0], [63.3, 992.0], [63.4, 992.0], [63.5, 992.0], [63.6, 992.0], [63.7, 992.0], [63.8, 992.0], [63.9, 992.0], [64.0, 993.0], [64.1, 993.0], [64.2, 993.0], [64.3, 993.0], [64.4, 993.0], [64.5, 994.0], [64.6, 994.0], [64.7, 994.0], [64.8, 994.0], [64.9, 996.0], [65.0, 996.0], [65.1, 996.0], [65.2, 996.0], [65.3, 996.0], [65.4, 998.0], [65.5, 998.0], [65.6, 998.0], [65.7, 998.0], [65.8, 999.0], [65.9, 999.0], [66.0, 999.0], [66.1, 999.0], [66.2, 999.0], [66.3, 1002.0], [66.4, 1002.0], [66.5, 1002.0], [66.6, 1002.0], [66.7, 1006.0], [66.8, 1006.0], [66.9, 1006.0], [67.0, 1006.0], [67.1, 1006.0], [67.2, 1009.0], [67.3, 1009.0], [67.4, 1009.0], [67.5, 1009.0], [67.6, 1011.0], [67.7, 1011.0], [67.8, 1011.0], [67.9, 1011.0], [68.0, 1011.0], [68.1, 1019.0], [68.2, 1019.0], [68.3, 1019.0], [68.4, 1019.0], [68.5, 1026.0], [68.6, 1026.0], [68.7, 1026.0], [68.8, 1026.0], [68.9, 1026.0], [69.0, 1031.0], [69.1, 1031.0], [69.2, 1031.0], [69.3, 1031.0], [69.4, 1033.0], [69.5, 1033.0], [69.6, 1033.0], [69.7, 1033.0], [69.8, 1033.0], [69.9, 1033.0], [70.0, 1033.0], [70.1, 1033.0], [70.2, 1033.0], [70.3, 1034.0], [70.4, 1034.0], [70.5, 1034.0], [70.6, 1034.0], [70.7, 1034.0], [70.8, 1035.0], [70.9, 1035.0], [71.0, 1035.0], [71.1, 1035.0], [71.2, 1036.0], [71.3, 1036.0], [71.4, 1036.0], [71.5, 1036.0], [71.6, 1036.0], [71.7, 1037.0], [71.8, 1037.0], [71.9, 1037.0], [72.0, 1037.0], [72.1, 1043.0], [72.2, 1043.0], [72.3, 1043.0], [72.4, 1043.0], [72.5, 1043.0], [72.6, 1043.0], [72.7, 1043.0], [72.8, 1043.0], [72.9, 1043.0], [73.0, 1051.0], [73.1, 1051.0], [73.2, 1051.0], [73.3, 1051.0], [73.4, 1051.0], [73.5, 1052.0], [73.6, 1052.0], [73.7, 1052.0], [73.8, 1052.0], [73.9, 1054.0], [74.0, 1054.0], [74.1, 1054.0], [74.2, 1054.0], [74.3, 1054.0], [74.4, 1054.0], [74.5, 1054.0], [74.6, 1054.0], [74.7, 1054.0], [74.8, 1056.0], [74.9, 1056.0], [75.0, 1056.0], [75.1, 1056.0], [75.2, 1056.0], [75.3, 1056.0], [75.4, 1056.0], [75.5, 1056.0], [75.6, 1056.0], [75.7, 1064.0], [75.8, 1064.0], [75.9, 1064.0], [76.0, 1064.0], [76.1, 1064.0], [76.2, 1066.0], [76.3, 1066.0], [76.4, 1066.0], [76.5, 1066.0], [76.6, 1068.0], [76.7, 1068.0], [76.8, 1068.0], [76.9, 1068.0], [77.0, 1068.0], [77.1, 1069.0], [77.2, 1069.0], [77.3, 1069.0], [77.4, 1069.0], [77.5, 1071.0], [77.6, 1071.0], [77.7, 1071.0], [77.8, 1071.0], [77.9, 1071.0], [78.0, 1072.0], [78.1, 1072.0], [78.2, 1072.0], [78.3, 1072.0], [78.4, 1073.0], [78.5, 1073.0], [78.6, 1073.0], [78.7, 1073.0], [78.8, 1073.0], [78.9, 1076.0], [79.0, 1076.0], [79.1, 1076.0], [79.2, 1076.0], [79.3, 1085.0], [79.4, 1085.0], [79.5, 1085.0], [79.6, 1085.0], [79.7, 1085.0], [79.8, 1085.0], [79.9, 1085.0], [80.0, 1085.0], [80.1, 1085.0], [80.2, 1102.0], [80.3, 1102.0], [80.4, 1102.0], [80.5, 1102.0], [80.6, 1102.0], [80.7, 1104.0], [80.8, 1104.0], [80.9, 1104.0], [81.0, 1104.0], [81.1, 1106.0], [81.2, 1106.0], [81.3, 1106.0], [81.4, 1106.0], [81.5, 1106.0], [81.6, 1110.0], [81.7, 1110.0], [81.8, 1110.0], [81.9, 1110.0], [82.0, 1115.0], [82.1, 1115.0], [82.2, 1115.0], [82.3, 1115.0], [82.4, 1115.0], [82.5, 1120.0], [82.6, 1120.0], [82.7, 1120.0], [82.8, 1120.0], [82.9, 1140.0], [83.0, 1140.0], [83.1, 1140.0], [83.2, 1140.0], [83.3, 1140.0], [83.4, 1147.0], [83.5, 1147.0], [83.6, 1147.0], [83.7, 1147.0], [83.8, 1153.0], [83.9, 1153.0], [84.0, 1153.0], [84.1, 1153.0], [84.2, 1153.0], [84.3, 1155.0], [84.4, 1155.0], [84.5, 1155.0], [84.6, 1155.0], [84.7, 1160.0], [84.8, 1160.0], [84.9, 1160.0], [85.0, 1160.0], [85.1, 1160.0], [85.2, 1162.0], [85.3, 1162.0], [85.4, 1162.0], [85.5, 1162.0], [85.6, 1166.0], [85.7, 1166.0], [85.8, 1166.0], [85.9, 1166.0], [86.0, 1166.0], [86.1, 1169.0], [86.2, 1169.0], [86.3, 1169.0], [86.4, 1169.0], [86.5, 1178.0], [86.6, 1178.0], [86.7, 1178.0], [86.8, 1178.0], [86.9, 1178.0], [87.0, 1185.0], [87.1, 1185.0], [87.2, 1185.0], [87.3, 1185.0], [87.4, 1203.0], [87.5, 1203.0], [87.6, 1203.0], [87.7, 1203.0], [87.8, 1203.0], [87.9, 1213.0], [88.0, 1213.0], [88.1, 1213.0], [88.2, 1213.0], [88.3, 1227.0], [88.4, 1227.0], [88.5, 1227.0], [88.6, 1227.0], [88.7, 1227.0], [88.8, 1237.0], [88.9, 1237.0], [89.0, 1237.0], [89.1, 1237.0], [89.2, 1239.0], [89.3, 1239.0], [89.4, 1239.0], [89.5, 1239.0], [89.6, 1239.0], [89.7, 1249.0], [89.8, 1249.0], [89.9, 1249.0], [90.0, 1249.0], [90.1, 1268.0], [90.2, 1268.0], [90.3, 1268.0], [90.4, 1268.0], [90.5, 1268.0], [90.6, 1276.0], [90.7, 1276.0], [90.8, 1276.0], [90.9, 1276.0], [91.0, 1288.0], [91.1, 1288.0], [91.2, 1288.0], [91.3, 1288.0], [91.4, 1288.0], [91.5, 1288.0], [91.6, 1288.0], [91.7, 1288.0], [91.8, 1288.0], [91.9, 1289.0], [92.0, 1289.0], [92.1, 1289.0], [92.2, 1289.0], [92.3, 1289.0], [92.4, 1298.0], [92.5, 1298.0], [92.6, 1298.0], [92.7, 1298.0], [92.8, 1343.0], [92.9, 1343.0], [93.0, 1343.0], [93.1, 1343.0], [93.2, 1343.0], [93.3, 1351.0], [93.4, 1351.0], [93.5, 1351.0], [93.6, 1351.0], [93.7, 1360.0], [93.8, 1360.0], [93.9, 1360.0], [94.0, 1360.0], [94.1, 1360.0], [94.2, 1373.0], [94.3, 1373.0], [94.4, 1373.0], [94.5, 1373.0], [94.6, 1378.0], [94.7, 1378.0], [94.8, 1378.0], [94.9, 1378.0], [95.0, 1378.0], [95.1, 1382.0], [95.2, 1382.0], [95.3, 1382.0], [95.4, 1382.0], [95.5, 1387.0], [95.6, 1387.0], [95.7, 1387.0], [95.8, 1387.0], [95.9, 1387.0], [96.0, 1393.0], [96.1, 1393.0], [96.2, 1393.0], [96.3, 1393.0], [96.4, 1427.0], [96.5, 1427.0], [96.6, 1427.0], [96.7, 1427.0], [96.8, 1427.0], [96.9, 1510.0], [97.0, 1510.0], [97.1, 1510.0], [97.2, 1510.0], [97.3, 1555.0], [97.4, 1555.0], [97.5, 1555.0], [97.6, 1555.0], [97.7, 1555.0], [97.8, 1582.0], [97.9, 1582.0], [98.0, 1582.0], [98.1, 1582.0], [98.2, 1608.0], [98.3, 1608.0], [98.4, 1608.0], [98.5, 1608.0], [98.6, 1608.0], [98.7, 1617.0], [98.8, 1617.0], [98.9, 1617.0], [99.0, 1617.0], [99.1, 2003.0], [99.2, 2003.0], [99.3, 2003.0], [99.4, 2003.0], [99.5, 2003.0], [99.6, 25585.0], [99.7, 25585.0], [99.8, 25585.0], [99.9, 25585.0]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[0.0, 407.0], [0.1, 407.0], [0.2, 407.0], [0.3, 415.0], [0.4, 415.0], [0.5, 415.0], [0.6, 417.0], [0.7, 417.0], [0.8, 417.0], [0.9, 422.0], [1.0, 422.0], [1.1, 423.0], [1.2, 423.0], [1.3, 423.0], [1.4, 426.0], [1.5, 426.0], [1.6, 426.0], [1.7, 428.0], [1.8, 428.0], [1.9, 428.0], [2.0, 431.0], [2.1, 431.0], [2.2, 437.0], [2.3, 437.0], [2.4, 437.0], [2.5, 437.0], [2.6, 437.0], [2.7, 437.0], [2.8, 444.0], [2.9, 444.0], [3.0, 450.0], [3.1, 450.0], [3.2, 450.0], [3.3, 451.0], [3.4, 451.0], [3.5, 451.0], [3.6, 453.0], [3.7, 453.0], [3.8, 453.0], [3.9, 454.0], [4.0, 454.0], [4.1, 456.0], [4.2, 456.0], [4.3, 456.0], [4.4, 457.0], [4.5, 457.0], [4.6, 457.0], [4.7, 457.0], [4.8, 457.0], [4.9, 458.0], [5.0, 458.0], [5.1, 458.0], [5.2, 458.0], [5.3, 458.0], [5.4, 458.0], [5.5, 459.0], [5.6, 459.0], [5.7, 459.0], [5.8, 461.0], [5.9, 461.0], [6.0, 462.0], [6.1, 462.0], [6.2, 462.0], [6.3, 463.0], [6.4, 463.0], [6.5, 463.0], [6.6, 465.0], [6.7, 465.0], [6.8, 467.0], [6.9, 467.0], [7.0, 467.0], [7.1, 468.0], [7.2, 468.0], [7.3, 468.0], [7.4, 470.0], [7.5, 470.0], [7.6, 470.0], [7.7, 470.0], [7.8, 470.0], [7.9, 470.0], [8.0, 470.0], [8.1, 470.0], [8.2, 471.0], [8.3, 471.0], [8.4, 471.0], [8.5, 471.0], [8.6, 471.0], [8.7, 472.0], [8.8, 472.0], [8.9, 472.0], [9.0, 472.0], [9.1, 472.0], [9.2, 472.0], [9.3, 473.0], [9.4, 473.0], [9.5, 473.0], [9.6, 473.0], [9.7, 473.0], [9.8, 475.0], [9.9, 475.0], [10.0, 475.0], [10.1, 477.0], [10.2, 477.0], [10.3, 477.0], [10.4, 480.0], [10.5, 480.0], [10.6, 480.0], [10.7, 480.0], [10.8, 480.0], [10.9, 480.0], [11.0, 480.0], [11.1, 480.0], [11.2, 480.0], [11.3, 480.0], [11.4, 480.0], [11.5, 481.0], [11.6, 481.0], [11.7, 482.0], [11.8, 482.0], [11.9, 482.0], [12.0, 483.0], [12.1, 483.0], [12.2, 483.0], [12.3, 484.0], [12.4, 484.0], [12.5, 485.0], [12.6, 485.0], [12.7, 485.0], [12.8, 485.0], [12.9, 485.0], [13.0, 485.0], [13.1, 485.0], [13.2, 485.0], [13.3, 485.0], [13.4, 486.0], [13.5, 486.0], [13.6, 487.0], [13.7, 487.0], [13.8, 487.0], [13.9, 488.0], [14.0, 488.0], [14.1, 488.0], [14.2, 491.0], [14.3, 491.0], [14.4, 491.0], [14.5, 492.0], [14.6, 492.0], [14.7, 494.0], [14.8, 494.0], [14.9, 494.0], [15.0, 494.0], [15.1, 494.0], [15.2, 494.0], [15.3, 494.0], [15.4, 494.0], [15.5, 494.0], [15.6, 494.0], [15.7, 494.0], [15.8, 495.0], [15.9, 495.0], [16.0, 495.0], [16.1, 496.0], [16.2, 496.0], [16.3, 496.0], [16.4, 496.0], [16.5, 496.0], [16.6, 497.0], [16.7, 497.0], [16.8, 497.0], [16.9, 498.0], [17.0, 498.0], [17.1, 498.0], [17.2, 498.0], [17.3, 498.0], [17.4, 499.0], [17.5, 499.0], [17.6, 499.0], [17.7, 499.0], [17.8, 499.0], [17.9, 499.0], [18.0, 500.0], [18.1, 500.0], [18.2, 500.0], [18.3, 503.0], [18.4, 503.0], [18.5, 503.0], [18.6, 503.0], [18.7, 503.0], [18.8, 503.0], [18.9, 503.0], [19.0, 503.0], [19.1, 503.0], [19.2, 503.0], [19.3, 504.0], [19.4, 504.0], [19.5, 504.0], [19.6, 504.0], [19.7, 504.0], [19.8, 504.0], [19.9, 505.0], [20.0, 505.0], [20.1, 505.0], [20.2, 505.0], [20.3, 505.0], [20.4, 506.0], [20.5, 506.0], [20.6, 506.0], [20.7, 506.0], [20.8, 506.0], [20.9, 506.0], [21.0, 507.0], [21.1, 507.0], [21.2, 508.0], [21.3, 508.0], [21.4, 508.0], [21.5, 508.0], [21.6, 508.0], [21.7, 508.0], [21.8, 508.0], [21.9, 508.0], [22.0, 508.0], [22.1, 509.0], [22.2, 509.0], [22.3, 510.0], [22.4, 510.0], [22.5, 510.0], [22.6, 511.0], [22.7, 511.0], [22.8, 511.0], [22.9, 511.0], [23.0, 511.0], [23.1, 511.0], [23.2, 511.0], [23.3, 511.0], [23.4, 511.0], [23.5, 511.0], [23.6, 511.0], [23.7, 511.0], [23.8, 511.0], [23.9, 511.0], [24.0, 513.0], [24.1, 513.0], [24.2, 513.0], [24.3, 513.0], [24.4, 513.0], [24.5, 516.0], [24.6, 516.0], [24.7, 516.0], [24.8, 516.0], [24.9, 516.0], [25.0, 516.0], [25.1, 516.0], [25.2, 516.0], [25.3, 517.0], [25.4, 517.0], [25.5, 517.0], [25.6, 518.0], [25.7, 518.0], [25.8, 518.0], [25.9, 519.0], [26.0, 519.0], [26.1, 520.0], [26.2, 520.0], [26.3, 520.0], [26.4, 521.0], [26.5, 521.0], [26.6, 521.0], [26.7, 521.0], [26.8, 521.0], [26.9, 521.0], [27.0, 522.0], [27.1, 522.0], [27.2, 522.0], [27.3, 522.0], [27.4, 522.0], [27.5, 523.0], [27.6, 523.0], [27.7, 523.0], [27.8, 523.0], [27.9, 523.0], [28.0, 523.0], [28.1, 523.0], [28.2, 523.0], [28.3, 524.0], [28.4, 524.0], [28.5, 524.0], [28.6, 525.0], [28.7, 525.0], [28.8, 525.0], [28.9, 525.0], [29.0, 525.0], [29.1, 526.0], [29.2, 526.0], [29.3, 526.0], [29.4, 527.0], [29.5, 527.0], [29.6, 527.0], [29.7, 528.0], [29.8, 528.0], [29.9, 528.0], [30.0, 528.0], [30.1, 528.0], [30.2, 529.0], [30.3, 529.0], [30.4, 529.0], [30.5, 529.0], [30.6, 529.0], [30.7, 529.0], [30.8, 530.0], [30.9, 530.0], [31.0, 530.0], [31.1, 530.0], [31.2, 530.0], [31.3, 531.0], [31.4, 531.0], [31.5, 531.0], [31.6, 531.0], [31.7, 531.0], [31.8, 531.0], [31.9, 531.0], [32.0, 531.0], [32.1, 532.0], [32.2, 532.0], [32.3, 532.0], [32.4, 533.0], [32.5, 533.0], [32.6, 533.0], [32.7, 533.0], [32.8, 533.0], [32.9, 534.0], [33.0, 534.0], [33.1, 534.0], [33.2, 535.0], [33.3, 535.0], [33.4, 535.0], [33.5, 535.0], [33.6, 535.0], [33.7, 535.0], [33.8, 535.0], [33.9, 535.0], [34.0, 535.0], [34.1, 535.0], [34.2, 535.0], [34.3, 536.0], [34.4, 536.0], [34.5, 536.0], [34.6, 536.0], [34.7, 536.0], [34.8, 537.0], [34.9, 537.0], [35.0, 537.0], [35.1, 538.0], [35.2, 538.0], [35.3, 538.0], [35.4, 538.0], [35.5, 538.0], [35.6, 539.0], [35.7, 539.0], [35.8, 539.0], [35.9, 539.0], [36.0, 539.0], [36.1, 539.0], [36.2, 539.0], [36.3, 539.0], [36.4, 539.0], [36.5, 539.0], [36.6, 539.0], [36.7, 540.0], [36.8, 540.0], [36.9, 540.0], [37.0, 541.0], [37.1, 541.0], [37.2, 541.0], [37.3, 541.0], [37.4, 541.0], [37.5, 541.0], [37.6, 541.0], [37.7, 541.0], [37.8, 542.0], [37.9, 542.0], [38.0, 542.0], [38.1, 542.0], [38.2, 542.0], [38.3, 542.0], [38.4, 542.0], [38.5, 542.0], [38.6, 542.0], [38.7, 542.0], [38.8, 542.0], [38.9, 544.0], [39.0, 544.0], [39.1, 544.0], [39.2, 544.0], [39.3, 544.0], [39.4, 544.0], [39.5, 545.0], [39.6, 545.0], [39.7, 545.0], [39.8, 545.0], [39.9, 545.0], [40.0, 545.0], [40.1, 545.0], [40.2, 545.0], [40.3, 545.0], [40.4, 545.0], [40.5, 546.0], [40.6, 546.0], [40.7, 546.0], [40.8, 546.0], [40.9, 546.0], [41.0, 546.0], [41.1, 547.0], [41.2, 547.0], [41.3, 547.0], [41.4, 547.0], [41.5, 547.0], [41.6, 548.0], [41.7, 548.0], [41.8, 548.0], [41.9, 548.0], [42.0, 548.0], [42.1, 548.0], [42.2, 549.0], [42.3, 549.0], [42.4, 550.0], [42.5, 550.0], [42.6, 550.0], [42.7, 550.0], [42.8, 550.0], [42.9, 550.0], [43.0, 551.0], [43.1, 551.0], [43.2, 551.0], [43.3, 552.0], [43.4, 552.0], [43.5, 553.0], [43.6, 553.0], [43.7, 553.0], [43.8, 553.0], [43.9, 553.0], [44.0, 553.0], [44.1, 554.0], [44.2, 554.0], [44.3, 554.0], [44.4, 554.0], [44.5, 554.0], [44.6, 554.0], [44.7, 554.0], [44.8, 554.0], [44.9, 555.0], [45.0, 555.0], [45.1, 555.0], [45.2, 556.0], [45.3, 556.0], [45.4, 557.0], [45.5, 557.0], [45.6, 557.0], [45.7, 557.0], [45.8, 557.0], [45.9, 557.0], [46.0, 558.0], [46.1, 558.0], [46.2, 558.0], [46.3, 558.0], [46.4, 558.0], [46.5, 558.0], [46.6, 558.0], [46.7, 558.0], [46.8, 560.0], [46.9, 560.0], [47.0, 560.0], [47.1, 560.0], [47.2, 560.0], [47.3, 561.0], [47.4, 561.0], [47.5, 561.0], [47.6, 561.0], [47.7, 561.0], [47.8, 561.0], [47.9, 561.0], [48.0, 561.0], [48.1, 564.0], [48.2, 564.0], [48.3, 564.0], [48.4, 564.0], [48.5, 564.0], [48.6, 564.0], [48.7, 565.0], [48.8, 565.0], [48.9, 565.0], [49.0, 568.0], [49.1, 568.0], [49.2, 569.0], [49.3, 569.0], [49.4, 569.0], [49.5, 569.0], [49.6, 569.0], [49.7, 569.0], [49.8, 569.0], [49.9, 569.0], [50.0, 570.0], [50.1, 570.0], [50.2, 570.0], [50.3, 571.0], [50.4, 571.0], [50.5, 571.0], [50.6, 572.0], [50.7, 572.0], [50.8, 572.0], [50.9, 574.0], [51.0, 574.0], [51.1, 574.0], [51.2, 574.0], [51.3, 574.0], [51.4, 575.0], [51.5, 575.0], [51.6, 575.0], [51.7, 575.0], [51.8, 575.0], [51.9, 575.0], [52.0, 577.0], [52.1, 577.0], [52.2, 577.0], [52.3, 577.0], [52.4, 577.0], [52.5, 577.0], [52.6, 577.0], [52.7, 577.0], [52.8, 578.0], [52.9, 578.0], [53.0, 578.0], [53.1, 578.0], [53.2, 578.0], [53.3, 579.0], [53.4, 579.0], [53.5, 579.0], [53.6, 580.0], [53.7, 580.0], [53.8, 580.0], [53.9, 581.0], [54.0, 581.0], [54.1, 582.0], [54.2, 582.0], [54.3, 582.0], [54.4, 582.0], [54.5, 582.0], [54.6, 582.0], [54.7, 582.0], [54.8, 582.0], [54.9, 583.0], [55.0, 583.0], [55.1, 583.0], [55.2, 583.0], [55.3, 583.0], [55.4, 583.0], [55.5, 584.0], [55.6, 584.0], [55.7, 584.0], [55.8, 585.0], [55.9, 585.0], [56.0, 586.0], [56.1, 586.0], [56.2, 586.0], [56.3, 587.0], [56.4, 587.0], [56.5, 587.0], [56.6, 588.0], [56.7, 588.0], [56.8, 589.0], [56.9, 589.0], [57.0, 589.0], [57.1, 589.0], [57.2, 589.0], [57.3, 589.0], [57.4, 590.0], [57.5, 590.0], [57.6, 590.0], [57.7, 591.0], [57.8, 591.0], [57.9, 591.0], [58.0, 591.0], [58.1, 591.0], [58.2, 591.0], [58.3, 591.0], [58.4, 591.0], [58.5, 592.0], [58.6, 592.0], [58.7, 592.0], [58.8, 592.0], [58.9, 592.0], [59.0, 593.0], [59.1, 593.0], [59.2, 593.0], [59.3, 593.0], [59.4, 593.0], [59.5, 593.0], [59.6, 594.0], [59.7, 594.0], [59.8, 594.0], [59.9, 594.0], [60.0, 594.0], [60.1, 595.0], [60.2, 595.0], [60.3, 595.0], [60.4, 596.0], [60.5, 596.0], [60.6, 596.0], [60.7, 596.0], [60.8, 596.0], [60.9, 597.0], [61.0, 597.0], [61.1, 597.0], [61.2, 597.0], [61.3, 597.0], [61.4, 597.0], [61.5, 598.0], [61.6, 598.0], [61.7, 598.0], [61.8, 598.0], [61.9, 598.0], [62.0, 599.0], [62.1, 599.0], [62.2, 599.0], [62.3, 599.0], [62.4, 599.0], [62.5, 599.0], [62.6, 599.0], [62.7, 599.0], [62.8, 599.0], [62.9, 599.0], [63.0, 599.0], [63.1, 599.0], [63.2, 599.0], [63.3, 599.0], [63.4, 600.0], [63.5, 600.0], [63.6, 601.0], [63.7, 601.0], [63.8, 601.0], [63.9, 602.0], [64.0, 602.0], [64.1, 602.0], [64.2, 602.0], [64.3, 602.0], [64.4, 602.0], [64.5, 606.0], [64.6, 606.0], [64.7, 606.0], [64.8, 606.0], [64.9, 606.0], [65.0, 607.0], [65.1, 607.0], [65.2, 607.0], [65.3, 609.0], [65.4, 609.0], [65.5, 609.0], [65.6, 609.0], [65.7, 609.0], [65.8, 612.0], [65.9, 612.0], [66.0, 612.0], [66.1, 612.0], [66.2, 612.0], [66.3, 612.0], [66.4, 613.0], [66.5, 613.0], [66.6, 613.0], [66.7, 613.0], [66.8, 613.0], [66.9, 614.0], [67.0, 614.0], [67.1, 614.0], [67.2, 615.0], [67.3, 615.0], [67.4, 616.0], [67.5, 616.0], [67.6, 616.0], [67.7, 617.0], [67.8, 617.0], [67.9, 617.0], [68.0, 617.0], [68.1, 617.0], [68.2, 617.0], [68.3, 618.0], [68.4, 618.0], [68.5, 621.0], [68.6, 621.0], [68.7, 621.0], [68.8, 622.0], [68.9, 622.0], [69.0, 622.0], [69.1, 625.0], [69.2, 625.0], [69.3, 625.0], [69.4, 625.0], [69.5, 625.0], [69.6, 626.0], [69.7, 626.0], [69.8, 626.0], [69.9, 627.0], [70.0, 627.0], [70.1, 627.0], [70.2, 627.0], [70.3, 627.0], [70.4, 628.0], [70.5, 628.0], [70.6, 628.0], [70.7, 629.0], [70.8, 629.0], [70.9, 629.0], [71.0, 630.0], [71.1, 630.0], [71.2, 630.0], [71.3, 630.0], [71.4, 630.0], [71.5, 632.0], [71.6, 632.0], [71.7, 632.0], [71.8, 633.0], [71.9, 633.0], [72.0, 633.0], [72.1, 637.0], [72.2, 637.0], [72.3, 639.0], [72.4, 639.0], [72.5, 639.0], [72.6, 639.0], [72.7, 639.0], [72.8, 639.0], [72.9, 640.0], [73.0, 640.0], [73.1, 643.0], [73.2, 643.0], [73.3, 643.0], [73.4, 644.0], [73.5, 644.0], [73.6, 644.0], [73.7, 646.0], [73.8, 646.0], [73.9, 646.0], [74.0, 647.0], [74.1, 647.0], [74.2, 649.0], [74.3, 649.0], [74.4, 649.0], [74.5, 649.0], [74.6, 649.0], [74.7, 649.0], [74.8, 650.0], [74.9, 650.0], [75.0, 651.0], [75.1, 651.0], [75.2, 651.0], [75.3, 654.0], [75.4, 654.0], [75.5, 654.0], [75.6, 654.0], [75.7, 654.0], [75.8, 654.0], [75.9, 655.0], [76.0, 655.0], [76.1, 655.0], [76.2, 655.0], [76.3, 655.0], [76.4, 655.0], [76.5, 655.0], [76.6, 655.0], [76.7, 656.0], [76.8, 656.0], [76.9, 656.0], [77.0, 656.0], [77.1, 656.0], [77.2, 656.0], [77.3, 656.0], [77.4, 656.0], [77.5, 657.0], [77.6, 657.0], [77.7, 657.0], [77.8, 658.0], [77.9, 658.0], [78.0, 658.0], [78.1, 658.0], [78.2, 658.0], [78.3, 658.0], [78.4, 658.0], [78.5, 658.0], [78.6, 660.0], [78.7, 660.0], [78.8, 660.0], [78.9, 661.0], [79.0, 661.0], [79.1, 661.0], [79.2, 661.0], [79.3, 661.0], [79.4, 663.0], [79.5, 663.0], [79.6, 663.0], [79.7, 663.0], [79.8, 663.0], [79.9, 664.0], [80.0, 664.0], [80.1, 664.0], [80.2, 666.0], [80.3, 666.0], [80.4, 666.0], [80.5, 669.0], [80.6, 669.0], [80.7, 669.0], [80.8, 669.0], [80.9, 669.0], [81.0, 673.0], [81.1, 673.0], [81.2, 673.0], [81.3, 674.0], [81.4, 674.0], [81.5, 674.0], [81.6, 676.0], [81.7, 676.0], [81.8, 677.0], [81.9, 677.0], [82.0, 677.0], [82.1, 677.0], [82.2, 677.0], [82.3, 677.0], [82.4, 678.0], [82.5, 678.0], [82.6, 678.0], [82.7, 679.0], [82.8, 679.0], [82.9, 680.0], [83.0, 680.0], [83.1, 680.0], [83.2, 684.0], [83.3, 684.0], [83.4, 684.0], [83.5, 685.0], [83.6, 685.0], [83.7, 687.0], [83.8, 687.0], [83.9, 687.0], [84.0, 689.0], [84.1, 689.0], [84.2, 689.0], [84.3, 689.0], [84.4, 689.0], [84.5, 689.0], [84.6, 690.0], [84.7, 690.0], [84.8, 691.0], [84.9, 691.0], [85.0, 691.0], [85.1, 692.0], [85.2, 692.0], [85.3, 692.0], [85.4, 694.0], [85.5, 694.0], [85.6, 700.0], [85.7, 700.0], [85.8, 700.0], [85.9, 705.0], [86.0, 705.0], [86.1, 705.0], [86.2, 706.0], [86.3, 706.0], [86.4, 706.0], [86.5, 713.0], [86.6, 713.0], [86.7, 716.0], [86.8, 716.0], [86.9, 716.0], [87.0, 716.0], [87.1, 716.0], [87.2, 716.0], [87.3, 721.0], [87.4, 721.0], [87.5, 722.0], [87.6, 722.0], [87.7, 722.0], [87.8, 723.0], [87.9, 723.0], [88.0, 723.0], [88.1, 726.0], [88.2, 726.0], [88.3, 726.0], [88.4, 730.0], [88.5, 730.0], [88.6, 731.0], [88.7, 731.0], [88.8, 731.0], [88.9, 742.0], [89.0, 742.0], [89.1, 742.0], [89.2, 743.0], [89.3, 743.0], [89.4, 743.0], [89.5, 744.0], [89.6, 744.0], [89.7, 753.0], [89.8, 753.0], [89.9, 753.0], [90.0, 754.0], [90.1, 754.0], [90.2, 754.0], [90.3, 756.0], [90.4, 756.0], [90.5, 756.0], [90.6, 756.0], [90.7, 756.0], [90.8, 764.0], [90.9, 764.0], [91.0, 764.0], [91.1, 767.0], [91.2, 767.0], [91.3, 767.0], [91.4, 776.0], [91.5, 776.0], [91.6, 776.0], [91.7, 776.0], [91.8, 776.0], [91.9, 778.0], [92.0, 778.0], [92.1, 778.0], [92.2, 782.0], [92.3, 782.0], [92.4, 794.0], [92.5, 794.0], [92.6, 794.0], [92.7, 794.0], [92.8, 794.0], [92.9, 794.0], [93.0, 802.0], [93.1, 802.0], [93.2, 802.0], [93.3, 805.0], [93.4, 805.0], [93.5, 805.0], [93.6, 805.0], [93.7, 805.0], [93.8, 813.0], [93.9, 813.0], [94.0, 813.0], [94.1, 820.0], [94.2, 820.0], [94.3, 828.0], [94.4, 828.0], [94.5, 828.0], [94.6, 836.0], [94.7, 836.0], [94.8, 836.0], [94.9, 860.0], [95.0, 860.0], [95.1, 860.0], [95.2, 875.0], [95.3, 875.0], [95.4, 903.0], [95.5, 903.0], [95.6, 903.0], [95.7, 909.0], [95.8, 909.0], [95.9, 909.0], [96.0, 919.0], [96.1, 919.0], [96.2, 965.0], [96.3, 965.0], [96.4, 965.0], [96.5, 967.0], [96.6, 967.0], [96.7, 967.0], [96.8, 983.0], [96.9, 983.0], [97.0, 983.0], [97.1, 988.0], [97.2, 988.0], [97.3, 1000.0], [97.4, 1000.0], [97.5, 1000.0], [97.6, 1001.0], [97.7, 1001.0], [97.8, 1001.0], [97.9, 1064.0], [98.0, 1064.0], [98.1, 1124.0], [98.2, 1124.0], [98.3, 1124.0], [98.4, 1198.0], [98.5, 1198.0], [98.6, 1198.0], [98.7, 1237.0], [98.8, 1237.0], [98.9, 1237.0], [99.0, 1585.0], [99.1, 1585.0], [99.2, 1811.0], [99.3, 1811.0], [99.4, 1811.0], [99.5, 2277.0], [99.6, 2277.0], [99.7, 2277.0], [99.8, 21770.0], [99.9, 21770.0]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[0.0, 309.0], [0.1, 310.0], [0.2, 311.0], [0.3, 312.0], [0.4, 312.0], [0.5, 313.0], [0.6, 313.0], [0.7, 313.0], [0.8, 313.0], [0.9, 313.0], [1.0, 313.0], [1.1, 313.0], [1.2, 314.0], [1.3, 314.0], [1.4, 314.0], [1.5, 315.0], [1.6, 315.0], [1.7, 315.0], [1.8, 316.0], [1.9, 316.0], [2.0, 316.0], [2.1, 316.0], [2.2, 316.0], [2.3, 317.0], [2.4, 317.0], [2.5, 317.0], [2.6, 317.0], [2.7, 317.0], [2.8, 317.0], [2.9, 317.0], [3.0, 317.0], [3.1, 318.0], [3.2, 318.0], [3.3, 318.0], [3.4, 318.0], [3.5, 318.0], [3.6, 318.0], [3.7, 318.0], [3.8, 318.0], [3.9, 318.0], [4.0, 318.0], [4.1, 319.0], [4.2, 319.0], [4.3, 319.0], [4.4, 319.0], [4.5, 319.0], [4.6, 319.0], [4.7, 319.0], [4.8, 320.0], [4.9, 320.0], [5.0, 320.0], [5.1, 320.0], [5.2, 320.0], [5.3, 320.0], [5.4, 320.0], [5.5, 320.0], [5.6, 320.0], [5.7, 320.0], [5.8, 321.0], [5.9, 321.0], [6.0, 321.0], [6.1, 321.0], [6.2, 321.0], [6.3, 321.0], [6.4, 321.0], [6.5, 321.0], [6.6, 321.0], [6.7, 322.0], [6.8, 322.0], [6.9, 322.0], [7.0, 322.0], [7.1, 322.0], [7.2, 322.0], [7.3, 323.0], [7.4, 323.0], [7.5, 323.0], [7.6, 323.0], [7.7, 323.0], [7.8, 323.0], [7.9, 323.0], [8.0, 323.0], [8.1, 323.0], [8.2, 324.0], [8.3, 324.0], [8.4, 324.0], [8.5, 324.0], [8.6, 324.0], [8.7, 324.0], [8.8, 324.0], [8.9, 324.0], [9.0, 325.0], [9.1, 325.0], [9.2, 325.0], [9.3, 325.0], [9.4, 325.0], [9.5, 325.0], [9.6, 325.0], [9.7, 326.0], [9.8, 326.0], [9.9, 326.0], [10.0, 326.0], [10.1, 326.0], [10.2, 327.0], [10.3, 327.0], [10.4, 327.0], [10.5, 327.0], [10.6, 327.0], [10.7, 327.0], [10.8, 327.0], [10.9, 327.0], [11.0, 327.0], [11.1, 327.0], [11.2, 327.0], [11.3, 327.0], [11.4, 327.0], [11.5, 327.0], [11.6, 327.0], [11.7, 328.0], [11.8, 328.0], [11.9, 328.0], [12.0, 328.0], [12.1, 328.0], [12.2, 328.0], [12.3, 329.0], [12.4, 329.0], [12.5, 329.0], [12.6, 329.0], [12.7, 329.0], [12.8, 329.0], [12.9, 330.0], [13.0, 330.0], [13.1, 330.0], [13.2, 330.0], [13.3, 330.0], [13.4, 330.0], [13.5, 331.0], [13.6, 331.0], [13.7, 332.0], [13.8, 332.0], [13.9, 333.0], [14.0, 333.0], [14.1, 333.0], [14.2, 334.0], [14.3, 334.0], [14.4, 334.0], [14.5, 334.0], [14.6, 335.0], [14.7, 335.0], [14.8, 335.0], [14.9, 335.0], [15.0, 335.0], [15.1, 336.0], [15.2, 336.0], [15.3, 336.0], [15.4, 337.0], [15.5, 337.0], [15.6, 338.0], [15.7, 338.0], [15.8, 338.0], [15.9, 338.0], [16.0, 340.0], [16.1, 340.0], [16.2, 341.0], [16.3, 341.0], [16.4, 341.0], [16.5, 341.0], [16.6, 341.0], [16.7, 341.0], [16.8, 342.0], [16.9, 342.0], [17.0, 343.0], [17.1, 344.0], [17.2, 344.0], [17.3, 344.0], [17.4, 345.0], [17.5, 345.0], [17.6, 345.0], [17.7, 346.0], [17.8, 346.0], [17.9, 347.0], [18.0, 347.0], [18.1, 349.0], [18.2, 350.0], [18.3, 351.0], [18.4, 351.0], [18.5, 352.0], [18.6, 353.0], [18.7, 353.0], [18.8, 353.0], [18.9, 353.0], [19.0, 354.0], [19.1, 354.0], [19.2, 355.0], [19.3, 355.0], [19.4, 356.0], [19.5, 358.0], [19.6, 358.0], [19.7, 358.0], [19.8, 359.0], [19.9, 359.0], [20.0, 359.0], [20.1, 359.0], [20.2, 359.0], [20.3, 360.0], [20.4, 360.0], [20.5, 360.0], [20.6, 360.0], [20.7, 360.0], [20.8, 360.0], [20.9, 360.0], [21.0, 360.0], [21.1, 360.0], [21.2, 360.0], [21.3, 360.0], [21.4, 361.0], [21.5, 361.0], [21.6, 361.0], [21.7, 361.0], [21.8, 361.0], [21.9, 361.0], [22.0, 361.0], [22.1, 361.0], [22.2, 361.0], [22.3, 362.0], [22.4, 362.0], [22.5, 362.0], [22.6, 362.0], [22.7, 362.0], [22.8, 362.0], [22.9, 362.0], [23.0, 362.0], [23.1, 362.0], [23.2, 362.0], [23.3, 363.0], [23.4, 363.0], [23.5, 363.0], [23.6, 363.0], [23.7, 363.0], [23.8, 363.0], [23.9, 363.0], [24.0, 363.0], [24.1, 363.0], [24.2, 364.0], [24.3, 364.0], [24.4, 364.0], [24.5, 364.0], [24.6, 364.0], [24.7, 364.0], [24.8, 364.0], [24.9, 364.0], [25.0, 364.0], [25.1, 364.0], [25.2, 364.0], [25.3, 364.0], [25.4, 364.0], [25.5, 364.0], [25.6, 364.0], [25.7, 365.0], [25.8, 365.0], [25.9, 365.0], [26.0, 365.0], [26.1, 365.0], [26.2, 365.0], [26.3, 365.0], [26.4, 365.0], [26.5, 365.0], [26.6, 365.0], [26.7, 365.0], [26.8, 366.0], [26.9, 366.0], [27.0, 366.0], [27.1, 366.0], [27.2, 366.0], [27.3, 366.0], [27.4, 366.0], [27.5, 366.0], [27.6, 366.0], [27.7, 366.0], [27.8, 366.0], [27.9, 367.0], [28.0, 367.0], [28.1, 367.0], [28.2, 367.0], [28.3, 367.0], [28.4, 367.0], [28.5, 367.0], [28.6, 367.0], [28.7, 367.0], [28.8, 367.0], [28.9, 367.0], [29.0, 367.0], [29.1, 367.0], [29.2, 367.0], [29.3, 367.0], [29.4, 367.0], [29.5, 368.0], [29.6, 368.0], [29.7, 368.0], [29.8, 368.0], [29.9, 368.0], [30.0, 368.0], [30.1, 368.0], [30.2, 368.0], [30.3, 368.0], [30.4, 368.0], [30.5, 368.0], [30.6, 369.0], [30.7, 369.0], [30.8, 369.0], [30.9, 369.0], [31.0, 369.0], [31.1, 369.0], [31.2, 369.0], [31.3, 369.0], [31.4, 369.0], [31.5, 369.0], [31.6, 369.0], [31.7, 369.0], [31.8, 369.0], [31.9, 369.0], [32.0, 369.0], [32.1, 369.0], [32.2, 369.0], [32.3, 369.0], [32.4, 369.0], [32.5, 370.0], [32.6, 370.0], [32.7, 370.0], [32.8, 370.0], [32.9, 370.0], [33.0, 370.0], [33.1, 370.0], [33.2, 370.0], [33.3, 370.0], [33.4, 370.0], [33.5, 370.0], [33.6, 370.0], [33.7, 370.0], [33.8, 370.0], [33.9, 370.0], [34.0, 370.0], [34.1, 370.0], [34.2, 370.0], [34.3, 370.0], [34.4, 370.0], [34.5, 370.0], [34.6, 370.0], [34.7, 371.0], [34.8, 371.0], [34.9, 371.0], [35.0, 371.0], [35.1, 371.0], [35.2, 371.0], [35.3, 371.0], [35.4, 371.0], [35.5, 371.0], [35.6, 371.0], [35.7, 371.0], [35.8, 371.0], [35.9, 371.0], [36.0, 371.0], [36.1, 371.0], [36.2, 371.0], [36.3, 372.0], [36.4, 372.0], [36.5, 372.0], [36.6, 372.0], [36.7, 372.0], [36.8, 372.0], [36.9, 372.0], [37.0, 372.0], [37.1, 372.0], [37.2, 372.0], [37.3, 372.0], [37.4, 372.0], [37.5, 372.0], [37.6, 372.0], [37.7, 372.0], [37.8, 372.0], [37.9, 372.0], [38.0, 372.0], [38.1, 372.0], [38.2, 372.0], [38.3, 372.0], [38.4, 372.0], [38.5, 373.0], [38.6, 373.0], [38.7, 373.0], [38.8, 373.0], [38.9, 373.0], [39.0, 373.0], [39.1, 373.0], [39.2, 373.0], [39.3, 373.0], [39.4, 373.0], [39.5, 373.0], [39.6, 373.0], [39.7, 373.0], [39.8, 373.0], [39.9, 374.0], [40.0, 374.0], [40.1, 374.0], [40.2, 374.0], [40.3, 374.0], [40.4, 374.0], [40.5, 374.0], [40.6, 374.0], [40.7, 374.0], [40.8, 374.0], [40.9, 374.0], [41.0, 374.0], [41.1, 374.0], [41.2, 374.0], [41.3, 374.0], [41.4, 375.0], [41.5, 375.0], [41.6, 375.0], [41.7, 375.0], [41.8, 375.0], [41.9, 375.0], [42.0, 375.0], [42.1, 375.0], [42.2, 375.0], [42.3, 375.0], [42.4, 375.0], [42.5, 375.0], [42.6, 375.0], [42.7, 375.0], [42.8, 375.0], [42.9, 375.0], [43.0, 375.0], [43.1, 375.0], [43.2, 375.0], [43.3, 375.0], [43.4, 375.0], [43.5, 375.0], [43.6, 375.0], [43.7, 375.0], [43.8, 375.0], [43.9, 376.0], [44.0, 376.0], [44.1, 376.0], [44.2, 376.0], [44.3, 376.0], [44.4, 376.0], [44.5, 376.0], [44.6, 376.0], [44.7, 376.0], [44.8, 376.0], [44.9, 376.0], [45.0, 376.0], [45.1, 376.0], [45.2, 376.0], [45.3, 376.0], [45.4, 376.0], [45.5, 376.0], [45.6, 376.0], [45.7, 376.0], [45.8, 376.0], [45.9, 376.0], [46.0, 376.0], [46.1, 376.0], [46.2, 376.0], [46.3, 376.0], [46.4, 377.0], [46.5, 377.0], [46.6, 377.0], [46.7, 377.0], [46.8, 377.0], [46.9, 377.0], [47.0, 377.0], [47.1, 377.0], [47.2, 377.0], [47.3, 377.0], [47.4, 377.0], [47.5, 377.0], [47.6, 377.0], [47.7, 377.0], [47.8, 377.0], [47.9, 377.0], [48.0, 378.0], [48.1, 378.0], [48.2, 378.0], [48.3, 378.0], [48.4, 378.0], [48.5, 378.0], [48.6, 378.0], [48.7, 378.0], [48.8, 378.0], [48.9, 378.0], [49.0, 378.0], [49.1, 378.0], [49.2, 379.0], [49.3, 379.0], [49.4, 379.0], [49.5, 379.0], [49.6, 379.0], [49.7, 379.0], [49.8, 379.0], [49.9, 379.0], [50.0, 379.0], [50.1, 379.0], [50.2, 379.0], [50.3, 379.0], [50.4, 379.0], [50.5, 379.0], [50.6, 379.0], [50.7, 379.0], [50.8, 380.0], [50.9, 380.0], [51.0, 380.0], [51.1, 380.0], [51.2, 380.0], [51.3, 380.0], [51.4, 380.0], [51.5, 380.0], [51.6, 380.0], [51.7, 380.0], [51.8, 380.0], [51.9, 380.0], [52.0, 380.0], [52.1, 380.0], [52.2, 380.0], [52.3, 380.0], [52.4, 380.0], [52.5, 380.0], [52.6, 380.0], [52.7, 381.0], [52.8, 381.0], [52.9, 381.0], [53.0, 381.0], [53.1, 381.0], [53.2, 381.0], [53.3, 381.0], [53.4, 381.0], [53.5, 381.0], [53.6, 381.0], [53.7, 381.0], [53.8, 381.0], [53.9, 381.0], [54.0, 382.0], [54.1, 382.0], [54.2, 382.0], [54.3, 382.0], [54.4, 382.0], [54.5, 382.0], [54.6, 382.0], [54.7, 382.0], [54.8, 382.0], [54.9, 382.0], [55.0, 382.0], [55.1, 382.0], [55.2, 382.0], [55.3, 382.0], [55.4, 383.0], [55.5, 383.0], [55.6, 383.0], [55.7, 383.0], [55.8, 383.0], [55.9, 383.0], [56.0, 383.0], [56.1, 383.0], [56.2, 383.0], [56.3, 383.0], [56.4, 383.0], [56.5, 383.0], [56.6, 383.0], [56.7, 383.0], [56.8, 383.0], [56.9, 384.0], [57.0, 384.0], [57.1, 384.0], [57.2, 384.0], [57.3, 384.0], [57.4, 384.0], [57.5, 384.0], [57.6, 384.0], [57.7, 384.0], [57.8, 384.0], [57.9, 384.0], [58.0, 384.0], [58.1, 384.0], [58.2, 384.0], [58.3, 385.0], [58.4, 385.0], [58.5, 385.0], [58.6, 385.0], [58.7, 385.0], [58.8, 385.0], [58.9, 385.0], [59.0, 385.0], [59.1, 385.0], [59.2, 385.0], [59.3, 386.0], [59.4, 386.0], [59.5, 386.0], [59.6, 387.0], [59.7, 387.0], [59.8, 387.0], [59.9, 387.0], [60.0, 387.0], [60.1, 387.0], [60.2, 387.0], [60.3, 387.0], [60.4, 387.0], [60.5, 387.0], [60.6, 387.0], [60.7, 387.0], [60.8, 387.0], [60.9, 387.0], [61.0, 388.0], [61.1, 388.0], [61.2, 388.0], [61.3, 388.0], [61.4, 388.0], [61.5, 389.0], [61.6, 389.0], [61.7, 389.0], [61.8, 389.0], [61.9, 389.0], [62.0, 389.0], [62.1, 389.0], [62.2, 389.0], [62.3, 389.0], [62.4, 390.0], [62.5, 390.0], [62.6, 390.0], [62.7, 390.0], [62.8, 390.0], [62.9, 390.0], [63.0, 390.0], [63.1, 390.0], [63.2, 390.0], [63.3, 390.0], [63.4, 391.0], [63.5, 391.0], [63.6, 391.0], [63.7, 391.0], [63.8, 391.0], [63.9, 392.0], [64.0, 392.0], [64.1, 392.0], [64.2, 392.0], [64.3, 392.0], [64.4, 392.0], [64.5, 392.0], [64.6, 392.0], [64.7, 392.0], [64.8, 392.0], [64.9, 393.0], [65.0, 393.0], [65.1, 393.0], [65.2, 393.0], [65.3, 394.0], [65.4, 394.0], [65.5, 394.0], [65.6, 394.0], [65.7, 394.0], [65.8, 394.0], [65.9, 394.0], [66.0, 395.0], [66.1, 395.0], [66.2, 395.0], [66.3, 395.0], [66.4, 395.0], [66.5, 395.0], [66.6, 396.0], [66.7, 396.0], [66.8, 396.0], [66.9, 397.0], [67.0, 397.0], [67.1, 398.0], [67.2, 398.0], [67.3, 398.0], [67.4, 398.0], [67.5, 399.0], [67.6, 399.0], [67.7, 399.0], [67.8, 400.0], [67.9, 400.0], [68.0, 400.0], [68.1, 400.0], [68.2, 400.0], [68.3, 400.0], [68.4, 401.0], [68.5, 401.0], [68.6, 401.0], [68.7, 401.0], [68.8, 402.0], [68.9, 402.0], [69.0, 402.0], [69.1, 402.0], [69.2, 403.0], [69.3, 403.0], [69.4, 403.0], [69.5, 404.0], [69.6, 404.0], [69.7, 405.0], [69.8, 405.0], [69.9, 406.0], [70.0, 406.0], [70.1, 406.0], [70.2, 406.0], [70.3, 406.0], [70.4, 406.0], [70.5, 406.0], [70.6, 406.0], [70.7, 407.0], [70.8, 407.0], [70.9, 407.0], [71.0, 407.0], [71.1, 407.0], [71.2, 407.0], [71.3, 407.0], [71.4, 407.0], [71.5, 408.0], [71.6, 408.0], [71.7, 408.0], [71.8, 409.0], [71.9, 409.0], [72.0, 409.0], [72.1, 410.0], [72.2, 410.0], [72.3, 410.0], [72.4, 410.0], [72.5, 411.0], [72.6, 411.0], [72.7, 411.0], [72.8, 411.0], [72.9, 411.0], [73.0, 412.0], [73.1, 412.0], [73.2, 412.0], [73.3, 412.0], [73.4, 412.0], [73.5, 412.0], [73.6, 412.0], [73.7, 412.0], [73.8, 412.0], [73.9, 413.0], [74.0, 413.0], [74.1, 413.0], [74.2, 413.0], [74.3, 413.0], [74.4, 413.0], [74.5, 414.0], [74.6, 414.0], [74.7, 414.0], [74.8, 414.0], [74.9, 414.0], [75.0, 414.0], [75.1, 414.0], [75.2, 414.0], [75.3, 414.0], [75.4, 414.0], [75.5, 414.0], [75.6, 414.0], [75.7, 414.0], [75.8, 414.0], [75.9, 415.0], [76.0, 415.0], [76.1, 415.0], [76.2, 415.0], [76.3, 415.0], [76.4, 415.0], [76.5, 415.0], [76.6, 415.0], [76.7, 415.0], [76.8, 416.0], [76.9, 416.0], [77.0, 416.0], [77.1, 416.0], [77.2, 416.0], [77.3, 416.0], [77.4, 416.0], [77.5, 417.0], [77.6, 417.0], [77.7, 417.0], [77.8, 417.0], [77.9, 417.0], [78.0, 418.0], [78.1, 418.0], [78.2, 418.0], [78.3, 418.0], [78.4, 418.0], [78.5, 418.0], [78.6, 419.0], [78.7, 419.0], [78.8, 419.0], [78.9, 419.0], [79.0, 419.0], [79.1, 419.0], [79.2, 419.0], [79.3, 419.0], [79.4, 419.0], [79.5, 419.0], [79.6, 419.0], [79.7, 420.0], [79.8, 420.0], [79.9, 420.0], [80.0, 420.0], [80.1, 420.0], [80.2, 420.0], [80.3, 420.0], [80.4, 420.0], [80.5, 420.0], [80.6, 420.0], [80.7, 421.0], [80.8, 421.0], [80.9, 421.0], [81.0, 421.0], [81.1, 421.0], [81.2, 421.0], [81.3, 421.0], [81.4, 421.0], [81.5, 421.0], [81.6, 421.0], [81.7, 421.0], [81.8, 421.0], [81.9, 421.0], [82.0, 421.0], [82.1, 421.0], [82.2, 422.0], [82.3, 422.0], [82.4, 422.0], [82.5, 422.0], [82.6, 422.0], [82.7, 422.0], [82.8, 422.0], [82.9, 422.0], [83.0, 422.0], [83.1, 422.0], [83.2, 422.0], [83.3, 422.0], [83.4, 423.0], [83.5, 423.0], [83.6, 423.0], [83.7, 423.0], [83.8, 423.0], [83.9, 423.0], [84.0, 423.0], [84.1, 423.0], [84.2, 423.0], [84.3, 423.0], [84.4, 423.0], [84.5, 423.0], [84.6, 423.0], [84.7, 424.0], [84.8, 424.0], [84.9, 424.0], [85.0, 424.0], [85.1, 424.0], [85.2, 424.0], [85.3, 424.0], [85.4, 424.0], [85.5, 424.0], [85.6, 424.0], [85.7, 424.0], [85.8, 424.0], [85.9, 424.0], [86.0, 425.0], [86.1, 425.0], [86.2, 425.0], [86.3, 425.0], [86.4, 425.0], [86.5, 425.0], [86.6, 425.0], [86.7, 426.0], [86.8, 426.0], [86.9, 426.0], [87.0, 426.0], [87.1, 426.0], [87.2, 426.0], [87.3, 426.0], [87.4, 427.0], [87.5, 427.0], [87.6, 427.0], [87.7, 427.0], [87.8, 427.0], [87.9, 427.0], [88.0, 428.0], [88.1, 428.0], [88.2, 428.0], [88.3, 428.0], [88.4, 428.0], [88.5, 429.0], [88.6, 429.0], [88.7, 429.0], [88.8, 429.0], [88.9, 429.0], [89.0, 429.0], [89.1, 430.0], [89.2, 430.0], [89.3, 430.0], [89.4, 430.0], [89.5, 430.0], [89.6, 430.0], [89.7, 430.0], [89.8, 431.0], [89.9, 431.0], [90.0, 431.0], [90.1, 431.0], [90.2, 431.0], [90.3, 432.0], [90.4, 432.0], [90.5, 432.0], [90.6, 432.0], [90.7, 432.0], [90.8, 433.0], [90.9, 433.0], [91.0, 433.0], [91.1, 433.0], [91.2, 433.0], [91.3, 434.0], [91.4, 434.0], [91.5, 434.0], [91.6, 434.0], [91.7, 434.0], [91.8, 434.0], [91.9, 435.0], [92.0, 435.0], [92.1, 435.0], [92.2, 435.0], [92.3, 435.0], [92.4, 435.0], [92.5, 435.0], [92.6, 436.0], [92.7, 437.0], [92.8, 437.0], [92.9, 438.0], [93.0, 438.0], [93.1, 438.0], [93.2, 438.0], [93.3, 438.0], [93.4, 438.0], [93.5, 439.0], [93.6, 439.0], [93.7, 439.0], [93.8, 440.0], [93.9, 440.0], [94.0, 441.0], [94.1, 441.0], [94.2, 441.0], [94.3, 441.0], [94.4, 442.0], [94.5, 442.0], [94.6, 443.0], [94.7, 443.0], [94.8, 443.0], [94.9, 444.0], [95.0, 444.0], [95.1, 444.0], [95.2, 444.0], [95.3, 445.0], [95.4, 445.0], [95.5, 445.0], [95.6, 446.0], [95.7, 446.0], [95.8, 446.0], [95.9, 447.0], [96.0, 447.0], [96.1, 447.0], [96.2, 448.0], [96.3, 448.0], [96.4, 448.0], [96.5, 448.0], [96.6, 448.0], [96.7, 448.0], [96.8, 448.0], [96.9, 452.0], [97.0, 452.0], [97.1, 453.0], [97.2, 455.0], [97.3, 458.0], [97.4, 459.0], [97.5, 462.0], [97.6, 462.0], [97.7, 465.0], [97.8, 466.0], [97.9, 466.0], [98.0, 467.0], [98.1, 467.0], [98.2, 468.0], [98.3, 469.0], [98.4, 471.0], [98.5, 472.0], [98.6, 473.0], [98.7, 474.0], [98.8, 477.0], [98.9, 487.0], [99.0, 488.0], [99.1, 503.0], [99.2, 503.0], [99.3, 509.0], [99.4, 525.0], [99.5, 531.0], [99.6, 566.0], [99.7, 677.0], [99.8, 744.0], [99.9, 1104.0], [100.0, 21373.0]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[0.0, 345.0], [0.1, 345.0], [0.2, 345.0], [0.3, 345.0], [0.4, 345.0], [0.5, 345.0], [0.6, 345.0], [0.7, 345.0], [0.8, 345.0], [0.9, 345.0], [1.0, 345.0], [1.1, 345.0], [1.2, 345.0], [1.3, 347.0], [1.4, 347.0], [1.5, 347.0], [1.6, 347.0], [1.7, 347.0], [1.8, 347.0], [1.9, 351.0], [2.0, 351.0], [2.1, 351.0], [2.2, 351.0], [2.3, 351.0], [2.4, 351.0], [2.5, 358.0], [2.6, 358.0], [2.7, 358.0], [2.8, 358.0], [2.9, 358.0], [3.0, 358.0], [3.1, 361.0], [3.2, 361.0], [3.3, 361.0], [3.4, 361.0], [3.5, 361.0], [3.6, 361.0], [3.7, 363.0], [3.8, 363.0], [3.9, 363.0], [4.0, 363.0], [4.1, 363.0], [4.2, 363.0], [4.3, 364.0], [4.4, 364.0], [4.5, 364.0], [4.6, 364.0], [4.7, 364.0], [4.8, 364.0], [4.9, 373.0], [5.0, 373.0], [5.1, 373.0], [5.2, 373.0], [5.3, 373.0], [5.4, 373.0], [5.5, 374.0], [5.6, 374.0], [5.7, 374.0], [5.8, 374.0], [5.9, 374.0], [6.0, 374.0], [6.1, 377.0], [6.2, 377.0], [6.3, 377.0], [6.4, 377.0], [6.5, 377.0], [6.6, 377.0], [6.7, 386.0], [6.8, 386.0], [6.9, 386.0], [7.0, 386.0], [7.1, 386.0], [7.2, 386.0], [7.3, 390.0], [7.4, 390.0], [7.5, 390.0], [7.6, 390.0], [7.7, 390.0], [7.8, 390.0], [7.9, 391.0], [8.0, 391.0], [8.1, 391.0], [8.2, 391.0], [8.3, 391.0], [8.4, 391.0], [8.5, 392.0], [8.6, 392.0], [8.7, 392.0], [8.8, 392.0], [8.9, 392.0], [9.0, 392.0], [9.1, 393.0], [9.2, 393.0], [9.3, 393.0], [9.4, 393.0], [9.5, 393.0], [9.6, 393.0], [9.7, 397.0], [9.8, 397.0], [9.9, 397.0], [10.0, 397.0], [10.1, 397.0], [10.2, 397.0], [10.3, 397.0], [10.4, 400.0], [10.5, 400.0], [10.6, 400.0], [10.7, 400.0], [10.8, 400.0], [10.9, 400.0], [11.0, 400.0], [11.1, 400.0], [11.2, 400.0], [11.3, 400.0], [11.4, 400.0], [11.5, 400.0], [11.6, 401.0], [11.7, 401.0], [11.8, 401.0], [11.9, 401.0], [12.0, 401.0], [12.1, 401.0], [12.2, 403.0], [12.3, 403.0], [12.4, 403.0], [12.5, 403.0], [12.6, 403.0], [12.7, 403.0], [12.8, 404.0], [12.9, 404.0], [13.0, 404.0], [13.1, 404.0], [13.2, 404.0], [13.3, 404.0], [13.4, 404.0], [13.5, 404.0], [13.6, 404.0], [13.7, 404.0], [13.8, 404.0], [13.9, 404.0], [14.0, 405.0], [14.1, 405.0], [14.2, 405.0], [14.3, 405.0], [14.4, 405.0], [14.5, 405.0], [14.6, 406.0], [14.7, 406.0], [14.8, 406.0], [14.9, 406.0], [15.0, 406.0], [15.1, 406.0], [15.2, 407.0], [15.3, 407.0], [15.4, 407.0], [15.5, 407.0], [15.6, 407.0], [15.7, 407.0], [15.8, 408.0], [15.9, 408.0], [16.0, 408.0], [16.1, 408.0], [16.2, 408.0], [16.3, 408.0], [16.4, 408.0], [16.5, 408.0], [16.6, 408.0], [16.7, 408.0], [16.8, 408.0], [16.9, 408.0], [17.0, 408.0], [17.1, 408.0], [17.2, 408.0], [17.3, 408.0], [17.4, 408.0], [17.5, 408.0], [17.6, 409.0], [17.7, 409.0], [17.8, 409.0], [17.9, 409.0], [18.0, 409.0], [18.1, 409.0], [18.2, 409.0], [18.3, 409.0], [18.4, 409.0], [18.5, 409.0], [18.6, 409.0], [18.7, 409.0], [18.8, 410.0], [18.9, 410.0], [19.0, 410.0], [19.1, 410.0], [19.2, 410.0], [19.3, 410.0], [19.4, 410.0], [19.5, 410.0], [19.6, 410.0], [19.7, 410.0], [19.8, 410.0], [19.9, 410.0], [20.0, 410.0], [20.1, 410.0], [20.2, 410.0], [20.3, 410.0], [20.4, 410.0], [20.5, 410.0], [20.6, 410.0], [20.7, 410.0], [20.8, 410.0], [20.9, 410.0], [21.0, 410.0], [21.1, 410.0], [21.2, 410.0], [21.3, 411.0], [21.4, 411.0], [21.5, 411.0], [21.6, 411.0], [21.7, 411.0], [21.8, 411.0], [21.9, 413.0], [22.0, 413.0], [22.1, 413.0], [22.2, 413.0], [22.3, 413.0], [22.4, 413.0], [22.5, 413.0], [22.6, 413.0], [22.7, 413.0], [22.8, 413.0], [22.9, 413.0], [23.0, 413.0], [23.1, 414.0], [23.2, 414.0], [23.3, 414.0], [23.4, 414.0], [23.5, 414.0], [23.6, 414.0], [23.7, 414.0], [23.8, 414.0], [23.9, 414.0], [24.0, 414.0], [24.1, 414.0], [24.2, 414.0], [24.3, 414.0], [24.4, 414.0], [24.5, 414.0], [24.6, 414.0], [24.7, 414.0], [24.8, 414.0], [24.9, 415.0], [25.0, 415.0], [25.1, 415.0], [25.2, 415.0], [25.3, 415.0], [25.4, 415.0], [25.5, 415.0], [25.6, 415.0], [25.7, 415.0], [25.8, 415.0], [25.9, 415.0], [26.0, 415.0], [26.1, 416.0], [26.2, 416.0], [26.3, 416.0], [26.4, 416.0], [26.5, 416.0], [26.6, 416.0], [26.7, 417.0], [26.8, 417.0], [26.9, 417.0], [27.0, 417.0], [27.1, 417.0], [27.2, 417.0], [27.3, 417.0], [27.4, 417.0], [27.5, 417.0], [27.6, 417.0], [27.7, 417.0], [27.8, 417.0], [27.9, 418.0], [28.0, 418.0], [28.1, 418.0], [28.2, 418.0], [28.3, 418.0], [28.4, 418.0], [28.5, 418.0], [28.6, 418.0], [28.7, 418.0], [28.8, 418.0], [28.9, 418.0], [29.0, 418.0], [29.1, 418.0], [29.2, 418.0], [29.3, 418.0], [29.4, 418.0], [29.5, 418.0], [29.6, 418.0], [29.7, 419.0], [29.8, 419.0], [29.9, 419.0], [30.0, 419.0], [30.1, 419.0], [30.2, 419.0], [30.3, 419.0], [30.4, 419.0], [30.5, 419.0], [30.6, 419.0], [30.7, 419.0], [30.8, 419.0], [30.9, 419.0], [31.0, 419.0], [31.1, 419.0], [31.2, 419.0], [31.3, 419.0], [31.4, 419.0], [31.5, 419.0], [31.6, 421.0], [31.7, 421.0], [31.8, 421.0], [31.9, 421.0], [32.0, 421.0], [32.1, 421.0], [32.2, 422.0], [32.3, 422.0], [32.4, 422.0], [32.5, 422.0], [32.6, 422.0], [32.7, 422.0], [32.8, 424.0], [32.9, 424.0], [33.0, 424.0], [33.1, 424.0], [33.2, 424.0], [33.3, 424.0], [33.4, 424.0], [33.5, 424.0], [33.6, 424.0], [33.7, 424.0], [33.8, 424.0], [33.9, 424.0], [34.0, 428.0], [34.1, 428.0], [34.2, 428.0], [34.3, 428.0], [34.4, 428.0], [34.5, 428.0], [34.6, 430.0], [34.7, 430.0], [34.8, 430.0], [34.9, 430.0], [35.0, 430.0], [35.1, 430.0], [35.2, 432.0], [35.3, 432.0], [35.4, 432.0], [35.5, 432.0], [35.6, 432.0], [35.7, 432.0], [35.8, 432.0], [35.9, 432.0], [36.0, 432.0], [36.1, 432.0], [36.2, 432.0], [36.3, 432.0], [36.4, 433.0], [36.5, 433.0], [36.6, 433.0], [36.7, 433.0], [36.8, 433.0], [36.9, 433.0], [37.0, 433.0], [37.1, 433.0], [37.2, 433.0], [37.3, 433.0], [37.4, 433.0], [37.5, 433.0], [37.6, 436.0], [37.7, 436.0], [37.8, 436.0], [37.9, 436.0], [38.0, 436.0], [38.1, 436.0], [38.2, 436.0], [38.3, 436.0], [38.4, 436.0], [38.5, 436.0], [38.6, 436.0], [38.7, 436.0], [38.8, 437.0], [38.9, 437.0], [39.0, 437.0], [39.1, 437.0], [39.2, 437.0], [39.3, 437.0], [39.4, 442.0], [39.5, 442.0], [39.6, 442.0], [39.7, 442.0], [39.8, 442.0], [39.9, 442.0], [40.0, 443.0], [40.1, 443.0], [40.2, 443.0], [40.3, 443.0], [40.4, 443.0], [40.5, 443.0], [40.6, 443.0], [40.7, 444.0], [40.8, 444.0], [40.9, 444.0], [41.0, 444.0], [41.1, 444.0], [41.2, 444.0], [41.3, 445.0], [41.4, 445.0], [41.5, 445.0], [41.6, 445.0], [41.7, 445.0], [41.8, 445.0], [41.9, 446.0], [42.0, 446.0], [42.1, 446.0], [42.2, 446.0], [42.3, 446.0], [42.4, 446.0], [42.5, 447.0], [42.6, 447.0], [42.7, 447.0], [42.8, 447.0], [42.9, 447.0], [43.0, 447.0], [43.1, 450.0], [43.2, 450.0], [43.3, 450.0], [43.4, 450.0], [43.5, 450.0], [43.6, 450.0], [43.7, 453.0], [43.8, 453.0], [43.9, 453.0], [44.0, 453.0], [44.1, 453.0], [44.2, 453.0], [44.3, 454.0], [44.4, 454.0], [44.5, 454.0], [44.6, 454.0], [44.7, 454.0], [44.8, 454.0], [44.9, 455.0], [45.0, 455.0], [45.1, 455.0], [45.2, 455.0], [45.3, 455.0], [45.4, 455.0], [45.5, 455.0], [45.6, 455.0], [45.7, 455.0], [45.8, 455.0], [45.9, 455.0], [46.0, 455.0], [46.1, 456.0], [46.2, 456.0], [46.3, 456.0], [46.4, 456.0], [46.5, 456.0], [46.6, 456.0], [46.7, 459.0], [46.8, 459.0], [46.9, 459.0], [47.0, 459.0], [47.1, 459.0], [47.2, 459.0], [47.3, 461.0], [47.4, 461.0], [47.5, 461.0], [47.6, 461.0], [47.7, 461.0], [47.8, 461.0], [47.9, 466.0], [48.0, 466.0], [48.1, 466.0], [48.2, 466.0], [48.3, 466.0], [48.4, 466.0], [48.5, 467.0], [48.6, 467.0], [48.7, 467.0], [48.8, 467.0], [48.9, 467.0], [49.0, 467.0], [49.1, 476.0], [49.2, 476.0], [49.3, 476.0], [49.4, 476.0], [49.5, 476.0], [49.6, 476.0], [49.7, 478.0], [49.8, 478.0], [49.9, 478.0], [50.0, 478.0], [50.1, 478.0], [50.2, 478.0], [50.3, 478.0], [50.4, 480.0], [50.5, 480.0], [50.6, 480.0], [50.7, 480.0], [50.8, 480.0], [50.9, 480.0], [51.0, 481.0], [51.1, 481.0], [51.2, 481.0], [51.3, 481.0], [51.4, 481.0], [51.5, 481.0], [51.6, 481.0], [51.7, 481.0], [51.8, 481.0], [51.9, 481.0], [52.0, 481.0], [52.1, 481.0], [52.2, 481.0], [52.3, 481.0], [52.4, 481.0], [52.5, 481.0], [52.6, 481.0], [52.7, 481.0], [52.8, 482.0], [52.9, 482.0], [53.0, 482.0], [53.1, 482.0], [53.2, 482.0], [53.3, 482.0], [53.4, 482.0], [53.5, 482.0], [53.6, 482.0], [53.7, 482.0], [53.8, 482.0], [53.9, 482.0], [54.0, 483.0], [54.1, 483.0], [54.2, 483.0], [54.3, 483.0], [54.4, 483.0], [54.5, 483.0], [54.6, 488.0], [54.7, 488.0], [54.8, 488.0], [54.9, 488.0], [55.0, 488.0], [55.1, 488.0], [55.2, 490.0], [55.3, 490.0], [55.4, 490.0], [55.5, 490.0], [55.6, 490.0], [55.7, 490.0], [55.8, 491.0], [55.9, 491.0], [56.0, 491.0], [56.1, 491.0], [56.2, 491.0], [56.3, 491.0], [56.4, 499.0], [56.5, 499.0], [56.6, 499.0], [56.7, 499.0], [56.8, 499.0], [56.9, 499.0], [57.0, 502.0], [57.1, 502.0], [57.2, 502.0], [57.3, 502.0], [57.4, 502.0], [57.5, 502.0], [57.6, 509.0], [57.7, 509.0], [57.8, 509.0], [57.9, 509.0], [58.0, 509.0], [58.1, 509.0], [58.2, 516.0], [58.3, 516.0], [58.4, 516.0], [58.5, 516.0], [58.6, 516.0], [58.7, 516.0], [58.8, 518.0], [58.9, 518.0], [59.0, 518.0], [59.1, 518.0], [59.2, 518.0], [59.3, 518.0], [59.4, 522.0], [59.5, 522.0], [59.6, 522.0], [59.7, 522.0], [59.8, 522.0], [59.9, 522.0], [60.0, 522.0], [60.1, 531.0], [60.2, 531.0], [60.3, 531.0], [60.4, 531.0], [60.5, 531.0], [60.6, 531.0], [60.7, 535.0], [60.8, 535.0], [60.9, 535.0], [61.0, 535.0], [61.1, 535.0], [61.2, 535.0], [61.3, 538.0], [61.4, 538.0], [61.5, 538.0], [61.6, 538.0], [61.7, 538.0], [61.8, 538.0], [61.9, 541.0], [62.0, 541.0], [62.1, 541.0], [62.2, 541.0], [62.3, 541.0], [62.4, 541.0], [62.5, 565.0], [62.6, 565.0], [62.7, 565.0], [62.8, 565.0], [62.9, 565.0], [63.0, 565.0], [63.1, 570.0], [63.2, 570.0], [63.3, 570.0], [63.4, 570.0], [63.5, 570.0], [63.6, 570.0], [63.7, 600.0], [63.8, 600.0], [63.9, 600.0], [64.0, 600.0], [64.1, 600.0], [64.2, 600.0], [64.3, 605.0], [64.4, 605.0], [64.5, 605.0], [64.6, 605.0], [64.7, 605.0], [64.8, 605.0], [64.9, 622.0], [65.0, 622.0], [65.1, 622.0], [65.2, 622.0], [65.3, 622.0], [65.4, 622.0], [65.5, 631.0], [65.6, 631.0], [65.7, 631.0], [65.8, 631.0], [65.9, 631.0], [66.0, 631.0], [66.1, 1106.0], [66.2, 1106.0], [66.3, 1106.0], [66.4, 1106.0], [66.5, 1106.0], [66.6, 1106.0], [66.7, 1133.0], [66.8, 1133.0], [66.9, 1133.0], [67.0, 1133.0], [67.1, 1133.0], [67.2, 1133.0], [67.3, 1291.0], [67.4, 1291.0], [67.5, 1291.0], [67.6, 1291.0], [67.7, 1291.0], [67.8, 1291.0], [67.9, 1294.0], [68.0, 1294.0], [68.1, 1294.0], [68.2, 1294.0], [68.3, 1294.0], [68.4, 1294.0], [68.5, 1317.0], [68.6, 1317.0], [68.7, 1317.0], [68.8, 1317.0], [68.9, 1317.0], [69.0, 1317.0], [69.1, 1338.0], [69.2, 1338.0], [69.3, 1338.0], [69.4, 1338.0], [69.5, 1338.0], [69.6, 1338.0], [69.7, 1386.0], [69.8, 1386.0], [69.9, 1386.0], [70.0, 1386.0], [70.1, 1386.0], [70.2, 1386.0], [70.3, 1386.0], [70.4, 1399.0], [70.5, 1399.0], [70.6, 1399.0], [70.7, 1399.0], [70.8, 1399.0], [70.9, 1399.0], [71.0, 1419.0], [71.1, 1419.0], [71.2, 1419.0], [71.3, 1419.0], [71.4, 1419.0], [71.5, 1419.0], [71.6, 1427.0], [71.7, 1427.0], [71.8, 1427.0], [71.9, 1427.0], [72.0, 1427.0], [72.1, 1427.0], [72.2, 1448.0], [72.3, 1448.0], [72.4, 1448.0], [72.5, 1448.0], [72.6, 1448.0], [72.7, 1448.0], [72.8, 1465.0], [72.9, 1465.0], [73.0, 1465.0], [73.1, 1465.0], [73.2, 1465.0], [73.3, 1465.0], [73.4, 1478.0], [73.5, 1478.0], [73.6, 1478.0], [73.7, 1478.0], [73.8, 1478.0], [73.9, 1478.0], [74.0, 1525.0], [74.1, 1525.0], [74.2, 1525.0], [74.3, 1525.0], [74.4, 1525.0], [74.5, 1525.0], [74.6, 1548.0], [74.7, 1548.0], [74.8, 1548.0], [74.9, 1548.0], [75.0, 1548.0], [75.1, 1548.0], [75.2, 1548.0], [75.3, 1548.0], [75.4, 1548.0], [75.5, 1548.0], [75.6, 1548.0], [75.7, 1548.0], [75.8, 1554.0], [75.9, 1554.0], [76.0, 1554.0], [76.1, 1554.0], [76.2, 1554.0], [76.3, 1554.0], [76.4, 1558.0], [76.5, 1558.0], [76.6, 1558.0], [76.7, 1558.0], [76.8, 1558.0], [76.9, 1558.0], [77.0, 1574.0], [77.1, 1574.0], [77.2, 1574.0], [77.3, 1574.0], [77.4, 1574.0], [77.5, 1574.0], [77.6, 1575.0], [77.7, 1575.0], [77.8, 1575.0], [77.9, 1575.0], [78.0, 1575.0], [78.1, 1575.0], [78.2, 1591.0], [78.3, 1591.0], [78.4, 1591.0], [78.5, 1591.0], [78.6, 1591.0], [78.7, 1591.0], [78.8, 1659.0], [78.9, 1659.0], [79.0, 1659.0], [79.1, 1659.0], [79.2, 1659.0], [79.3, 1659.0], [79.4, 1669.0], [79.5, 1669.0], [79.6, 1669.0], [79.7, 1669.0], [79.8, 1669.0], [79.9, 1669.0], [80.0, 1669.0], [80.1, 1675.0], [80.2, 1675.0], [80.3, 1675.0], [80.4, 1675.0], [80.5, 1675.0], [80.6, 1675.0], [80.7, 1679.0], [80.8, 1679.0], [80.9, 1679.0], [81.0, 1679.0], [81.1, 1679.0], [81.2, 1679.0], [81.3, 1704.0], [81.4, 1704.0], [81.5, 1704.0], [81.6, 1704.0], [81.7, 1704.0], [81.8, 1704.0], [81.9, 1728.0], [82.0, 1728.0], [82.1, 1728.0], [82.2, 1728.0], [82.3, 1728.0], [82.4, 1728.0], [82.5, 1734.0], [82.6, 1734.0], [82.7, 1734.0], [82.8, 1734.0], [82.9, 1734.0], [83.0, 1734.0], [83.1, 1747.0], [83.2, 1747.0], [83.3, 1747.0], [83.4, 1747.0], [83.5, 1747.0], [83.6, 1747.0], [83.7, 1756.0], [83.8, 1756.0], [83.9, 1756.0], [84.0, 1756.0], [84.1, 1756.0], [84.2, 1756.0], [84.3, 1759.0], [84.4, 1759.0], [84.5, 1759.0], [84.6, 1759.0], [84.7, 1759.0], [84.8, 1759.0], [84.9, 1765.0], [85.0, 1765.0], [85.1, 1765.0], [85.2, 1765.0], [85.3, 1765.0], [85.4, 1765.0], [85.5, 1765.0], [85.6, 1765.0], [85.7, 1765.0], [85.8, 1765.0], [85.9, 1765.0], [86.0, 1765.0], [86.1, 1802.0], [86.2, 1802.0], [86.3, 1802.0], [86.4, 1802.0], [86.5, 1802.0], [86.6, 1802.0], [86.7, 1818.0], [86.8, 1818.0], [86.9, 1818.0], [87.0, 1818.0], [87.1, 1818.0], [87.2, 1818.0], [87.3, 1839.0], [87.4, 1839.0], [87.5, 1839.0], [87.6, 1839.0], [87.7, 1839.0], [87.8, 1839.0], [87.9, 1841.0], [88.0, 1841.0], [88.1, 1841.0], [88.2, 1841.0], [88.3, 1841.0], [88.4, 1841.0], [88.5, 1858.0], [88.6, 1858.0], [88.7, 1858.0], [88.8, 1858.0], [88.9, 1858.0], [89.0, 1858.0], [89.1, 1869.0], [89.2, 1869.0], [89.3, 1869.0], [89.4, 1869.0], [89.5, 1869.0], [89.6, 1869.0], [89.7, 1884.0], [89.8, 1884.0], [89.9, 1884.0], [90.0, 1884.0], [90.1, 1884.0], [90.2, 1884.0], [90.3, 1884.0], [90.4, 1897.0], [90.5, 1897.0], [90.6, 1897.0], [90.7, 1897.0], [90.8, 1897.0], [90.9, 1897.0], [91.0, 1900.0], [91.1, 1900.0], [91.2, 1900.0], [91.3, 1900.0], [91.4, 1900.0], [91.5, 1900.0], [91.6, 1911.0], [91.7, 1911.0], [91.8, 1911.0], [91.9, 1911.0], [92.0, 1911.0], [92.1, 1911.0], [92.2, 1913.0], [92.3, 1913.0], [92.4, 1913.0], [92.5, 1913.0], [92.6, 1913.0], [92.7, 1913.0], [92.8, 1930.0], [92.9, 1930.0], [93.0, 1930.0], [93.1, 1930.0], [93.2, 1930.0], [93.3, 1930.0], [93.4, 1934.0], [93.5, 1934.0], [93.6, 1934.0], [93.7, 1934.0], [93.8, 1934.0], [93.9, 1934.0], [94.0, 1949.0], [94.1, 1949.0], [94.2, 1949.0], [94.3, 1949.0], [94.4, 1949.0], [94.5, 1949.0], [94.6, 1983.0], [94.7, 1983.0], [94.8, 1983.0], [94.9, 1983.0], [95.0, 1983.0], [95.1, 1983.0], [95.2, 2020.0], [95.3, 2020.0], [95.4, 2020.0], [95.5, 2020.0], [95.6, 2020.0], [95.7, 2020.0], [95.8, 2034.0], [95.9, 2034.0], [96.0, 2034.0], [96.1, 2034.0], [96.2, 2034.0], [96.3, 2034.0], [96.4, 2148.0], [96.5, 2148.0], [96.6, 2148.0], [96.7, 2148.0], [96.8, 2148.0], [96.9, 2148.0], [97.0, 2265.0], [97.1, 2265.0], [97.2, 2265.0], [97.3, 2265.0], [97.4, 2265.0], [97.5, 2265.0], [97.6, 2295.0], [97.7, 2295.0], [97.8, 2295.0], [97.9, 2295.0], [98.0, 2295.0], [98.1, 2295.0], [98.2, 2468.0], [98.3, 2468.0], [98.4, 2468.0], [98.5, 2468.0], [98.6, 2468.0], [98.7, 2468.0], [98.8, 3008.0], [98.9, 3008.0], [99.0, 3008.0], [99.1, 3008.0], [99.2, 3008.0], [99.3, 3008.0], [99.4, 25830.0], [99.5, 25830.0], [99.6, 25830.0], [99.7, 25830.0], [99.8, 25830.0], [99.9, 25830.0], [100.0, 25830.0]], "isOverall": false, "label": "trackVehicleExitOutEntry", "isController": false}, {"data": [[0.0, 1223.0], [0.1, 1223.0], [0.2, 1223.0], [0.3, 1223.0], [0.4, 1223.0], [0.5, 1223.0], [0.6, 1223.0], [0.7, 1223.0], [0.8, 1223.0], [0.9, 1223.0], [1.0, 1223.0], [1.1, 1223.0], [1.2, 1223.0], [1.3, 1223.0], [1.4, 1223.0], [1.5, 1223.0], [1.6, 1223.0], [1.7, 1223.0], [1.8, 1223.0], [1.9, 1223.0], [2.0, 1223.0], [2.1, 1223.0], [2.2, 1223.0], [2.3, 1223.0], [2.4, 1223.0], [2.5, 1223.0], [2.6, 1223.0], [2.7, 1223.0], [2.8, 1223.0], [2.9, 1223.0], [3.0, 1223.0], [3.1, 1223.0], [3.2, 1223.0], [3.3, 1223.0], [3.4, 1223.0], [3.5, 1223.0], [3.6, 1223.0], [3.7, 1223.0], [3.8, 1223.0], [3.9, 1223.0], [4.0, 1223.0], [4.1, 1223.0], [4.2, 1223.0], [4.3, 1223.0], [4.4, 1223.0], [4.5, 1223.0], [4.6, 1223.0], [4.7, 1223.0], [4.8, 1223.0], [4.9, 1223.0], [5.0, 1223.0], [5.1, 1223.0], [5.2, 1223.0], [5.3, 1223.0], [5.4, 1223.0], [5.5, 1223.0], [5.6, 1223.0], [5.7, 1223.0], [5.8, 1223.0], [5.9, 1223.0], [6.0, 1223.0], [6.1, 1223.0], [6.2, 1223.0], [6.3, 1223.0], [6.4, 1223.0], [6.5, 1223.0], [6.6, 1223.0], [6.7, 1223.0], [6.8, 1223.0], [6.9, 1223.0], [7.0, 1223.0], [7.1, 1223.0], [7.2, 1223.0], [7.3, 1223.0], [7.4, 1223.0], [7.5, 1223.0], [7.6, 1223.0], [7.7, 1223.0], [7.8, 1223.0], [7.9, 1223.0], [8.0, 1223.0], [8.1, 1223.0], [8.2, 1223.0], [8.3, 1223.0], [8.4, 1223.0], [8.5, 1223.0], [8.6, 1223.0], [8.7, 1223.0], [8.8, 1223.0], [8.9, 1223.0], [9.0, 1223.0], [9.1, 1223.0], [9.2, 1223.0], [9.3, 1223.0], [9.4, 1223.0], [9.5, 1223.0], [9.6, 1223.0], [9.7, 1223.0], [9.8, 1223.0], [9.9, 1223.0], [10.0, 1223.0], [10.1, 1223.0], [10.2, 1223.0], [10.3, 1223.0], [10.4, 1223.0], [10.5, 1223.0], [10.6, 1223.0], [10.7, 1223.0], [10.8, 1223.0], [10.9, 1223.0], [11.0, 1223.0], [11.1, 1223.0], [11.2, 1223.0], [11.3, 1223.0], [11.4, 1223.0], [11.5, 1223.0], [11.6, 1223.0], [11.7, 1223.0], [11.8, 1223.0], [11.9, 1223.0], [12.0, 1223.0], [12.1, 1223.0], [12.2, 1223.0], [12.3, 1223.0], [12.4, 1223.0], [12.5, 1223.0], [12.6, 1223.0], [12.7, 1223.0], [12.8, 1223.0], [12.9, 1223.0], [13.0, 1223.0], [13.1, 1223.0], [13.2, 1223.0], [13.3, 1223.0], [13.4, 1223.0], [13.5, 1223.0], [13.6, 1223.0], [13.7, 1223.0], [13.8, 1223.0], [13.9, 1223.0], [14.0, 1223.0], [14.1, 1223.0], [14.2, 1223.0], [14.3, 1223.0], [14.4, 1223.0], [14.5, 1223.0], [14.6, 1223.0], [14.7, 1223.0], [14.8, 1223.0], [14.9, 1223.0], [15.0, 1223.0], [15.1, 1223.0], [15.2, 1223.0], [15.3, 1223.0], [15.4, 1223.0], [15.5, 1223.0], [15.6, 1223.0], [15.7, 1223.0], [15.8, 1223.0], [15.9, 1223.0], [16.0, 1223.0], [16.1, 1223.0], [16.2, 1223.0], [16.3, 1223.0], [16.4, 1223.0], [16.5, 1223.0], [16.6, 1223.0], [16.7, 1223.0], [16.8, 1223.0], [16.9, 1223.0], [17.0, 1223.0], [17.1, 1223.0], [17.2, 1223.0], [17.3, 1223.0], [17.4, 1223.0], [17.5, 1223.0], [17.6, 1223.0], [17.7, 1223.0], [17.8, 1223.0], [17.9, 1223.0], [18.0, 1223.0], [18.1, 1223.0], [18.2, 1223.0], [18.3, 1223.0], [18.4, 1223.0], [18.5, 1223.0], [18.6, 1223.0], [18.7, 1223.0], [18.8, 1223.0], [18.9, 1223.0], [19.0, 1223.0], [19.1, 1223.0], [19.2, 1223.0], [19.3, 1223.0], [19.4, 1223.0], [19.5, 1223.0], [19.6, 1223.0], [19.7, 1223.0], [19.8, 1223.0], [19.9, 1223.0], [20.0, 1223.0], [20.1, 1223.0], [20.2, 1223.0], [20.3, 1223.0], [20.4, 1223.0], [20.5, 1223.0], [20.6, 1223.0], [20.7, 1223.0], [20.8, 1223.0], [20.9, 1223.0], [21.0, 1223.0], [21.1, 1223.0], [21.2, 1223.0], [21.3, 1223.0], [21.4, 1223.0], [21.5, 1223.0], [21.6, 1223.0], [21.7, 1223.0], [21.8, 1223.0], [21.9, 1223.0], [22.0, 1223.0], [22.1, 1223.0], [22.2, 1223.0], [22.3, 1223.0], [22.4, 1223.0], [22.5, 1223.0], [22.6, 1223.0], [22.7, 1223.0], [22.8, 1223.0], [22.9, 1223.0], [23.0, 1223.0], [23.1, 1223.0], [23.2, 1223.0], [23.3, 1223.0], [23.4, 1223.0], [23.5, 1223.0], [23.6, 1223.0], [23.7, 1223.0], [23.8, 1223.0], [23.9, 1223.0], [24.0, 1223.0], [24.1, 1223.0], [24.2, 1223.0], [24.3, 1223.0], [24.4, 1223.0], [24.5, 1223.0], [24.6, 1223.0], [24.7, 1223.0], [24.8, 1223.0], [24.9, 1223.0], [25.0, 1223.0], [25.1, 1223.0], [25.2, 1223.0], [25.3, 1223.0], [25.4, 1223.0], [25.5, 1223.0], [25.6, 1223.0], [25.7, 1223.0], [25.8, 1223.0], [25.9, 1223.0], [26.0, 1223.0], [26.1, 1223.0], [26.2, 1223.0], [26.3, 1223.0], [26.4, 1223.0], [26.5, 1223.0], [26.6, 1223.0], [26.7, 1223.0], [26.8, 1223.0], [26.9, 1223.0], [27.0, 1223.0], [27.1, 1223.0], [27.2, 1223.0], [27.3, 1223.0], [27.4, 1223.0], [27.5, 1223.0], [27.6, 1223.0], [27.7, 1223.0], [27.8, 1223.0], [27.9, 1223.0], [28.0, 1223.0], [28.1, 1223.0], [28.2, 1223.0], [28.3, 1223.0], [28.4, 1223.0], [28.5, 1223.0], [28.6, 1223.0], [28.7, 1223.0], [28.8, 1223.0], [28.9, 1223.0], [29.0, 1223.0], [29.1, 1223.0], [29.2, 1223.0], [29.3, 1223.0], [29.4, 1223.0], [29.5, 1223.0], [29.6, 1223.0], [29.7, 1223.0], [29.8, 1223.0], [29.9, 1223.0], [30.0, 1223.0], [30.1, 1223.0], [30.2, 1223.0], [30.3, 1223.0], [30.4, 1223.0], [30.5, 1223.0], [30.6, 1223.0], [30.7, 1223.0], [30.8, 1223.0], [30.9, 1223.0], [31.0, 1223.0], [31.1, 1223.0], [31.2, 1223.0], [31.3, 1223.0], [31.4, 1223.0], [31.5, 1223.0], [31.6, 1223.0], [31.7, 1223.0], [31.8, 1223.0], [31.9, 1223.0], [32.0, 1223.0], [32.1, 1223.0], [32.2, 1223.0], [32.3, 1223.0], [32.4, 1223.0], [32.5, 1223.0], [32.6, 1223.0], [32.7, 1223.0], [32.8, 1223.0], [32.9, 1223.0], [33.0, 1223.0], [33.1, 1223.0], [33.2, 1223.0], [33.3, 1223.0], [33.4, 1223.0], [33.5, 1223.0], [33.6, 1223.0], [33.7, 1223.0], [33.8, 1223.0], [33.9, 1223.0], [34.0, 1223.0], [34.1, 1223.0], [34.2, 1223.0], [34.3, 1223.0], [34.4, 1223.0], [34.5, 1223.0], [34.6, 1223.0], [34.7, 1223.0], [34.8, 1223.0], [34.9, 1223.0], [35.0, 1223.0], [35.1, 1223.0], [35.2, 1223.0], [35.3, 1223.0], [35.4, 1223.0], [35.5, 1223.0], [35.6, 1223.0], [35.7, 1223.0], [35.8, 1223.0], [35.9, 1223.0], [36.0, 1223.0], [36.1, 1223.0], [36.2, 1223.0], [36.3, 1223.0], [36.4, 1223.0], [36.5, 1223.0], [36.6, 1223.0], [36.7, 1223.0], [36.8, 1223.0], [36.9, 1223.0], [37.0, 1223.0], [37.1, 1223.0], [37.2, 1223.0], [37.3, 1223.0], [37.4, 1223.0], [37.5, 1223.0], [37.6, 1223.0], [37.7, 1223.0], [37.8, 1223.0], [37.9, 1223.0], [38.0, 1223.0], [38.1, 1223.0], [38.2, 1223.0], [38.3, 1223.0], [38.4, 1223.0], [38.5, 1223.0], [38.6, 1223.0], [38.7, 1223.0], [38.8, 1223.0], [38.9, 1223.0], [39.0, 1223.0], [39.1, 1223.0], [39.2, 1223.0], [39.3, 1223.0], [39.4, 1223.0], [39.5, 1223.0], [39.6, 1223.0], [39.7, 1223.0], [39.8, 1223.0], [39.9, 1223.0], [40.0, 1223.0], [40.1, 1223.0], [40.2, 1223.0], [40.3, 1223.0], [40.4, 1223.0], [40.5, 1223.0], [40.6, 1223.0], [40.7, 1223.0], [40.8, 1223.0], [40.9, 1223.0], [41.0, 1223.0], [41.1, 1223.0], [41.2, 1223.0], [41.3, 1223.0], [41.4, 1223.0], [41.5, 1223.0], [41.6, 1223.0], [41.7, 1223.0], [41.8, 1223.0], [41.9, 1223.0], [42.0, 1223.0], [42.1, 1223.0], [42.2, 1223.0], [42.3, 1223.0], [42.4, 1223.0], [42.5, 1223.0], [42.6, 1223.0], [42.7, 1223.0], [42.8, 1223.0], [42.9, 1223.0], [43.0, 1223.0], [43.1, 1223.0], [43.2, 1223.0], [43.3, 1223.0], [43.4, 1223.0], [43.5, 1223.0], [43.6, 1223.0], [43.7, 1223.0], [43.8, 1223.0], [43.9, 1223.0], [44.0, 1223.0], [44.1, 1223.0], [44.2, 1223.0], [44.3, 1223.0], [44.4, 1223.0], [44.5, 1223.0], [44.6, 1223.0], [44.7, 1223.0], [44.8, 1223.0], [44.9, 1223.0], [45.0, 1223.0], [45.1, 1223.0], [45.2, 1223.0], [45.3, 1223.0], [45.4, 1223.0], [45.5, 1223.0], [45.6, 1223.0], [45.7, 1223.0], [45.8, 1223.0], [45.9, 1223.0], [46.0, 1223.0], [46.1, 1223.0], [46.2, 1223.0], [46.3, 1223.0], [46.4, 1223.0], [46.5, 1223.0], [46.6, 1223.0], [46.7, 1223.0], [46.8, 1223.0], [46.9, 1223.0], [47.0, 1223.0], [47.1, 1223.0], [47.2, 1223.0], [47.3, 1223.0], [47.4, 1223.0], [47.5, 1223.0], [47.6, 1223.0], [47.7, 1223.0], [47.8, 1223.0], [47.9, 1223.0], [48.0, 1223.0], [48.1, 1223.0], [48.2, 1223.0], [48.3, 1223.0], [48.4, 1223.0], [48.5, 1223.0], [48.6, 1223.0], [48.7, 1223.0], [48.8, 1223.0], [48.9, 1223.0], [49.0, 1223.0], [49.1, 1223.0], [49.2, 1223.0], [49.3, 1223.0], [49.4, 1223.0], [49.5, 1223.0], [49.6, 1223.0], [49.7, 1223.0], [49.8, 1223.0], [49.9, 1223.0], [50.0, 1223.0], [50.1, 1223.0], [50.2, 1223.0], [50.3, 1223.0], [50.4, 1223.0], [50.5, 1223.0], [50.6, 1223.0], [50.7, 1223.0], [50.8, 1223.0], [50.9, 1223.0], [51.0, 1223.0], [51.1, 1223.0], [51.2, 1223.0], [51.3, 1223.0], [51.4, 1223.0], [51.5, 1223.0], [51.6, 1223.0], [51.7, 1223.0], [51.8, 1223.0], [51.9, 1223.0], [52.0, 1223.0], [52.1, 1223.0], [52.2, 1223.0], [52.3, 1223.0], [52.4, 1223.0], [52.5, 1223.0], [52.6, 1223.0], [52.7, 1223.0], [52.8, 1223.0], [52.9, 1223.0], [53.0, 1223.0], [53.1, 1223.0], [53.2, 1223.0], [53.3, 1223.0], [53.4, 1223.0], [53.5, 1223.0], [53.6, 1223.0], [53.7, 1223.0], [53.8, 1223.0], [53.9, 1223.0], [54.0, 1223.0], [54.1, 1223.0], [54.2, 1223.0], [54.3, 1223.0], [54.4, 1223.0], [54.5, 1223.0], [54.6, 1223.0], [54.7, 1223.0], [54.8, 1223.0], [54.9, 1223.0], [55.0, 1223.0], [55.1, 1223.0], [55.2, 1223.0], [55.3, 1223.0], [55.4, 1223.0], [55.5, 1223.0], [55.6, 1223.0], [55.7, 1223.0], [55.8, 1223.0], [55.9, 1223.0], [56.0, 1223.0], [56.1, 1223.0], [56.2, 1223.0], [56.3, 1223.0], [56.4, 1223.0], [56.5, 1223.0], [56.6, 1223.0], [56.7, 1223.0], [56.8, 1223.0], [56.9, 1223.0], [57.0, 1223.0], [57.1, 1223.0], [57.2, 1223.0], [57.3, 1223.0], [57.4, 1223.0], [57.5, 1223.0], [57.6, 1223.0], [57.7, 1223.0], [57.8, 1223.0], [57.9, 1223.0], [58.0, 1223.0], [58.1, 1223.0], [58.2, 1223.0], [58.3, 1223.0], [58.4, 1223.0], [58.5, 1223.0], [58.6, 1223.0], [58.7, 1223.0], [58.8, 1223.0], [58.9, 1223.0], [59.0, 1223.0], [59.1, 1223.0], [59.2, 1223.0], [59.3, 1223.0], [59.4, 1223.0], [59.5, 1223.0], [59.6, 1223.0], [59.7, 1223.0], [59.8, 1223.0], [59.9, 1223.0], [60.0, 1223.0], [60.1, 1223.0], [60.2, 1223.0], [60.3, 1223.0], [60.4, 1223.0], [60.5, 1223.0], [60.6, 1223.0], [60.7, 1223.0], [60.8, 1223.0], [60.9, 1223.0], [61.0, 1223.0], [61.1, 1223.0], [61.2, 1223.0], [61.3, 1223.0], [61.4, 1223.0], [61.5, 1223.0], [61.6, 1223.0], [61.7, 1223.0], [61.8, 1223.0], [61.9, 1223.0], [62.0, 1223.0], [62.1, 1223.0], [62.2, 1223.0], [62.3, 1223.0], [62.4, 1223.0], [62.5, 1223.0], [62.6, 1223.0], [62.7, 1223.0], [62.8, 1223.0], [62.9, 1223.0], [63.0, 1223.0], [63.1, 1223.0], [63.2, 1223.0], [63.3, 1223.0], [63.4, 1223.0], [63.5, 1223.0], [63.6, 1223.0], [63.7, 1223.0], [63.8, 1223.0], [63.9, 1223.0], [64.0, 1223.0], [64.1, 1223.0], [64.2, 1223.0], [64.3, 1223.0], [64.4, 1223.0], [64.5, 1223.0], [64.6, 1223.0], [64.7, 1223.0], [64.8, 1223.0], [64.9, 1223.0], [65.0, 1223.0], [65.1, 1223.0], [65.2, 1223.0], [65.3, 1223.0], [65.4, 1223.0], [65.5, 1223.0], [65.6, 1223.0], [65.7, 1223.0], [65.8, 1223.0], [65.9, 1223.0], [66.0, 1223.0], [66.1, 1223.0], [66.2, 1223.0], [66.3, 1223.0], [66.4, 1223.0], [66.5, 1223.0], [66.6, 1223.0], [66.7, 1223.0], [66.8, 1223.0], [66.9, 1223.0], [67.0, 1223.0], [67.1, 1223.0], [67.2, 1223.0], [67.3, 1223.0], [67.4, 1223.0], [67.5, 1223.0], [67.6, 1223.0], [67.7, 1223.0], [67.8, 1223.0], [67.9, 1223.0], [68.0, 1223.0], [68.1, 1223.0], [68.2, 1223.0], [68.3, 1223.0], [68.4, 1223.0], [68.5, 1223.0], [68.6, 1223.0], [68.7, 1223.0], [68.8, 1223.0], [68.9, 1223.0], [69.0, 1223.0], [69.1, 1223.0], [69.2, 1223.0], [69.3, 1223.0], [69.4, 1223.0], [69.5, 1223.0], [69.6, 1223.0], [69.7, 1223.0], [69.8, 1223.0], [69.9, 1223.0], [70.0, 1223.0], [70.1, 1223.0], [70.2, 1223.0], [70.3, 1223.0], [70.4, 1223.0], [70.5, 1223.0], [70.6, 1223.0], [70.7, 1223.0], [70.8, 1223.0], [70.9, 1223.0], [71.0, 1223.0], [71.1, 1223.0], [71.2, 1223.0], [71.3, 1223.0], [71.4, 1223.0], [71.5, 1223.0], [71.6, 1223.0], [71.7, 1223.0], [71.8, 1223.0], [71.9, 1223.0], [72.0, 1223.0], [72.1, 1223.0], [72.2, 1223.0], [72.3, 1223.0], [72.4, 1223.0], [72.5, 1223.0], [72.6, 1223.0], [72.7, 1223.0], [72.8, 1223.0], [72.9, 1223.0], [73.0, 1223.0], [73.1, 1223.0], [73.2, 1223.0], [73.3, 1223.0], [73.4, 1223.0], [73.5, 1223.0], [73.6, 1223.0], [73.7, 1223.0], [73.8, 1223.0], [73.9, 1223.0], [74.0, 1223.0], [74.1, 1223.0], [74.2, 1223.0], [74.3, 1223.0], [74.4, 1223.0], [74.5, 1223.0], [74.6, 1223.0], [74.7, 1223.0], [74.8, 1223.0], [74.9, 1223.0], [75.0, 1223.0], [75.1, 1223.0], [75.2, 1223.0], [75.3, 1223.0], [75.4, 1223.0], [75.5, 1223.0], [75.6, 1223.0], [75.7, 1223.0], [75.8, 1223.0], [75.9, 1223.0], [76.0, 1223.0], [76.1, 1223.0], [76.2, 1223.0], [76.3, 1223.0], [76.4, 1223.0], [76.5, 1223.0], [76.6, 1223.0], [76.7, 1223.0], [76.8, 1223.0], [76.9, 1223.0], [77.0, 1223.0], [77.1, 1223.0], [77.2, 1223.0], [77.3, 1223.0], [77.4, 1223.0], [77.5, 1223.0], [77.6, 1223.0], [77.7, 1223.0], [77.8, 1223.0], [77.9, 1223.0], [78.0, 1223.0], [78.1, 1223.0], [78.2, 1223.0], [78.3, 1223.0], [78.4, 1223.0], [78.5, 1223.0], [78.6, 1223.0], [78.7, 1223.0], [78.8, 1223.0], [78.9, 1223.0], [79.0, 1223.0], [79.1, 1223.0], [79.2, 1223.0], [79.3, 1223.0], [79.4, 1223.0], [79.5, 1223.0], [79.6, 1223.0], [79.7, 1223.0], [79.8, 1223.0], [79.9, 1223.0], [80.0, 1223.0], [80.1, 1223.0], [80.2, 1223.0], [80.3, 1223.0], [80.4, 1223.0], [80.5, 1223.0], [80.6, 1223.0], [80.7, 1223.0], [80.8, 1223.0], [80.9, 1223.0], [81.0, 1223.0], [81.1, 1223.0], [81.2, 1223.0], [81.3, 1223.0], [81.4, 1223.0], [81.5, 1223.0], [81.6, 1223.0], [81.7, 1223.0], [81.8, 1223.0], [81.9, 1223.0], [82.0, 1223.0], [82.1, 1223.0], [82.2, 1223.0], [82.3, 1223.0], [82.4, 1223.0], [82.5, 1223.0], [82.6, 1223.0], [82.7, 1223.0], [82.8, 1223.0], [82.9, 1223.0], [83.0, 1223.0], [83.1, 1223.0], [83.2, 1223.0], [83.3, 1223.0], [83.4, 1223.0], [83.5, 1223.0], [83.6, 1223.0], [83.7, 1223.0], [83.8, 1223.0], [83.9, 1223.0], [84.0, 1223.0], [84.1, 1223.0], [84.2, 1223.0], [84.3, 1223.0], [84.4, 1223.0], [84.5, 1223.0], [84.6, 1223.0], [84.7, 1223.0], [84.8, 1223.0], [84.9, 1223.0], [85.0, 1223.0], [85.1, 1223.0], [85.2, 1223.0], [85.3, 1223.0], [85.4, 1223.0], [85.5, 1223.0], [85.6, 1223.0], [85.7, 1223.0], [85.8, 1223.0], [85.9, 1223.0], [86.0, 1223.0], [86.1, 1223.0], [86.2, 1223.0], [86.3, 1223.0], [86.4, 1223.0], [86.5, 1223.0], [86.6, 1223.0], [86.7, 1223.0], [86.8, 1223.0], [86.9, 1223.0], [87.0, 1223.0], [87.1, 1223.0], [87.2, 1223.0], [87.3, 1223.0], [87.4, 1223.0], [87.5, 1223.0], [87.6, 1223.0], [87.7, 1223.0], [87.8, 1223.0], [87.9, 1223.0], [88.0, 1223.0], [88.1, 1223.0], [88.2, 1223.0], [88.3, 1223.0], [88.4, 1223.0], [88.5, 1223.0], [88.6, 1223.0], [88.7, 1223.0], [88.8, 1223.0], [88.9, 1223.0], [89.0, 1223.0], [89.1, 1223.0], [89.2, 1223.0], [89.3, 1223.0], [89.4, 1223.0], [89.5, 1223.0], [89.6, 1223.0], [89.7, 1223.0], [89.8, 1223.0], [89.9, 1223.0], [90.0, 1223.0], [90.1, 1223.0], [90.2, 1223.0], [90.3, 1223.0], [90.4, 1223.0], [90.5, 1223.0], [90.6, 1223.0], [90.7, 1223.0], [90.8, 1223.0], [90.9, 1223.0], [91.0, 1223.0], [91.1, 1223.0], [91.2, 1223.0], [91.3, 1223.0], [91.4, 1223.0], [91.5, 1223.0], [91.6, 1223.0], [91.7, 1223.0], [91.8, 1223.0], [91.9, 1223.0], [92.0, 1223.0], [92.1, 1223.0], [92.2, 1223.0], [92.3, 1223.0], [92.4, 1223.0], [92.5, 1223.0], [92.6, 1223.0], [92.7, 1223.0], [92.8, 1223.0], [92.9, 1223.0], [93.0, 1223.0], [93.1, 1223.0], [93.2, 1223.0], [93.3, 1223.0], [93.4, 1223.0], [93.5, 1223.0], [93.6, 1223.0], [93.7, 1223.0], [93.8, 1223.0], [93.9, 1223.0], [94.0, 1223.0], [94.1, 1223.0], [94.2, 1223.0], [94.3, 1223.0], [94.4, 1223.0], [94.5, 1223.0], [94.6, 1223.0], [94.7, 1223.0], [94.8, 1223.0], [94.9, 1223.0], [95.0, 1223.0], [95.1, 1223.0], [95.2, 1223.0], [95.3, 1223.0], [95.4, 1223.0], [95.5, 1223.0], [95.6, 1223.0], [95.7, 1223.0], [95.8, 1223.0], [95.9, 1223.0], [96.0, 1223.0], [96.1, 1223.0], [96.2, 1223.0], [96.3, 1223.0], [96.4, 1223.0], [96.5, 1223.0], [96.6, 1223.0], [96.7, 1223.0], [96.8, 1223.0], [96.9, 1223.0], [97.0, 1223.0], [97.1, 1223.0], [97.2, 1223.0], [97.3, 1223.0], [97.4, 1223.0], [97.5, 1223.0], [97.6, 1223.0], [97.7, 1223.0], [97.8, 1223.0], [97.9, 1223.0], [98.0, 1223.0], [98.1, 1223.0], [98.2, 1223.0], [98.3, 1223.0], [98.4, 1223.0], [98.5, 1223.0], [98.6, 1223.0], [98.7, 1223.0], [98.8, 1223.0], [98.9, 1223.0], [99.0, 1223.0], [99.1, 1223.0], [99.2, 1223.0], [99.3, 1223.0], [99.4, 1223.0], [99.5, 1223.0], [99.6, 1223.0], [99.7, 1223.0], [99.8, 1223.0], [99.9, 1223.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 300.0, "maxY": 702.0, "series": [{"data": [[600.0, 1.0], [700.0, 15.0], [800.0, 61.0], [900.0, 70.0], [1000.0, 31.0], [1100.0, 16.0], [1200.0, 12.0], [1300.0, 8.0], [1400.0, 1.0], [1500.0, 3.0], [25500.0, 1.0], [1600.0, 2.0], [2000.0, 1.0]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[2200.0, 1.0], [600.0, 82.0], [700.0, 27.0], [800.0, 9.0], [900.0, 7.0], [1000.0, 3.0], [1100.0, 2.0], [1200.0, 1.0], [21700.0, 1.0], [1500.0, 1.0], [400.0, 66.0], [1800.0, 1.0], [500.0, 167.0]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[1100.0, 1.0], [300.0, 702.0], [600.0, 1.0], [21300.0, 1.0], [700.0, 1.0], [400.0, 324.0], [500.0, 6.0]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[2100.0, 1.0], [2200.0, 2.0], [600.0, 4.0], [2400.0, 1.0], [3000.0, 1.0], [1100.0, 2.0], [300.0, 17.0], [1200.0, 2.0], [1300.0, 4.0], [1400.0, 5.0], [1500.0, 8.0], [400.0, 77.0], [1600.0, 4.0], [25800.0, 1.0], [1700.0, 8.0], [1800.0, 8.0], [1900.0, 7.0], [500.0, 11.0], [2000.0, 2.0]], "isOverall": false, "label": "trackVehicleExitOutEntry", "isController": false}, {"data": [[1200.0, 1.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 25800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 55.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1093.0, "series": [{"data": [[0.0, 1093.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 534.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 55.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 110.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.71997782E12, "maxY": 1.0, "series": [{"data": [[1.71997782E12, 1.0]], "isOverall": false, "label": "setUpAutenticacionCognito", "isController": false}, {"data": [[1.71997842E12, 1.0], [1.71997794E12, 1.0], [1.71997824E12, 1.0], [1.7199783E12, 1.0], [1.71997782E12, 1.0], [1.71997812E12, 1.0], [1.71997818E12, 1.0], [1.719978E12, 1.0], [1.71997806E12, 1.0], [1.71997836E12, 1.0], [1.71997788E12, 1.0]], "isOverall": false, "label": "consultarPlaca", "isController": false}, {"data": [[1.71997842E12, 1.0], [1.71997794E12, 1.0], [1.71997824E12, 1.0], [1.7199783E12, 1.0], [1.71997812E12, 1.0], [1.71997818E12, 1.0], [1.719978E12, 1.0], [1.71997806E12, 1.0], [1.71997836E12, 1.0], [1.71997788E12, 1.0]], "isOverall": false, "label": "registrarEntrada", "isController": false}, {"data": [[1.71997842E12, 1.0], [1.71997824E12, 1.0], [1.7199783E12, 1.0], [1.71997812E12, 1.0], [1.71997818E12, 1.0], [1.71997806E12, 1.0], [1.71997836E12, 1.0]], "isOverall": false, "label": "registrarSalida", "isController": false}, {"data": [[1.71997842E12, 1.0], [1.71997824E12, 1.0], [1.7199783E12, 1.0], [1.71997812E12, 1.0], [1.71997818E12, 1.0], [1.71997836E12, 1.0]], "isOverall": false, "label": "registrarSalidaSinEntrada", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71997842E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 381.2523364485981, "minX": 1.0, "maxY": 1934.0, "series": [{"data": [[4.0, 985.6568047337278], [3.0, 1464.0377358490564]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[3.761261261261263, 1099.864864864864]], "isOverall": false, "label": "trackVehicleExit-Aggregated", "isController": false}, {"data": [[2.0, 628.3058823529411], [4.0, 709.659898477157], [3.0, 589.1511627906978]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[3.304347826086955, 662.706521739131]], "isOverall": false, "label": "trackVehicleEntry-Aggregated", "isController": false}, {"data": [[1.0, 384.1981132075472], [2.0, 381.2523364485981], [4.0, 427.2534930139716], [3.0, 385.2418604651162]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[3.0723938223938236, 404.62741312741275]], "isOverall": false, "label": "getPlate-Aggregated", "isController": false}, {"data": [[4.0, 1019.469512195122], [1.0, 1934.0]], "isOverall": false, "label": "trackVehicleExitOutEntry", "isController": false}, {"data": [[3.981818181818182, 1025.0121212121212]], "isOverall": false, "label": "trackVehicleExitOutEntry-Aggregated", "isController": false}, {"data": [[1.0, 1223.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}, {"data": [[1.0, 1223.0]], "isOverall": false, "label": "loginAFlypass-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 4.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 74.63333333333334, "minX": 1.71997782E12, "maxY": 3869.0666666666666, "series": [{"data": [[1.71997842E12, 1634.15], [1.71997794E12, 1203.6666666666667], [1.71997824E12, 1642.6], [1.7199783E12, 1638.05], [1.71997782E12, 74.63333333333334], [1.71997812E12, 1529.9], [1.71997818E12, 1949.3166666666666], [1.719978E12, 1211.5333333333333], [1.71997806E12, 1404.8666666666666], [1.71997836E12, 1610.1166666666666], [1.71997788E12, 850.3333333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71997842E12, 3212.5333333333333], [1.71997794E12, 2324.0833333333335], [1.71997824E12, 3276.2833333333333], [1.7199783E12, 3233.05], [1.71997782E12, 78.76666666666667], [1.71997812E12, 2990.766666666667], [1.71997818E12, 3869.0666666666666], [1.719978E12, 2338.6833333333334], [1.71997806E12, 2730.1833333333334], [1.71997836E12, 3151.0833333333335], [1.71997788E12, 1578.4833333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71997842E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 369.0, "minX": 1.71997782E12, "maxY": 3817.538461538462, "series": [{"data": [[1.71997842E12, 1048.5483870967744], [1.71997824E12, 923.5142857142856], [1.7199783E12, 1001.1470588235294], [1.71997812E12, 974.6363636363634], [1.71997818E12, 967.558823529412], [1.71997806E12, 2193.9523809523807], [1.71997836E12, 1005.0]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[1.71997842E12, 611.8571428571427], [1.71997794E12, 576.46511627907], [1.71997824E12, 577.375], [1.7199783E12, 1124.842105263158], [1.71997812E12, 588.1818181818184], [1.71997818E12, 599.9767441860465], [1.719978E12, 627.5348837209302], [1.71997806E12, 591.7142857142857], [1.71997836E12, 659.4499999999998], [1.71997788E12, 2277.0]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[1.71997842E12, 390.19801980198037], [1.71997794E12, 373.86792452830196], [1.71997824E12, 381.69512195121945], [1.7199783E12, 611.915789473684], [1.71997782E12, 395.4], [1.71997812E12, 382.6448598130841], [1.71997818E12, 379.6697247706422], [1.719978E12, 388.24299065420564], [1.71997806E12, 385.7889908256883], [1.71997836E12, 385.1018518518519], [1.71997788E12, 385.3738317757009]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1.71997842E12, 1743.4782608695652], [1.71997824E12, 447.04166666666663], [1.7199783E12, 1195.4999999999995], [1.71997812E12, 369.0], [1.71997818E12, 435.4693877551021], [1.71997836E12, 3817.538461538462]], "isOverall": false, "label": "trackVehicleExitOutEntry", "isController": false}, {"data": [[1.71997782E12, 1223.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71997842E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 369.0, "minX": 1.71997782E12, "maxY": 3817.307692307692, "series": [{"data": [[1.71997842E12, 1048.5161290322578], [1.71997824E12, 923.4571428571429], [1.7199783E12, 1000.9411764705884], [1.71997812E12, 974.3939393939394], [1.71997818E12, 967.4999999999998], [1.71997806E12, 2193.9523809523807], [1.71997836E12, 1004.9117647058824]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[1.71997842E12, 611.8333333333333], [1.71997794E12, 576.3255813953489], [1.71997824E12, 577.28125], [1.7199783E12, 1124.7894736842104], [1.71997812E12, 588.0681818181819], [1.71997818E12, 599.7906976744184], [1.719978E12, 627.3720930232558], [1.71997806E12, 591.5714285714287], [1.71997836E12, 659.3249999999998], [1.71997788E12, 2277.0]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[1.71997842E12, 390.1188118811881], [1.71997794E12, 373.6320754716981], [1.71997824E12, 381.60975609756093], [1.7199783E12, 611.831578947368], [1.71997782E12, 395.0], [1.71997812E12, 382.5046728971962], [1.71997818E12, 379.6055045871562], [1.719978E12, 388.1308411214954], [1.71997806E12, 385.66972477064235], [1.71997836E12, 385.06481481481484], [1.71997788E12, 385.1308411214952]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1.71997842E12, 1743.3913043478258], [1.71997824E12, 446.97916666666663], [1.7199783E12, 1195.4000000000003], [1.71997812E12, 369.0], [1.71997818E12, 435.40816326530614], [1.71997836E12, 3817.307692307692]], "isOverall": false, "label": "trackVehicleExitOutEntry", "isController": false}, {"data": [[1.71997782E12, 1220.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71997842E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 243.5, "minX": 1.71997782E12, "maxY": 1018.0, "series": [{"data": [[1.71997842E12, 286.19354838709666], [1.71997824E12, 272.74285714285713], [1.7199783E12, 287.7941176470587], [1.71997812E12, 282.6969696969696], [1.71997818E12, 287.6176470588236], [1.71997806E12, 286.8571428571429], [1.71997836E12, 277.1470588235294]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[1.71997842E12, 284.3809523809525], [1.71997794E12, 276.04651162790697], [1.71997824E12, 283.53125000000006], [1.7199783E12, 840.9736842105262], [1.71997812E12, 287.25000000000006], [1.71997818E12, 290.06976744186045], [1.719978E12, 284.09302325581393], [1.71997806E12, 288.2142857142858], [1.71997836E12, 287.8500000000001], [1.71997788E12, 285.0]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[1.71997842E12, 287.3465346534654], [1.71997794E12, 278.9339622641509], [1.71997824E12, 280.9512195121951], [1.7199783E12, 507.6947368421051], [1.71997782E12, 272.2], [1.71997812E12, 283.8130841121496], [1.71997818E12, 279.93577981651384], [1.719978E12, 282.06542056074744], [1.71997806E12, 286.63302752293583], [1.71997836E12, 285.0648148148149], [1.71997788E12, 286.8598130841121]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1.71997842E12, 290.913043478261], [1.71997824E12, 278.5416666666667], [1.7199783E12, 293.56666666666666], [1.71997812E12, 243.5], [1.71997818E12, 279.67346938775506], [1.71997836E12, 302.07692307692304]], "isOverall": false, "label": "trackVehicleExitOutEntry", "isController": false}, {"data": [[1.71997782E12, 1018.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71997842E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 309.0, "minX": 1.71997782E12, "maxY": 25830.0, "series": [{"data": [[1.71997842E12, 2265.0], [1.71997794E12, 805.0], [1.71997824E12, 1510.0], [1.7199783E12, 21770.0], [1.71997782E12, 1223.0], [1.71997812E12, 1582.0], [1.71997818E12, 2003.0], [1.719978E12, 1585.0], [1.71997806E12, 25585.0], [1.71997836E12, 25830.0], [1.71997788E12, 2277.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71997842E12, 1548.0], [1.71997794E12, 591.0], [1.71997824E12, 903.0], [1.7199783E12, 1390.6000000000001], [1.71997782E12, 1223.0], [1.71997812E12, 953.5], [1.71997818E12, 897.5], [1.719978E12, 663.1], [1.71997806E12, 919.1000000000003], [1.71997836E12, 1196.2000000000003], [1.71997788E12, 438.1]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71997842E12, 2150.340000000001], [1.71997794E12, 774.0], [1.71997824E12, 1404.0], [1.7199783E12, 21424.609999999997], [1.71997782E12, 1223.0], [1.71997812E12, 1332.1000000000017], [1.71997818E12, 1501.8799999999974], [1.719978E12, 1339.6900000000044], [1.71997806E12, 7913.890000000248], [1.71997836E12, 3920.879999999818], [1.71997788E12, 2123.009999999994]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71997842E12, 1807.5999999999997], [1.71997794E12, 653.5], [1.71997824E12, 1007.5], [1.7199783E12, 1710.8500000000004], [1.71997782E12, 1223.0], [1.71997812E12, 1014.0], [1.71997818E12, 970.9000000000001], [1.719978E12, 760.9499999999998], [1.71997806E12, 1056.8999999999999], [1.71997836E12, 1774.1999999999994], [1.71997788E12, 447.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.71997842E12, 310.0], [1.71997794E12, 311.0], [1.71997824E12, 314.0], [1.7199783E12, 315.0], [1.71997782E12, 382.0], [1.71997812E12, 312.0], [1.71997818E12, 313.0], [1.719978E12, 309.0], [1.71997806E12, 313.0], [1.71997836E12, 316.0], [1.71997788E12, 312.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71997842E12, 454.0], [1.71997794E12, 384.0], [1.71997824E12, 425.0], [1.7199783E12, 453.0], [1.71997782E12, 394.0], [1.71997812E12, 420.0], [1.71997818E12, 422.5], [1.719978E12, 400.5], [1.71997806E12, 419.0], [1.71997836E12, 428.0], [1.71997788E12, 377.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71997842E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 385.0, "minX": 1.0, "maxY": 481.5, "series": [{"data": [[1.0, 385.0], [2.0, 389.0], [4.0, 445.5], [5.0, 481.5], [3.0, 417.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 417.5], [2.0, 457.0], [1.0, 419.0], [5.0, 419.5], [3.0, 437.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 5.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 385.0, "minX": 1.0, "maxY": 481.5, "series": [{"data": [[1.0, 385.0], [2.0, 389.0], [4.0, 445.5], [5.0, 481.5], [3.0, 416.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 417.5], [2.0, 457.0], [1.0, 419.0], [5.0, 419.0], [3.0, 437.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 5.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.11666666666666667, "minX": 1.71997782E12, "maxY": 3.9, "series": [{"data": [[1.71997842E12, 3.25], [1.71997794E12, 2.5166666666666666], [1.71997824E12, 3.316666666666667], [1.7199783E12, 3.25], [1.71997782E12, 0.11666666666666667], [1.71997812E12, 3.1333333333333333], [1.71997818E12, 3.9], [1.719978E12, 2.5], [1.71997806E12, 2.85], [1.71997836E12, 3.25], [1.71997788E12, 1.7833333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71997842E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71997782E12, "maxY": 1.8166666666666667, "series": [{"data": [[1.71997842E12, 1.6833333333333333], [1.71997794E12, 1.7666666666666666], [1.71997824E12, 1.3666666666666667], [1.7199783E12, 1.5833333333333333], [1.71997782E12, 0.1], [1.71997812E12, 1.7833333333333334], [1.71997818E12, 1.8166666666666667], [1.719978E12, 1.7833333333333334], [1.71997806E12, 1.8166666666666667], [1.71997836E12, 1.8], [1.71997788E12, 1.7833333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.71997842E12, 1.6], [1.71997794E12, 0.7166666666666667], [1.71997824E12, 1.1166666666666667], [1.7199783E12, 1.5166666666666666], [1.71997812E12, 1.2833333333333334], [1.71997818E12, 1.2833333333333334], [1.719978E12, 0.7166666666666667], [1.71997806E12, 1.05], [1.71997836E12, 1.45], [1.71997788E12, 0.016666666666666666]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.71997824E12, 0.8], [1.7199783E12, 0.18333333333333332], [1.71997812E12, 0.03333333333333333], [1.71997818E12, 0.8166666666666667]], "isOverall": false, "label": "400", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71997842E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71997782E12, "maxY": 1.8166666666666667, "series": [{"data": [[1.71997782E12, 0.016666666666666666]], "isOverall": false, "label": "loginAFlypass-success", "isController": false}, {"data": [[1.71997842E12, 0.7], [1.71997794E12, 0.7166666666666667], [1.71997824E12, 0.5333333333333333], [1.7199783E12, 0.6333333333333333], [1.71997812E12, 0.7333333333333333], [1.71997818E12, 0.7166666666666667], [1.719978E12, 0.7166666666666667], [1.71997806E12, 0.7], [1.71997836E12, 0.6666666666666666], [1.71997788E12, 0.016666666666666666]], "isOverall": false, "label": "trackVehicleEntry-success", "isController": false}, {"data": [[1.71997842E12, 0.5166666666666667], [1.71997824E12, 0.5833333333333334], [1.7199783E12, 0.5666666666666667], [1.71997812E12, 0.55], [1.71997818E12, 0.5666666666666667], [1.71997806E12, 0.35], [1.71997836E12, 0.5666666666666667]], "isOverall": false, "label": "trackVehicleExit-success", "isController": false}, {"data": [[1.71997842E12, 1.6833333333333333], [1.71997794E12, 1.7666666666666666], [1.71997824E12, 1.3666666666666667], [1.7199783E12, 1.5833333333333333], [1.71997782E12, 0.08333333333333333], [1.71997812E12, 1.7833333333333334], [1.71997818E12, 1.8166666666666667], [1.719978E12, 1.7833333333333334], [1.71997806E12, 1.8166666666666667], [1.71997836E12, 1.8], [1.71997788E12, 1.7833333333333334]], "isOverall": false, "label": "getPlate-success", "isController": false}, {"data": [[1.71997824E12, 0.8], [1.7199783E12, 0.18333333333333332], [1.71997812E12, 0.03333333333333333], [1.71997818E12, 0.8166666666666667]], "isOverall": false, "label": "trackVehicleExitOutEntry-failure", "isController": false}, {"data": [[1.71997842E12, 0.38333333333333336], [1.7199783E12, 0.31666666666666665], [1.71997836E12, 0.21666666666666667]], "isOverall": false, "label": "trackVehicleExitOutEntry-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71997842E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.71997782E12, "maxY": 3.283333333333333, "series": [{"data": [[1.71997842E12, 3.283333333333333], [1.71997794E12, 2.4833333333333334], [1.71997824E12, 2.4833333333333334], [1.7199783E12, 3.1], [1.71997782E12, 0.1], [1.71997812E12, 3.066666666666667], [1.71997818E12, 3.1], [1.719978E12, 2.5], [1.71997806E12, 2.8666666666666667], [1.71997836E12, 3.25], [1.71997788E12, 1.8]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.71997824E12, 0.8], [1.7199783E12, 0.18333333333333332], [1.71997812E12, 0.03333333333333333], [1.71997818E12, 0.8166666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71997842E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

