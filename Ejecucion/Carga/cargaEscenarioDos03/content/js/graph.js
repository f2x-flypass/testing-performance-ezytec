/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 306.0, "minX": 0.0, "maxY": 25662.0, "series": [{"data": [[0.0, 780.0], [0.1, 780.0], [0.2, 780.0], [0.3, 780.0], [0.4, 780.0], [0.5, 780.0], [0.6, 785.0], [0.7, 785.0], [0.8, 785.0], [0.9, 785.0], [1.0, 785.0], [1.1, 785.0], [1.2, 795.0], [1.3, 795.0], [1.4, 795.0], [1.5, 795.0], [1.6, 795.0], [1.7, 795.0], [1.8, 814.0], [1.9, 814.0], [2.0, 814.0], [2.1, 814.0], [2.2, 814.0], [2.3, 814.0], [2.4, 820.0], [2.5, 820.0], [2.6, 820.0], [2.7, 820.0], [2.8, 820.0], [2.9, 820.0], [3.0, 827.0], [3.1, 827.0], [3.2, 827.0], [3.3, 827.0], [3.4, 827.0], [3.5, 827.0], [3.6, 833.0], [3.7, 833.0], [3.8, 833.0], [3.9, 833.0], [4.0, 833.0], [4.1, 833.0], [4.2, 843.0], [4.3, 843.0], [4.4, 843.0], [4.5, 843.0], [4.6, 843.0], [4.7, 843.0], [4.8, 855.0], [4.9, 855.0], [5.0, 855.0], [5.1, 855.0], [5.2, 855.0], [5.3, 865.0], [5.4, 865.0], [5.5, 865.0], [5.6, 865.0], [5.7, 865.0], [5.8, 865.0], [5.9, 866.0], [6.0, 866.0], [6.1, 866.0], [6.2, 866.0], [6.3, 866.0], [6.4, 866.0], [6.5, 876.0], [6.6, 876.0], [6.7, 876.0], [6.8, 876.0], [6.9, 876.0], [7.0, 876.0], [7.1, 883.0], [7.2, 883.0], [7.3, 883.0], [7.4, 883.0], [7.5, 883.0], [7.6, 883.0], [7.7, 895.0], [7.8, 895.0], [7.9, 895.0], [8.0, 895.0], [8.1, 895.0], [8.2, 895.0], [8.3, 912.0], [8.4, 912.0], [8.5, 912.0], [8.6, 912.0], [8.7, 912.0], [8.8, 912.0], [8.9, 925.0], [9.0, 925.0], [9.1, 925.0], [9.2, 925.0], [9.3, 925.0], [9.4, 925.0], [9.5, 925.0], [9.6, 925.0], [9.7, 925.0], [9.8, 925.0], [9.9, 925.0], [10.0, 925.0], [10.1, 925.0], [10.2, 925.0], [10.3, 925.0], [10.4, 925.0], [10.5, 925.0], [10.6, 932.0], [10.7, 932.0], [10.8, 932.0], [10.9, 932.0], [11.0, 932.0], [11.1, 932.0], [11.2, 937.0], [11.3, 937.0], [11.4, 937.0], [11.5, 937.0], [11.6, 937.0], [11.7, 937.0], [11.8, 939.0], [11.9, 939.0], [12.0, 939.0], [12.1, 939.0], [12.2, 939.0], [12.3, 939.0], [12.4, 941.0], [12.5, 941.0], [12.6, 941.0], [12.7, 941.0], [12.8, 941.0], [12.9, 941.0], [13.0, 942.0], [13.1, 942.0], [13.2, 942.0], [13.3, 942.0], [13.4, 942.0], [13.5, 942.0], [13.6, 944.0], [13.7, 944.0], [13.8, 944.0], [13.9, 944.0], [14.0, 944.0], [14.1, 944.0], [14.2, 946.0], [14.3, 946.0], [14.4, 946.0], [14.5, 946.0], [14.6, 946.0], [14.7, 946.0], [14.8, 950.0], [14.9, 950.0], [15.0, 950.0], [15.1, 950.0], [15.2, 950.0], [15.3, 955.0], [15.4, 955.0], [15.5, 955.0], [15.6, 955.0], [15.7, 955.0], [15.8, 955.0], [15.9, 964.0], [16.0, 964.0], [16.1, 964.0], [16.2, 964.0], [16.3, 964.0], [16.4, 964.0], [16.5, 970.0], [16.6, 970.0], [16.7, 970.0], [16.8, 970.0], [16.9, 970.0], [17.0, 970.0], [17.1, 975.0], [17.2, 975.0], [17.3, 975.0], [17.4, 975.0], [17.5, 975.0], [17.6, 975.0], [17.7, 979.0], [17.8, 979.0], [17.9, 979.0], [18.0, 979.0], [18.1, 979.0], [18.2, 979.0], [18.3, 989.0], [18.4, 989.0], [18.5, 989.0], [18.6, 989.0], [18.7, 989.0], [18.8, 989.0], [18.9, 991.0], [19.0, 991.0], [19.1, 991.0], [19.2, 991.0], [19.3, 991.0], [19.4, 991.0], [19.5, 993.0], [19.6, 993.0], [19.7, 993.0], [19.8, 993.0], [19.9, 993.0], [20.0, 993.0], [20.1, 1005.0], [20.2, 1005.0], [20.3, 1005.0], [20.4, 1005.0], [20.5, 1005.0], [20.6, 1011.0], [20.7, 1011.0], [20.8, 1011.0], [20.9, 1011.0], [21.0, 1011.0], [21.1, 1011.0], [21.2, 1019.0], [21.3, 1019.0], [21.4, 1019.0], [21.5, 1019.0], [21.6, 1019.0], [21.7, 1019.0], [21.8, 1025.0], [21.9, 1025.0], [22.0, 1025.0], [22.1, 1025.0], [22.2, 1025.0], [22.3, 1025.0], [22.4, 1026.0], [22.5, 1026.0], [22.6, 1026.0], [22.7, 1026.0], [22.8, 1026.0], [22.9, 1026.0], [23.0, 1038.0], [23.1, 1038.0], [23.2, 1038.0], [23.3, 1038.0], [23.4, 1038.0], [23.5, 1038.0], [23.6, 1040.0], [23.7, 1040.0], [23.8, 1040.0], [23.9, 1040.0], [24.0, 1040.0], [24.1, 1040.0], [24.2, 1045.0], [24.3, 1045.0], [24.4, 1045.0], [24.5, 1045.0], [24.6, 1045.0], [24.7, 1045.0], [24.8, 1045.0], [24.9, 1045.0], [25.0, 1045.0], [25.1, 1045.0], [25.2, 1045.0], [25.3, 1052.0], [25.4, 1052.0], [25.5, 1052.0], [25.6, 1052.0], [25.7, 1052.0], [25.8, 1052.0], [25.9, 1055.0], [26.0, 1055.0], [26.1, 1055.0], [26.2, 1055.0], [26.3, 1055.0], [26.4, 1055.0], [26.5, 1055.0], [26.6, 1055.0], [26.7, 1055.0], [26.8, 1055.0], [26.9, 1055.0], [27.0, 1055.0], [27.1, 1063.0], [27.2, 1063.0], [27.3, 1063.0], [27.4, 1063.0], [27.5, 1063.0], [27.6, 1063.0], [27.7, 1066.0], [27.8, 1066.0], [27.9, 1066.0], [28.0, 1066.0], [28.1, 1066.0], [28.2, 1066.0], [28.3, 1076.0], [28.4, 1076.0], [28.5, 1076.0], [28.6, 1076.0], [28.7, 1076.0], [28.8, 1076.0], [28.9, 1076.0], [29.0, 1076.0], [29.1, 1076.0], [29.2, 1076.0], [29.3, 1076.0], [29.4, 1076.0], [29.5, 1080.0], [29.6, 1080.0], [29.7, 1080.0], [29.8, 1080.0], [29.9, 1080.0], [30.0, 1080.0], [30.1, 1083.0], [30.2, 1083.0], [30.3, 1083.0], [30.4, 1083.0], [30.5, 1083.0], [30.6, 1088.0], [30.7, 1088.0], [30.8, 1088.0], [30.9, 1088.0], [31.0, 1088.0], [31.1, 1088.0], [31.2, 1092.0], [31.3, 1092.0], [31.4, 1092.0], [31.5, 1092.0], [31.6, 1092.0], [31.7, 1092.0], [31.8, 1093.0], [31.9, 1093.0], [32.0, 1093.0], [32.1, 1093.0], [32.2, 1093.0], [32.3, 1093.0], [32.4, 1095.0], [32.5, 1095.0], [32.6, 1095.0], [32.7, 1095.0], [32.8, 1095.0], [32.9, 1095.0], [33.0, 1096.0], [33.1, 1096.0], [33.2, 1096.0], [33.3, 1096.0], [33.4, 1096.0], [33.5, 1096.0], [33.6, 1098.0], [33.7, 1098.0], [33.8, 1098.0], [33.9, 1098.0], [34.0, 1098.0], [34.1, 1098.0], [34.2, 1099.0], [34.3, 1099.0], [34.4, 1099.0], [34.5, 1099.0], [34.6, 1099.0], [34.7, 1099.0], [34.8, 1101.0], [34.9, 1101.0], [35.0, 1101.0], [35.1, 1101.0], [35.2, 1101.0], [35.3, 1101.0], [35.4, 1101.0], [35.5, 1101.0], [35.6, 1101.0], [35.7, 1101.0], [35.8, 1101.0], [35.9, 1105.0], [36.0, 1105.0], [36.1, 1105.0], [36.2, 1105.0], [36.3, 1105.0], [36.4, 1105.0], [36.5, 1106.0], [36.6, 1106.0], [36.7, 1106.0], [36.8, 1106.0], [36.9, 1106.0], [37.0, 1106.0], [37.1, 1114.0], [37.2, 1114.0], [37.3, 1114.0], [37.4, 1114.0], [37.5, 1114.0], [37.6, 1114.0], [37.7, 1116.0], [37.8, 1116.0], [37.9, 1116.0], [38.0, 1116.0], [38.1, 1116.0], [38.2, 1116.0], [38.3, 1125.0], [38.4, 1125.0], [38.5, 1125.0], [38.6, 1125.0], [38.7, 1125.0], [38.8, 1125.0], [38.9, 1133.0], [39.0, 1133.0], [39.1, 1133.0], [39.2, 1133.0], [39.3, 1133.0], [39.4, 1133.0], [39.5, 1135.0], [39.6, 1135.0], [39.7, 1135.0], [39.8, 1135.0], [39.9, 1135.0], [40.0, 1137.0], [40.1, 1137.0], [40.2, 1137.0], [40.3, 1137.0], [40.4, 1137.0], [40.5, 1137.0], [40.6, 1140.0], [40.7, 1140.0], [40.8, 1140.0], [40.9, 1140.0], [41.0, 1140.0], [41.1, 1140.0], [41.2, 1142.0], [41.3, 1142.0], [41.4, 1142.0], [41.5, 1142.0], [41.6, 1142.0], [41.7, 1142.0], [41.8, 1149.0], [41.9, 1149.0], [42.0, 1149.0], [42.1, 1149.0], [42.2, 1149.0], [42.3, 1149.0], [42.4, 1152.0], [42.5, 1152.0], [42.6, 1152.0], [42.7, 1152.0], [42.8, 1152.0], [42.9, 1152.0], [43.0, 1158.0], [43.1, 1158.0], [43.2, 1158.0], [43.3, 1158.0], [43.4, 1158.0], [43.5, 1158.0], [43.6, 1165.0], [43.7, 1165.0], [43.8, 1165.0], [43.9, 1165.0], [44.0, 1165.0], [44.1, 1165.0], [44.2, 1171.0], [44.3, 1171.0], [44.4, 1171.0], [44.5, 1171.0], [44.6, 1171.0], [44.7, 1171.0], [44.8, 1175.0], [44.9, 1175.0], [45.0, 1175.0], [45.1, 1175.0], [45.2, 1175.0], [45.3, 1185.0], [45.4, 1185.0], [45.5, 1185.0], [45.6, 1185.0], [45.7, 1185.0], [45.8, 1185.0], [45.9, 1189.0], [46.0, 1189.0], [46.1, 1189.0], [46.2, 1189.0], [46.3, 1189.0], [46.4, 1189.0], [46.5, 1191.0], [46.6, 1191.0], [46.7, 1191.0], [46.8, 1191.0], [46.9, 1191.0], [47.0, 1191.0], [47.1, 1194.0], [47.2, 1194.0], [47.3, 1194.0], [47.4, 1194.0], [47.5, 1194.0], [47.6, 1194.0], [47.7, 1195.0], [47.8, 1195.0], [47.9, 1195.0], [48.0, 1195.0], [48.1, 1195.0], [48.2, 1195.0], [48.3, 1195.0], [48.4, 1195.0], [48.5, 1195.0], [48.6, 1195.0], [48.7, 1195.0], [48.8, 1195.0], [48.9, 1217.0], [49.0, 1217.0], [49.1, 1217.0], [49.2, 1217.0], [49.3, 1217.0], [49.4, 1217.0], [49.5, 1224.0], [49.6, 1224.0], [49.7, 1224.0], [49.8, 1224.0], [49.9, 1224.0], [50.0, 1225.0], [50.1, 1225.0], [50.2, 1225.0], [50.3, 1225.0], [50.4, 1225.0], [50.5, 1225.0], [50.6, 1226.0], [50.7, 1226.0], [50.8, 1226.0], [50.9, 1226.0], [51.0, 1226.0], [51.1, 1226.0], [51.2, 1231.0], [51.3, 1231.0], [51.4, 1231.0], [51.5, 1231.0], [51.6, 1231.0], [51.7, 1231.0], [51.8, 1241.0], [51.9, 1241.0], [52.0, 1241.0], [52.1, 1241.0], [52.2, 1241.0], [52.3, 1241.0], [52.4, 1247.0], [52.5, 1247.0], [52.6, 1247.0], [52.7, 1247.0], [52.8, 1247.0], [52.9, 1247.0], [53.0, 1254.0], [53.1, 1254.0], [53.2, 1254.0], [53.3, 1254.0], [53.4, 1254.0], [53.5, 1254.0], [53.6, 1257.0], [53.7, 1257.0], [53.8, 1257.0], [53.9, 1257.0], [54.0, 1257.0], [54.1, 1257.0], [54.2, 1258.0], [54.3, 1258.0], [54.4, 1258.0], [54.5, 1258.0], [54.6, 1258.0], [54.7, 1258.0], [54.8, 1260.0], [54.9, 1260.0], [55.0, 1260.0], [55.1, 1260.0], [55.2, 1260.0], [55.3, 1261.0], [55.4, 1261.0], [55.5, 1261.0], [55.6, 1261.0], [55.7, 1261.0], [55.8, 1261.0], [55.9, 1267.0], [56.0, 1267.0], [56.1, 1267.0], [56.2, 1267.0], [56.3, 1267.0], [56.4, 1267.0], [56.5, 1268.0], [56.6, 1268.0], [56.7, 1268.0], [56.8, 1268.0], [56.9, 1268.0], [57.0, 1268.0], [57.1, 1268.0], [57.2, 1268.0], [57.3, 1268.0], [57.4, 1268.0], [57.5, 1268.0], [57.6, 1268.0], [57.7, 1270.0], [57.8, 1270.0], [57.9, 1270.0], [58.0, 1270.0], [58.1, 1270.0], [58.2, 1270.0], [58.3, 1271.0], [58.4, 1271.0], [58.5, 1271.0], [58.6, 1271.0], [58.7, 1271.0], [58.8, 1271.0], [58.9, 1279.0], [59.0, 1279.0], [59.1, 1279.0], [59.2, 1279.0], [59.3, 1279.0], [59.4, 1279.0], [59.5, 1279.0], [59.6, 1279.0], [59.7, 1279.0], [59.8, 1279.0], [59.9, 1279.0], [60.0, 1280.0], [60.1, 1280.0], [60.2, 1280.0], [60.3, 1280.0], [60.4, 1280.0], [60.5, 1280.0], [60.6, 1285.0], [60.7, 1285.0], [60.8, 1285.0], [60.9, 1285.0], [61.0, 1285.0], [61.1, 1285.0], [61.2, 1290.0], [61.3, 1290.0], [61.4, 1290.0], [61.5, 1290.0], [61.6, 1290.0], [61.7, 1290.0], [61.8, 1295.0], [61.9, 1295.0], [62.0, 1295.0], [62.1, 1295.0], [62.2, 1295.0], [62.3, 1295.0], [62.4, 1298.0], [62.5, 1298.0], [62.6, 1298.0], [62.7, 1298.0], [62.8, 1298.0], [62.9, 1298.0], [63.0, 1302.0], [63.1, 1302.0], [63.2, 1302.0], [63.3, 1302.0], [63.4, 1302.0], [63.5, 1302.0], [63.6, 1305.0], [63.7, 1305.0], [63.8, 1305.0], [63.9, 1305.0], [64.0, 1305.0], [64.1, 1305.0], [64.2, 1306.0], [64.3, 1306.0], [64.4, 1306.0], [64.5, 1306.0], [64.6, 1306.0], [64.7, 1306.0], [64.8, 1307.0], [64.9, 1307.0], [65.0, 1307.0], [65.1, 1307.0], [65.2, 1307.0], [65.3, 1312.0], [65.4, 1312.0], [65.5, 1312.0], [65.6, 1312.0], [65.7, 1312.0], [65.8, 1312.0], [65.9, 1313.0], [66.0, 1313.0], [66.1, 1313.0], [66.2, 1313.0], [66.3, 1313.0], [66.4, 1313.0], [66.5, 1319.0], [66.6, 1319.0], [66.7, 1319.0], [66.8, 1319.0], [66.9, 1319.0], [67.0, 1319.0], [67.1, 1339.0], [67.2, 1339.0], [67.3, 1339.0], [67.4, 1339.0], [67.5, 1339.0], [67.6, 1339.0], [67.7, 1346.0], [67.8, 1346.0], [67.9, 1346.0], [68.0, 1346.0], [68.1, 1346.0], [68.2, 1346.0], [68.3, 1347.0], [68.4, 1347.0], [68.5, 1347.0], [68.6, 1347.0], [68.7, 1347.0], [68.8, 1347.0], [68.9, 1355.0], [69.0, 1355.0], [69.1, 1355.0], [69.2, 1355.0], [69.3, 1355.0], [69.4, 1355.0], [69.5, 1359.0], [69.6, 1359.0], [69.7, 1359.0], [69.8, 1359.0], [69.9, 1359.0], [70.0, 1364.0], [70.1, 1364.0], [70.2, 1364.0], [70.3, 1364.0], [70.4, 1364.0], [70.5, 1364.0], [70.6, 1368.0], [70.7, 1368.0], [70.8, 1368.0], [70.9, 1368.0], [71.0, 1368.0], [71.1, 1368.0], [71.2, 1369.0], [71.3, 1369.0], [71.4, 1369.0], [71.5, 1369.0], [71.6, 1369.0], [71.7, 1369.0], [71.8, 1370.0], [71.9, 1370.0], [72.0, 1370.0], [72.1, 1370.0], [72.2, 1370.0], [72.3, 1370.0], [72.4, 1375.0], [72.5, 1375.0], [72.6, 1375.0], [72.7, 1375.0], [72.8, 1375.0], [72.9, 1375.0], [73.0, 1377.0], [73.1, 1377.0], [73.2, 1377.0], [73.3, 1377.0], [73.4, 1377.0], [73.5, 1377.0], [73.6, 1379.0], [73.7, 1379.0], [73.8, 1379.0], [73.9, 1379.0], [74.0, 1379.0], [74.1, 1379.0], [74.2, 1383.0], [74.3, 1383.0], [74.4, 1383.0], [74.5, 1383.0], [74.6, 1383.0], [74.7, 1383.0], [74.8, 1385.0], [74.9, 1385.0], [75.0, 1385.0], [75.1, 1385.0], [75.2, 1385.0], [75.3, 1409.0], [75.4, 1409.0], [75.5, 1409.0], [75.6, 1409.0], [75.7, 1409.0], [75.8, 1409.0], [75.9, 1413.0], [76.0, 1413.0], [76.1, 1413.0], [76.2, 1413.0], [76.3, 1413.0], [76.4, 1413.0], [76.5, 1416.0], [76.6, 1416.0], [76.7, 1416.0], [76.8, 1416.0], [76.9, 1416.0], [77.0, 1416.0], [77.1, 1441.0], [77.2, 1441.0], [77.3, 1441.0], [77.4, 1441.0], [77.5, 1441.0], [77.6, 1441.0], [77.7, 1453.0], [77.8, 1453.0], [77.9, 1453.0], [78.0, 1453.0], [78.1, 1453.0], [78.2, 1453.0], [78.3, 1483.0], [78.4, 1483.0], [78.5, 1483.0], [78.6, 1483.0], [78.7, 1483.0], [78.8, 1483.0], [78.9, 1485.0], [79.0, 1485.0], [79.1, 1485.0], [79.2, 1485.0], [79.3, 1485.0], [79.4, 1485.0], [79.5, 1493.0], [79.6, 1493.0], [79.7, 1493.0], [79.8, 1493.0], [79.9, 1493.0], [80.0, 1493.0], [80.1, 1513.0], [80.2, 1513.0], [80.3, 1513.0], [80.4, 1513.0], [80.5, 1513.0], [80.6, 1516.0], [80.7, 1516.0], [80.8, 1516.0], [80.9, 1516.0], [81.0, 1516.0], [81.1, 1516.0], [81.2, 1528.0], [81.3, 1528.0], [81.4, 1528.0], [81.5, 1528.0], [81.6, 1528.0], [81.7, 1528.0], [81.8, 1536.0], [81.9, 1536.0], [82.0, 1536.0], [82.1, 1536.0], [82.2, 1536.0], [82.3, 1536.0], [82.4, 1558.0], [82.5, 1558.0], [82.6, 1558.0], [82.7, 1558.0], [82.8, 1558.0], [82.9, 1558.0], [83.0, 1562.0], [83.1, 1562.0], [83.2, 1562.0], [83.3, 1562.0], [83.4, 1562.0], [83.5, 1562.0], [83.6, 1567.0], [83.7, 1567.0], [83.8, 1567.0], [83.9, 1567.0], [84.0, 1567.0], [84.1, 1567.0], [84.2, 1568.0], [84.3, 1568.0], [84.4, 1568.0], [84.5, 1568.0], [84.6, 1568.0], [84.7, 1568.0], [84.8, 1569.0], [84.9, 1569.0], [85.0, 1569.0], [85.1, 1569.0], [85.2, 1569.0], [85.3, 1579.0], [85.4, 1579.0], [85.5, 1579.0], [85.6, 1579.0], [85.7, 1579.0], [85.8, 1579.0], [85.9, 1583.0], [86.0, 1583.0], [86.1, 1583.0], [86.2, 1583.0], [86.3, 1583.0], [86.4, 1583.0], [86.5, 1609.0], [86.6, 1609.0], [86.7, 1609.0], [86.8, 1609.0], [86.9, 1609.0], [87.0, 1609.0], [87.1, 1611.0], [87.2, 1611.0], [87.3, 1611.0], [87.4, 1611.0], [87.5, 1611.0], [87.6, 1611.0], [87.7, 1616.0], [87.8, 1616.0], [87.9, 1616.0], [88.0, 1616.0], [88.1, 1616.0], [88.2, 1616.0], [88.3, 1619.0], [88.4, 1619.0], [88.5, 1619.0], [88.6, 1619.0], [88.7, 1619.0], [88.8, 1619.0], [88.9, 1623.0], [89.0, 1623.0], [89.1, 1623.0], [89.2, 1623.0], [89.3, 1623.0], [89.4, 1623.0], [89.5, 1624.0], [89.6, 1624.0], [89.7, 1624.0], [89.8, 1624.0], [89.9, 1624.0], [90.0, 1624.0], [90.1, 1650.0], [90.2, 1650.0], [90.3, 1650.0], [90.4, 1650.0], [90.5, 1650.0], [90.6, 1684.0], [90.7, 1684.0], [90.8, 1684.0], [90.9, 1684.0], [91.0, 1684.0], [91.1, 1684.0], [91.2, 1720.0], [91.3, 1720.0], [91.4, 1720.0], [91.5, 1720.0], [91.6, 1720.0], [91.7, 1720.0], [91.8, 1750.0], [91.9, 1750.0], [92.0, 1750.0], [92.1, 1750.0], [92.2, 1750.0], [92.3, 1750.0], [92.4, 1755.0], [92.5, 1755.0], [92.6, 1755.0], [92.7, 1755.0], [92.8, 1755.0], [92.9, 1755.0], [93.0, 1768.0], [93.1, 1768.0], [93.2, 1768.0], [93.3, 1768.0], [93.4, 1768.0], [93.5, 1768.0], [93.6, 1798.0], [93.7, 1798.0], [93.8, 1798.0], [93.9, 1798.0], [94.0, 1798.0], [94.1, 1798.0], [94.2, 1808.0], [94.3, 1808.0], [94.4, 1808.0], [94.5, 1808.0], [94.6, 1808.0], [94.7, 1808.0], [94.8, 1899.0], [94.9, 1899.0], [95.0, 1899.0], [95.1, 1899.0], [95.2, 1899.0], [95.3, 1973.0], [95.4, 1973.0], [95.5, 1973.0], [95.6, 1973.0], [95.7, 1973.0], [95.8, 1973.0], [95.9, 1976.0], [96.0, 1976.0], [96.1, 1976.0], [96.2, 1976.0], [96.3, 1976.0], [96.4, 1976.0], [96.5, 1980.0], [96.6, 1980.0], [96.7, 1980.0], [96.8, 1980.0], [96.9, 1980.0], [97.0, 1980.0], [97.1, 2510.0], [97.2, 2510.0], [97.3, 2510.0], [97.4, 2510.0], [97.5, 2510.0], [97.6, 2510.0], [97.7, 2611.0], [97.8, 2611.0], [97.9, 2611.0], [98.0, 2611.0], [98.1, 2611.0], [98.2, 2611.0], [98.3, 23958.0], [98.4, 23958.0], [98.5, 23958.0], [98.6, 23958.0], [98.7, 23958.0], [98.8, 23958.0], [98.9, 24787.0], [99.0, 24787.0], [99.1, 24787.0], [99.2, 24787.0], [99.3, 24787.0], [99.4, 24787.0], [99.5, 25662.0], [99.6, 25662.0], [99.7, 25662.0], [99.8, 25662.0], [99.9, 25662.0], [100.0, 25662.0]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[0.0, 406.0], [0.1, 406.0], [0.2, 406.0], [0.3, 410.0], [0.4, 410.0], [0.5, 410.0], [0.6, 411.0], [0.7, 411.0], [0.8, 411.0], [0.9, 413.0], [1.0, 413.0], [1.1, 420.0], [1.2, 420.0], [1.3, 420.0], [1.4, 429.0], [1.5, 429.0], [1.6, 429.0], [1.7, 431.0], [1.8, 431.0], [1.9, 431.0], [2.0, 431.0], [2.1, 431.0], [2.2, 432.0], [2.3, 432.0], [2.4, 432.0], [2.5, 434.0], [2.6, 434.0], [2.7, 434.0], [2.8, 437.0], [2.9, 437.0], [3.0, 442.0], [3.1, 442.0], [3.2, 442.0], [3.3, 444.0], [3.4, 444.0], [3.5, 444.0], [3.6, 445.0], [3.7, 445.0], [3.8, 446.0], [3.9, 446.0], [4.0, 446.0], [4.1, 447.0], [4.2, 447.0], [4.3, 447.0], [4.4, 449.0], [4.5, 449.0], [4.6, 450.0], [4.7, 450.0], [4.8, 450.0], [4.9, 454.0], [5.0, 454.0], [5.1, 454.0], [5.2, 455.0], [5.3, 455.0], [5.4, 455.0], [5.5, 455.0], [5.6, 455.0], [5.7, 456.0], [5.8, 456.0], [5.9, 456.0], [6.0, 459.0], [6.1, 459.0], [6.2, 459.0], [6.3, 466.0], [6.4, 466.0], [6.5, 466.0], [6.6, 466.0], [6.7, 466.0], [6.8, 468.0], [6.9, 468.0], [7.0, 468.0], [7.1, 470.0], [7.2, 470.0], [7.3, 470.0], [7.4, 470.0], [7.5, 470.0], [7.6, 472.0], [7.7, 472.0], [7.8, 472.0], [7.9, 472.0], [8.0, 472.0], [8.1, 472.0], [8.2, 475.0], [8.3, 475.0], [8.4, 477.0], [8.5, 477.0], [8.6, 477.0], [8.7, 478.0], [8.8, 478.0], [8.9, 478.0], [9.0, 482.0], [9.1, 482.0], [9.2, 483.0], [9.3, 483.0], [9.4, 483.0], [9.5, 483.0], [9.6, 483.0], [9.7, 483.0], [9.8, 483.0], [9.9, 483.0], [10.0, 485.0], [10.1, 485.0], [10.2, 485.0], [10.3, 485.0], [10.4, 485.0], [10.5, 485.0], [10.6, 488.0], [10.7, 488.0], [10.8, 488.0], [10.9, 488.0], [11.0, 488.0], [11.1, 488.0], [11.2, 488.0], [11.3, 488.0], [11.4, 488.0], [11.5, 488.0], [11.6, 488.0], [11.7, 488.0], [11.8, 488.0], [11.9, 489.0], [12.0, 489.0], [12.1, 489.0], [12.2, 490.0], [12.3, 490.0], [12.4, 490.0], [12.5, 490.0], [12.6, 490.0], [12.7, 490.0], [12.8, 490.0], [12.9, 490.0], [13.0, 492.0], [13.1, 492.0], [13.2, 492.0], [13.3, 493.0], [13.4, 493.0], [13.5, 493.0], [13.6, 493.0], [13.7, 493.0], [13.8, 493.0], [13.9, 493.0], [14.0, 493.0], [14.1, 494.0], [14.2, 494.0], [14.3, 494.0], [14.4, 494.0], [14.5, 494.0], [14.6, 495.0], [14.7, 495.0], [14.8, 495.0], [14.9, 498.0], [15.0, 498.0], [15.1, 498.0], [15.2, 500.0], [15.3, 500.0], [15.4, 500.0], [15.5, 501.0], [15.6, 501.0], [15.7, 502.0], [15.8, 502.0], [15.9, 502.0], [16.0, 502.0], [16.1, 502.0], [16.2, 502.0], [16.3, 504.0], [16.4, 504.0], [16.5, 504.0], [16.6, 504.0], [16.7, 504.0], [16.8, 504.0], [16.9, 504.0], [17.0, 504.0], [17.1, 506.0], [17.2, 506.0], [17.3, 506.0], [17.4, 506.0], [17.5, 506.0], [17.6, 508.0], [17.7, 508.0], [17.8, 508.0], [17.9, 508.0], [18.0, 508.0], [18.1, 508.0], [18.2, 509.0], [18.3, 509.0], [18.4, 509.0], [18.5, 509.0], [18.6, 509.0], [18.7, 510.0], [18.8, 510.0], [18.9, 510.0], [19.0, 512.0], [19.1, 512.0], [19.2, 517.0], [19.3, 517.0], [19.4, 517.0], [19.5, 519.0], [19.6, 519.0], [19.7, 519.0], [19.8, 519.0], [19.9, 519.0], [20.0, 520.0], [20.1, 520.0], [20.2, 520.0], [20.3, 520.0], [20.4, 520.0], [20.5, 520.0], [20.6, 520.0], [20.7, 520.0], [20.8, 520.0], [20.9, 523.0], [21.0, 523.0], [21.1, 523.0], [21.2, 523.0], [21.3, 523.0], [21.4, 523.0], [21.5, 523.0], [21.6, 523.0], [21.7, 525.0], [21.8, 525.0], [21.9, 525.0], [22.0, 525.0], [22.1, 525.0], [22.2, 527.0], [22.3, 527.0], [22.4, 527.0], [22.5, 528.0], [22.6, 528.0], [22.7, 528.0], [22.8, 529.0], [22.9, 529.0], [23.0, 529.0], [23.1, 529.0], [23.2, 529.0], [23.3, 530.0], [23.4, 530.0], [23.5, 530.0], [23.6, 532.0], [23.7, 532.0], [23.8, 533.0], [23.9, 533.0], [24.0, 533.0], [24.1, 533.0], [24.2, 533.0], [24.3, 533.0], [24.4, 534.0], [24.5, 534.0], [24.6, 535.0], [24.7, 535.0], [24.8, 535.0], [24.9, 536.0], [25.0, 536.0], [25.1, 536.0], [25.2, 537.0], [25.3, 537.0], [25.4, 537.0], [25.5, 537.0], [25.6, 537.0], [25.7, 537.0], [25.8, 537.0], [25.9, 537.0], [26.0, 538.0], [26.1, 538.0], [26.2, 538.0], [26.3, 538.0], [26.4, 538.0], [26.5, 538.0], [26.6, 538.0], [26.7, 538.0], [26.8, 540.0], [26.9, 540.0], [27.0, 540.0], [27.1, 540.0], [27.2, 540.0], [27.3, 540.0], [27.4, 540.0], [27.5, 540.0], [27.6, 541.0], [27.7, 541.0], [27.8, 541.0], [27.9, 541.0], [28.0, 541.0], [28.1, 541.0], [28.2, 541.0], [28.3, 541.0], [28.4, 541.0], [28.5, 541.0], [28.6, 541.0], [28.7, 541.0], [28.8, 541.0], [28.9, 541.0], [29.0, 542.0], [29.1, 542.0], [29.2, 542.0], [29.3, 542.0], [29.4, 542.0], [29.5, 543.0], [29.6, 543.0], [29.7, 543.0], [29.8, 545.0], [29.9, 545.0], [30.0, 545.0], [30.1, 545.0], [30.2, 545.0], [30.3, 545.0], [30.4, 545.0], [30.5, 545.0], [30.6, 548.0], [30.7, 548.0], [30.8, 548.0], [30.9, 548.0], [31.0, 548.0], [31.1, 548.0], [31.2, 548.0], [31.3, 548.0], [31.4, 549.0], [31.5, 549.0], [31.6, 549.0], [31.7, 549.0], [31.8, 549.0], [31.9, 550.0], [32.0, 550.0], [32.1, 550.0], [32.2, 550.0], [32.3, 550.0], [32.4, 550.0], [32.5, 550.0], [32.6, 550.0], [32.7, 550.0], [32.8, 550.0], [32.9, 550.0], [33.0, 550.0], [33.1, 550.0], [33.2, 550.0], [33.3, 551.0], [33.4, 551.0], [33.5, 551.0], [33.6, 551.0], [33.7, 551.0], [33.8, 551.0], [33.9, 551.0], [34.0, 551.0], [34.1, 552.0], [34.2, 552.0], [34.3, 552.0], [34.4, 553.0], [34.5, 553.0], [34.6, 553.0], [34.7, 553.0], [34.8, 553.0], [34.9, 554.0], [35.0, 554.0], [35.1, 554.0], [35.2, 555.0], [35.3, 555.0], [35.4, 555.0], [35.5, 556.0], [35.6, 556.0], [35.7, 556.0], [35.8, 556.0], [35.9, 556.0], [36.0, 557.0], [36.1, 557.0], [36.2, 557.0], [36.3, 557.0], [36.4, 557.0], [36.5, 558.0], [36.6, 558.0], [36.7, 558.0], [36.8, 560.0], [36.9, 560.0], [37.0, 560.0], [37.1, 561.0], [37.2, 561.0], [37.3, 562.0], [37.4, 562.0], [37.5, 562.0], [37.6, 562.0], [37.7, 562.0], [37.8, 562.0], [37.9, 564.0], [38.0, 564.0], [38.1, 564.0], [38.2, 565.0], [38.3, 565.0], [38.4, 566.0], [38.5, 566.0], [38.6, 566.0], [38.7, 566.0], [38.8, 566.0], [38.9, 566.0], [39.0, 566.0], [39.1, 566.0], [39.2, 567.0], [39.3, 567.0], [39.4, 567.0], [39.5, 568.0], [39.6, 568.0], [39.7, 568.0], [39.8, 570.0], [39.9, 570.0], [40.0, 570.0], [40.1, 571.0], [40.2, 571.0], [40.3, 571.0], [40.4, 571.0], [40.5, 571.0], [40.6, 571.0], [40.7, 571.0], [40.8, 571.0], [40.9, 572.0], [41.0, 572.0], [41.1, 574.0], [41.2, 574.0], [41.3, 574.0], [41.4, 576.0], [41.5, 576.0], [41.6, 576.0], [41.7, 576.0], [41.8, 576.0], [41.9, 576.0], [42.0, 576.0], [42.1, 576.0], [42.2, 577.0], [42.3, 577.0], [42.4, 577.0], [42.5, 577.0], [42.6, 577.0], [42.7, 577.0], [42.8, 577.0], [42.9, 577.0], [43.0, 578.0], [43.1, 578.0], [43.2, 578.0], [43.3, 579.0], [43.4, 579.0], [43.5, 579.0], [43.6, 582.0], [43.7, 582.0], [43.8, 584.0], [43.9, 584.0], [44.0, 584.0], [44.1, 585.0], [44.2, 585.0], [44.3, 585.0], [44.4, 586.0], [44.5, 586.0], [44.6, 587.0], [44.7, 587.0], [44.8, 587.0], [44.9, 587.0], [45.0, 587.0], [45.1, 587.0], [45.2, 588.0], [45.3, 588.0], [45.4, 588.0], [45.5, 589.0], [45.6, 589.0], [45.7, 589.0], [45.8, 589.0], [45.9, 589.0], [46.0, 590.0], [46.1, 590.0], [46.2, 590.0], [46.3, 593.0], [46.4, 593.0], [46.5, 594.0], [46.6, 594.0], [46.7, 594.0], [46.8, 594.0], [46.9, 594.0], [47.0, 594.0], [47.1, 595.0], [47.2, 595.0], [47.3, 596.0], [47.4, 596.0], [47.5, 596.0], [47.6, 596.0], [47.7, 596.0], [47.8, 596.0], [47.9, 597.0], [48.0, 597.0], [48.1, 597.0], [48.2, 598.0], [48.3, 598.0], [48.4, 598.0], [48.5, 598.0], [48.6, 598.0], [48.7, 598.0], [48.8, 598.0], [48.9, 598.0], [49.0, 598.0], [49.1, 598.0], [49.2, 599.0], [49.3, 599.0], [49.4, 599.0], [49.5, 599.0], [49.6, 599.0], [49.7, 599.0], [49.8, 599.0], [49.9, 599.0], [50.0, 599.0], [50.1, 600.0], [50.2, 600.0], [50.3, 602.0], [50.4, 602.0], [50.5, 602.0], [50.6, 605.0], [50.7, 605.0], [50.8, 605.0], [50.9, 605.0], [51.0, 605.0], [51.1, 608.0], [51.2, 608.0], [51.3, 608.0], [51.4, 608.0], [51.5, 608.0], [51.6, 608.0], [51.7, 609.0], [51.8, 609.0], [51.9, 609.0], [52.0, 609.0], [52.1, 609.0], [52.2, 610.0], [52.3, 610.0], [52.4, 610.0], [52.5, 610.0], [52.6, 610.0], [52.7, 610.0], [52.8, 610.0], [52.9, 610.0], [53.0, 611.0], [53.1, 611.0], [53.2, 611.0], [53.3, 613.0], [53.4, 613.0], [53.5, 613.0], [53.6, 614.0], [53.7, 614.0], [53.8, 615.0], [53.9, 615.0], [54.0, 615.0], [54.1, 616.0], [54.2, 616.0], [54.3, 616.0], [54.4, 617.0], [54.5, 617.0], [54.6, 617.0], [54.7, 617.0], [54.8, 617.0], [54.9, 617.0], [55.0, 617.0], [55.1, 617.0], [55.2, 619.0], [55.3, 619.0], [55.4, 619.0], [55.5, 619.0], [55.6, 619.0], [55.7, 620.0], [55.8, 620.0], [55.9, 620.0], [56.0, 620.0], [56.1, 620.0], [56.2, 620.0], [56.3, 621.0], [56.4, 621.0], [56.5, 622.0], [56.6, 622.0], [56.7, 622.0], [56.8, 622.0], [56.9, 622.0], [57.0, 622.0], [57.1, 625.0], [57.2, 625.0], [57.3, 625.0], [57.4, 625.0], [57.5, 625.0], [57.6, 626.0], [57.7, 626.0], [57.8, 626.0], [57.9, 629.0], [58.0, 629.0], [58.1, 629.0], [58.2, 630.0], [58.3, 630.0], [58.4, 630.0], [58.5, 630.0], [58.6, 630.0], [58.7, 630.0], [58.8, 630.0], [58.9, 630.0], [59.0, 631.0], [59.1, 631.0], [59.2, 631.0], [59.3, 631.0], [59.4, 631.0], [59.5, 632.0], [59.6, 632.0], [59.7, 632.0], [59.8, 633.0], [59.9, 633.0], [60.0, 633.0], [60.1, 633.0], [60.2, 633.0], [60.3, 634.0], [60.4, 634.0], [60.5, 634.0], [60.6, 634.0], [60.7, 634.0], [60.8, 634.0], [60.9, 636.0], [61.0, 636.0], [61.1, 638.0], [61.2, 638.0], [61.3, 638.0], [61.4, 639.0], [61.5, 639.0], [61.6, 639.0], [61.7, 639.0], [61.8, 639.0], [61.9, 641.0], [62.0, 641.0], [62.1, 641.0], [62.2, 642.0], [62.3, 642.0], [62.4, 642.0], [62.5, 643.0], [62.6, 643.0], [62.7, 643.0], [62.8, 645.0], [62.9, 645.0], [63.0, 647.0], [63.1, 647.0], [63.2, 647.0], [63.3, 648.0], [63.4, 648.0], [63.5, 648.0], [63.6, 648.0], [63.7, 648.0], [63.8, 651.0], [63.9, 651.0], [64.0, 651.0], [64.1, 652.0], [64.2, 652.0], [64.3, 652.0], [64.4, 652.0], [64.5, 652.0], [64.6, 652.0], [64.7, 652.0], [64.8, 652.0], [64.9, 658.0], [65.0, 658.0], [65.1, 658.0], [65.2, 659.0], [65.3, 659.0], [65.4, 659.0], [65.5, 661.0], [65.6, 661.0], [65.7, 663.0], [65.8, 663.0], [65.9, 663.0], [66.0, 666.0], [66.1, 666.0], [66.2, 666.0], [66.3, 668.0], [66.4, 668.0], [66.5, 668.0], [66.6, 668.0], [66.7, 668.0], [66.8, 669.0], [66.9, 669.0], [67.0, 669.0], [67.1, 670.0], [67.2, 670.0], [67.3, 671.0], [67.4, 671.0], [67.5, 671.0], [67.6, 675.0], [67.7, 675.0], [67.8, 675.0], [67.9, 676.0], [68.0, 676.0], [68.1, 676.0], [68.2, 679.0], [68.3, 679.0], [68.4, 681.0], [68.5, 681.0], [68.6, 681.0], [68.7, 683.0], [68.8, 683.0], [68.9, 683.0], [69.0, 690.0], [69.1, 690.0], [69.2, 690.0], [69.3, 690.0], [69.4, 690.0], [69.5, 691.0], [69.6, 691.0], [69.7, 691.0], [69.8, 691.0], [69.9, 691.0], [70.0, 691.0], [70.1, 693.0], [70.2, 693.0], [70.3, 694.0], [70.4, 694.0], [70.5, 694.0], [70.6, 696.0], [70.7, 696.0], [70.8, 696.0], [70.9, 697.0], [71.0, 697.0], [71.1, 697.0], [71.2, 697.0], [71.3, 697.0], [71.4, 700.0], [71.5, 700.0], [71.6, 700.0], [71.7, 700.0], [71.8, 700.0], [71.9, 704.0], [72.0, 704.0], [72.1, 704.0], [72.2, 704.0], [72.3, 704.0], [72.4, 704.0], [72.5, 708.0], [72.6, 708.0], [72.7, 708.0], [72.8, 708.0], [72.9, 708.0], [73.0, 711.0], [73.1, 711.0], [73.2, 711.0], [73.3, 712.0], [73.4, 712.0], [73.5, 712.0], [73.6, 714.0], [73.7, 714.0], [73.8, 717.0], [73.9, 717.0], [74.0, 717.0], [74.1, 718.0], [74.2, 718.0], [74.3, 718.0], [74.4, 720.0], [74.5, 720.0], [74.6, 724.0], [74.7, 724.0], [74.8, 724.0], [74.9, 729.0], [75.0, 729.0], [75.1, 729.0], [75.2, 730.0], [75.3, 730.0], [75.4, 730.0], [75.5, 732.0], [75.6, 732.0], [75.7, 733.0], [75.8, 733.0], [75.9, 733.0], [76.0, 733.0], [76.1, 733.0], [76.2, 733.0], [76.3, 742.0], [76.4, 742.0], [76.5, 744.0], [76.6, 744.0], [76.7, 744.0], [76.8, 745.0], [76.9, 745.0], [77.0, 745.0], [77.1, 745.0], [77.2, 745.0], [77.3, 747.0], [77.4, 747.0], [77.5, 747.0], [77.6, 748.0], [77.7, 748.0], [77.8, 748.0], [77.9, 749.0], [78.0, 749.0], [78.1, 749.0], [78.2, 754.0], [78.3, 754.0], [78.4, 755.0], [78.5, 755.0], [78.6, 755.0], [78.7, 756.0], [78.8, 756.0], [78.9, 756.0], [79.0, 759.0], [79.1, 759.0], [79.2, 760.0], [79.3, 760.0], [79.4, 760.0], [79.5, 760.0], [79.6, 760.0], [79.7, 760.0], [79.8, 762.0], [79.9, 762.0], [80.0, 762.0], [80.1, 763.0], [80.2, 763.0], [80.3, 764.0], [80.4, 764.0], [80.5, 764.0], [80.6, 766.0], [80.7, 766.0], [80.8, 766.0], [80.9, 767.0], [81.0, 767.0], [81.1, 769.0], [81.2, 769.0], [81.3, 769.0], [81.4, 769.0], [81.5, 769.0], [81.6, 769.0], [81.7, 770.0], [81.8, 770.0], [81.9, 771.0], [82.0, 771.0], [82.1, 771.0], [82.2, 771.0], [82.3, 771.0], [82.4, 771.0], [82.5, 771.0], [82.6, 771.0], [82.7, 771.0], [82.8, 773.0], [82.9, 773.0], [83.0, 776.0], [83.1, 776.0], [83.2, 776.0], [83.3, 783.0], [83.4, 783.0], [83.5, 783.0], [83.6, 785.0], [83.7, 785.0], [83.8, 789.0], [83.9, 789.0], [84.0, 789.0], [84.1, 790.0], [84.2, 790.0], [84.3, 790.0], [84.4, 792.0], [84.5, 792.0], [84.6, 793.0], [84.7, 793.0], [84.8, 793.0], [84.9, 793.0], [85.0, 793.0], [85.1, 793.0], [85.2, 797.0], [85.3, 797.0], [85.4, 797.0], [85.5, 805.0], [85.6, 805.0], [85.7, 808.0], [85.8, 808.0], [85.9, 808.0], [86.0, 813.0], [86.1, 813.0], [86.2, 813.0], [86.3, 813.0], [86.4, 813.0], [86.5, 814.0], [86.6, 814.0], [86.7, 814.0], [86.8, 814.0], [86.9, 814.0], [87.0, 814.0], [87.1, 816.0], [87.2, 816.0], [87.3, 819.0], [87.4, 819.0], [87.5, 819.0], [87.6, 821.0], [87.7, 821.0], [87.8, 821.0], [87.9, 821.0], [88.0, 821.0], [88.1, 821.0], [88.2, 821.0], [88.3, 821.0], [88.4, 826.0], [88.5, 826.0], [88.6, 826.0], [88.7, 833.0], [88.8, 833.0], [88.9, 833.0], [89.0, 837.0], [89.1, 837.0], [89.2, 846.0], [89.3, 846.0], [89.4, 846.0], [89.5, 854.0], [89.6, 854.0], [89.7, 854.0], [89.8, 865.0], [89.9, 865.0], [90.0, 865.0], [90.1, 870.0], [90.2, 870.0], [90.3, 877.0], [90.4, 877.0], [90.5, 877.0], [90.6, 877.0], [90.7, 877.0], [90.8, 877.0], [90.9, 878.0], [91.0, 878.0], [91.1, 930.0], [91.2, 930.0], [91.3, 930.0], [91.4, 940.0], [91.5, 940.0], [91.6, 940.0], [91.7, 952.0], [91.8, 952.0], [91.9, 958.0], [92.0, 958.0], [92.1, 958.0], [92.2, 972.0], [92.3, 972.0], [92.4, 972.0], [92.5, 974.0], [92.6, 974.0], [92.7, 974.0], [92.8, 981.0], [92.9, 981.0], [93.0, 982.0], [93.1, 982.0], [93.2, 982.0], [93.3, 987.0], [93.4, 987.0], [93.5, 987.0], [93.6, 989.0], [93.7, 989.0], [93.8, 1005.0], [93.9, 1005.0], [94.0, 1005.0], [94.1, 1016.0], [94.2, 1016.0], [94.3, 1016.0], [94.4, 1022.0], [94.5, 1022.0], [94.6, 1030.0], [94.7, 1030.0], [94.8, 1030.0], [94.9, 1035.0], [95.0, 1035.0], [95.1, 1035.0], [95.2, 1050.0], [95.3, 1050.0], [95.4, 1050.0], [95.5, 1058.0], [95.6, 1058.0], [95.7, 1072.0], [95.8, 1072.0], [95.9, 1072.0], [96.0, 1216.0], [96.1, 1216.0], [96.2, 1216.0], [96.3, 1221.0], [96.4, 1221.0], [96.5, 1307.0], [96.6, 1307.0], [96.7, 1307.0], [96.8, 1323.0], [96.9, 1323.0], [97.0, 1323.0], [97.1, 1390.0], [97.2, 1390.0], [97.3, 1406.0], [97.4, 1406.0], [97.5, 1406.0], [97.6, 1442.0], [97.7, 1442.0], [97.8, 1442.0], [97.9, 1462.0], [98.0, 1462.0], [98.1, 1462.0], [98.2, 1466.0], [98.3, 1466.0], [98.4, 1510.0], [98.5, 1510.0], [98.6, 1510.0], [98.7, 1586.0], [98.8, 1586.0], [98.9, 1586.0], [99.0, 1692.0], [99.1, 1692.0], [99.2, 1735.0], [99.3, 1735.0], [99.4, 1735.0], [99.5, 1765.0], [99.6, 1765.0], [99.7, 1765.0], [99.8, 1904.0], [99.9, 1904.0], [100.0, 1904.0]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[0.0, 306.0], [0.1, 307.0], [0.2, 309.0], [0.3, 310.0], [0.4, 310.0], [0.5, 311.0], [0.6, 312.0], [0.7, 312.0], [0.8, 313.0], [0.9, 313.0], [1.0, 314.0], [1.1, 314.0], [1.2, 314.0], [1.3, 315.0], [1.4, 315.0], [1.5, 315.0], [1.6, 315.0], [1.7, 316.0], [1.8, 316.0], [1.9, 317.0], [2.0, 317.0], [2.1, 317.0], [2.2, 317.0], [2.3, 318.0], [2.4, 318.0], [2.5, 318.0], [2.6, 318.0], [2.7, 318.0], [2.8, 319.0], [2.9, 319.0], [3.0, 319.0], [3.1, 319.0], [3.2, 319.0], [3.3, 319.0], [3.4, 319.0], [3.5, 319.0], [3.6, 320.0], [3.7, 320.0], [3.8, 320.0], [3.9, 320.0], [4.0, 321.0], [4.1, 321.0], [4.2, 321.0], [4.3, 321.0], [4.4, 321.0], [4.5, 321.0], [4.6, 321.0], [4.7, 321.0], [4.8, 321.0], [4.9, 321.0], [5.0, 322.0], [5.1, 322.0], [5.2, 322.0], [5.3, 322.0], [5.4, 322.0], [5.5, 322.0], [5.6, 322.0], [5.7, 322.0], [5.8, 323.0], [5.9, 323.0], [6.0, 323.0], [6.1, 323.0], [6.2, 323.0], [6.3, 323.0], [6.4, 324.0], [6.5, 324.0], [6.6, 324.0], [6.7, 324.0], [6.8, 324.0], [6.9, 324.0], [7.0, 324.0], [7.1, 324.0], [7.2, 324.0], [7.3, 325.0], [7.4, 325.0], [7.5, 325.0], [7.6, 325.0], [7.7, 325.0], [7.8, 325.0], [7.9, 325.0], [8.0, 326.0], [8.1, 326.0], [8.2, 326.0], [8.3, 326.0], [8.4, 326.0], [8.5, 326.0], [8.6, 327.0], [8.7, 327.0], [8.8, 327.0], [8.9, 327.0], [9.0, 327.0], [9.1, 327.0], [9.2, 327.0], [9.3, 328.0], [9.4, 328.0], [9.5, 328.0], [9.6, 328.0], [9.7, 328.0], [9.8, 328.0], [9.9, 328.0], [10.0, 328.0], [10.1, 328.0], [10.2, 329.0], [10.3, 329.0], [10.4, 329.0], [10.5, 329.0], [10.6, 329.0], [10.7, 329.0], [10.8, 329.0], [10.9, 330.0], [11.0, 330.0], [11.1, 330.0], [11.2, 330.0], [11.3, 330.0], [11.4, 330.0], [11.5, 330.0], [11.6, 331.0], [11.7, 331.0], [11.8, 331.0], [11.9, 331.0], [12.0, 332.0], [12.1, 333.0], [12.2, 333.0], [12.3, 334.0], [12.4, 334.0], [12.5, 334.0], [12.6, 335.0], [12.7, 335.0], [12.8, 335.0], [12.9, 335.0], [13.0, 336.0], [13.1, 336.0], [13.2, 337.0], [13.3, 338.0], [13.4, 339.0], [13.5, 339.0], [13.6, 339.0], [13.7, 339.0], [13.8, 339.0], [13.9, 340.0], [14.0, 340.0], [14.1, 340.0], [14.2, 340.0], [14.3, 341.0], [14.4, 341.0], [14.5, 341.0], [14.6, 341.0], [14.7, 341.0], [14.8, 342.0], [14.9, 342.0], [15.0, 344.0], [15.1, 344.0], [15.2, 345.0], [15.3, 345.0], [15.4, 346.0], [15.5, 347.0], [15.6, 348.0], [15.7, 348.0], [15.8, 349.0], [15.9, 351.0], [16.0, 352.0], [16.1, 352.0], [16.2, 352.0], [16.3, 352.0], [16.4, 354.0], [16.5, 354.0], [16.6, 355.0], [16.7, 355.0], [16.8, 356.0], [16.9, 356.0], [17.0, 357.0], [17.1, 357.0], [17.2, 358.0], [17.3, 358.0], [17.4, 358.0], [17.5, 359.0], [17.6, 360.0], [17.7, 360.0], [17.8, 360.0], [17.9, 361.0], [18.0, 361.0], [18.1, 361.0], [18.2, 361.0], [18.3, 361.0], [18.4, 361.0], [18.5, 361.0], [18.6, 361.0], [18.7, 362.0], [18.8, 362.0], [18.9, 363.0], [19.0, 363.0], [19.1, 363.0], [19.2, 363.0], [19.3, 363.0], [19.4, 363.0], [19.5, 363.0], [19.6, 363.0], [19.7, 363.0], [19.8, 363.0], [19.9, 363.0], [20.0, 364.0], [20.1, 364.0], [20.2, 364.0], [20.3, 364.0], [20.4, 364.0], [20.5, 364.0], [20.6, 364.0], [20.7, 364.0], [20.8, 365.0], [20.9, 365.0], [21.0, 365.0], [21.1, 365.0], [21.2, 365.0], [21.3, 365.0], [21.4, 365.0], [21.5, 366.0], [21.6, 366.0], [21.7, 366.0], [21.8, 366.0], [21.9, 366.0], [22.0, 366.0], [22.1, 366.0], [22.2, 366.0], [22.3, 366.0], [22.4, 366.0], [22.5, 366.0], [22.6, 366.0], [22.7, 367.0], [22.8, 367.0], [22.9, 367.0], [23.0, 367.0], [23.1, 367.0], [23.2, 367.0], [23.3, 367.0], [23.4, 367.0], [23.5, 367.0], [23.6, 367.0], [23.7, 367.0], [23.8, 367.0], [23.9, 367.0], [24.0, 367.0], [24.1, 367.0], [24.2, 368.0], [24.3, 368.0], [24.4, 368.0], [24.5, 368.0], [24.6, 368.0], [24.7, 368.0], [24.8, 368.0], [24.9, 368.0], [25.0, 368.0], [25.1, 368.0], [25.2, 368.0], [25.3, 368.0], [25.4, 368.0], [25.5, 368.0], [25.6, 368.0], [25.7, 368.0], [25.8, 368.0], [25.9, 368.0], [26.0, 368.0], [26.1, 368.0], [26.2, 369.0], [26.3, 369.0], [26.4, 369.0], [26.5, 369.0], [26.6, 369.0], [26.7, 369.0], [26.8, 369.0], [26.9, 369.0], [27.0, 369.0], [27.1, 369.0], [27.2, 369.0], [27.3, 369.0], [27.4, 369.0], [27.5, 369.0], [27.6, 370.0], [27.7, 370.0], [27.8, 370.0], [27.9, 370.0], [28.0, 370.0], [28.1, 370.0], [28.2, 370.0], [28.3, 370.0], [28.4, 370.0], [28.5, 370.0], [28.6, 370.0], [28.7, 370.0], [28.8, 370.0], [28.9, 370.0], [29.0, 371.0], [29.1, 371.0], [29.2, 371.0], [29.3, 371.0], [29.4, 371.0], [29.5, 371.0], [29.6, 371.0], [29.7, 371.0], [29.8, 371.0], [29.9, 371.0], [30.0, 371.0], [30.1, 371.0], [30.2, 371.0], [30.3, 372.0], [30.4, 372.0], [30.5, 372.0], [30.6, 372.0], [30.7, 372.0], [30.8, 372.0], [30.9, 372.0], [31.0, 372.0], [31.1, 372.0], [31.2, 372.0], [31.3, 372.0], [31.4, 372.0], [31.5, 372.0], [31.6, 372.0], [31.7, 372.0], [31.8, 373.0], [31.9, 373.0], [32.0, 373.0], [32.1, 373.0], [32.2, 373.0], [32.3, 373.0], [32.4, 373.0], [32.5, 373.0], [32.6, 373.0], [32.7, 373.0], [32.8, 373.0], [32.9, 373.0], [33.0, 373.0], [33.1, 373.0], [33.2, 373.0], [33.3, 373.0], [33.4, 373.0], [33.5, 374.0], [33.6, 374.0], [33.7, 374.0], [33.8, 374.0], [33.9, 374.0], [34.0, 374.0], [34.1, 374.0], [34.2, 374.0], [34.3, 374.0], [34.4, 374.0], [34.5, 374.0], [34.6, 374.0], [34.7, 374.0], [34.8, 374.0], [34.9, 374.0], [35.0, 374.0], [35.1, 374.0], [35.2, 374.0], [35.3, 374.0], [35.4, 374.0], [35.5, 374.0], [35.6, 374.0], [35.7, 375.0], [35.8, 375.0], [35.9, 375.0], [36.0, 375.0], [36.1, 375.0], [36.2, 375.0], [36.3, 375.0], [36.4, 375.0], [36.5, 375.0], [36.6, 375.0], [36.7, 375.0], [36.8, 375.0], [36.9, 376.0], [37.0, 376.0], [37.1, 376.0], [37.2, 376.0], [37.3, 376.0], [37.4, 376.0], [37.5, 376.0], [37.6, 376.0], [37.7, 376.0], [37.8, 376.0], [37.9, 376.0], [38.0, 376.0], [38.1, 376.0], [38.2, 376.0], [38.3, 376.0], [38.4, 376.0], [38.5, 376.0], [38.6, 376.0], [38.7, 376.0], [38.8, 376.0], [38.9, 376.0], [39.0, 376.0], [39.1, 377.0], [39.2, 377.0], [39.3, 377.0], [39.4, 377.0], [39.5, 377.0], [39.6, 377.0], [39.7, 377.0], [39.8, 377.0], [39.9, 377.0], [40.0, 377.0], [40.1, 377.0], [40.2, 377.0], [40.3, 377.0], [40.4, 377.0], [40.5, 377.0], [40.6, 377.0], [40.7, 377.0], [40.8, 377.0], [40.9, 377.0], [41.0, 377.0], [41.1, 377.0], [41.2, 377.0], [41.3, 377.0], [41.4, 377.0], [41.5, 377.0], [41.6, 378.0], [41.7, 378.0], [41.8, 378.0], [41.9, 378.0], [42.0, 378.0], [42.1, 378.0], [42.2, 378.0], [42.3, 378.0], [42.4, 378.0], [42.5, 378.0], [42.6, 378.0], [42.7, 378.0], [42.8, 378.0], [42.9, 378.0], [43.0, 378.0], [43.1, 378.0], [43.2, 378.0], [43.3, 378.0], [43.4, 378.0], [43.5, 378.0], [43.6, 378.0], [43.7, 379.0], [43.8, 379.0], [43.9, 379.0], [44.0, 379.0], [44.1, 379.0], [44.2, 379.0], [44.3, 379.0], [44.4, 379.0], [44.5, 379.0], [44.6, 379.0], [44.7, 379.0], [44.8, 379.0], [44.9, 379.0], [45.0, 379.0], [45.1, 379.0], [45.2, 379.0], [45.3, 379.0], [45.4, 380.0], [45.5, 380.0], [45.6, 380.0], [45.7, 380.0], [45.8, 380.0], [45.9, 380.0], [46.0, 380.0], [46.1, 380.0], [46.2, 380.0], [46.3, 380.0], [46.4, 380.0], [46.5, 380.0], [46.6, 380.0], [46.7, 380.0], [46.8, 380.0], [46.9, 380.0], [47.0, 380.0], [47.1, 380.0], [47.2, 380.0], [47.3, 380.0], [47.4, 380.0], [47.5, 380.0], [47.6, 380.0], [47.7, 380.0], [47.8, 380.0], [47.9, 380.0], [48.0, 380.0], [48.1, 380.0], [48.2, 380.0], [48.3, 380.0], [48.4, 381.0], [48.5, 381.0], [48.6, 381.0], [48.7, 381.0], [48.8, 381.0], [48.9, 381.0], [49.0, 381.0], [49.1, 381.0], [49.2, 381.0], [49.3, 381.0], [49.4, 381.0], [49.5, 381.0], [49.6, 381.0], [49.7, 381.0], [49.8, 381.0], [49.9, 381.0], [50.0, 381.0], [50.1, 381.0], [50.2, 381.0], [50.3, 381.0], [50.4, 381.0], [50.5, 382.0], [50.6, 382.0], [50.7, 382.0], [50.8, 382.0], [50.9, 382.0], [51.0, 382.0], [51.1, 382.0], [51.2, 382.0], [51.3, 382.0], [51.4, 382.0], [51.5, 382.0], [51.6, 382.0], [51.7, 382.0], [51.8, 382.0], [51.9, 382.0], [52.0, 383.0], [52.1, 383.0], [52.2, 383.0], [52.3, 383.0], [52.4, 383.0], [52.5, 383.0], [52.6, 383.0], [52.7, 383.0], [52.8, 383.0], [52.9, 384.0], [53.0, 384.0], [53.1, 384.0], [53.2, 384.0], [53.3, 384.0], [53.4, 384.0], [53.5, 384.0], [53.6, 384.0], [53.7, 385.0], [53.8, 385.0], [53.9, 385.0], [54.0, 385.0], [54.1, 385.0], [54.2, 385.0], [54.3, 385.0], [54.4, 385.0], [54.5, 385.0], [54.6, 386.0], [54.7, 386.0], [54.8, 386.0], [54.9, 386.0], [55.0, 386.0], [55.1, 386.0], [55.2, 386.0], [55.3, 386.0], [55.4, 386.0], [55.5, 387.0], [55.6, 387.0], [55.7, 387.0], [55.8, 387.0], [55.9, 387.0], [56.0, 387.0], [56.1, 387.0], [56.2, 387.0], [56.3, 387.0], [56.4, 387.0], [56.5, 387.0], [56.6, 387.0], [56.7, 387.0], [56.8, 388.0], [56.9, 388.0], [57.0, 388.0], [57.1, 388.0], [57.2, 388.0], [57.3, 388.0], [57.4, 388.0], [57.5, 388.0], [57.6, 388.0], [57.7, 388.0], [57.8, 389.0], [57.9, 389.0], [58.0, 389.0], [58.1, 389.0], [58.2, 389.0], [58.3, 389.0], [58.4, 389.0], [58.5, 390.0], [58.6, 390.0], [58.7, 390.0], [58.8, 390.0], [58.9, 390.0], [59.0, 390.0], [59.1, 390.0], [59.2, 390.0], [59.3, 390.0], [59.4, 390.0], [59.5, 390.0], [59.6, 390.0], [59.7, 391.0], [59.8, 391.0], [59.9, 391.0], [60.0, 391.0], [60.1, 391.0], [60.2, 391.0], [60.3, 391.0], [60.4, 391.0], [60.5, 391.0], [60.6, 391.0], [60.7, 391.0], [60.8, 392.0], [60.9, 392.0], [61.0, 392.0], [61.1, 392.0], [61.2, 392.0], [61.3, 392.0], [61.4, 392.0], [61.5, 393.0], [61.6, 393.0], [61.7, 393.0], [61.8, 393.0], [61.9, 393.0], [62.0, 393.0], [62.1, 393.0], [62.2, 393.0], [62.3, 394.0], [62.4, 394.0], [62.5, 394.0], [62.6, 394.0], [62.7, 395.0], [62.8, 395.0], [62.9, 395.0], [63.0, 395.0], [63.1, 395.0], [63.2, 395.0], [63.3, 395.0], [63.4, 396.0], [63.5, 396.0], [63.6, 396.0], [63.7, 396.0], [63.8, 396.0], [63.9, 396.0], [64.0, 398.0], [64.1, 398.0], [64.2, 398.0], [64.3, 398.0], [64.4, 399.0], [64.5, 399.0], [64.6, 399.0], [64.7, 399.0], [64.8, 399.0], [64.9, 399.0], [65.0, 399.0], [65.1, 399.0], [65.2, 399.0], [65.3, 399.0], [65.4, 399.0], [65.5, 400.0], [65.6, 400.0], [65.7, 400.0], [65.8, 400.0], [65.9, 400.0], [66.0, 401.0], [66.1, 401.0], [66.2, 401.0], [66.3, 401.0], [66.4, 402.0], [66.5, 402.0], [66.6, 402.0], [66.7, 402.0], [66.8, 402.0], [66.9, 403.0], [67.0, 403.0], [67.1, 403.0], [67.2, 403.0], [67.3, 404.0], [67.4, 404.0], [67.5, 404.0], [67.6, 404.0], [67.7, 404.0], [67.8, 405.0], [67.9, 405.0], [68.0, 406.0], [68.1, 406.0], [68.2, 406.0], [68.3, 406.0], [68.4, 406.0], [68.5, 406.0], [68.6, 407.0], [68.7, 407.0], [68.8, 407.0], [68.9, 408.0], [69.0, 408.0], [69.1, 408.0], [69.2, 408.0], [69.3, 409.0], [69.4, 409.0], [69.5, 410.0], [69.6, 410.0], [69.7, 410.0], [69.8, 410.0], [69.9, 411.0], [70.0, 411.0], [70.1, 412.0], [70.2, 412.0], [70.3, 412.0], [70.4, 412.0], [70.5, 412.0], [70.6, 412.0], [70.7, 412.0], [70.8, 413.0], [70.9, 413.0], [71.0, 413.0], [71.1, 413.0], [71.2, 413.0], [71.3, 413.0], [71.4, 413.0], [71.5, 413.0], [71.6, 413.0], [71.7, 413.0], [71.8, 414.0], [71.9, 414.0], [72.0, 414.0], [72.1, 414.0], [72.2, 414.0], [72.3, 415.0], [72.4, 415.0], [72.5, 415.0], [72.6, 415.0], [72.7, 415.0], [72.8, 415.0], [72.9, 415.0], [73.0, 415.0], [73.1, 415.0], [73.2, 415.0], [73.3, 416.0], [73.4, 417.0], [73.5, 417.0], [73.6, 418.0], [73.7, 418.0], [73.8, 418.0], [73.9, 418.0], [74.0, 418.0], [74.1, 418.0], [74.2, 418.0], [74.3, 418.0], [74.4, 418.0], [74.5, 419.0], [74.6, 419.0], [74.7, 419.0], [74.8, 419.0], [74.9, 419.0], [75.0, 419.0], [75.1, 420.0], [75.2, 420.0], [75.3, 420.0], [75.4, 420.0], [75.5, 420.0], [75.6, 420.0], [75.7, 420.0], [75.8, 420.0], [75.9, 420.0], [76.0, 420.0], [76.1, 420.0], [76.2, 420.0], [76.3, 421.0], [76.4, 421.0], [76.5, 421.0], [76.6, 421.0], [76.7, 421.0], [76.8, 421.0], [76.9, 421.0], [77.0, 421.0], [77.1, 422.0], [77.2, 422.0], [77.3, 422.0], [77.4, 422.0], [77.5, 422.0], [77.6, 422.0], [77.7, 422.0], [77.8, 422.0], [77.9, 422.0], [78.0, 422.0], [78.1, 422.0], [78.2, 422.0], [78.3, 422.0], [78.4, 422.0], [78.5, 422.0], [78.6, 423.0], [78.7, 423.0], [78.8, 423.0], [78.9, 423.0], [79.0, 423.0], [79.1, 423.0], [79.2, 423.0], [79.3, 423.0], [79.4, 423.0], [79.5, 423.0], [79.6, 423.0], [79.7, 424.0], [79.8, 424.0], [79.9, 424.0], [80.0, 424.0], [80.1, 424.0], [80.2, 424.0], [80.3, 424.0], [80.4, 424.0], [80.5, 424.0], [80.6, 424.0], [80.7, 424.0], [80.8, 424.0], [80.9, 424.0], [81.0, 424.0], [81.1, 424.0], [81.2, 425.0], [81.3, 425.0], [81.4, 425.0], [81.5, 425.0], [81.6, 425.0], [81.7, 425.0], [81.8, 425.0], [81.9, 425.0], [82.0, 425.0], [82.1, 425.0], [82.2, 425.0], [82.3, 425.0], [82.4, 425.0], [82.5, 426.0], [82.6, 426.0], [82.7, 426.0], [82.8, 426.0], [82.9, 426.0], [83.0, 426.0], [83.1, 426.0], [83.2, 426.0], [83.3, 427.0], [83.4, 427.0], [83.5, 427.0], [83.6, 427.0], [83.7, 427.0], [83.8, 427.0], [83.9, 427.0], [84.0, 427.0], [84.1, 427.0], [84.2, 428.0], [84.3, 428.0], [84.4, 428.0], [84.5, 428.0], [84.6, 428.0], [84.7, 428.0], [84.8, 428.0], [84.9, 428.0], [85.0, 428.0], [85.1, 428.0], [85.2, 428.0], [85.3, 429.0], [85.4, 429.0], [85.5, 429.0], [85.6, 429.0], [85.7, 429.0], [85.8, 429.0], [85.9, 429.0], [86.0, 429.0], [86.1, 429.0], [86.2, 429.0], [86.3, 430.0], [86.4, 430.0], [86.5, 430.0], [86.6, 430.0], [86.7, 430.0], [86.8, 430.0], [86.9, 430.0], [87.0, 431.0], [87.1, 431.0], [87.2, 431.0], [87.3, 431.0], [87.4, 431.0], [87.5, 431.0], [87.6, 432.0], [87.7, 432.0], [87.8, 432.0], [87.9, 432.0], [88.0, 432.0], [88.1, 432.0], [88.2, 432.0], [88.3, 432.0], [88.4, 433.0], [88.5, 433.0], [88.6, 433.0], [88.7, 434.0], [88.8, 434.0], [88.9, 434.0], [89.0, 434.0], [89.1, 434.0], [89.2, 434.0], [89.3, 434.0], [89.4, 435.0], [89.5, 435.0], [89.6, 436.0], [89.7, 436.0], [89.8, 436.0], [89.9, 436.0], [90.0, 436.0], [90.1, 436.0], [90.2, 436.0], [90.3, 437.0], [90.4, 437.0], [90.5, 438.0], [90.6, 439.0], [90.7, 439.0], [90.8, 439.0], [90.9, 439.0], [91.0, 439.0], [91.1, 439.0], [91.2, 439.0], [91.3, 439.0], [91.4, 439.0], [91.5, 439.0], [91.6, 440.0], [91.7, 441.0], [91.8, 441.0], [91.9, 441.0], [92.0, 441.0], [92.1, 441.0], [92.2, 441.0], [92.3, 442.0], [92.4, 442.0], [92.5, 442.0], [92.6, 442.0], [92.7, 442.0], [92.8, 443.0], [92.9, 443.0], [93.0, 443.0], [93.1, 443.0], [93.2, 444.0], [93.3, 445.0], [93.4, 445.0], [93.5, 445.0], [93.6, 445.0], [93.7, 445.0], [93.8, 445.0], [93.9, 446.0], [94.0, 446.0], [94.1, 446.0], [94.2, 446.0], [94.3, 446.0], [94.4, 446.0], [94.5, 447.0], [94.6, 448.0], [94.7, 448.0], [94.8, 448.0], [94.9, 448.0], [95.0, 449.0], [95.1, 451.0], [95.2, 452.0], [95.3, 452.0], [95.4, 454.0], [95.5, 454.0], [95.6, 455.0], [95.7, 455.0], [95.8, 457.0], [95.9, 458.0], [96.0, 459.0], [96.1, 459.0], [96.2, 462.0], [96.3, 462.0], [96.4, 463.0], [96.5, 463.0], [96.6, 463.0], [96.7, 464.0], [96.8, 466.0], [96.9, 473.0], [97.0, 475.0], [97.1, 477.0], [97.2, 479.0], [97.3, 479.0], [97.4, 479.0], [97.5, 483.0], [97.6, 484.0], [97.7, 488.0], [97.8, 490.0], [97.9, 490.0], [98.0, 492.0], [98.1, 495.0], [98.2, 510.0], [98.3, 515.0], [98.4, 519.0], [98.5, 528.0], [98.6, 528.0], [98.7, 538.0], [98.8, 546.0], [98.9, 555.0], [99.0, 557.0], [99.1, 603.0], [99.2, 652.0], [99.3, 672.0], [99.4, 706.0], [99.5, 717.0], [99.6, 797.0], [99.7, 1067.0], [99.8, 1228.0], [99.9, 1428.0], [100.0, 4147.0]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[0.0, 897.0], [0.1, 897.0], [0.2, 897.0], [0.3, 897.0], [0.4, 897.0], [0.5, 897.0], [0.6, 897.0], [0.7, 897.0], [0.8, 897.0], [0.9, 897.0], [1.0, 946.0], [1.1, 946.0], [1.2, 946.0], [1.3, 946.0], [1.4, 946.0], [1.5, 946.0], [1.6, 946.0], [1.7, 946.0], [1.8, 946.0], [1.9, 1298.0], [2.0, 1298.0], [2.1, 1298.0], [2.2, 1298.0], [2.3, 1298.0], [2.4, 1298.0], [2.5, 1298.0], [2.6, 1298.0], [2.7, 1298.0], [2.8, 1313.0], [2.9, 1313.0], [3.0, 1313.0], [3.1, 1313.0], [3.2, 1313.0], [3.3, 1313.0], [3.4, 1313.0], [3.5, 1313.0], [3.6, 1313.0], [3.7, 1328.0], [3.8, 1328.0], [3.9, 1328.0], [4.0, 1328.0], [4.1, 1328.0], [4.2, 1328.0], [4.3, 1328.0], [4.4, 1328.0], [4.5, 1328.0], [4.6, 1368.0], [4.7, 1368.0], [4.8, 1368.0], [4.9, 1368.0], [5.0, 1368.0], [5.1, 1368.0], [5.2, 1368.0], [5.3, 1368.0], [5.4, 1368.0], [5.5, 1373.0], [5.6, 1373.0], [5.7, 1373.0], [5.8, 1373.0], [5.9, 1373.0], [6.0, 1373.0], [6.1, 1373.0], [6.2, 1373.0], [6.3, 1373.0], [6.4, 1392.0], [6.5, 1392.0], [6.6, 1392.0], [6.7, 1392.0], [6.8, 1392.0], [6.9, 1392.0], [7.0, 1392.0], [7.1, 1392.0], [7.2, 1392.0], [7.3, 1423.0], [7.4, 1423.0], [7.5, 1423.0], [7.6, 1423.0], [7.7, 1423.0], [7.8, 1423.0], [7.9, 1423.0], [8.0, 1423.0], [8.1, 1423.0], [8.2, 1432.0], [8.3, 1432.0], [8.4, 1432.0], [8.5, 1432.0], [8.6, 1432.0], [8.7, 1432.0], [8.8, 1432.0], [8.9, 1432.0], [9.0, 1432.0], [9.1, 1457.0], [9.2, 1457.0], [9.3, 1457.0], [9.4, 1457.0], [9.5, 1457.0], [9.6, 1457.0], [9.7, 1457.0], [9.8, 1457.0], [9.9, 1457.0], [10.0, 1463.0], [10.1, 1463.0], [10.2, 1463.0], [10.3, 1463.0], [10.4, 1463.0], [10.5, 1463.0], [10.6, 1463.0], [10.7, 1463.0], [10.8, 1463.0], [10.9, 1464.0], [11.0, 1464.0], [11.1, 1464.0], [11.2, 1464.0], [11.3, 1464.0], [11.4, 1464.0], [11.5, 1464.0], [11.6, 1464.0], [11.7, 1464.0], [11.8, 1466.0], [11.9, 1466.0], [12.0, 1466.0], [12.1, 1466.0], [12.2, 1466.0], [12.3, 1466.0], [12.4, 1466.0], [12.5, 1466.0], [12.6, 1466.0], [12.7, 1479.0], [12.8, 1479.0], [12.9, 1479.0], [13.0, 1479.0], [13.1, 1479.0], [13.2, 1479.0], [13.3, 1479.0], [13.4, 1479.0], [13.5, 1479.0], [13.6, 1495.0], [13.7, 1495.0], [13.8, 1495.0], [13.9, 1495.0], [14.0, 1495.0], [14.1, 1495.0], [14.2, 1495.0], [14.3, 1495.0], [14.4, 1495.0], [14.5, 1517.0], [14.6, 1517.0], [14.7, 1517.0], [14.8, 1517.0], [14.9, 1517.0], [15.0, 1517.0], [15.1, 1517.0], [15.2, 1517.0], [15.3, 1517.0], [15.4, 1550.0], [15.5, 1550.0], [15.6, 1550.0], [15.7, 1550.0], [15.8, 1550.0], [15.9, 1550.0], [16.0, 1550.0], [16.1, 1550.0], [16.2, 1550.0], [16.3, 1567.0], [16.4, 1567.0], [16.5, 1567.0], [16.6, 1567.0], [16.7, 1567.0], [16.8, 1567.0], [16.9, 1567.0], [17.0, 1567.0], [17.1, 1567.0], [17.2, 1611.0], [17.3, 1611.0], [17.4, 1611.0], [17.5, 1611.0], [17.6, 1611.0], [17.7, 1611.0], [17.8, 1611.0], [17.9, 1611.0], [18.0, 1611.0], [18.1, 1614.0], [18.2, 1614.0], [18.3, 1614.0], [18.4, 1614.0], [18.5, 1614.0], [18.6, 1614.0], [18.7, 1614.0], [18.8, 1614.0], [18.9, 1614.0], [19.0, 1618.0], [19.1, 1618.0], [19.2, 1618.0], [19.3, 1618.0], [19.4, 1618.0], [19.5, 1618.0], [19.6, 1618.0], [19.7, 1618.0], [19.8, 1618.0], [19.9, 1625.0], [20.0, 1625.0], [20.1, 1625.0], [20.2, 1625.0], [20.3, 1625.0], [20.4, 1625.0], [20.5, 1625.0], [20.6, 1625.0], [20.7, 1625.0], [20.8, 1635.0], [20.9, 1635.0], [21.0, 1635.0], [21.1, 1635.0], [21.2, 1635.0], [21.3, 1635.0], [21.4, 1635.0], [21.5, 1635.0], [21.6, 1635.0], [21.7, 1637.0], [21.8, 1637.0], [21.9, 1637.0], [22.0, 1637.0], [22.1, 1637.0], [22.2, 1637.0], [22.3, 1637.0], [22.4, 1637.0], [22.5, 1637.0], [22.6, 1641.0], [22.7, 1641.0], [22.8, 1641.0], [22.9, 1641.0], [23.0, 1641.0], [23.1, 1641.0], [23.2, 1641.0], [23.3, 1641.0], [23.4, 1641.0], [23.5, 1642.0], [23.6, 1642.0], [23.7, 1642.0], [23.8, 1642.0], [23.9, 1642.0], [24.0, 1642.0], [24.1, 1642.0], [24.2, 1642.0], [24.3, 1642.0], [24.4, 1646.0], [24.5, 1646.0], [24.6, 1646.0], [24.7, 1646.0], [24.8, 1646.0], [24.9, 1646.0], [25.0, 1646.0], [25.1, 1646.0], [25.2, 1646.0], [25.3, 1649.0], [25.4, 1649.0], [25.5, 1649.0], [25.6, 1649.0], [25.7, 1649.0], [25.8, 1649.0], [25.9, 1649.0], [26.0, 1649.0], [26.1, 1649.0], [26.2, 1649.0], [26.3, 1649.0], [26.4, 1649.0], [26.5, 1649.0], [26.6, 1649.0], [26.7, 1649.0], [26.8, 1649.0], [26.9, 1649.0], [27.0, 1649.0], [27.1, 1655.0], [27.2, 1655.0], [27.3, 1655.0], [27.4, 1655.0], [27.5, 1655.0], [27.6, 1655.0], [27.7, 1655.0], [27.8, 1655.0], [27.9, 1655.0], [28.0, 1656.0], [28.1, 1656.0], [28.2, 1656.0], [28.3, 1656.0], [28.4, 1656.0], [28.5, 1656.0], [28.6, 1656.0], [28.7, 1656.0], [28.8, 1656.0], [28.9, 1657.0], [29.0, 1657.0], [29.1, 1657.0], [29.2, 1657.0], [29.3, 1657.0], [29.4, 1657.0], [29.5, 1657.0], [29.6, 1657.0], [29.7, 1657.0], [29.8, 1688.0], [29.9, 1688.0], [30.0, 1688.0], [30.1, 1688.0], [30.2, 1688.0], [30.3, 1688.0], [30.4, 1688.0], [30.5, 1688.0], [30.6, 1688.0], [30.7, 1699.0], [30.8, 1699.0], [30.9, 1699.0], [31.0, 1699.0], [31.1, 1699.0], [31.2, 1699.0], [31.3, 1699.0], [31.4, 1699.0], [31.5, 1699.0], [31.6, 1704.0], [31.7, 1704.0], [31.8, 1704.0], [31.9, 1704.0], [32.0, 1704.0], [32.1, 1704.0], [32.2, 1704.0], [32.3, 1704.0], [32.4, 1704.0], [32.5, 1715.0], [32.6, 1715.0], [32.7, 1715.0], [32.8, 1715.0], [32.9, 1715.0], [33.0, 1715.0], [33.1, 1715.0], [33.2, 1715.0], [33.3, 1715.0], [33.4, 1716.0], [33.5, 1716.0], [33.6, 1716.0], [33.7, 1716.0], [33.8, 1716.0], [33.9, 1716.0], [34.0, 1716.0], [34.1, 1716.0], [34.2, 1716.0], [34.3, 1716.0], [34.4, 1716.0], [34.5, 1716.0], [34.6, 1716.0], [34.7, 1716.0], [34.8, 1716.0], [34.9, 1716.0], [35.0, 1716.0], [35.1, 1716.0], [35.2, 1719.0], [35.3, 1719.0], [35.4, 1719.0], [35.5, 1719.0], [35.6, 1719.0], [35.7, 1719.0], [35.8, 1719.0], [35.9, 1719.0], [36.0, 1719.0], [36.1, 1728.0], [36.2, 1728.0], [36.3, 1728.0], [36.4, 1728.0], [36.5, 1728.0], [36.6, 1728.0], [36.7, 1728.0], [36.8, 1728.0], [36.9, 1728.0], [37.0, 1735.0], [37.1, 1735.0], [37.2, 1735.0], [37.3, 1735.0], [37.4, 1735.0], [37.5, 1735.0], [37.6, 1735.0], [37.7, 1735.0], [37.8, 1735.0], [37.9, 1739.0], [38.0, 1739.0], [38.1, 1739.0], [38.2, 1739.0], [38.3, 1739.0], [38.4, 1739.0], [38.5, 1739.0], [38.6, 1739.0], [38.7, 1739.0], [38.8, 1770.0], [38.9, 1770.0], [39.0, 1770.0], [39.1, 1770.0], [39.2, 1770.0], [39.3, 1770.0], [39.4, 1770.0], [39.5, 1770.0], [39.6, 1770.0], [39.7, 1785.0], [39.8, 1785.0], [39.9, 1785.0], [40.0, 1785.0], [40.1, 1785.0], [40.2, 1785.0], [40.3, 1785.0], [40.4, 1785.0], [40.5, 1785.0], [40.6, 1788.0], [40.7, 1788.0], [40.8, 1788.0], [40.9, 1788.0], [41.0, 1788.0], [41.1, 1788.0], [41.2, 1788.0], [41.3, 1788.0], [41.4, 1788.0], [41.5, 1798.0], [41.6, 1798.0], [41.7, 1798.0], [41.8, 1798.0], [41.9, 1798.0], [42.0, 1798.0], [42.1, 1798.0], [42.2, 1798.0], [42.3, 1798.0], [42.4, 1808.0], [42.5, 1808.0], [42.6, 1808.0], [42.7, 1808.0], [42.8, 1808.0], [42.9, 1808.0], [43.0, 1808.0], [43.1, 1808.0], [43.2, 1808.0], [43.3, 1815.0], [43.4, 1815.0], [43.5, 1815.0], [43.6, 1815.0], [43.7, 1815.0], [43.8, 1815.0], [43.9, 1815.0], [44.0, 1815.0], [44.1, 1815.0], [44.2, 1817.0], [44.3, 1817.0], [44.4, 1817.0], [44.5, 1817.0], [44.6, 1817.0], [44.7, 1817.0], [44.8, 1817.0], [44.9, 1817.0], [45.0, 1817.0], [45.1, 1829.0], [45.2, 1829.0], [45.3, 1829.0], [45.4, 1829.0], [45.5, 1829.0], [45.6, 1829.0], [45.7, 1829.0], [45.8, 1829.0], [45.9, 1829.0], [46.0, 1842.0], [46.1, 1842.0], [46.2, 1842.0], [46.3, 1842.0], [46.4, 1842.0], [46.5, 1842.0], [46.6, 1842.0], [46.7, 1842.0], [46.8, 1842.0], [46.9, 1843.0], [47.0, 1843.0], [47.1, 1843.0], [47.2, 1843.0], [47.3, 1843.0], [47.4, 1843.0], [47.5, 1843.0], [47.6, 1843.0], [47.7, 1843.0], [47.8, 1845.0], [47.9, 1845.0], [48.0, 1845.0], [48.1, 1845.0], [48.2, 1845.0], [48.3, 1845.0], [48.4, 1845.0], [48.5, 1845.0], [48.6, 1845.0], [48.7, 1863.0], [48.8, 1863.0], [48.9, 1863.0], [49.0, 1863.0], [49.1, 1863.0], [49.2, 1863.0], [49.3, 1863.0], [49.4, 1863.0], [49.5, 1863.0], [49.6, 1863.0], [49.7, 1863.0], [49.8, 1863.0], [49.9, 1863.0], [50.0, 1863.0], [50.1, 1863.0], [50.2, 1863.0], [50.3, 1863.0], [50.4, 1863.0], [50.5, 1877.0], [50.6, 1877.0], [50.7, 1877.0], [50.8, 1877.0], [50.9, 1877.0], [51.0, 1877.0], [51.1, 1877.0], [51.2, 1877.0], [51.3, 1877.0], [51.4, 1886.0], [51.5, 1886.0], [51.6, 1886.0], [51.7, 1886.0], [51.8, 1886.0], [51.9, 1886.0], [52.0, 1886.0], [52.1, 1886.0], [52.2, 1886.0], [52.3, 1903.0], [52.4, 1903.0], [52.5, 1903.0], [52.6, 1903.0], [52.7, 1903.0], [52.8, 1903.0], [52.9, 1903.0], [53.0, 1903.0], [53.1, 1903.0], [53.2, 1908.0], [53.3, 1908.0], [53.4, 1908.0], [53.5, 1908.0], [53.6, 1908.0], [53.7, 1908.0], [53.8, 1908.0], [53.9, 1908.0], [54.0, 1908.0], [54.1, 1918.0], [54.2, 1918.0], [54.3, 1918.0], [54.4, 1918.0], [54.5, 1918.0], [54.6, 1918.0], [54.7, 1918.0], [54.8, 1918.0], [54.9, 1918.0], [55.0, 1928.0], [55.1, 1928.0], [55.2, 1928.0], [55.3, 1928.0], [55.4, 1928.0], [55.5, 1928.0], [55.6, 1928.0], [55.7, 1928.0], [55.8, 1928.0], [55.9, 1929.0], [56.0, 1929.0], [56.1, 1929.0], [56.2, 1929.0], [56.3, 1929.0], [56.4, 1929.0], [56.5, 1929.0], [56.6, 1929.0], [56.7, 1929.0], [56.8, 1964.0], [56.9, 1964.0], [57.0, 1964.0], [57.1, 1964.0], [57.2, 1964.0], [57.3, 1964.0], [57.4, 1964.0], [57.5, 1964.0], [57.6, 1964.0], [57.7, 1969.0], [57.8, 1969.0], [57.9, 1969.0], [58.0, 1969.0], [58.1, 1969.0], [58.2, 1969.0], [58.3, 1969.0], [58.4, 1969.0], [58.5, 1969.0], [58.6, 2014.0], [58.7, 2014.0], [58.8, 2014.0], [58.9, 2014.0], [59.0, 2014.0], [59.1, 2014.0], [59.2, 2014.0], [59.3, 2014.0], [59.4, 2014.0], [59.5, 2025.0], [59.6, 2025.0], [59.7, 2025.0], [59.8, 2025.0], [59.9, 2025.0], [60.0, 2025.0], [60.1, 2025.0], [60.2, 2025.0], [60.3, 2025.0], [60.4, 2030.0], [60.5, 2030.0], [60.6, 2030.0], [60.7, 2030.0], [60.8, 2030.0], [60.9, 2030.0], [61.0, 2030.0], [61.1, 2030.0], [61.2, 2030.0], [61.3, 2044.0], [61.4, 2044.0], [61.5, 2044.0], [61.6, 2044.0], [61.7, 2044.0], [61.8, 2044.0], [61.9, 2044.0], [62.0, 2044.0], [62.1, 2044.0], [62.2, 2064.0], [62.3, 2064.0], [62.4, 2064.0], [62.5, 2064.0], [62.6, 2064.0], [62.7, 2064.0], [62.8, 2064.0], [62.9, 2064.0], [63.0, 2064.0], [63.1, 2065.0], [63.2, 2065.0], [63.3, 2065.0], [63.4, 2065.0], [63.5, 2065.0], [63.6, 2065.0], [63.7, 2065.0], [63.8, 2065.0], [63.9, 2065.0], [64.0, 2070.0], [64.1, 2070.0], [64.2, 2070.0], [64.3, 2070.0], [64.4, 2070.0], [64.5, 2070.0], [64.6, 2070.0], [64.7, 2070.0], [64.8, 2070.0], [64.9, 2071.0], [65.0, 2071.0], [65.1, 2071.0], [65.2, 2071.0], [65.3, 2071.0], [65.4, 2071.0], [65.5, 2071.0], [65.6, 2071.0], [65.7, 2071.0], [65.8, 2080.0], [65.9, 2080.0], [66.0, 2080.0], [66.1, 2080.0], [66.2, 2080.0], [66.3, 2080.0], [66.4, 2080.0], [66.5, 2080.0], [66.6, 2080.0], [66.7, 2080.0], [66.8, 2080.0], [66.9, 2080.0], [67.0, 2080.0], [67.1, 2080.0], [67.2, 2080.0], [67.3, 2080.0], [67.4, 2080.0], [67.5, 2080.0], [67.6, 2083.0], [67.7, 2083.0], [67.8, 2083.0], [67.9, 2083.0], [68.0, 2083.0], [68.1, 2083.0], [68.2, 2083.0], [68.3, 2083.0], [68.4, 2083.0], [68.5, 2093.0], [68.6, 2093.0], [68.7, 2093.0], [68.8, 2093.0], [68.9, 2093.0], [69.0, 2093.0], [69.1, 2093.0], [69.2, 2093.0], [69.3, 2093.0], [69.4, 2096.0], [69.5, 2096.0], [69.6, 2096.0], [69.7, 2096.0], [69.8, 2096.0], [69.9, 2096.0], [70.0, 2096.0], [70.1, 2096.0], [70.2, 2096.0], [70.3, 2097.0], [70.4, 2097.0], [70.5, 2097.0], [70.6, 2097.0], [70.7, 2097.0], [70.8, 2097.0], [70.9, 2097.0], [71.0, 2097.0], [71.1, 2097.0], [71.2, 2120.0], [71.3, 2120.0], [71.4, 2120.0], [71.5, 2120.0], [71.6, 2120.0], [71.7, 2120.0], [71.8, 2120.0], [71.9, 2120.0], [72.0, 2120.0], [72.1, 2127.0], [72.2, 2127.0], [72.3, 2127.0], [72.4, 2127.0], [72.5, 2127.0], [72.6, 2127.0], [72.7, 2127.0], [72.8, 2127.0], [72.9, 2127.0], [73.0, 2127.0], [73.1, 2127.0], [73.2, 2127.0], [73.3, 2127.0], [73.4, 2127.0], [73.5, 2127.0], [73.6, 2127.0], [73.7, 2127.0], [73.8, 2127.0], [73.9, 2128.0], [74.0, 2128.0], [74.1, 2128.0], [74.2, 2128.0], [74.3, 2128.0], [74.4, 2128.0], [74.5, 2128.0], [74.6, 2128.0], [74.7, 2128.0], [74.8, 2180.0], [74.9, 2180.0], [75.0, 2180.0], [75.1, 2180.0], [75.2, 2180.0], [75.3, 2180.0], [75.4, 2180.0], [75.5, 2180.0], [75.6, 2180.0], [75.7, 2186.0], [75.8, 2186.0], [75.9, 2186.0], [76.0, 2186.0], [76.1, 2186.0], [76.2, 2186.0], [76.3, 2186.0], [76.4, 2186.0], [76.5, 2186.0], [76.6, 2187.0], [76.7, 2187.0], [76.8, 2187.0], [76.9, 2187.0], [77.0, 2187.0], [77.1, 2187.0], [77.2, 2187.0], [77.3, 2187.0], [77.4, 2187.0], [77.5, 2225.0], [77.6, 2225.0], [77.7, 2225.0], [77.8, 2225.0], [77.9, 2225.0], [78.0, 2225.0], [78.1, 2225.0], [78.2, 2225.0], [78.3, 2225.0], [78.4, 2229.0], [78.5, 2229.0], [78.6, 2229.0], [78.7, 2229.0], [78.8, 2229.0], [78.9, 2229.0], [79.0, 2229.0], [79.1, 2229.0], [79.2, 2229.0], [79.3, 2238.0], [79.4, 2238.0], [79.5, 2238.0], [79.6, 2238.0], [79.7, 2238.0], [79.8, 2238.0], [79.9, 2238.0], [80.0, 2238.0], [80.1, 2238.0], [80.2, 2239.0], [80.3, 2239.0], [80.4, 2239.0], [80.5, 2239.0], [80.6, 2239.0], [80.7, 2239.0], [80.8, 2239.0], [80.9, 2239.0], [81.0, 2239.0], [81.1, 2240.0], [81.2, 2240.0], [81.3, 2240.0], [81.4, 2240.0], [81.5, 2240.0], [81.6, 2240.0], [81.7, 2240.0], [81.8, 2240.0], [81.9, 2240.0], [82.0, 2242.0], [82.1, 2242.0], [82.2, 2242.0], [82.3, 2242.0], [82.4, 2242.0], [82.5, 2242.0], [82.6, 2242.0], [82.7, 2242.0], [82.8, 2242.0], [82.9, 2286.0], [83.0, 2286.0], [83.1, 2286.0], [83.2, 2286.0], [83.3, 2286.0], [83.4, 2286.0], [83.5, 2286.0], [83.6, 2286.0], [83.7, 2286.0], [83.8, 2291.0], [83.9, 2291.0], [84.0, 2291.0], [84.1, 2291.0], [84.2, 2291.0], [84.3, 2291.0], [84.4, 2291.0], [84.5, 2291.0], [84.6, 2291.0], [84.7, 2318.0], [84.8, 2318.0], [84.9, 2318.0], [85.0, 2318.0], [85.1, 2318.0], [85.2, 2318.0], [85.3, 2318.0], [85.4, 2318.0], [85.5, 2318.0], [85.6, 2331.0], [85.7, 2331.0], [85.8, 2331.0], [85.9, 2331.0], [86.0, 2331.0], [86.1, 2331.0], [86.2, 2331.0], [86.3, 2331.0], [86.4, 2331.0], [86.5, 2334.0], [86.6, 2334.0], [86.7, 2334.0], [86.8, 2334.0], [86.9, 2334.0], [87.0, 2334.0], [87.1, 2334.0], [87.2, 2334.0], [87.3, 2334.0], [87.4, 2339.0], [87.5, 2339.0], [87.6, 2339.0], [87.7, 2339.0], [87.8, 2339.0], [87.9, 2339.0], [88.0, 2339.0], [88.1, 2339.0], [88.2, 2339.0], [88.3, 2342.0], [88.4, 2342.0], [88.5, 2342.0], [88.6, 2342.0], [88.7, 2342.0], [88.8, 2342.0], [88.9, 2342.0], [89.0, 2342.0], [89.1, 2342.0], [89.2, 2425.0], [89.3, 2425.0], [89.4, 2425.0], [89.5, 2425.0], [89.6, 2425.0], [89.7, 2425.0], [89.8, 2425.0], [89.9, 2425.0], [90.0, 2425.0], [90.1, 2452.0], [90.2, 2452.0], [90.3, 2452.0], [90.4, 2452.0], [90.5, 2452.0], [90.6, 2452.0], [90.7, 2452.0], [90.8, 2452.0], [90.9, 2452.0], [91.0, 2456.0], [91.1, 2456.0], [91.2, 2456.0], [91.3, 2456.0], [91.4, 2456.0], [91.5, 2456.0], [91.6, 2456.0], [91.7, 2456.0], [91.8, 2456.0], [91.9, 2462.0], [92.0, 2462.0], [92.1, 2462.0], [92.2, 2462.0], [92.3, 2462.0], [92.4, 2462.0], [92.5, 2462.0], [92.6, 2462.0], [92.7, 2462.0], [92.8, 2465.0], [92.9, 2465.0], [93.0, 2465.0], [93.1, 2465.0], [93.2, 2465.0], [93.3, 2465.0], [93.4, 2465.0], [93.5, 2465.0], [93.6, 2465.0], [93.7, 2545.0], [93.8, 2545.0], [93.9, 2545.0], [94.0, 2545.0], [94.1, 2545.0], [94.2, 2545.0], [94.3, 2545.0], [94.4, 2545.0], [94.5, 2545.0], [94.6, 2582.0], [94.7, 2582.0], [94.8, 2582.0], [94.9, 2582.0], [95.0, 2582.0], [95.1, 2582.0], [95.2, 2582.0], [95.3, 2582.0], [95.4, 2582.0], [95.5, 2697.0], [95.6, 2697.0], [95.7, 2697.0], [95.8, 2697.0], [95.9, 2697.0], [96.0, 2697.0], [96.1, 2697.0], [96.2, 2697.0], [96.3, 2697.0], [96.4, 2751.0], [96.5, 2751.0], [96.6, 2751.0], [96.7, 2751.0], [96.8, 2751.0], [96.9, 2751.0], [97.0, 2751.0], [97.1, 2751.0], [97.2, 2751.0], [97.3, 2876.0], [97.4, 2876.0], [97.5, 2876.0], [97.6, 2876.0], [97.7, 2876.0], [97.8, 2876.0], [97.9, 2876.0], [98.0, 2876.0], [98.1, 2876.0], [98.2, 2908.0], [98.3, 2908.0], [98.4, 2908.0], [98.5, 2908.0], [98.6, 2908.0], [98.7, 2908.0], [98.8, 2908.0], [98.9, 2908.0], [99.0, 2908.0], [99.1, 3387.0], [99.2, 3387.0], [99.3, 3387.0], [99.4, 3387.0], [99.5, 3387.0], [99.6, 3387.0], [99.7, 3387.0], [99.8, 3387.0], [99.9, 3387.0], [100.0, 3387.0]], "isOverall": false, "label": "trackVehicleExitOutEntry", "isController": false}, {"data": [[0.0, 2408.0], [0.1, 2408.0], [0.2, 2408.0], [0.3, 2408.0], [0.4, 2408.0], [0.5, 2408.0], [0.6, 2408.0], [0.7, 2408.0], [0.8, 2408.0], [0.9, 2408.0], [1.0, 2408.0], [1.1, 2408.0], [1.2, 2408.0], [1.3, 2408.0], [1.4, 2408.0], [1.5, 2408.0], [1.6, 2408.0], [1.7, 2408.0], [1.8, 2408.0], [1.9, 2408.0], [2.0, 2408.0], [2.1, 2408.0], [2.2, 2408.0], [2.3, 2408.0], [2.4, 2408.0], [2.5, 2408.0], [2.6, 2408.0], [2.7, 2408.0], [2.8, 2408.0], [2.9, 2408.0], [3.0, 2408.0], [3.1, 2408.0], [3.2, 2408.0], [3.3, 2408.0], [3.4, 2408.0], [3.5, 2408.0], [3.6, 2408.0], [3.7, 2408.0], [3.8, 2408.0], [3.9, 2408.0], [4.0, 2408.0], [4.1, 2408.0], [4.2, 2408.0], [4.3, 2408.0], [4.4, 2408.0], [4.5, 2408.0], [4.6, 2408.0], [4.7, 2408.0], [4.8, 2408.0], [4.9, 2408.0], [5.0, 2408.0], [5.1, 2408.0], [5.2, 2408.0], [5.3, 2408.0], [5.4, 2408.0], [5.5, 2408.0], [5.6, 2408.0], [5.7, 2408.0], [5.8, 2408.0], [5.9, 2408.0], [6.0, 2408.0], [6.1, 2408.0], [6.2, 2408.0], [6.3, 2408.0], [6.4, 2408.0], [6.5, 2408.0], [6.6, 2408.0], [6.7, 2408.0], [6.8, 2408.0], [6.9, 2408.0], [7.0, 2408.0], [7.1, 2408.0], [7.2, 2408.0], [7.3, 2408.0], [7.4, 2408.0], [7.5, 2408.0], [7.6, 2408.0], [7.7, 2408.0], [7.8, 2408.0], [7.9, 2408.0], [8.0, 2408.0], [8.1, 2408.0], [8.2, 2408.0], [8.3, 2408.0], [8.4, 2408.0], [8.5, 2408.0], [8.6, 2408.0], [8.7, 2408.0], [8.8, 2408.0], [8.9, 2408.0], [9.0, 2408.0], [9.1, 2408.0], [9.2, 2408.0], [9.3, 2408.0], [9.4, 2408.0], [9.5, 2408.0], [9.6, 2408.0], [9.7, 2408.0], [9.8, 2408.0], [9.9, 2408.0], [10.0, 2408.0], [10.1, 2408.0], [10.2, 2408.0], [10.3, 2408.0], [10.4, 2408.0], [10.5, 2408.0], [10.6, 2408.0], [10.7, 2408.0], [10.8, 2408.0], [10.9, 2408.0], [11.0, 2408.0], [11.1, 2408.0], [11.2, 2408.0], [11.3, 2408.0], [11.4, 2408.0], [11.5, 2408.0], [11.6, 2408.0], [11.7, 2408.0], [11.8, 2408.0], [11.9, 2408.0], [12.0, 2408.0], [12.1, 2408.0], [12.2, 2408.0], [12.3, 2408.0], [12.4, 2408.0], [12.5, 2408.0], [12.6, 2408.0], [12.7, 2408.0], [12.8, 2408.0], [12.9, 2408.0], [13.0, 2408.0], [13.1, 2408.0], [13.2, 2408.0], [13.3, 2408.0], [13.4, 2408.0], [13.5, 2408.0], [13.6, 2408.0], [13.7, 2408.0], [13.8, 2408.0], [13.9, 2408.0], [14.0, 2408.0], [14.1, 2408.0], [14.2, 2408.0], [14.3, 2408.0], [14.4, 2408.0], [14.5, 2408.0], [14.6, 2408.0], [14.7, 2408.0], [14.8, 2408.0], [14.9, 2408.0], [15.0, 2408.0], [15.1, 2408.0], [15.2, 2408.0], [15.3, 2408.0], [15.4, 2408.0], [15.5, 2408.0], [15.6, 2408.0], [15.7, 2408.0], [15.8, 2408.0], [15.9, 2408.0], [16.0, 2408.0], [16.1, 2408.0], [16.2, 2408.0], [16.3, 2408.0], [16.4, 2408.0], [16.5, 2408.0], [16.6, 2408.0], [16.7, 2408.0], [16.8, 2408.0], [16.9, 2408.0], [17.0, 2408.0], [17.1, 2408.0], [17.2, 2408.0], [17.3, 2408.0], [17.4, 2408.0], [17.5, 2408.0], [17.6, 2408.0], [17.7, 2408.0], [17.8, 2408.0], [17.9, 2408.0], [18.0, 2408.0], [18.1, 2408.0], [18.2, 2408.0], [18.3, 2408.0], [18.4, 2408.0], [18.5, 2408.0], [18.6, 2408.0], [18.7, 2408.0], [18.8, 2408.0], [18.9, 2408.0], [19.0, 2408.0], [19.1, 2408.0], [19.2, 2408.0], [19.3, 2408.0], [19.4, 2408.0], [19.5, 2408.0], [19.6, 2408.0], [19.7, 2408.0], [19.8, 2408.0], [19.9, 2408.0], [20.0, 2408.0], [20.1, 2408.0], [20.2, 2408.0], [20.3, 2408.0], [20.4, 2408.0], [20.5, 2408.0], [20.6, 2408.0], [20.7, 2408.0], [20.8, 2408.0], [20.9, 2408.0], [21.0, 2408.0], [21.1, 2408.0], [21.2, 2408.0], [21.3, 2408.0], [21.4, 2408.0], [21.5, 2408.0], [21.6, 2408.0], [21.7, 2408.0], [21.8, 2408.0], [21.9, 2408.0], [22.0, 2408.0], [22.1, 2408.0], [22.2, 2408.0], [22.3, 2408.0], [22.4, 2408.0], [22.5, 2408.0], [22.6, 2408.0], [22.7, 2408.0], [22.8, 2408.0], [22.9, 2408.0], [23.0, 2408.0], [23.1, 2408.0], [23.2, 2408.0], [23.3, 2408.0], [23.4, 2408.0], [23.5, 2408.0], [23.6, 2408.0], [23.7, 2408.0], [23.8, 2408.0], [23.9, 2408.0], [24.0, 2408.0], [24.1, 2408.0], [24.2, 2408.0], [24.3, 2408.0], [24.4, 2408.0], [24.5, 2408.0], [24.6, 2408.0], [24.7, 2408.0], [24.8, 2408.0], [24.9, 2408.0], [25.0, 2408.0], [25.1, 2408.0], [25.2, 2408.0], [25.3, 2408.0], [25.4, 2408.0], [25.5, 2408.0], [25.6, 2408.0], [25.7, 2408.0], [25.8, 2408.0], [25.9, 2408.0], [26.0, 2408.0], [26.1, 2408.0], [26.2, 2408.0], [26.3, 2408.0], [26.4, 2408.0], [26.5, 2408.0], [26.6, 2408.0], [26.7, 2408.0], [26.8, 2408.0], [26.9, 2408.0], [27.0, 2408.0], [27.1, 2408.0], [27.2, 2408.0], [27.3, 2408.0], [27.4, 2408.0], [27.5, 2408.0], [27.6, 2408.0], [27.7, 2408.0], [27.8, 2408.0], [27.9, 2408.0], [28.0, 2408.0], [28.1, 2408.0], [28.2, 2408.0], [28.3, 2408.0], [28.4, 2408.0], [28.5, 2408.0], [28.6, 2408.0], [28.7, 2408.0], [28.8, 2408.0], [28.9, 2408.0], [29.0, 2408.0], [29.1, 2408.0], [29.2, 2408.0], [29.3, 2408.0], [29.4, 2408.0], [29.5, 2408.0], [29.6, 2408.0], [29.7, 2408.0], [29.8, 2408.0], [29.9, 2408.0], [30.0, 2408.0], [30.1, 2408.0], [30.2, 2408.0], [30.3, 2408.0], [30.4, 2408.0], [30.5, 2408.0], [30.6, 2408.0], [30.7, 2408.0], [30.8, 2408.0], [30.9, 2408.0], [31.0, 2408.0], [31.1, 2408.0], [31.2, 2408.0], [31.3, 2408.0], [31.4, 2408.0], [31.5, 2408.0], [31.6, 2408.0], [31.7, 2408.0], [31.8, 2408.0], [31.9, 2408.0], [32.0, 2408.0], [32.1, 2408.0], [32.2, 2408.0], [32.3, 2408.0], [32.4, 2408.0], [32.5, 2408.0], [32.6, 2408.0], [32.7, 2408.0], [32.8, 2408.0], [32.9, 2408.0], [33.0, 2408.0], [33.1, 2408.0], [33.2, 2408.0], [33.3, 2408.0], [33.4, 2408.0], [33.5, 2408.0], [33.6, 2408.0], [33.7, 2408.0], [33.8, 2408.0], [33.9, 2408.0], [34.0, 2408.0], [34.1, 2408.0], [34.2, 2408.0], [34.3, 2408.0], [34.4, 2408.0], [34.5, 2408.0], [34.6, 2408.0], [34.7, 2408.0], [34.8, 2408.0], [34.9, 2408.0], [35.0, 2408.0], [35.1, 2408.0], [35.2, 2408.0], [35.3, 2408.0], [35.4, 2408.0], [35.5, 2408.0], [35.6, 2408.0], [35.7, 2408.0], [35.8, 2408.0], [35.9, 2408.0], [36.0, 2408.0], [36.1, 2408.0], [36.2, 2408.0], [36.3, 2408.0], [36.4, 2408.0], [36.5, 2408.0], [36.6, 2408.0], [36.7, 2408.0], [36.8, 2408.0], [36.9, 2408.0], [37.0, 2408.0], [37.1, 2408.0], [37.2, 2408.0], [37.3, 2408.0], [37.4, 2408.0], [37.5, 2408.0], [37.6, 2408.0], [37.7, 2408.0], [37.8, 2408.0], [37.9, 2408.0], [38.0, 2408.0], [38.1, 2408.0], [38.2, 2408.0], [38.3, 2408.0], [38.4, 2408.0], [38.5, 2408.0], [38.6, 2408.0], [38.7, 2408.0], [38.8, 2408.0], [38.9, 2408.0], [39.0, 2408.0], [39.1, 2408.0], [39.2, 2408.0], [39.3, 2408.0], [39.4, 2408.0], [39.5, 2408.0], [39.6, 2408.0], [39.7, 2408.0], [39.8, 2408.0], [39.9, 2408.0], [40.0, 2408.0], [40.1, 2408.0], [40.2, 2408.0], [40.3, 2408.0], [40.4, 2408.0], [40.5, 2408.0], [40.6, 2408.0], [40.7, 2408.0], [40.8, 2408.0], [40.9, 2408.0], [41.0, 2408.0], [41.1, 2408.0], [41.2, 2408.0], [41.3, 2408.0], [41.4, 2408.0], [41.5, 2408.0], [41.6, 2408.0], [41.7, 2408.0], [41.8, 2408.0], [41.9, 2408.0], [42.0, 2408.0], [42.1, 2408.0], [42.2, 2408.0], [42.3, 2408.0], [42.4, 2408.0], [42.5, 2408.0], [42.6, 2408.0], [42.7, 2408.0], [42.8, 2408.0], [42.9, 2408.0], [43.0, 2408.0], [43.1, 2408.0], [43.2, 2408.0], [43.3, 2408.0], [43.4, 2408.0], [43.5, 2408.0], [43.6, 2408.0], [43.7, 2408.0], [43.8, 2408.0], [43.9, 2408.0], [44.0, 2408.0], [44.1, 2408.0], [44.2, 2408.0], [44.3, 2408.0], [44.4, 2408.0], [44.5, 2408.0], [44.6, 2408.0], [44.7, 2408.0], [44.8, 2408.0], [44.9, 2408.0], [45.0, 2408.0], [45.1, 2408.0], [45.2, 2408.0], [45.3, 2408.0], [45.4, 2408.0], [45.5, 2408.0], [45.6, 2408.0], [45.7, 2408.0], [45.8, 2408.0], [45.9, 2408.0], [46.0, 2408.0], [46.1, 2408.0], [46.2, 2408.0], [46.3, 2408.0], [46.4, 2408.0], [46.5, 2408.0], [46.6, 2408.0], [46.7, 2408.0], [46.8, 2408.0], [46.9, 2408.0], [47.0, 2408.0], [47.1, 2408.0], [47.2, 2408.0], [47.3, 2408.0], [47.4, 2408.0], [47.5, 2408.0], [47.6, 2408.0], [47.7, 2408.0], [47.8, 2408.0], [47.9, 2408.0], [48.0, 2408.0], [48.1, 2408.0], [48.2, 2408.0], [48.3, 2408.0], [48.4, 2408.0], [48.5, 2408.0], [48.6, 2408.0], [48.7, 2408.0], [48.8, 2408.0], [48.9, 2408.0], [49.0, 2408.0], [49.1, 2408.0], [49.2, 2408.0], [49.3, 2408.0], [49.4, 2408.0], [49.5, 2408.0], [49.6, 2408.0], [49.7, 2408.0], [49.8, 2408.0], [49.9, 2408.0], [50.0, 2408.0], [50.1, 2408.0], [50.2, 2408.0], [50.3, 2408.0], [50.4, 2408.0], [50.5, 2408.0], [50.6, 2408.0], [50.7, 2408.0], [50.8, 2408.0], [50.9, 2408.0], [51.0, 2408.0], [51.1, 2408.0], [51.2, 2408.0], [51.3, 2408.0], [51.4, 2408.0], [51.5, 2408.0], [51.6, 2408.0], [51.7, 2408.0], [51.8, 2408.0], [51.9, 2408.0], [52.0, 2408.0], [52.1, 2408.0], [52.2, 2408.0], [52.3, 2408.0], [52.4, 2408.0], [52.5, 2408.0], [52.6, 2408.0], [52.7, 2408.0], [52.8, 2408.0], [52.9, 2408.0], [53.0, 2408.0], [53.1, 2408.0], [53.2, 2408.0], [53.3, 2408.0], [53.4, 2408.0], [53.5, 2408.0], [53.6, 2408.0], [53.7, 2408.0], [53.8, 2408.0], [53.9, 2408.0], [54.0, 2408.0], [54.1, 2408.0], [54.2, 2408.0], [54.3, 2408.0], [54.4, 2408.0], [54.5, 2408.0], [54.6, 2408.0], [54.7, 2408.0], [54.8, 2408.0], [54.9, 2408.0], [55.0, 2408.0], [55.1, 2408.0], [55.2, 2408.0], [55.3, 2408.0], [55.4, 2408.0], [55.5, 2408.0], [55.6, 2408.0], [55.7, 2408.0], [55.8, 2408.0], [55.9, 2408.0], [56.0, 2408.0], [56.1, 2408.0], [56.2, 2408.0], [56.3, 2408.0], [56.4, 2408.0], [56.5, 2408.0], [56.6, 2408.0], [56.7, 2408.0], [56.8, 2408.0], [56.9, 2408.0], [57.0, 2408.0], [57.1, 2408.0], [57.2, 2408.0], [57.3, 2408.0], [57.4, 2408.0], [57.5, 2408.0], [57.6, 2408.0], [57.7, 2408.0], [57.8, 2408.0], [57.9, 2408.0], [58.0, 2408.0], [58.1, 2408.0], [58.2, 2408.0], [58.3, 2408.0], [58.4, 2408.0], [58.5, 2408.0], [58.6, 2408.0], [58.7, 2408.0], [58.8, 2408.0], [58.9, 2408.0], [59.0, 2408.0], [59.1, 2408.0], [59.2, 2408.0], [59.3, 2408.0], [59.4, 2408.0], [59.5, 2408.0], [59.6, 2408.0], [59.7, 2408.0], [59.8, 2408.0], [59.9, 2408.0], [60.0, 2408.0], [60.1, 2408.0], [60.2, 2408.0], [60.3, 2408.0], [60.4, 2408.0], [60.5, 2408.0], [60.6, 2408.0], [60.7, 2408.0], [60.8, 2408.0], [60.9, 2408.0], [61.0, 2408.0], [61.1, 2408.0], [61.2, 2408.0], [61.3, 2408.0], [61.4, 2408.0], [61.5, 2408.0], [61.6, 2408.0], [61.7, 2408.0], [61.8, 2408.0], [61.9, 2408.0], [62.0, 2408.0], [62.1, 2408.0], [62.2, 2408.0], [62.3, 2408.0], [62.4, 2408.0], [62.5, 2408.0], [62.6, 2408.0], [62.7, 2408.0], [62.8, 2408.0], [62.9, 2408.0], [63.0, 2408.0], [63.1, 2408.0], [63.2, 2408.0], [63.3, 2408.0], [63.4, 2408.0], [63.5, 2408.0], [63.6, 2408.0], [63.7, 2408.0], [63.8, 2408.0], [63.9, 2408.0], [64.0, 2408.0], [64.1, 2408.0], [64.2, 2408.0], [64.3, 2408.0], [64.4, 2408.0], [64.5, 2408.0], [64.6, 2408.0], [64.7, 2408.0], [64.8, 2408.0], [64.9, 2408.0], [65.0, 2408.0], [65.1, 2408.0], [65.2, 2408.0], [65.3, 2408.0], [65.4, 2408.0], [65.5, 2408.0], [65.6, 2408.0], [65.7, 2408.0], [65.8, 2408.0], [65.9, 2408.0], [66.0, 2408.0], [66.1, 2408.0], [66.2, 2408.0], [66.3, 2408.0], [66.4, 2408.0], [66.5, 2408.0], [66.6, 2408.0], [66.7, 2408.0], [66.8, 2408.0], [66.9, 2408.0], [67.0, 2408.0], [67.1, 2408.0], [67.2, 2408.0], [67.3, 2408.0], [67.4, 2408.0], [67.5, 2408.0], [67.6, 2408.0], [67.7, 2408.0], [67.8, 2408.0], [67.9, 2408.0], [68.0, 2408.0], [68.1, 2408.0], [68.2, 2408.0], [68.3, 2408.0], [68.4, 2408.0], [68.5, 2408.0], [68.6, 2408.0], [68.7, 2408.0], [68.8, 2408.0], [68.9, 2408.0], [69.0, 2408.0], [69.1, 2408.0], [69.2, 2408.0], [69.3, 2408.0], [69.4, 2408.0], [69.5, 2408.0], [69.6, 2408.0], [69.7, 2408.0], [69.8, 2408.0], [69.9, 2408.0], [70.0, 2408.0], [70.1, 2408.0], [70.2, 2408.0], [70.3, 2408.0], [70.4, 2408.0], [70.5, 2408.0], [70.6, 2408.0], [70.7, 2408.0], [70.8, 2408.0], [70.9, 2408.0], [71.0, 2408.0], [71.1, 2408.0], [71.2, 2408.0], [71.3, 2408.0], [71.4, 2408.0], [71.5, 2408.0], [71.6, 2408.0], [71.7, 2408.0], [71.8, 2408.0], [71.9, 2408.0], [72.0, 2408.0], [72.1, 2408.0], [72.2, 2408.0], [72.3, 2408.0], [72.4, 2408.0], [72.5, 2408.0], [72.6, 2408.0], [72.7, 2408.0], [72.8, 2408.0], [72.9, 2408.0], [73.0, 2408.0], [73.1, 2408.0], [73.2, 2408.0], [73.3, 2408.0], [73.4, 2408.0], [73.5, 2408.0], [73.6, 2408.0], [73.7, 2408.0], [73.8, 2408.0], [73.9, 2408.0], [74.0, 2408.0], [74.1, 2408.0], [74.2, 2408.0], [74.3, 2408.0], [74.4, 2408.0], [74.5, 2408.0], [74.6, 2408.0], [74.7, 2408.0], [74.8, 2408.0], [74.9, 2408.0], [75.0, 2408.0], [75.1, 2408.0], [75.2, 2408.0], [75.3, 2408.0], [75.4, 2408.0], [75.5, 2408.0], [75.6, 2408.0], [75.7, 2408.0], [75.8, 2408.0], [75.9, 2408.0], [76.0, 2408.0], [76.1, 2408.0], [76.2, 2408.0], [76.3, 2408.0], [76.4, 2408.0], [76.5, 2408.0], [76.6, 2408.0], [76.7, 2408.0], [76.8, 2408.0], [76.9, 2408.0], [77.0, 2408.0], [77.1, 2408.0], [77.2, 2408.0], [77.3, 2408.0], [77.4, 2408.0], [77.5, 2408.0], [77.6, 2408.0], [77.7, 2408.0], [77.8, 2408.0], [77.9, 2408.0], [78.0, 2408.0], [78.1, 2408.0], [78.2, 2408.0], [78.3, 2408.0], [78.4, 2408.0], [78.5, 2408.0], [78.6, 2408.0], [78.7, 2408.0], [78.8, 2408.0], [78.9, 2408.0], [79.0, 2408.0], [79.1, 2408.0], [79.2, 2408.0], [79.3, 2408.0], [79.4, 2408.0], [79.5, 2408.0], [79.6, 2408.0], [79.7, 2408.0], [79.8, 2408.0], [79.9, 2408.0], [80.0, 2408.0], [80.1, 2408.0], [80.2, 2408.0], [80.3, 2408.0], [80.4, 2408.0], [80.5, 2408.0], [80.6, 2408.0], [80.7, 2408.0], [80.8, 2408.0], [80.9, 2408.0], [81.0, 2408.0], [81.1, 2408.0], [81.2, 2408.0], [81.3, 2408.0], [81.4, 2408.0], [81.5, 2408.0], [81.6, 2408.0], [81.7, 2408.0], [81.8, 2408.0], [81.9, 2408.0], [82.0, 2408.0], [82.1, 2408.0], [82.2, 2408.0], [82.3, 2408.0], [82.4, 2408.0], [82.5, 2408.0], [82.6, 2408.0], [82.7, 2408.0], [82.8, 2408.0], [82.9, 2408.0], [83.0, 2408.0], [83.1, 2408.0], [83.2, 2408.0], [83.3, 2408.0], [83.4, 2408.0], [83.5, 2408.0], [83.6, 2408.0], [83.7, 2408.0], [83.8, 2408.0], [83.9, 2408.0], [84.0, 2408.0], [84.1, 2408.0], [84.2, 2408.0], [84.3, 2408.0], [84.4, 2408.0], [84.5, 2408.0], [84.6, 2408.0], [84.7, 2408.0], [84.8, 2408.0], [84.9, 2408.0], [85.0, 2408.0], [85.1, 2408.0], [85.2, 2408.0], [85.3, 2408.0], [85.4, 2408.0], [85.5, 2408.0], [85.6, 2408.0], [85.7, 2408.0], [85.8, 2408.0], [85.9, 2408.0], [86.0, 2408.0], [86.1, 2408.0], [86.2, 2408.0], [86.3, 2408.0], [86.4, 2408.0], [86.5, 2408.0], [86.6, 2408.0], [86.7, 2408.0], [86.8, 2408.0], [86.9, 2408.0], [87.0, 2408.0], [87.1, 2408.0], [87.2, 2408.0], [87.3, 2408.0], [87.4, 2408.0], [87.5, 2408.0], [87.6, 2408.0], [87.7, 2408.0], [87.8, 2408.0], [87.9, 2408.0], [88.0, 2408.0], [88.1, 2408.0], [88.2, 2408.0], [88.3, 2408.0], [88.4, 2408.0], [88.5, 2408.0], [88.6, 2408.0], [88.7, 2408.0], [88.8, 2408.0], [88.9, 2408.0], [89.0, 2408.0], [89.1, 2408.0], [89.2, 2408.0], [89.3, 2408.0], [89.4, 2408.0], [89.5, 2408.0], [89.6, 2408.0], [89.7, 2408.0], [89.8, 2408.0], [89.9, 2408.0], [90.0, 2408.0], [90.1, 2408.0], [90.2, 2408.0], [90.3, 2408.0], [90.4, 2408.0], [90.5, 2408.0], [90.6, 2408.0], [90.7, 2408.0], [90.8, 2408.0], [90.9, 2408.0], [91.0, 2408.0], [91.1, 2408.0], [91.2, 2408.0], [91.3, 2408.0], [91.4, 2408.0], [91.5, 2408.0], [91.6, 2408.0], [91.7, 2408.0], [91.8, 2408.0], [91.9, 2408.0], [92.0, 2408.0], [92.1, 2408.0], [92.2, 2408.0], [92.3, 2408.0], [92.4, 2408.0], [92.5, 2408.0], [92.6, 2408.0], [92.7, 2408.0], [92.8, 2408.0], [92.9, 2408.0], [93.0, 2408.0], [93.1, 2408.0], [93.2, 2408.0], [93.3, 2408.0], [93.4, 2408.0], [93.5, 2408.0], [93.6, 2408.0], [93.7, 2408.0], [93.8, 2408.0], [93.9, 2408.0], [94.0, 2408.0], [94.1, 2408.0], [94.2, 2408.0], [94.3, 2408.0], [94.4, 2408.0], [94.5, 2408.0], [94.6, 2408.0], [94.7, 2408.0], [94.8, 2408.0], [94.9, 2408.0], [95.0, 2408.0], [95.1, 2408.0], [95.2, 2408.0], [95.3, 2408.0], [95.4, 2408.0], [95.5, 2408.0], [95.6, 2408.0], [95.7, 2408.0], [95.8, 2408.0], [95.9, 2408.0], [96.0, 2408.0], [96.1, 2408.0], [96.2, 2408.0], [96.3, 2408.0], [96.4, 2408.0], [96.5, 2408.0], [96.6, 2408.0], [96.7, 2408.0], [96.8, 2408.0], [96.9, 2408.0], [97.0, 2408.0], [97.1, 2408.0], [97.2, 2408.0], [97.3, 2408.0], [97.4, 2408.0], [97.5, 2408.0], [97.6, 2408.0], [97.7, 2408.0], [97.8, 2408.0], [97.9, 2408.0], [98.0, 2408.0], [98.1, 2408.0], [98.2, 2408.0], [98.3, 2408.0], [98.4, 2408.0], [98.5, 2408.0], [98.6, 2408.0], [98.7, 2408.0], [98.8, 2408.0], [98.9, 2408.0], [99.0, 2408.0], [99.1, 2408.0], [99.2, 2408.0], [99.3, 2408.0], [99.4, 2408.0], [99.5, 2408.0], [99.6, 2408.0], [99.7, 2408.0], [99.8, 2408.0], [99.9, 2408.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 300.0, "maxY": 689.0, "series": [{"data": [[2500.0, 1.0], [2600.0, 1.0], [700.0, 3.0], [800.0, 11.0], [900.0, 20.0], [1000.0, 25.0], [1100.0, 24.0], [1200.0, 24.0], [1300.0, 21.0], [1400.0, 8.0], [1500.0, 11.0], [23900.0, 1.0], [24700.0, 1.0], [25600.0, 1.0], [1600.0, 8.0], [1700.0, 5.0], [1800.0, 2.0], [1900.0, 3.0]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[600.0, 79.0], [700.0, 52.0], [800.0, 21.0], [900.0, 10.0], [1000.0, 8.0], [1200.0, 2.0], [1300.0, 3.0], [1400.0, 4.0], [1500.0, 2.0], [400.0, 56.0], [1600.0, 1.0], [1700.0, 2.0], [1900.0, 1.0], [500.0, 129.0]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[4100.0, 1.0], [300.0, 689.0], [600.0, 3.0], [1200.0, 1.0], [1400.0, 1.0], [700.0, 3.0], [400.0, 345.0], [500.0, 9.0], [1000.0, 1.0]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[2100.0, 7.0], [2200.0, 8.0], [2300.0, 5.0], [2400.0, 5.0], [2500.0, 2.0], [2600.0, 1.0], [2800.0, 1.0], [2700.0, 1.0], [2900.0, 1.0], [800.0, 1.0], [3300.0, 1.0], [900.0, 1.0], [1200.0, 1.0], [1300.0, 5.0], [1400.0, 8.0], [1500.0, 3.0], [1600.0, 16.0], [1700.0, 12.0], [1800.0, 11.0], [1900.0, 7.0], [2000.0, 14.0]], "isOverall": false, "label": "trackVehicleExitOutEntry", "isController": false}, {"data": [[2400.0, 1.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 25600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 137.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1091.0, "series": [{"data": [[0.0, 1091.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 477.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 137.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.7199741E12, "maxY": 1.0, "series": [{"data": [[1.7199741E12, 1.0]], "isOverall": false, "label": "setUpAutenticacionCognito", "isController": false}, {"data": [[1.71997422E12, 1.0], [1.7199747E12, 1.0], [1.71997452E12, 1.0], [1.71997434E12, 1.0], [1.71997416E12, 1.0], [1.71997464E12, 1.0], [1.71997446E12, 1.0], [1.71997428E12, 1.0], [1.7199741E12, 1.0], [1.71997458E12, 1.0], [1.7199744E12, 1.0]], "isOverall": false, "label": "consultarPlaca", "isController": false}, {"data": [[1.71997422E12, 1.0], [1.7199747E12, 1.0], [1.71997452E12, 1.0], [1.71997434E12, 1.0], [1.71997416E12, 1.0], [1.71997464E12, 1.0], [1.71997446E12, 1.0], [1.71997428E12, 1.0], [1.71997458E12, 1.0], [1.7199744E12, 1.0]], "isOverall": false, "label": "registrarEntrada", "isController": false}, {"data": [[1.7199747E12, 1.0], [1.71997452E12, 1.0], [1.71997434E12, 1.0], [1.71997464E12, 1.0], [1.71997446E12, 1.0], [1.71997458E12, 1.0], [1.7199744E12, 1.0]], "isOverall": false, "label": "registrarSalida", "isController": false}, {"data": [[1.7199747E12, 1.0], [1.71997452E12, 1.0], [1.71997464E12, 1.0], [1.71997446E12, 1.0], [1.71997458E12, 1.0], [1.7199744E12, 1.0]], "isOverall": false, "label": "registrarSalidaSinEntrada", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7199747E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 388.6635514018694, "minX": 1.0, "maxY": 2848.5937499999995, "series": [{"data": [[4.0, 1390.6159420289857], [3.0, 2848.5937499999995]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[3.811764705882352, 1665.0588235294117]], "isOverall": false, "label": "trackVehicleExit-Aggregated", "isController": false}, {"data": [[2.0, 607.1999999999998], [4.0, 673.6059113300489], [3.0, 687.9999999999999]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[3.318918918918919, 661.5405405405402]], "isOverall": false, "label": "trackVehicleEntry-Aggregated", "isController": false}, {"data": [[1.0, 395.9238095238096], [2.0, 388.6635514018694], [4.0, 390.15630885122414], [3.0, 414.38916256157603]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[3.1016144349477694, 395.0997150997149]], "isOverall": false, "label": "getPlate-Aggregated", "isController": false}, {"data": [[4.0, 1920.7545454545455], [1.0, 1614.0]], "isOverall": false, "label": "trackVehicleExitOutEntry", "isController": false}, {"data": [[3.972972972972973, 1917.990990990991]], "isOverall": false, "label": "trackVehicleExitOutEntry-Aggregated", "isController": false}, {"data": [[1.0, 2408.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}, {"data": [[1.0, 2408.0]], "isOverall": false, "label": "loginAFlypass-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 4.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 294.9, "minX": 1.7199741E12, "maxY": 3245.65, "series": [{"data": [[1.71997422E12, 1203.6666666666667], [1.7199747E12, 1109.0833333333333], [1.71997452E12, 1628.9666666666667], [1.71997434E12, 1330.3333333333333], [1.71997416E12, 961.4], [1.71997464E12, 1604.3166666666666], [1.71997446E12, 1608.5666666666666], [1.71997428E12, 1202.9333333333334], [1.7199741E12, 294.9], [1.71997458E12, 1654.5833333333333], [1.7199744E12, 1389.05]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71997422E12, 2324.1], [1.7199747E12, 2177.0666666666666], [1.71997452E12, 3194.766666666667], [1.71997434E12, 2588.3166666666666], [1.71997416E12, 1810.25], [1.71997464E12, 3144.0], [1.71997446E12, 3151.6], [1.71997428E12, 2320.5666666666666], [1.7199741E12, 487.1], [1.71997458E12, 3245.65], [1.7199744E12, 2711.6]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7199747E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 383.8055555555555, "minX": 1.7199741E12, "maxY": 2713.124999999999, "series": [{"data": [[1.7199747E12, 1254.9473684210523], [1.71997452E12, 1236.655172413793], [1.71997434E12, 2713.124999999999], [1.71997464E12, 1205.5666666666664], [1.71997446E12, 2301.15], [1.71997458E12, 1243.8999999999999], [1.7199744E12, 2324.4615384615386]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[1.71997422E12, 611.0232558139535], [1.7199747E12, 642.8571428571425], [1.71997452E12, 660.170731707317], [1.71997434E12, 590.159090909091], [1.71997416E12, 632.9230769230769], [1.71997464E12, 755.3157894736843], [1.71997446E12, 630.4651162790699], [1.71997428E12, 623.5952380952381], [1.71997458E12, 675.1463414634148], [1.7199744E12, 798.6486486486485]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[1.71997422E12, 391.4056603773586], [1.7199747E12, 393.60563380281695], [1.71997452E12, 392.2075471698114], [1.71997434E12, 400.9611650485438], [1.71997416E12, 383.8055555555555], [1.71997464E12, 387.45714285714286], [1.71997446E12, 387.85185185185196], [1.71997428E12, 386.7196261682244], [1.7199741E12, 418.8787878787879], [1.71997458E12, 386.5420560747664], [1.7199744E12, 435.83838383838366]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1.7199747E12, 1935.3125], [1.71997452E12, 1982.3333333333335], [1.71997464E12, 2016.3333333333333], [1.71997446E12, 1756.875], [1.71997458E12, 1946.3636363636365], [1.7199744E12, 1853.5714285714287]], "isOverall": false, "label": "trackVehicleExitOutEntry", "isController": false}, {"data": [[1.7199741E12, 2408.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7199747E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 383.5555555555555, "minX": 1.7199741E12, "maxY": 2713.124999999999, "series": [{"data": [[1.7199747E12, 1254.9473684210523], [1.71997452E12, 1236.655172413793], [1.71997434E12, 2713.124999999999], [1.71997464E12, 1205.5333333333333], [1.71997446E12, 2301.15], [1.71997458E12, 1243.8666666666666], [1.7199744E12, 2324.076923076923]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[1.71997422E12, 610.9767441860466], [1.7199747E12, 642.75], [1.71997452E12, 660.1219512195121], [1.71997434E12, 590.1363636363637], [1.71997416E12, 632.7692307692307], [1.71997464E12, 755.3157894736843], [1.71997446E12, 630.395348837209], [1.71997428E12, 623.4285714285716], [1.71997458E12, 674.9756097560976], [1.7199744E12, 798.5675675675675]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[1.71997422E12, 391.23584905660385], [1.7199747E12, 393.53521126760546], [1.71997452E12, 392.1415094339623], [1.71997434E12, 400.91262135922335], [1.71997416E12, 383.5555555555555], [1.71997464E12, 387.40000000000003], [1.71997446E12, 387.2500000000001], [1.71997428E12, 386.6635514018692], [1.7199741E12, 417.909090909091], [1.71997458E12, 386.48598130841117], [1.7199744E12, 435.6161616161617]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1.7199747E12, 1935.125], [1.71997452E12, 1982.0476190476188], [1.71997464E12, 2016.190476190476], [1.71997446E12, 1756.8333333333333], [1.71997458E12, 1946.1818181818185], [1.7199744E12, 1853.142857142857]], "isOverall": false, "label": "trackVehicleExitOutEntry", "isController": false}, {"data": [[1.7199741E12, 2404.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7199747E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 271.32142857142856, "minX": 1.7199741E12, "maxY": 975.0, "series": [{"data": [[1.7199747E12, 286.4736842105263], [1.71997452E12, 296.6206896551723], [1.71997434E12, 287.375], [1.71997464E12, 276.16666666666663], [1.71997446E12, 277.0], [1.71997458E12, 279.2666666666666], [1.7199744E12, 301.0769230769231]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[1.71997422E12, 292.60465116279073], [1.7199747E12, 271.32142857142856], [1.71997452E12, 277.6585365853658], [1.71997434E12, 291.0454545454547], [1.71997416E12, 282.53846153846155], [1.71997464E12, 281.842105263158], [1.71997446E12, 288.6046511627907], [1.71997428E12, 281.2619047619049], [1.71997458E12, 290.85365853658544], [1.7199744E12, 292.54054054054063]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[1.71997422E12, 290.4528301886793], [1.7199747E12, 282.6478873239437], [1.71997452E12, 288.3584905660377], [1.71997434E12, 293.79611650485435], [1.71997416E12, 286.66666666666663], [1.71997464E12, 283.27619047619066], [1.71997446E12, 284.14814814814804], [1.71997428E12, 287.7850467289721], [1.7199741E12, 287.51515151515156], [1.71997458E12, 282.8785046728972], [1.7199744E12, 321.76767676767685]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1.7199747E12, 293.0625], [1.71997452E12, 306.1428571428571], [1.71997464E12, 289.7619047619047], [1.71997446E12, 281.5833333333333], [1.71997458E12, 289.3636363636364], [1.7199744E12, 292.0]], "isOverall": false, "label": "trackVehicleExitOutEntry", "isController": false}, {"data": [[1.7199741E12, 975.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7199747E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 306.0, "minX": 1.7199741E12, "maxY": 25662.0, "series": [{"data": [[1.71997422E12, 1735.0], [1.7199747E12, 3387.0], [1.71997452E12, 2697.0], [1.71997434E12, 25662.0], [1.71997416E12, 1510.0], [1.71997464E12, 2908.0], [1.71997446E12, 23958.0], [1.71997428E12, 1323.0], [1.7199741E12, 2408.0], [1.71997458E12, 2545.0], [1.7199744E12, 24787.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71997422E12, 622.0], [1.7199747E12, 1634.5], [1.71997452E12, 1661.6000000000006], [1.71997434E12, 1034.0], [1.71997416E12, 502.2], [1.71997464E12, 1703.5], [1.71997446E12, 1628.4], [1.71997428E12, 633.0], [1.7199741E12, 503.5], [1.71997458E12, 1652.3000000000002], [1.7199744E12, 1586.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71997422E12, 1266.0], [1.7199747E12, 3164.4000000000037], [1.71997452E12, 2584.300000000001], [1.71997434E12, 10241.199999999644], [1.71997416E12, 1329.820000000001], [1.71997464E12, 2877.6000000000004], [1.71997446E12, 3316.079999999829], [1.71997428E12, 1148.5], [1.7199741E12, 2408.0], [1.71997458E12, 2464.87], [1.7199744E12, 10339.000000000235]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71997422E12, 692.0], [1.7199747E12, 1913.5], [1.71997452E12, 1924.1999999999991], [1.71997434E12, 1186.3999999999992], [1.71997416E12, 556.3], [1.71997464E12, 2084.25], [1.71997446E12, 1907.9999999999998], [1.71997428E12, 737.0], [1.7199741E12, 1673.0], [1.71997458E12, 2011.9499999999996], [1.7199744E12, 1901.5]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.71997422E12, 314.0], [1.7199747E12, 319.0], [1.71997452E12, 310.0], [1.71997434E12, 310.0], [1.71997416E12, 312.0], [1.71997464E12, 306.0], [1.71997446E12, 312.0], [1.71997428E12, 315.0], [1.7199741E12, 319.0], [1.71997458E12, 316.0], [1.7199744E12, 316.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71997422E12, 398.0], [1.7199747E12, 438.0], [1.71997452E12, 446.0], [1.71997434E12, 425.0], [1.71997416E12, 382.0], [1.71997464E12, 439.0], [1.71997446E12, 435.0], [1.71997428E12, 400.0], [1.7199741E12, 380.0], [1.71997458E12, 436.0], [1.7199744E12, 439.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7199747E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 394.0, "minX": 1.0, "maxY": 623.5, "series": [{"data": [[1.0, 416.5], [2.0, 394.0], [4.0, 490.0], [5.0, 623.5], [3.0, 421.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 5.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 394.0, "minX": 1.0, "maxY": 623.5, "series": [{"data": [[1.0, 416.5], [2.0, 394.0], [4.0, 490.0], [5.0, 623.5], [3.0, 421.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 5.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.5833333333333334, "minX": 1.7199741E12, "maxY": 3.316666666666667, "series": [{"data": [[1.71997422E12, 2.4833333333333334], [1.7199747E12, 2.183333333333333], [1.71997452E12, 3.3], [1.71997434E12, 2.716666666666667], [1.71997416E12, 2.0166666666666666], [1.71997464E12, 3.25], [1.71997446E12, 3.216666666666667], [1.71997428E12, 2.5166666666666666], [1.7199741E12, 0.5833333333333334], [1.71997458E12, 3.316666666666667], [1.7199744E12, 2.8333333333333335]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7199747E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.21666666666666667, "minX": 1.7199741E12, "maxY": 1.8, "series": [{"data": [[1.71997422E12, 1.7666666666666666], [1.7199747E12, 1.1833333333333333], [1.71997452E12, 1.7666666666666666], [1.71997434E12, 1.7166666666666666], [1.71997416E12, 1.8], [1.71997464E12, 1.75], [1.71997446E12, 1.8], [1.71997428E12, 1.7833333333333334], [1.7199741E12, 0.5666666666666667], [1.71997458E12, 1.7833333333333334], [1.7199744E12, 1.65]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.71997422E12, 0.7166666666666667], [1.7199747E12, 1.05], [1.71997452E12, 1.5166666666666666], [1.71997434E12, 1.0], [1.71997416E12, 0.21666666666666667], [1.71997464E12, 1.4833333333333334], [1.71997446E12, 1.45], [1.71997428E12, 0.7], [1.71997458E12, 1.55], [1.7199744E12, 1.1666666666666667]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7199747E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.7199741E12, "maxY": 1.8, "series": [{"data": [[1.7199741E12, 0.016666666666666666]], "isOverall": false, "label": "loginAFlypass-success", "isController": false}, {"data": [[1.71997422E12, 0.7166666666666667], [1.7199747E12, 0.4666666666666667], [1.71997452E12, 0.6833333333333333], [1.71997434E12, 0.7333333333333333], [1.71997416E12, 0.21666666666666667], [1.71997464E12, 0.6333333333333333], [1.71997446E12, 0.7166666666666667], [1.71997428E12, 0.7], [1.71997458E12, 0.6833333333333333], [1.7199744E12, 0.6166666666666667]], "isOverall": false, "label": "trackVehicleEntry-success", "isController": false}, {"data": [[1.7199747E12, 0.31666666666666665], [1.71997452E12, 0.48333333333333334], [1.71997434E12, 0.26666666666666666], [1.71997464E12, 0.5], [1.71997446E12, 0.3333333333333333], [1.71997458E12, 0.5], [1.7199744E12, 0.43333333333333335]], "isOverall": false, "label": "trackVehicleExit-success", "isController": false}, {"data": [[1.71997422E12, 1.7666666666666666], [1.7199747E12, 1.1833333333333333], [1.71997452E12, 1.7666666666666666], [1.71997434E12, 1.7166666666666666], [1.71997416E12, 1.8], [1.71997464E12, 1.75], [1.71997446E12, 1.8], [1.71997428E12, 1.7833333333333334], [1.7199741E12, 0.55], [1.71997458E12, 1.7833333333333334], [1.7199744E12, 1.65]], "isOverall": false, "label": "getPlate-success", "isController": false}, {"data": [[1.7199747E12, 0.26666666666666666], [1.71997452E12, 0.35], [1.71997464E12, 0.35], [1.71997446E12, 0.4], [1.71997458E12, 0.36666666666666664], [1.7199744E12, 0.11666666666666667]], "isOverall": false, "label": "trackVehicleExitOutEntry-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7199747E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.5666666666666667, "minX": 1.7199741E12, "maxY": 3.3333333333333335, "series": [{"data": [[1.71997422E12, 2.4833333333333334], [1.7199747E12, 2.2333333333333334], [1.71997452E12, 3.283333333333333], [1.71997434E12, 2.716666666666667], [1.71997416E12, 2.0166666666666666], [1.71997464E12, 3.2333333333333334], [1.71997446E12, 3.25], [1.71997428E12, 2.4833333333333334], [1.7199741E12, 0.5666666666666667], [1.71997458E12, 3.3333333333333335], [1.7199744E12, 2.816666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7199747E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

