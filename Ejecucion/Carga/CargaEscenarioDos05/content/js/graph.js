/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 311.0, "minX": 0.0, "maxY": 27735.0, "series": [{"data": [[0.0, 746.0], [0.1, 746.0], [0.2, 746.0], [0.3, 746.0], [0.4, 746.0], [0.5, 746.0], [0.6, 780.0], [0.7, 780.0], [0.8, 780.0], [0.9, 780.0], [1.0, 780.0], [1.1, 832.0], [1.2, 832.0], [1.3, 832.0], [1.4, 832.0], [1.5, 832.0], [1.6, 832.0], [1.7, 859.0], [1.8, 859.0], [1.9, 859.0], [2.0, 859.0], [2.1, 859.0], [2.2, 868.0], [2.3, 868.0], [2.4, 868.0], [2.5, 868.0], [2.6, 868.0], [2.7, 868.0], [2.8, 877.0], [2.9, 877.0], [3.0, 877.0], [3.1, 877.0], [3.2, 877.0], [3.3, 883.0], [3.4, 883.0], [3.5, 883.0], [3.6, 883.0], [3.7, 883.0], [3.8, 883.0], [3.9, 885.0], [4.0, 885.0], [4.1, 885.0], [4.2, 885.0], [4.3, 885.0], [4.4, 885.0], [4.5, 885.0], [4.6, 885.0], [4.7, 885.0], [4.8, 885.0], [4.9, 885.0], [5.0, 885.0], [5.1, 885.0], [5.2, 885.0], [5.3, 885.0], [5.4, 885.0], [5.5, 893.0], [5.6, 893.0], [5.7, 893.0], [5.8, 893.0], [5.9, 893.0], [6.0, 893.0], [6.1, 896.0], [6.2, 896.0], [6.3, 896.0], [6.4, 896.0], [6.5, 896.0], [6.6, 902.0], [6.7, 902.0], [6.8, 902.0], [6.9, 902.0], [7.0, 902.0], [7.1, 902.0], [7.2, 902.0], [7.3, 902.0], [7.4, 902.0], [7.5, 902.0], [7.6, 902.0], [7.7, 903.0], [7.8, 903.0], [7.9, 903.0], [8.0, 903.0], [8.1, 903.0], [8.2, 910.0], [8.3, 910.0], [8.4, 910.0], [8.5, 910.0], [8.6, 910.0], [8.7, 910.0], [8.8, 922.0], [8.9, 922.0], [9.0, 922.0], [9.1, 922.0], [9.2, 922.0], [9.3, 923.0], [9.4, 923.0], [9.5, 923.0], [9.6, 923.0], [9.7, 923.0], [9.8, 923.0], [9.9, 926.0], [10.0, 926.0], [10.1, 926.0], [10.2, 926.0], [10.3, 926.0], [10.4, 927.0], [10.5, 927.0], [10.6, 927.0], [10.7, 927.0], [10.8, 927.0], [10.9, 927.0], [11.0, 944.0], [11.1, 944.0], [11.2, 944.0], [11.3, 944.0], [11.4, 944.0], [11.5, 946.0], [11.6, 946.0], [11.7, 946.0], [11.8, 946.0], [11.9, 946.0], [12.0, 946.0], [12.1, 950.0], [12.2, 950.0], [12.3, 950.0], [12.4, 950.0], [12.5, 950.0], [12.6, 952.0], [12.7, 952.0], [12.8, 952.0], [12.9, 952.0], [13.0, 952.0], [13.1, 952.0], [13.2, 955.0], [13.3, 955.0], [13.4, 955.0], [13.5, 955.0], [13.6, 955.0], [13.7, 959.0], [13.8, 959.0], [13.9, 959.0], [14.0, 959.0], [14.1, 959.0], [14.2, 959.0], [14.3, 971.0], [14.4, 971.0], [14.5, 971.0], [14.6, 971.0], [14.7, 971.0], [14.8, 972.0], [14.9, 972.0], [15.0, 972.0], [15.1, 972.0], [15.2, 972.0], [15.3, 972.0], [15.4, 974.0], [15.5, 974.0], [15.6, 974.0], [15.7, 974.0], [15.8, 974.0], [15.9, 977.0], [16.0, 977.0], [16.1, 977.0], [16.2, 977.0], [16.3, 977.0], [16.4, 979.0], [16.5, 979.0], [16.6, 979.0], [16.7, 979.0], [16.8, 979.0], [16.9, 979.0], [17.0, 987.0], [17.1, 987.0], [17.2, 987.0], [17.3, 987.0], [17.4, 987.0], [17.5, 990.0], [17.6, 990.0], [17.7, 990.0], [17.8, 990.0], [17.9, 990.0], [18.0, 990.0], [18.1, 991.0], [18.2, 991.0], [18.3, 991.0], [18.4, 991.0], [18.5, 991.0], [18.6, 1010.0], [18.7, 1010.0], [18.8, 1010.0], [18.9, 1010.0], [19.0, 1010.0], [19.1, 1010.0], [19.2, 1010.0], [19.3, 1010.0], [19.4, 1010.0], [19.5, 1010.0], [19.6, 1010.0], [19.7, 1012.0], [19.8, 1012.0], [19.9, 1012.0], [20.0, 1012.0], [20.1, 1012.0], [20.2, 1012.0], [20.3, 1013.0], [20.4, 1013.0], [20.5, 1013.0], [20.6, 1013.0], [20.7, 1013.0], [20.8, 1017.0], [20.9, 1017.0], [21.0, 1017.0], [21.1, 1017.0], [21.2, 1017.0], [21.3, 1017.0], [21.4, 1020.0], [21.5, 1020.0], [21.6, 1020.0], [21.7, 1020.0], [21.8, 1020.0], [21.9, 1036.0], [22.0, 1036.0], [22.1, 1036.0], [22.2, 1036.0], [22.3, 1036.0], [22.4, 1036.0], [22.5, 1036.0], [22.6, 1036.0], [22.7, 1036.0], [22.8, 1036.0], [22.9, 1036.0], [23.0, 1037.0], [23.1, 1037.0], [23.2, 1037.0], [23.3, 1037.0], [23.4, 1037.0], [23.5, 1040.0], [23.6, 1040.0], [23.7, 1040.0], [23.8, 1040.0], [23.9, 1040.0], [24.0, 1040.0], [24.1, 1043.0], [24.2, 1043.0], [24.3, 1043.0], [24.4, 1043.0], [24.5, 1043.0], [24.6, 1047.0], [24.7, 1047.0], [24.8, 1047.0], [24.9, 1047.0], [25.0, 1047.0], [25.1, 1047.0], [25.2, 1048.0], [25.3, 1048.0], [25.4, 1048.0], [25.5, 1048.0], [25.6, 1048.0], [25.7, 1053.0], [25.8, 1053.0], [25.9, 1053.0], [26.0, 1053.0], [26.1, 1053.0], [26.2, 1053.0], [26.3, 1055.0], [26.4, 1055.0], [26.5, 1055.0], [26.6, 1055.0], [26.7, 1055.0], [26.8, 1059.0], [26.9, 1059.0], [27.0, 1059.0], [27.1, 1059.0], [27.2, 1059.0], [27.3, 1059.0], [27.4, 1060.0], [27.5, 1060.0], [27.6, 1060.0], [27.7, 1060.0], [27.8, 1060.0], [27.9, 1066.0], [28.0, 1066.0], [28.1, 1066.0], [28.2, 1066.0], [28.3, 1066.0], [28.4, 1066.0], [28.5, 1075.0], [28.6, 1075.0], [28.7, 1075.0], [28.8, 1075.0], [28.9, 1075.0], [29.0, 1075.0], [29.1, 1075.0], [29.2, 1075.0], [29.3, 1075.0], [29.4, 1075.0], [29.5, 1075.0], [29.6, 1076.0], [29.7, 1076.0], [29.8, 1076.0], [29.9, 1076.0], [30.0, 1076.0], [30.1, 1081.0], [30.2, 1081.0], [30.3, 1081.0], [30.4, 1081.0], [30.5, 1081.0], [30.6, 1081.0], [30.7, 1091.0], [30.8, 1091.0], [30.9, 1091.0], [31.0, 1091.0], [31.1, 1091.0], [31.2, 1104.0], [31.3, 1104.0], [31.4, 1104.0], [31.5, 1104.0], [31.6, 1104.0], [31.7, 1106.0], [31.8, 1106.0], [31.9, 1106.0], [32.0, 1106.0], [32.1, 1106.0], [32.2, 1106.0], [32.3, 1108.0], [32.4, 1108.0], [32.5, 1108.0], [32.6, 1108.0], [32.7, 1108.0], [32.8, 1110.0], [32.9, 1110.0], [33.0, 1110.0], [33.1, 1110.0], [33.2, 1110.0], [33.3, 1110.0], [33.4, 1113.0], [33.5, 1113.0], [33.6, 1113.0], [33.7, 1113.0], [33.8, 1113.0], [33.9, 1121.0], [34.0, 1121.0], [34.1, 1121.0], [34.2, 1121.0], [34.3, 1121.0], [34.4, 1121.0], [34.5, 1126.0], [34.6, 1126.0], [34.7, 1126.0], [34.8, 1126.0], [34.9, 1126.0], [35.0, 1127.0], [35.1, 1127.0], [35.2, 1127.0], [35.3, 1127.0], [35.4, 1127.0], [35.5, 1127.0], [35.6, 1139.0], [35.7, 1139.0], [35.8, 1139.0], [35.9, 1139.0], [36.0, 1139.0], [36.1, 1139.0], [36.2, 1139.0], [36.3, 1139.0], [36.4, 1139.0], [36.5, 1139.0], [36.6, 1139.0], [36.7, 1140.0], [36.8, 1140.0], [36.9, 1140.0], [37.0, 1140.0], [37.1, 1140.0], [37.2, 1140.0], [37.3, 1140.0], [37.4, 1140.0], [37.5, 1140.0], [37.6, 1140.0], [37.7, 1140.0], [37.8, 1141.0], [37.9, 1141.0], [38.0, 1141.0], [38.1, 1141.0], [38.2, 1141.0], [38.3, 1145.0], [38.4, 1145.0], [38.5, 1145.0], [38.6, 1145.0], [38.7, 1145.0], [38.8, 1148.0], [38.9, 1148.0], [39.0, 1148.0], [39.1, 1148.0], [39.2, 1148.0], [39.3, 1148.0], [39.4, 1153.0], [39.5, 1153.0], [39.6, 1153.0], [39.7, 1153.0], [39.8, 1153.0], [39.9, 1153.0], [40.0, 1153.0], [40.1, 1153.0], [40.2, 1153.0], [40.3, 1153.0], [40.4, 1153.0], [40.5, 1157.0], [40.6, 1157.0], [40.7, 1157.0], [40.8, 1157.0], [40.9, 1157.0], [41.0, 1158.0], [41.1, 1158.0], [41.2, 1158.0], [41.3, 1158.0], [41.4, 1158.0], [41.5, 1158.0], [41.6, 1162.0], [41.7, 1162.0], [41.8, 1162.0], [41.9, 1162.0], [42.0, 1162.0], [42.1, 1165.0], [42.2, 1165.0], [42.3, 1165.0], [42.4, 1165.0], [42.5, 1165.0], [42.6, 1165.0], [42.7, 1170.0], [42.8, 1170.0], [42.9, 1170.0], [43.0, 1170.0], [43.1, 1170.0], [43.2, 1171.0], [43.3, 1171.0], [43.4, 1171.0], [43.5, 1171.0], [43.6, 1171.0], [43.7, 1171.0], [43.8, 1171.0], [43.9, 1171.0], [44.0, 1171.0], [44.1, 1171.0], [44.2, 1171.0], [44.3, 1172.0], [44.4, 1172.0], [44.5, 1172.0], [44.6, 1172.0], [44.7, 1172.0], [44.8, 1172.0], [44.9, 1172.0], [45.0, 1172.0], [45.1, 1172.0], [45.2, 1172.0], [45.3, 1172.0], [45.4, 1175.0], [45.5, 1175.0], [45.6, 1175.0], [45.7, 1175.0], [45.8, 1175.0], [45.9, 1175.0], [46.0, 1175.0], [46.1, 1175.0], [46.2, 1175.0], [46.3, 1175.0], [46.4, 1175.0], [46.5, 1189.0], [46.6, 1189.0], [46.7, 1189.0], [46.8, 1189.0], [46.9, 1189.0], [47.0, 1199.0], [47.1, 1199.0], [47.2, 1199.0], [47.3, 1199.0], [47.4, 1199.0], [47.5, 1199.0], [47.6, 1200.0], [47.7, 1200.0], [47.8, 1200.0], [47.9, 1200.0], [48.0, 1200.0], [48.1, 1205.0], [48.2, 1205.0], [48.3, 1205.0], [48.4, 1205.0], [48.5, 1205.0], [48.6, 1205.0], [48.7, 1208.0], [48.8, 1208.0], [48.9, 1208.0], [49.0, 1208.0], [49.1, 1208.0], [49.2, 1209.0], [49.3, 1209.0], [49.4, 1209.0], [49.5, 1209.0], [49.6, 1209.0], [49.7, 1209.0], [49.8, 1211.0], [49.9, 1211.0], [50.0, 1211.0], [50.1, 1211.0], [50.2, 1211.0], [50.3, 1214.0], [50.4, 1214.0], [50.5, 1214.0], [50.6, 1214.0], [50.7, 1214.0], [50.8, 1214.0], [50.9, 1218.0], [51.0, 1218.0], [51.1, 1218.0], [51.2, 1218.0], [51.3, 1218.0], [51.4, 1218.0], [51.5, 1218.0], [51.6, 1218.0], [51.7, 1218.0], [51.8, 1218.0], [51.9, 1218.0], [52.0, 1219.0], [52.1, 1219.0], [52.2, 1219.0], [52.3, 1219.0], [52.4, 1219.0], [52.5, 1220.0], [52.6, 1220.0], [52.7, 1220.0], [52.8, 1220.0], [52.9, 1220.0], [53.0, 1220.0], [53.1, 1220.0], [53.2, 1220.0], [53.3, 1220.0], [53.4, 1220.0], [53.5, 1220.0], [53.6, 1221.0], [53.7, 1221.0], [53.8, 1221.0], [53.9, 1221.0], [54.0, 1221.0], [54.1, 1228.0], [54.2, 1228.0], [54.3, 1228.0], [54.4, 1228.0], [54.5, 1228.0], [54.6, 1228.0], [54.7, 1228.0], [54.8, 1228.0], [54.9, 1228.0], [55.0, 1228.0], [55.1, 1228.0], [55.2, 1230.0], [55.3, 1230.0], [55.4, 1230.0], [55.5, 1230.0], [55.6, 1230.0], [55.7, 1230.0], [55.8, 1230.0], [55.9, 1230.0], [56.0, 1230.0], [56.1, 1230.0], [56.2, 1230.0], [56.3, 1230.0], [56.4, 1230.0], [56.5, 1230.0], [56.6, 1230.0], [56.7, 1230.0], [56.8, 1230.0], [56.9, 1231.0], [57.0, 1231.0], [57.1, 1231.0], [57.2, 1231.0], [57.3, 1231.0], [57.4, 1234.0], [57.5, 1234.0], [57.6, 1234.0], [57.7, 1234.0], [57.8, 1234.0], [57.9, 1234.0], [58.0, 1235.0], [58.1, 1235.0], [58.2, 1235.0], [58.3, 1235.0], [58.4, 1235.0], [58.5, 1238.0], [58.6, 1238.0], [58.7, 1238.0], [58.8, 1238.0], [58.9, 1238.0], [59.0, 1238.0], [59.1, 1239.0], [59.2, 1239.0], [59.3, 1239.0], [59.4, 1239.0], [59.5, 1239.0], [59.6, 1244.0], [59.7, 1244.0], [59.8, 1244.0], [59.9, 1244.0], [60.0, 1244.0], [60.1, 1244.0], [60.2, 1246.0], [60.3, 1246.0], [60.4, 1246.0], [60.5, 1246.0], [60.6, 1246.0], [60.7, 1255.0], [60.8, 1255.0], [60.9, 1255.0], [61.0, 1255.0], [61.1, 1255.0], [61.2, 1255.0], [61.3, 1255.0], [61.4, 1255.0], [61.5, 1255.0], [61.6, 1255.0], [61.7, 1255.0], [61.8, 1257.0], [61.9, 1257.0], [62.0, 1257.0], [62.1, 1257.0], [62.2, 1257.0], [62.3, 1260.0], [62.4, 1260.0], [62.5, 1260.0], [62.6, 1260.0], [62.7, 1260.0], [62.8, 1260.0], [62.9, 1262.0], [63.0, 1262.0], [63.1, 1262.0], [63.2, 1262.0], [63.3, 1262.0], [63.4, 1262.0], [63.5, 1262.0], [63.6, 1262.0], [63.7, 1262.0], [63.8, 1262.0], [63.9, 1262.0], [64.0, 1266.0], [64.1, 1266.0], [64.2, 1266.0], [64.3, 1266.0], [64.4, 1266.0], [64.5, 1282.0], [64.6, 1282.0], [64.7, 1282.0], [64.8, 1282.0], [64.9, 1282.0], [65.0, 1282.0], [65.1, 1285.0], [65.2, 1285.0], [65.3, 1285.0], [65.4, 1285.0], [65.5, 1285.0], [65.6, 1287.0], [65.7, 1287.0], [65.8, 1287.0], [65.9, 1287.0], [66.0, 1287.0], [66.1, 1287.0], [66.2, 1288.0], [66.3, 1288.0], [66.4, 1288.0], [66.5, 1288.0], [66.6, 1288.0], [66.7, 1289.0], [66.8, 1289.0], [66.9, 1289.0], [67.0, 1289.0], [67.1, 1289.0], [67.2, 1289.0], [67.3, 1290.0], [67.4, 1290.0], [67.5, 1290.0], [67.6, 1290.0], [67.7, 1290.0], [67.8, 1290.0], [67.9, 1290.0], [68.0, 1290.0], [68.1, 1290.0], [68.2, 1290.0], [68.3, 1290.0], [68.4, 1295.0], [68.5, 1295.0], [68.6, 1295.0], [68.7, 1295.0], [68.8, 1295.0], [68.9, 1298.0], [69.0, 1298.0], [69.1, 1298.0], [69.2, 1298.0], [69.3, 1298.0], [69.4, 1313.0], [69.5, 1313.0], [69.6, 1313.0], [69.7, 1313.0], [69.8, 1313.0], [69.9, 1313.0], [70.0, 1313.0], [70.1, 1313.0], [70.2, 1313.0], [70.3, 1313.0], [70.4, 1313.0], [70.5, 1325.0], [70.6, 1325.0], [70.7, 1325.0], [70.8, 1325.0], [70.9, 1325.0], [71.0, 1325.0], [71.1, 1333.0], [71.2, 1333.0], [71.3, 1333.0], [71.4, 1333.0], [71.5, 1333.0], [71.6, 1336.0], [71.7, 1336.0], [71.8, 1336.0], [71.9, 1336.0], [72.0, 1336.0], [72.1, 1336.0], [72.2, 1353.0], [72.3, 1353.0], [72.4, 1353.0], [72.5, 1353.0], [72.6, 1353.0], [72.7, 1360.0], [72.8, 1360.0], [72.9, 1360.0], [73.0, 1360.0], [73.1, 1360.0], [73.2, 1360.0], [73.3, 1362.0], [73.4, 1362.0], [73.5, 1362.0], [73.6, 1362.0], [73.7, 1362.0], [73.8, 1364.0], [73.9, 1364.0], [74.0, 1364.0], [74.1, 1364.0], [74.2, 1364.0], [74.3, 1364.0], [74.4, 1369.0], [74.5, 1369.0], [74.6, 1369.0], [74.7, 1369.0], [74.8, 1369.0], [74.9, 1385.0], [75.0, 1385.0], [75.1, 1385.0], [75.2, 1385.0], [75.3, 1385.0], [75.4, 1385.0], [75.5, 1385.0], [75.6, 1385.0], [75.7, 1385.0], [75.8, 1385.0], [75.9, 1385.0], [76.0, 1386.0], [76.1, 1386.0], [76.2, 1386.0], [76.3, 1386.0], [76.4, 1386.0], [76.5, 1386.0], [76.6, 1405.0], [76.7, 1405.0], [76.8, 1405.0], [76.9, 1405.0], [77.0, 1405.0], [77.1, 1405.0], [77.2, 1405.0], [77.3, 1405.0], [77.4, 1405.0], [77.5, 1405.0], [77.6, 1417.0], [77.7, 1417.0], [77.8, 1417.0], [77.9, 1417.0], [78.0, 1417.0], [78.1, 1417.0], [78.2, 1420.0], [78.3, 1420.0], [78.4, 1420.0], [78.5, 1420.0], [78.6, 1420.0], [78.7, 1425.0], [78.8, 1425.0], [78.9, 1425.0], [79.0, 1425.0], [79.1, 1425.0], [79.2, 1425.0], [79.3, 1432.0], [79.4, 1432.0], [79.5, 1432.0], [79.6, 1432.0], [79.7, 1432.0], [79.8, 1433.0], [79.9, 1433.0], [80.0, 1433.0], [80.1, 1433.0], [80.2, 1433.0], [80.3, 1433.0], [80.4, 1442.0], [80.5, 1442.0], [80.6, 1442.0], [80.7, 1442.0], [80.8, 1442.0], [80.9, 1442.0], [81.0, 1442.0], [81.1, 1442.0], [81.2, 1442.0], [81.3, 1442.0], [81.4, 1442.0], [81.5, 1449.0], [81.6, 1449.0], [81.7, 1449.0], [81.8, 1449.0], [81.9, 1449.0], [82.0, 1455.0], [82.1, 1455.0], [82.2, 1455.0], [82.3, 1455.0], [82.4, 1455.0], [82.5, 1455.0], [82.6, 1459.0], [82.7, 1459.0], [82.8, 1459.0], [82.9, 1459.0], [83.0, 1459.0], [83.1, 1462.0], [83.2, 1462.0], [83.3, 1462.0], [83.4, 1462.0], [83.5, 1462.0], [83.6, 1462.0], [83.7, 1468.0], [83.8, 1468.0], [83.9, 1468.0], [84.0, 1468.0], [84.1, 1468.0], [84.2, 1476.0], [84.3, 1476.0], [84.4, 1476.0], [84.5, 1476.0], [84.6, 1476.0], [84.7, 1484.0], [84.8, 1484.0], [84.9, 1484.0], [85.0, 1484.0], [85.1, 1484.0], [85.2, 1484.0], [85.3, 1490.0], [85.4, 1490.0], [85.5, 1490.0], [85.6, 1490.0], [85.7, 1490.0], [85.8, 1501.0], [85.9, 1501.0], [86.0, 1501.0], [86.1, 1501.0], [86.2, 1501.0], [86.3, 1501.0], [86.4, 1513.0], [86.5, 1513.0], [86.6, 1513.0], [86.7, 1513.0], [86.8, 1513.0], [86.9, 1530.0], [87.0, 1530.0], [87.1, 1530.0], [87.2, 1530.0], [87.3, 1530.0], [87.4, 1530.0], [87.5, 1564.0], [87.6, 1564.0], [87.7, 1564.0], [87.8, 1564.0], [87.9, 1564.0], [88.0, 1601.0], [88.1, 1601.0], [88.2, 1601.0], [88.3, 1601.0], [88.4, 1601.0], [88.5, 1601.0], [88.6, 1602.0], [88.7, 1602.0], [88.8, 1602.0], [88.9, 1602.0], [89.0, 1602.0], [89.1, 1610.0], [89.2, 1610.0], [89.3, 1610.0], [89.4, 1610.0], [89.5, 1610.0], [89.6, 1610.0], [89.7, 1614.0], [89.8, 1614.0], [89.9, 1614.0], [90.0, 1614.0], [90.1, 1614.0], [90.2, 1617.0], [90.3, 1617.0], [90.4, 1617.0], [90.5, 1617.0], [90.6, 1617.0], [90.7, 1617.0], [90.8, 1646.0], [90.9, 1646.0], [91.0, 1646.0], [91.1, 1646.0], [91.2, 1646.0], [91.3, 1649.0], [91.4, 1649.0], [91.5, 1649.0], [91.6, 1649.0], [91.7, 1649.0], [91.8, 1649.0], [91.9, 1681.0], [92.0, 1681.0], [92.1, 1681.0], [92.2, 1681.0], [92.3, 1681.0], [92.4, 1705.0], [92.5, 1705.0], [92.6, 1705.0], [92.7, 1705.0], [92.8, 1705.0], [92.9, 1714.0], [93.0, 1714.0], [93.1, 1714.0], [93.2, 1714.0], [93.3, 1714.0], [93.4, 1714.0], [93.5, 1738.0], [93.6, 1738.0], [93.7, 1738.0], [93.8, 1738.0], [93.9, 1738.0], [94.0, 1750.0], [94.1, 1750.0], [94.2, 1750.0], [94.3, 1750.0], [94.4, 1750.0], [94.5, 1750.0], [94.6, 1760.0], [94.7, 1760.0], [94.8, 1760.0], [94.9, 1760.0], [95.0, 1760.0], [95.1, 1810.0], [95.2, 1810.0], [95.3, 1810.0], [95.4, 1810.0], [95.5, 1810.0], [95.6, 1810.0], [95.7, 1821.0], [95.8, 1821.0], [95.9, 1821.0], [96.0, 1821.0], [96.1, 1821.0], [96.2, 1825.0], [96.3, 1825.0], [96.4, 1825.0], [96.5, 1825.0], [96.6, 1825.0], [96.7, 1825.0], [96.8, 1923.0], [96.9, 1923.0], [97.0, 1923.0], [97.1, 1923.0], [97.2, 1923.0], [97.3, 1926.0], [97.4, 1926.0], [97.5, 1926.0], [97.6, 1926.0], [97.7, 1926.0], [97.8, 1926.0], [97.9, 1995.0], [98.0, 1995.0], [98.1, 1995.0], [98.2, 1995.0], [98.3, 1995.0], [98.4, 2792.0], [98.5, 2792.0], [98.6, 2792.0], [98.7, 2792.0], [98.8, 2792.0], [98.9, 2792.0], [99.0, 25453.0], [99.1, 25453.0], [99.2, 25453.0], [99.3, 25453.0], [99.4, 25453.0], [99.5, 27735.0], [99.6, 27735.0], [99.7, 27735.0], [99.8, 27735.0], [99.9, 27735.0], [100.0, 27735.0]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[0.0, 418.0], [0.1, 418.0], [0.2, 418.0], [0.3, 429.0], [0.4, 429.0], [0.5, 429.0], [0.6, 433.0], [0.7, 433.0], [0.8, 433.0], [0.9, 440.0], [1.0, 440.0], [1.1, 440.0], [1.2, 441.0], [1.3, 441.0], [1.4, 441.0], [1.5, 441.0], [1.6, 441.0], [1.7, 457.0], [1.8, 457.0], [1.9, 457.0], [2.0, 457.0], [2.1, 457.0], [2.2, 457.0], [2.3, 457.0], [2.4, 457.0], [2.5, 457.0], [2.6, 459.0], [2.7, 459.0], [2.8, 459.0], [2.9, 465.0], [3.0, 465.0], [3.1, 469.0], [3.2, 469.0], [3.3, 469.0], [3.4, 470.0], [3.5, 470.0], [3.6, 470.0], [3.7, 475.0], [3.8, 475.0], [3.9, 475.0], [4.0, 478.0], [4.1, 478.0], [4.2, 478.0], [4.3, 481.0], [4.4, 481.0], [4.5, 485.0], [4.6, 485.0], [4.7, 485.0], [4.8, 485.0], [4.9, 485.0], [5.0, 485.0], [5.1, 485.0], [5.2, 485.0], [5.3, 485.0], [5.4, 486.0], [5.5, 486.0], [5.6, 486.0], [5.7, 486.0], [5.8, 486.0], [5.9, 489.0], [6.0, 489.0], [6.1, 489.0], [6.2, 491.0], [6.3, 491.0], [6.4, 491.0], [6.5, 495.0], [6.6, 495.0], [6.7, 495.0], [6.8, 495.0], [6.9, 495.0], [7.0, 495.0], [7.1, 495.0], [7.2, 495.0], [7.3, 496.0], [7.4, 496.0], [7.5, 496.0], [7.6, 498.0], [7.7, 498.0], [7.8, 498.0], [7.9, 498.0], [8.0, 498.0], [8.1, 498.0], [8.2, 502.0], [8.3, 502.0], [8.4, 502.0], [8.5, 503.0], [8.6, 503.0], [8.7, 504.0], [8.8, 504.0], [8.9, 504.0], [9.0, 505.0], [9.1, 505.0], [9.2, 505.0], [9.3, 505.0], [9.4, 505.0], [9.5, 505.0], [9.6, 506.0], [9.7, 506.0], [9.8, 506.0], [9.9, 506.0], [10.0, 506.0], [10.1, 513.0], [10.2, 513.0], [10.3, 513.0], [10.4, 514.0], [10.5, 514.0], [10.6, 514.0], [10.7, 516.0], [10.8, 516.0], [10.9, 516.0], [11.0, 517.0], [11.1, 517.0], [11.2, 517.0], [11.3, 518.0], [11.4, 518.0], [11.5, 518.0], [11.6, 518.0], [11.7, 518.0], [11.8, 519.0], [11.9, 519.0], [12.0, 519.0], [12.1, 520.0], [12.2, 520.0], [12.3, 520.0], [12.4, 520.0], [12.5, 520.0], [12.6, 520.0], [12.7, 521.0], [12.8, 521.0], [12.9, 521.0], [13.0, 521.0], [13.1, 521.0], [13.2, 522.0], [13.3, 522.0], [13.4, 522.0], [13.5, 523.0], [13.6, 523.0], [13.7, 523.0], [13.8, 525.0], [13.9, 525.0], [14.0, 525.0], [14.1, 528.0], [14.2, 528.0], [14.3, 528.0], [14.4, 528.0], [14.5, 528.0], [14.6, 528.0], [14.7, 528.0], [14.8, 528.0], [14.9, 528.0], [15.0, 528.0], [15.1, 528.0], [15.2, 529.0], [15.3, 529.0], [15.4, 529.0], [15.5, 531.0], [15.6, 531.0], [15.7, 531.0], [15.8, 531.0], [15.9, 531.0], [16.0, 532.0], [16.1, 532.0], [16.2, 532.0], [16.3, 533.0], [16.4, 533.0], [16.5, 533.0], [16.6, 534.0], [16.7, 534.0], [16.8, 534.0], [16.9, 536.0], [17.0, 536.0], [17.1, 538.0], [17.2, 538.0], [17.3, 538.0], [17.4, 539.0], [17.5, 539.0], [17.6, 539.0], [17.7, 539.0], [17.8, 539.0], [17.9, 539.0], [18.0, 540.0], [18.1, 540.0], [18.2, 540.0], [18.3, 540.0], [18.4, 540.0], [18.5, 543.0], [18.6, 543.0], [18.7, 543.0], [18.8, 543.0], [18.9, 543.0], [19.0, 543.0], [19.1, 543.0], [19.2, 543.0], [19.3, 543.0], [19.4, 544.0], [19.5, 544.0], [19.6, 544.0], [19.7, 545.0], [19.8, 545.0], [19.9, 547.0], [20.0, 547.0], [20.1, 547.0], [20.2, 549.0], [20.3, 549.0], [20.4, 549.0], [20.5, 549.0], [20.6, 549.0], [20.7, 549.0], [20.8, 550.0], [20.9, 550.0], [21.0, 550.0], [21.1, 551.0], [21.2, 551.0], [21.3, 551.0], [21.4, 551.0], [21.5, 551.0], [21.6, 553.0], [21.7, 553.0], [21.8, 553.0], [21.9, 554.0], [22.0, 554.0], [22.1, 554.0], [22.2, 555.0], [22.3, 555.0], [22.4, 555.0], [22.5, 555.0], [22.6, 555.0], [22.7, 556.0], [22.8, 556.0], [22.9, 556.0], [23.0, 557.0], [23.1, 557.0], [23.2, 557.0], [23.3, 557.0], [23.4, 557.0], [23.5, 557.0], [23.6, 557.0], [23.7, 557.0], [23.8, 557.0], [23.9, 558.0], [24.0, 558.0], [24.1, 558.0], [24.2, 558.0], [24.3, 558.0], [24.4, 558.0], [24.5, 558.0], [24.6, 558.0], [24.7, 558.0], [24.8, 558.0], [24.9, 558.0], [25.0, 559.0], [25.1, 559.0], [25.2, 559.0], [25.3, 560.0], [25.4, 560.0], [25.5, 561.0], [25.6, 561.0], [25.7, 561.0], [25.8, 561.0], [25.9, 561.0], [26.0, 561.0], [26.1, 561.0], [26.2, 561.0], [26.3, 561.0], [26.4, 565.0], [26.5, 565.0], [26.6, 565.0], [26.7, 567.0], [26.8, 567.0], [26.9, 568.0], [27.0, 568.0], [27.1, 568.0], [27.2, 569.0], [27.3, 569.0], [27.4, 569.0], [27.5, 569.0], [27.6, 569.0], [27.7, 569.0], [27.8, 569.0], [27.9, 569.0], [28.0, 569.0], [28.1, 570.0], [28.2, 570.0], [28.3, 571.0], [28.4, 571.0], [28.5, 571.0], [28.6, 572.0], [28.7, 572.0], [28.8, 572.0], [28.9, 572.0], [29.0, 572.0], [29.1, 572.0], [29.2, 573.0], [29.3, 573.0], [29.4, 573.0], [29.5, 574.0], [29.6, 574.0], [29.7, 574.0], [29.8, 574.0], [29.9, 574.0], [30.0, 575.0], [30.1, 575.0], [30.2, 575.0], [30.3, 575.0], [30.4, 575.0], [30.5, 575.0], [30.6, 576.0], [30.7, 576.0], [30.8, 576.0], [30.9, 576.0], [31.0, 576.0], [31.1, 576.0], [31.2, 576.0], [31.3, 576.0], [31.4, 576.0], [31.5, 576.0], [31.6, 576.0], [31.7, 577.0], [31.8, 577.0], [31.9, 577.0], [32.0, 577.0], [32.1, 577.0], [32.2, 577.0], [32.3, 578.0], [32.4, 578.0], [32.5, 578.0], [32.6, 578.0], [32.7, 578.0], [32.8, 578.0], [32.9, 578.0], [33.0, 578.0], [33.1, 580.0], [33.2, 580.0], [33.3, 580.0], [33.4, 583.0], [33.5, 583.0], [33.6, 583.0], [33.7, 584.0], [33.8, 584.0], [33.9, 584.0], [34.0, 584.0], [34.1, 584.0], [34.2, 584.0], [34.3, 584.0], [34.4, 584.0], [34.5, 585.0], [34.6, 585.0], [34.7, 585.0], [34.8, 585.0], [34.9, 585.0], [35.0, 585.0], [35.1, 586.0], [35.2, 586.0], [35.3, 586.0], [35.4, 586.0], [35.5, 586.0], [35.6, 586.0], [35.7, 586.0], [35.8, 586.0], [35.9, 586.0], [36.0, 586.0], [36.1, 586.0], [36.2, 586.0], [36.3, 586.0], [36.4, 586.0], [36.5, 588.0], [36.6, 588.0], [36.7, 589.0], [36.8, 589.0], [36.9, 589.0], [37.0, 591.0], [37.1, 591.0], [37.2, 591.0], [37.3, 592.0], [37.4, 592.0], [37.5, 592.0], [37.6, 592.0], [37.7, 592.0], [37.8, 592.0], [37.9, 593.0], [38.0, 593.0], [38.1, 594.0], [38.2, 594.0], [38.3, 594.0], [38.4, 594.0], [38.5, 594.0], [38.6, 594.0], [38.7, 596.0], [38.8, 596.0], [38.9, 596.0], [39.0, 598.0], [39.1, 598.0], [39.2, 598.0], [39.3, 598.0], [39.4, 598.0], [39.5, 598.0], [39.6, 598.0], [39.7, 598.0], [39.8, 598.0], [39.9, 598.0], [40.0, 598.0], [40.1, 598.0], [40.2, 598.0], [40.3, 598.0], [40.4, 598.0], [40.5, 598.0], [40.6, 598.0], [40.7, 598.0], [40.8, 598.0], [40.9, 600.0], [41.0, 600.0], [41.1, 600.0], [41.2, 600.0], [41.3, 600.0], [41.4, 600.0], [41.5, 601.0], [41.6, 601.0], [41.7, 601.0], [41.8, 602.0], [41.9, 602.0], [42.0, 602.0], [42.1, 603.0], [42.2, 603.0], [42.3, 604.0], [42.4, 604.0], [42.5, 604.0], [42.6, 604.0], [42.7, 604.0], [42.8, 604.0], [42.9, 604.0], [43.0, 604.0], [43.1, 604.0], [43.2, 605.0], [43.3, 605.0], [43.4, 605.0], [43.5, 605.0], [43.6, 605.0], [43.7, 606.0], [43.8, 606.0], [43.9, 606.0], [44.0, 606.0], [44.1, 606.0], [44.2, 606.0], [44.3, 607.0], [44.4, 607.0], [44.5, 607.0], [44.6, 607.0], [44.7, 607.0], [44.8, 607.0], [44.9, 608.0], [45.0, 608.0], [45.1, 610.0], [45.2, 610.0], [45.3, 610.0], [45.4, 610.0], [45.5, 610.0], [45.6, 610.0], [45.7, 613.0], [45.8, 613.0], [45.9, 613.0], [46.0, 613.0], [46.1, 613.0], [46.2, 613.0], [46.3, 614.0], [46.4, 614.0], [46.5, 615.0], [46.6, 615.0], [46.7, 615.0], [46.8, 616.0], [46.9, 616.0], [47.0, 616.0], [47.1, 616.0], [47.2, 616.0], [47.3, 616.0], [47.4, 620.0], [47.5, 620.0], [47.6, 620.0], [47.7, 620.0], [47.8, 620.0], [47.9, 621.0], [48.0, 621.0], [48.1, 621.0], [48.2, 621.0], [48.3, 621.0], [48.4, 621.0], [48.5, 621.0], [48.6, 621.0], [48.7, 621.0], [48.8, 623.0], [48.9, 623.0], [49.0, 623.0], [49.1, 624.0], [49.2, 624.0], [49.3, 626.0], [49.4, 626.0], [49.5, 626.0], [49.6, 627.0], [49.7, 627.0], [49.8, 627.0], [49.9, 627.0], [50.0, 627.0], [50.1, 627.0], [50.2, 628.0], [50.3, 628.0], [50.4, 628.0], [50.5, 629.0], [50.6, 629.0], [50.7, 629.0], [50.8, 629.0], [50.9, 629.0], [51.0, 629.0], [51.1, 629.0], [51.2, 629.0], [51.3, 631.0], [51.4, 631.0], [51.5, 631.0], [51.6, 631.0], [51.7, 631.0], [51.8, 631.0], [51.9, 632.0], [52.0, 632.0], [52.1, 632.0], [52.2, 633.0], [52.3, 633.0], [52.4, 633.0], [52.5, 633.0], [52.6, 633.0], [52.7, 637.0], [52.8, 637.0], [52.9, 637.0], [53.0, 637.0], [53.1, 637.0], [53.2, 637.0], [53.3, 638.0], [53.4, 638.0], [53.5, 638.0], [53.6, 640.0], [53.7, 640.0], [53.8, 641.0], [53.9, 641.0], [54.0, 641.0], [54.1, 644.0], [54.2, 644.0], [54.3, 644.0], [54.4, 645.0], [54.5, 645.0], [54.6, 645.0], [54.7, 645.0], [54.8, 645.0], [54.9, 645.0], [55.0, 646.0], [55.1, 646.0], [55.2, 646.0], [55.3, 646.0], [55.4, 646.0], [55.5, 648.0], [55.6, 648.0], [55.7, 648.0], [55.8, 648.0], [55.9, 648.0], [56.0, 648.0], [56.1, 649.0], [56.2, 649.0], [56.3, 649.0], [56.4, 649.0], [56.5, 649.0], [56.6, 650.0], [56.7, 650.0], [56.8, 650.0], [56.9, 652.0], [57.0, 652.0], [57.1, 652.0], [57.2, 654.0], [57.3, 654.0], [57.4, 654.0], [57.5, 659.0], [57.6, 659.0], [57.7, 659.0], [57.8, 661.0], [57.9, 661.0], [58.0, 661.0], [58.1, 661.0], [58.2, 661.0], [58.3, 663.0], [58.4, 663.0], [58.5, 663.0], [58.6, 665.0], [58.7, 665.0], [58.8, 665.0], [58.9, 667.0], [59.0, 667.0], [59.1, 667.0], [59.2, 667.0], [59.3, 667.0], [59.4, 671.0], [59.5, 671.0], [59.6, 671.0], [59.7, 671.0], [59.8, 671.0], [59.9, 671.0], [60.0, 673.0], [60.1, 673.0], [60.2, 673.0], [60.3, 673.0], [60.4, 673.0], [60.5, 673.0], [60.6, 673.0], [60.7, 673.0], [60.8, 677.0], [60.9, 677.0], [61.0, 677.0], [61.1, 677.0], [61.2, 677.0], [61.3, 677.0], [61.4, 680.0], [61.5, 680.0], [61.6, 680.0], [61.7, 685.0], [61.8, 685.0], [61.9, 685.0], [62.0, 685.0], [62.1, 685.0], [62.2, 686.0], [62.3, 686.0], [62.4, 686.0], [62.5, 687.0], [62.6, 687.0], [62.7, 687.0], [62.8, 689.0], [62.9, 689.0], [63.0, 689.0], [63.1, 691.0], [63.2, 691.0], [63.3, 691.0], [63.4, 691.0], [63.5, 691.0], [63.6, 693.0], [63.7, 693.0], [63.8, 693.0], [63.9, 694.0], [64.0, 694.0], [64.1, 694.0], [64.2, 697.0], [64.3, 697.0], [64.4, 697.0], [64.5, 699.0], [64.6, 699.0], [64.7, 699.0], [64.8, 703.0], [64.9, 703.0], [65.0, 704.0], [65.1, 704.0], [65.2, 704.0], [65.3, 705.0], [65.4, 705.0], [65.5, 705.0], [65.6, 706.0], [65.7, 706.0], [65.8, 706.0], [65.9, 706.0], [66.0, 706.0], [66.1, 706.0], [66.2, 706.0], [66.3, 706.0], [66.4, 710.0], [66.5, 710.0], [66.6, 710.0], [66.7, 713.0], [66.8, 713.0], [66.9, 713.0], [67.0, 716.0], [67.1, 716.0], [67.2, 716.0], [67.3, 717.0], [67.4, 717.0], [67.5, 717.0], [67.6, 717.0], [67.7, 717.0], [67.8, 718.0], [67.9, 718.0], [68.0, 718.0], [68.1, 719.0], [68.2, 719.0], [68.3, 719.0], [68.4, 722.0], [68.5, 722.0], [68.6, 722.0], [68.7, 723.0], [68.8, 723.0], [68.9, 723.0], [69.0, 729.0], [69.1, 729.0], [69.2, 734.0], [69.3, 734.0], [69.4, 734.0], [69.5, 738.0], [69.6, 738.0], [69.7, 738.0], [69.8, 739.0], [69.9, 739.0], [70.0, 739.0], [70.1, 740.0], [70.2, 740.0], [70.3, 740.0], [70.4, 740.0], [70.5, 740.0], [70.6, 741.0], [70.7, 741.0], [70.8, 741.0], [70.9, 743.0], [71.0, 743.0], [71.1, 743.0], [71.2, 744.0], [71.3, 744.0], [71.4, 744.0], [71.5, 745.0], [71.6, 745.0], [71.7, 745.0], [71.8, 746.0], [71.9, 746.0], [72.0, 748.0], [72.1, 748.0], [72.2, 748.0], [72.3, 751.0], [72.4, 751.0], [72.5, 751.0], [72.6, 754.0], [72.7, 754.0], [72.8, 754.0], [72.9, 755.0], [73.0, 755.0], [73.1, 755.0], [73.2, 757.0], [73.3, 757.0], [73.4, 759.0], [73.5, 759.0], [73.6, 759.0], [73.7, 762.0], [73.8, 762.0], [73.9, 762.0], [74.0, 764.0], [74.1, 764.0], [74.2, 764.0], [74.3, 764.0], [74.4, 764.0], [74.5, 764.0], [74.6, 766.0], [74.7, 766.0], [74.8, 767.0], [74.9, 767.0], [75.0, 767.0], [75.1, 767.0], [75.2, 767.0], [75.3, 767.0], [75.4, 769.0], [75.5, 769.0], [75.6, 769.0], [75.7, 782.0], [75.8, 782.0], [75.9, 782.0], [76.0, 783.0], [76.1, 783.0], [76.2, 790.0], [76.3, 790.0], [76.4, 790.0], [76.5, 794.0], [76.6, 794.0], [76.7, 794.0], [76.8, 796.0], [76.9, 796.0], [77.0, 796.0], [77.1, 797.0], [77.2, 797.0], [77.3, 797.0], [77.4, 802.0], [77.5, 802.0], [77.6, 805.0], [77.7, 805.0], [77.8, 805.0], [77.9, 809.0], [78.0, 809.0], [78.1, 809.0], [78.2, 809.0], [78.3, 809.0], [78.4, 809.0], [78.5, 816.0], [78.6, 816.0], [78.7, 816.0], [78.8, 820.0], [78.9, 820.0], [79.0, 821.0], [79.1, 821.0], [79.2, 821.0], [79.3, 822.0], [79.4, 822.0], [79.5, 822.0], [79.6, 822.0], [79.7, 822.0], [79.8, 822.0], [79.9, 826.0], [80.0, 826.0], [80.1, 826.0], [80.2, 827.0], [80.3, 827.0], [80.4, 827.0], [80.5, 827.0], [80.6, 827.0], [80.7, 827.0], [80.8, 827.0], [80.9, 827.0], [81.0, 828.0], [81.1, 828.0], [81.2, 828.0], [81.3, 832.0], [81.4, 832.0], [81.5, 832.0], [81.6, 833.0], [81.7, 833.0], [81.8, 834.0], [81.9, 834.0], [82.0, 834.0], [82.1, 835.0], [82.2, 835.0], [82.3, 835.0], [82.4, 837.0], [82.5, 837.0], [82.6, 837.0], [82.7, 837.0], [82.8, 837.0], [82.9, 837.0], [83.0, 838.0], [83.1, 838.0], [83.2, 840.0], [83.3, 840.0], [83.4, 840.0], [83.5, 840.0], [83.6, 840.0], [83.7, 840.0], [83.8, 840.0], [83.9, 840.0], [84.0, 840.0], [84.1, 841.0], [84.2, 841.0], [84.3, 841.0], [84.4, 845.0], [84.5, 845.0], [84.6, 845.0], [84.7, 845.0], [84.8, 845.0], [84.9, 847.0], [85.0, 847.0], [85.1, 847.0], [85.2, 857.0], [85.3, 857.0], [85.4, 857.0], [85.5, 863.0], [85.6, 863.0], [85.7, 863.0], [85.8, 873.0], [85.9, 873.0], [86.0, 875.0], [86.1, 875.0], [86.2, 875.0], [86.3, 891.0], [86.4, 891.0], [86.5, 891.0], [86.6, 895.0], [86.7, 895.0], [86.8, 895.0], [86.9, 897.0], [87.0, 897.0], [87.1, 897.0], [87.2, 903.0], [87.3, 903.0], [87.4, 907.0], [87.5, 907.0], [87.6, 907.0], [87.7, 913.0], [87.8, 913.0], [87.9, 913.0], [88.0, 921.0], [88.1, 921.0], [88.2, 921.0], [88.3, 927.0], [88.4, 927.0], [88.5, 927.0], [88.6, 928.0], [88.7, 928.0], [88.8, 930.0], [88.9, 930.0], [89.0, 930.0], [89.1, 948.0], [89.2, 948.0], [89.3, 948.0], [89.4, 950.0], [89.5, 950.0], [89.6, 950.0], [89.7, 951.0], [89.8, 951.0], [89.9, 951.0], [90.0, 952.0], [90.1, 952.0], [90.2, 958.0], [90.3, 958.0], [90.4, 958.0], [90.5, 959.0], [90.6, 959.0], [90.7, 959.0], [90.8, 967.0], [90.9, 967.0], [91.0, 967.0], [91.1, 975.0], [91.2, 975.0], [91.3, 975.0], [91.4, 986.0], [91.5, 986.0], [91.6, 1003.0], [91.7, 1003.0], [91.8, 1003.0], [91.9, 1019.0], [92.0, 1019.0], [92.1, 1019.0], [92.2, 1022.0], [92.3, 1022.0], [92.4, 1022.0], [92.5, 1024.0], [92.6, 1024.0], [92.7, 1024.0], [92.8, 1026.0], [92.9, 1026.0], [93.0, 1029.0], [93.1, 1029.0], [93.2, 1029.0], [93.3, 1035.0], [93.4, 1035.0], [93.5, 1035.0], [93.6, 1051.0], [93.7, 1051.0], [93.8, 1051.0], [93.9, 1051.0], [94.0, 1051.0], [94.1, 1051.0], [94.2, 1089.0], [94.3, 1089.0], [94.4, 1093.0], [94.5, 1093.0], [94.6, 1093.0], [94.7, 1103.0], [94.8, 1103.0], [94.9, 1103.0], [95.0, 1144.0], [95.1, 1144.0], [95.2, 1144.0], [95.3, 1165.0], [95.4, 1165.0], [95.5, 1165.0], [95.6, 1170.0], [95.7, 1170.0], [95.8, 1243.0], [95.9, 1243.0], [96.0, 1243.0], [96.1, 1269.0], [96.2, 1269.0], [96.3, 1269.0], [96.4, 1309.0], [96.5, 1309.0], [96.6, 1309.0], [96.7, 1316.0], [96.8, 1316.0], [96.9, 1316.0], [97.0, 1330.0], [97.1, 1330.0], [97.2, 1351.0], [97.3, 1351.0], [97.4, 1351.0], [97.5, 1357.0], [97.6, 1357.0], [97.7, 1357.0], [97.8, 1393.0], [97.9, 1393.0], [98.0, 1393.0], [98.1, 1427.0], [98.2, 1427.0], [98.3, 1427.0], [98.4, 1514.0], [98.5, 1514.0], [98.6, 1519.0], [98.7, 1519.0], [98.8, 1519.0], [98.9, 1600.0], [99.0, 1600.0], [99.1, 1600.0], [99.2, 1610.0], [99.3, 1610.0], [99.4, 1610.0], [99.5, 1982.0], [99.6, 1982.0], [99.7, 1982.0], [99.8, 2490.0], [99.9, 2490.0]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[0.0, 311.0], [0.1, 317.0], [0.2, 319.0], [0.3, 319.0], [0.4, 319.0], [0.5, 320.0], [0.6, 320.0], [0.7, 321.0], [0.8, 322.0], [0.9, 323.0], [1.0, 323.0], [1.1, 323.0], [1.2, 323.0], [1.3, 324.0], [1.4, 324.0], [1.5, 324.0], [1.6, 324.0], [1.7, 324.0], [1.8, 324.0], [1.9, 324.0], [2.0, 325.0], [2.1, 325.0], [2.2, 326.0], [2.3, 326.0], [2.4, 326.0], [2.5, 326.0], [2.6, 327.0], [2.7, 327.0], [2.8, 327.0], [2.9, 327.0], [3.0, 328.0], [3.1, 328.0], [3.2, 328.0], [3.3, 328.0], [3.4, 328.0], [3.5, 328.0], [3.6, 328.0], [3.7, 328.0], [3.8, 329.0], [3.9, 329.0], [4.0, 330.0], [4.1, 330.0], [4.2, 330.0], [4.3, 330.0], [4.4, 330.0], [4.5, 330.0], [4.6, 330.0], [4.7, 330.0], [4.8, 330.0], [4.9, 331.0], [5.0, 331.0], [5.1, 331.0], [5.2, 331.0], [5.3, 331.0], [5.4, 332.0], [5.5, 332.0], [5.6, 332.0], [5.7, 332.0], [5.8, 332.0], [5.9, 333.0], [6.0, 333.0], [6.1, 333.0], [6.2, 333.0], [6.3, 333.0], [6.4, 333.0], [6.5, 333.0], [6.6, 333.0], [6.7, 334.0], [6.8, 334.0], [6.9, 334.0], [7.0, 334.0], [7.1, 334.0], [7.2, 334.0], [7.3, 334.0], [7.4, 334.0], [7.5, 334.0], [7.6, 335.0], [7.7, 335.0], [7.8, 335.0], [7.9, 335.0], [8.0, 335.0], [8.1, 335.0], [8.2, 335.0], [8.3, 335.0], [8.4, 336.0], [8.5, 336.0], [8.6, 336.0], [8.7, 336.0], [8.8, 336.0], [8.9, 336.0], [9.0, 336.0], [9.1, 336.0], [9.2, 336.0], [9.3, 336.0], [9.4, 336.0], [9.5, 336.0], [9.6, 337.0], [9.7, 337.0], [9.8, 337.0], [9.9, 337.0], [10.0, 337.0], [10.1, 337.0], [10.2, 337.0], [10.3, 337.0], [10.4, 337.0], [10.5, 337.0], [10.6, 338.0], [10.7, 338.0], [10.8, 338.0], [10.9, 338.0], [11.0, 338.0], [11.1, 338.0], [11.2, 338.0], [11.3, 338.0], [11.4, 338.0], [11.5, 339.0], [11.6, 339.0], [11.7, 339.0], [11.8, 339.0], [11.9, 339.0], [12.0, 339.0], [12.1, 339.0], [12.2, 340.0], [12.3, 340.0], [12.4, 340.0], [12.5, 340.0], [12.6, 340.0], [12.7, 341.0], [12.8, 341.0], [12.9, 341.0], [13.0, 341.0], [13.1, 341.0], [13.2, 341.0], [13.3, 342.0], [13.4, 342.0], [13.5, 342.0], [13.6, 342.0], [13.7, 342.0], [13.8, 342.0], [13.9, 343.0], [14.0, 343.0], [14.1, 344.0], [14.2, 344.0], [14.3, 344.0], [14.4, 345.0], [14.5, 345.0], [14.6, 345.0], [14.7, 345.0], [14.8, 346.0], [14.9, 346.0], [15.0, 346.0], [15.1, 346.0], [15.2, 347.0], [15.3, 347.0], [15.4, 347.0], [15.5, 347.0], [15.6, 348.0], [15.7, 348.0], [15.8, 348.0], [15.9, 349.0], [16.0, 350.0], [16.1, 350.0], [16.2, 351.0], [16.3, 351.0], [16.4, 351.0], [16.5, 351.0], [16.6, 351.0], [16.7, 352.0], [16.8, 352.0], [16.9, 352.0], [17.0, 353.0], [17.1, 354.0], [17.2, 354.0], [17.3, 354.0], [17.4, 355.0], [17.5, 357.0], [17.6, 357.0], [17.7, 360.0], [17.8, 361.0], [17.9, 362.0], [18.0, 362.0], [18.1, 362.0], [18.2, 363.0], [18.3, 363.0], [18.4, 364.0], [18.5, 365.0], [18.6, 365.0], [18.7, 366.0], [18.8, 366.0], [18.9, 367.0], [19.0, 367.0], [19.1, 368.0], [19.2, 368.0], [19.3, 369.0], [19.4, 369.0], [19.5, 369.0], [19.6, 370.0], [19.7, 370.0], [19.8, 370.0], [19.9, 370.0], [20.0, 370.0], [20.1, 370.0], [20.2, 370.0], [20.3, 370.0], [20.4, 370.0], [20.5, 370.0], [20.6, 371.0], [20.7, 371.0], [20.8, 371.0], [20.9, 371.0], [21.0, 371.0], [21.1, 371.0], [21.2, 371.0], [21.3, 371.0], [21.4, 372.0], [21.5, 372.0], [21.6, 372.0], [21.7, 373.0], [21.8, 373.0], [21.9, 373.0], [22.0, 373.0], [22.1, 373.0], [22.2, 373.0], [22.3, 373.0], [22.4, 373.0], [22.5, 374.0], [22.6, 374.0], [22.7, 374.0], [22.8, 374.0], [22.9, 374.0], [23.0, 374.0], [23.1, 374.0], [23.2, 374.0], [23.3, 374.0], [23.4, 374.0], [23.5, 374.0], [23.6, 375.0], [23.7, 375.0], [23.8, 375.0], [23.9, 375.0], [24.0, 375.0], [24.1, 375.0], [24.2, 375.0], [24.3, 375.0], [24.4, 375.0], [24.5, 375.0], [24.6, 376.0], [24.7, 376.0], [24.8, 376.0], [24.9, 376.0], [25.0, 376.0], [25.1, 376.0], [25.2, 377.0], [25.3, 377.0], [25.4, 377.0], [25.5, 377.0], [25.6, 377.0], [25.7, 377.0], [25.8, 377.0], [25.9, 377.0], [26.0, 377.0], [26.1, 378.0], [26.2, 378.0], [26.3, 378.0], [26.4, 378.0], [26.5, 378.0], [26.6, 378.0], [26.7, 378.0], [26.8, 378.0], [26.9, 378.0], [27.0, 378.0], [27.1, 378.0], [27.2, 378.0], [27.3, 378.0], [27.4, 378.0], [27.5, 379.0], [27.6, 379.0], [27.7, 379.0], [27.8, 379.0], [27.9, 379.0], [28.0, 379.0], [28.1, 379.0], [28.2, 379.0], [28.3, 379.0], [28.4, 379.0], [28.5, 379.0], [28.6, 379.0], [28.7, 379.0], [28.8, 379.0], [28.9, 379.0], [29.0, 379.0], [29.1, 379.0], [29.2, 379.0], [29.3, 379.0], [29.4, 379.0], [29.5, 379.0], [29.6, 380.0], [29.7, 380.0], [29.8, 380.0], [29.9, 380.0], [30.0, 380.0], [30.1, 380.0], [30.2, 380.0], [30.3, 380.0], [30.4, 380.0], [30.5, 380.0], [30.6, 380.0], [30.7, 380.0], [30.8, 380.0], [30.9, 380.0], [31.0, 380.0], [31.1, 380.0], [31.2, 380.0], [31.3, 380.0], [31.4, 380.0], [31.5, 380.0], [31.6, 380.0], [31.7, 381.0], [31.8, 381.0], [31.9, 381.0], [32.0, 381.0], [32.1, 381.0], [32.2, 381.0], [32.3, 381.0], [32.4, 381.0], [32.5, 381.0], [32.6, 381.0], [32.7, 381.0], [32.8, 381.0], [32.9, 381.0], [33.0, 381.0], [33.1, 381.0], [33.2, 381.0], [33.3, 381.0], [33.4, 381.0], [33.5, 381.0], [33.6, 382.0], [33.7, 382.0], [33.8, 382.0], [33.9, 382.0], [34.0, 382.0], [34.1, 382.0], [34.2, 382.0], [34.3, 382.0], [34.4, 382.0], [34.5, 382.0], [34.6, 382.0], [34.7, 382.0], [34.8, 382.0], [34.9, 382.0], [35.0, 382.0], [35.1, 382.0], [35.2, 382.0], [35.3, 382.0], [35.4, 382.0], [35.5, 383.0], [35.6, 383.0], [35.7, 383.0], [35.8, 383.0], [35.9, 383.0], [36.0, 383.0], [36.1, 383.0], [36.2, 383.0], [36.3, 383.0], [36.4, 383.0], [36.5, 383.0], [36.6, 383.0], [36.7, 383.0], [36.8, 383.0], [36.9, 383.0], [37.0, 383.0], [37.1, 383.0], [37.2, 384.0], [37.3, 384.0], [37.4, 384.0], [37.5, 384.0], [37.6, 384.0], [37.7, 384.0], [37.8, 384.0], [37.9, 384.0], [38.0, 384.0], [38.1, 384.0], [38.2, 384.0], [38.3, 384.0], [38.4, 384.0], [38.5, 384.0], [38.6, 384.0], [38.7, 384.0], [38.8, 384.0], [38.9, 384.0], [39.0, 384.0], [39.1, 384.0], [39.2, 384.0], [39.3, 384.0], [39.4, 385.0], [39.5, 385.0], [39.6, 385.0], [39.7, 385.0], [39.8, 385.0], [39.9, 385.0], [40.0, 385.0], [40.1, 385.0], [40.2, 385.0], [40.3, 385.0], [40.4, 385.0], [40.5, 385.0], [40.6, 385.0], [40.7, 385.0], [40.8, 385.0], [40.9, 385.0], [41.0, 385.0], [41.1, 385.0], [41.2, 386.0], [41.3, 386.0], [41.4, 386.0], [41.5, 386.0], [41.6, 386.0], [41.7, 386.0], [41.8, 386.0], [41.9, 386.0], [42.0, 386.0], [42.1, 386.0], [42.2, 386.0], [42.3, 386.0], [42.4, 386.0], [42.5, 386.0], [42.6, 386.0], [42.7, 386.0], [42.8, 386.0], [42.9, 387.0], [43.0, 387.0], [43.1, 387.0], [43.2, 387.0], [43.3, 387.0], [43.4, 387.0], [43.5, 387.0], [43.6, 387.0], [43.7, 387.0], [43.8, 387.0], [43.9, 387.0], [44.0, 387.0], [44.1, 387.0], [44.2, 387.0], [44.3, 387.0], [44.4, 387.0], [44.5, 387.0], [44.6, 387.0], [44.7, 387.0], [44.8, 387.0], [44.9, 387.0], [45.0, 387.0], [45.1, 387.0], [45.2, 387.0], [45.3, 387.0], [45.4, 387.0], [45.5, 388.0], [45.6, 388.0], [45.7, 388.0], [45.8, 388.0], [45.9, 388.0], [46.0, 388.0], [46.1, 388.0], [46.2, 388.0], [46.3, 388.0], [46.4, 388.0], [46.5, 388.0], [46.6, 388.0], [46.7, 388.0], [46.8, 388.0], [46.9, 388.0], [47.0, 388.0], [47.1, 388.0], [47.2, 388.0], [47.3, 388.0], [47.4, 388.0], [47.5, 388.0], [47.6, 389.0], [47.7, 389.0], [47.8, 389.0], [47.9, 389.0], [48.0, 389.0], [48.1, 389.0], [48.2, 389.0], [48.3, 389.0], [48.4, 389.0], [48.5, 389.0], [48.6, 389.0], [48.7, 389.0], [48.8, 389.0], [48.9, 389.0], [49.0, 389.0], [49.1, 389.0], [49.2, 389.0], [49.3, 389.0], [49.4, 389.0], [49.5, 389.0], [49.6, 390.0], [49.7, 390.0], [49.8, 390.0], [49.9, 390.0], [50.0, 390.0], [50.1, 390.0], [50.2, 390.0], [50.3, 390.0], [50.4, 390.0], [50.5, 390.0], [50.6, 390.0], [50.7, 390.0], [50.8, 390.0], [50.9, 390.0], [51.0, 390.0], [51.1, 391.0], [51.2, 391.0], [51.3, 391.0], [51.4, 391.0], [51.5, 391.0], [51.6, 391.0], [51.7, 391.0], [51.8, 391.0], [51.9, 391.0], [52.0, 391.0], [52.1, 391.0], [52.2, 391.0], [52.3, 391.0], [52.4, 391.0], [52.5, 391.0], [52.6, 391.0], [52.7, 391.0], [52.8, 391.0], [52.9, 391.0], [53.0, 391.0], [53.1, 391.0], [53.2, 391.0], [53.3, 392.0], [53.4, 392.0], [53.5, 392.0], [53.6, 392.0], [53.7, 392.0], [53.8, 392.0], [53.9, 392.0], [54.0, 392.0], [54.1, 392.0], [54.2, 392.0], [54.3, 392.0], [54.4, 392.0], [54.5, 392.0], [54.6, 392.0], [54.7, 392.0], [54.8, 392.0], [54.9, 392.0], [55.0, 392.0], [55.1, 392.0], [55.2, 393.0], [55.3, 393.0], [55.4, 393.0], [55.5, 393.0], [55.6, 393.0], [55.7, 393.0], [55.8, 393.0], [55.9, 393.0], [56.0, 393.0], [56.1, 393.0], [56.2, 393.0], [56.3, 393.0], [56.4, 393.0], [56.5, 393.0], [56.6, 393.0], [56.7, 393.0], [56.8, 393.0], [56.9, 393.0], [57.0, 393.0], [57.1, 393.0], [57.2, 393.0], [57.3, 394.0], [57.4, 394.0], [57.5, 394.0], [57.6, 394.0], [57.7, 394.0], [57.8, 394.0], [57.9, 394.0], [58.0, 394.0], [58.1, 394.0], [58.2, 394.0], [58.3, 394.0], [58.4, 394.0], [58.5, 394.0], [58.6, 395.0], [58.7, 395.0], [58.8, 395.0], [58.9, 395.0], [59.0, 395.0], [59.1, 395.0], [59.2, 395.0], [59.3, 395.0], [59.4, 395.0], [59.5, 395.0], [59.6, 395.0], [59.7, 395.0], [59.8, 396.0], [59.9, 396.0], [60.0, 396.0], [60.1, 396.0], [60.2, 396.0], [60.3, 396.0], [60.4, 396.0], [60.5, 396.0], [60.6, 396.0], [60.7, 396.0], [60.8, 396.0], [60.9, 396.0], [61.0, 397.0], [61.1, 397.0], [61.2, 397.0], [61.3, 397.0], [61.4, 397.0], [61.5, 397.0], [61.6, 397.0], [61.7, 397.0], [61.8, 397.0], [61.9, 397.0], [62.0, 398.0], [62.1, 398.0], [62.2, 398.0], [62.3, 398.0], [62.4, 399.0], [62.5, 399.0], [62.6, 399.0], [62.7, 399.0], [62.8, 399.0], [62.9, 399.0], [63.0, 399.0], [63.1, 400.0], [63.2, 400.0], [63.3, 400.0], [63.4, 400.0], [63.5, 400.0], [63.6, 400.0], [63.7, 400.0], [63.8, 401.0], [63.9, 401.0], [64.0, 401.0], [64.1, 401.0], [64.2, 401.0], [64.3, 401.0], [64.4, 401.0], [64.5, 401.0], [64.6, 402.0], [64.7, 402.0], [64.8, 402.0], [64.9, 402.0], [65.0, 402.0], [65.1, 402.0], [65.2, 402.0], [65.3, 403.0], [65.4, 403.0], [65.5, 403.0], [65.6, 403.0], [65.7, 403.0], [65.8, 403.0], [65.9, 404.0], [66.0, 404.0], [66.1, 404.0], [66.2, 404.0], [66.3, 404.0], [66.4, 404.0], [66.5, 405.0], [66.6, 405.0], [66.7, 405.0], [66.8, 405.0], [66.9, 405.0], [67.0, 405.0], [67.1, 406.0], [67.2, 406.0], [67.3, 406.0], [67.4, 406.0], [67.5, 407.0], [67.6, 407.0], [67.7, 408.0], [67.8, 408.0], [67.9, 408.0], [68.0, 408.0], [68.1, 409.0], [68.2, 409.0], [68.3, 409.0], [68.4, 410.0], [68.5, 410.0], [68.6, 411.0], [68.7, 412.0], [68.8, 412.0], [68.9, 412.0], [69.0, 413.0], [69.1, 414.0], [69.2, 414.0], [69.3, 414.0], [69.4, 414.0], [69.5, 415.0], [69.6, 415.0], [69.7, 415.0], [69.8, 416.0], [69.9, 418.0], [70.0, 418.0], [70.1, 418.0], [70.2, 419.0], [70.3, 419.0], [70.4, 419.0], [70.5, 420.0], [70.6, 420.0], [70.7, 420.0], [70.8, 420.0], [70.9, 421.0], [71.0, 421.0], [71.1, 421.0], [71.2, 421.0], [71.3, 421.0], [71.4, 421.0], [71.5, 421.0], [71.6, 421.0], [71.7, 422.0], [71.8, 422.0], [71.9, 422.0], [72.0, 422.0], [72.1, 423.0], [72.2, 423.0], [72.3, 423.0], [72.4, 424.0], [72.5, 424.0], [72.6, 424.0], [72.7, 424.0], [72.8, 424.0], [72.9, 424.0], [73.0, 424.0], [73.1, 424.0], [73.2, 424.0], [73.3, 424.0], [73.4, 425.0], [73.5, 425.0], [73.6, 425.0], [73.7, 425.0], [73.8, 425.0], [73.9, 426.0], [74.0, 426.0], [74.1, 426.0], [74.2, 426.0], [74.3, 426.0], [74.4, 426.0], [74.5, 426.0], [74.6, 426.0], [74.7, 426.0], [74.8, 426.0], [74.9, 426.0], [75.0, 427.0], [75.1, 427.0], [75.2, 427.0], [75.3, 427.0], [75.4, 427.0], [75.5, 427.0], [75.6, 427.0], [75.7, 427.0], [75.8, 427.0], [75.9, 427.0], [76.0, 428.0], [76.1, 428.0], [76.2, 428.0], [76.3, 428.0], [76.4, 428.0], [76.5, 428.0], [76.6, 428.0], [76.7, 428.0], [76.8, 428.0], [76.9, 428.0], [77.0, 429.0], [77.1, 429.0], [77.2, 429.0], [77.3, 429.0], [77.4, 429.0], [77.5, 429.0], [77.6, 429.0], [77.7, 429.0], [77.8, 430.0], [77.9, 430.0], [78.0, 430.0], [78.1, 430.0], [78.2, 430.0], [78.3, 430.0], [78.4, 430.0], [78.5, 430.0], [78.6, 431.0], [78.7, 431.0], [78.8, 431.0], [78.9, 431.0], [79.0, 431.0], [79.1, 431.0], [79.2, 431.0], [79.3, 431.0], [79.4, 431.0], [79.5, 431.0], [79.6, 431.0], [79.7, 431.0], [79.8, 431.0], [79.9, 431.0], [80.0, 431.0], [80.1, 431.0], [80.2, 431.0], [80.3, 432.0], [80.4, 432.0], [80.5, 432.0], [80.6, 432.0], [80.7, 432.0], [80.8, 432.0], [80.9, 432.0], [81.0, 432.0], [81.1, 432.0], [81.2, 433.0], [81.3, 433.0], [81.4, 433.0], [81.5, 433.0], [81.6, 433.0], [81.7, 433.0], [81.8, 433.0], [81.9, 433.0], [82.0, 433.0], [82.1, 433.0], [82.2, 433.0], [82.3, 433.0], [82.4, 433.0], [82.5, 434.0], [82.6, 434.0], [82.7, 434.0], [82.8, 434.0], [82.9, 434.0], [83.0, 434.0], [83.1, 434.0], [83.2, 434.0], [83.3, 434.0], [83.4, 435.0], [83.5, 435.0], [83.6, 435.0], [83.7, 435.0], [83.8, 435.0], [83.9, 435.0], [84.0, 435.0], [84.1, 435.0], [84.2, 435.0], [84.3, 435.0], [84.4, 435.0], [84.5, 435.0], [84.6, 435.0], [84.7, 435.0], [84.8, 435.0], [84.9, 435.0], [85.0, 435.0], [85.1, 435.0], [85.2, 435.0], [85.3, 435.0], [85.4, 436.0], [85.5, 436.0], [85.6, 436.0], [85.7, 436.0], [85.8, 436.0], [85.9, 436.0], [86.0, 436.0], [86.1, 436.0], [86.2, 436.0], [86.3, 436.0], [86.4, 436.0], [86.5, 436.0], [86.6, 436.0], [86.7, 437.0], [86.8, 437.0], [86.9, 437.0], [87.0, 437.0], [87.1, 437.0], [87.2, 437.0], [87.3, 437.0], [87.4, 437.0], [87.5, 438.0], [87.6, 438.0], [87.7, 438.0], [87.8, 438.0], [87.9, 438.0], [88.0, 439.0], [88.1, 439.0], [88.2, 439.0], [88.3, 439.0], [88.4, 440.0], [88.5, 440.0], [88.6, 440.0], [88.7, 440.0], [88.8, 440.0], [88.9, 440.0], [89.0, 440.0], [89.1, 441.0], [89.2, 441.0], [89.3, 441.0], [89.4, 441.0], [89.5, 441.0], [89.6, 441.0], [89.7, 441.0], [89.8, 441.0], [89.9, 441.0], [90.0, 442.0], [90.1, 442.0], [90.2, 442.0], [90.3, 442.0], [90.4, 443.0], [90.5, 443.0], [90.6, 443.0], [90.7, 443.0], [90.8, 443.0], [90.9, 443.0], [91.0, 443.0], [91.1, 443.0], [91.2, 443.0], [91.3, 443.0], [91.4, 443.0], [91.5, 444.0], [91.6, 444.0], [91.7, 444.0], [91.8, 444.0], [91.9, 444.0], [92.0, 444.0], [92.1, 444.0], [92.2, 445.0], [92.3, 445.0], [92.4, 446.0], [92.5, 446.0], [92.6, 446.0], [92.7, 446.0], [92.8, 446.0], [92.9, 447.0], [93.0, 447.0], [93.1, 447.0], [93.2, 448.0], [93.3, 448.0], [93.4, 449.0], [93.5, 450.0], [93.6, 450.0], [93.7, 450.0], [93.8, 450.0], [93.9, 451.0], [94.0, 451.0], [94.1, 452.0], [94.2, 452.0], [94.3, 452.0], [94.4, 452.0], [94.5, 453.0], [94.6, 453.0], [94.7, 453.0], [94.8, 454.0], [94.9, 454.0], [95.0, 455.0], [95.1, 455.0], [95.2, 455.0], [95.3, 456.0], [95.4, 457.0], [95.5, 457.0], [95.6, 458.0], [95.7, 459.0], [95.8, 459.0], [95.9, 460.0], [96.0, 461.0], [96.1, 462.0], [96.2, 462.0], [96.3, 463.0], [96.4, 463.0], [96.5, 464.0], [96.6, 467.0], [96.7, 467.0], [96.8, 468.0], [96.9, 469.0], [97.0, 469.0], [97.1, 469.0], [97.2, 472.0], [97.3, 472.0], [97.4, 474.0], [97.5, 475.0], [97.6, 478.0], [97.7, 480.0], [97.8, 481.0], [97.9, 481.0], [98.0, 482.0], [98.1, 483.0], [98.2, 493.0], [98.3, 494.0], [98.4, 495.0], [98.5, 497.0], [98.6, 498.0], [98.7, 499.0], [98.8, 501.0], [98.9, 508.0], [99.0, 515.0], [99.1, 515.0], [99.2, 539.0], [99.3, 548.0], [99.4, 548.0], [99.5, 550.0], [99.6, 555.0], [99.7, 656.0], [99.8, 1172.0], [99.9, 1956.0]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[0.0, 1281.0], [0.1, 1281.0], [0.2, 1281.0], [0.3, 1281.0], [0.4, 1281.0], [0.5, 1281.0], [0.6, 1281.0], [0.7, 1281.0], [0.8, 1281.0], [0.9, 1281.0], [1.0, 1291.0], [1.1, 1291.0], [1.2, 1291.0], [1.3, 1291.0], [1.4, 1291.0], [1.5, 1291.0], [1.6, 1291.0], [1.7, 1291.0], [1.8, 1291.0], [1.9, 1326.0], [2.0, 1326.0], [2.1, 1326.0], [2.2, 1326.0], [2.3, 1326.0], [2.4, 1326.0], [2.5, 1326.0], [2.6, 1326.0], [2.7, 1326.0], [2.8, 1328.0], [2.9, 1328.0], [3.0, 1328.0], [3.1, 1328.0], [3.2, 1328.0], [3.3, 1328.0], [3.4, 1328.0], [3.5, 1328.0], [3.6, 1328.0], [3.7, 1330.0], [3.8, 1330.0], [3.9, 1330.0], [4.0, 1330.0], [4.1, 1330.0], [4.2, 1330.0], [4.3, 1330.0], [4.4, 1330.0], [4.5, 1330.0], [4.6, 1365.0], [4.7, 1365.0], [4.8, 1365.0], [4.9, 1365.0], [5.0, 1365.0], [5.1, 1365.0], [5.2, 1365.0], [5.3, 1365.0], [5.4, 1365.0], [5.5, 1384.0], [5.6, 1384.0], [5.7, 1384.0], [5.8, 1384.0], [5.9, 1384.0], [6.0, 1384.0], [6.1, 1384.0], [6.2, 1384.0], [6.3, 1384.0], [6.4, 1388.0], [6.5, 1388.0], [6.6, 1388.0], [6.7, 1388.0], [6.8, 1388.0], [6.9, 1388.0], [7.0, 1388.0], [7.1, 1388.0], [7.2, 1388.0], [7.3, 1392.0], [7.4, 1392.0], [7.5, 1392.0], [7.6, 1392.0], [7.7, 1392.0], [7.8, 1392.0], [7.9, 1392.0], [8.0, 1392.0], [8.1, 1392.0], [8.2, 1415.0], [8.3, 1415.0], [8.4, 1415.0], [8.5, 1415.0], [8.6, 1415.0], [8.7, 1415.0], [8.8, 1415.0], [8.9, 1415.0], [9.0, 1415.0], [9.1, 1445.0], [9.2, 1445.0], [9.3, 1445.0], [9.4, 1445.0], [9.5, 1445.0], [9.6, 1445.0], [9.7, 1445.0], [9.8, 1445.0], [9.9, 1445.0], [10.0, 1453.0], [10.1, 1453.0], [10.2, 1453.0], [10.3, 1453.0], [10.4, 1453.0], [10.5, 1453.0], [10.6, 1453.0], [10.7, 1453.0], [10.8, 1453.0], [10.9, 1457.0], [11.0, 1457.0], [11.1, 1457.0], [11.2, 1457.0], [11.3, 1457.0], [11.4, 1457.0], [11.5, 1457.0], [11.6, 1457.0], [11.7, 1457.0], [11.8, 1498.0], [11.9, 1498.0], [12.0, 1498.0], [12.1, 1498.0], [12.2, 1498.0], [12.3, 1498.0], [12.4, 1498.0], [12.5, 1498.0], [12.6, 1498.0], [12.7, 1515.0], [12.8, 1515.0], [12.9, 1515.0], [13.0, 1515.0], [13.1, 1515.0], [13.2, 1515.0], [13.3, 1515.0], [13.4, 1515.0], [13.5, 1515.0], [13.6, 1519.0], [13.7, 1519.0], [13.8, 1519.0], [13.9, 1519.0], [14.0, 1519.0], [14.1, 1519.0], [14.2, 1519.0], [14.3, 1519.0], [14.4, 1519.0], [14.5, 1528.0], [14.6, 1528.0], [14.7, 1528.0], [14.8, 1528.0], [14.9, 1528.0], [15.0, 1528.0], [15.1, 1528.0], [15.2, 1528.0], [15.3, 1528.0], [15.4, 1542.0], [15.5, 1542.0], [15.6, 1542.0], [15.7, 1542.0], [15.8, 1542.0], [15.9, 1542.0], [16.0, 1542.0], [16.1, 1542.0], [16.2, 1542.0], [16.3, 1573.0], [16.4, 1573.0], [16.5, 1573.0], [16.6, 1573.0], [16.7, 1573.0], [16.8, 1573.0], [16.9, 1573.0], [17.0, 1573.0], [17.1, 1573.0], [17.2, 1593.0], [17.3, 1593.0], [17.4, 1593.0], [17.5, 1593.0], [17.6, 1593.0], [17.7, 1593.0], [17.8, 1593.0], [17.9, 1593.0], [18.0, 1593.0], [18.1, 1595.0], [18.2, 1595.0], [18.3, 1595.0], [18.4, 1595.0], [18.5, 1595.0], [18.6, 1595.0], [18.7, 1595.0], [18.8, 1595.0], [18.9, 1595.0], [19.0, 1601.0], [19.1, 1601.0], [19.2, 1601.0], [19.3, 1601.0], [19.4, 1601.0], [19.5, 1601.0], [19.6, 1601.0], [19.7, 1601.0], [19.8, 1601.0], [19.9, 1605.0], [20.0, 1605.0], [20.1, 1605.0], [20.2, 1605.0], [20.3, 1605.0], [20.4, 1605.0], [20.5, 1605.0], [20.6, 1605.0], [20.7, 1605.0], [20.8, 1609.0], [20.9, 1609.0], [21.0, 1609.0], [21.1, 1609.0], [21.2, 1609.0], [21.3, 1609.0], [21.4, 1609.0], [21.5, 1609.0], [21.6, 1609.0], [21.7, 1616.0], [21.8, 1616.0], [21.9, 1616.0], [22.0, 1616.0], [22.1, 1616.0], [22.2, 1616.0], [22.3, 1616.0], [22.4, 1616.0], [22.5, 1616.0], [22.6, 1634.0], [22.7, 1634.0], [22.8, 1634.0], [22.9, 1634.0], [23.0, 1634.0], [23.1, 1634.0], [23.2, 1634.0], [23.3, 1634.0], [23.4, 1634.0], [23.5, 1655.0], [23.6, 1655.0], [23.7, 1655.0], [23.8, 1655.0], [23.9, 1655.0], [24.0, 1655.0], [24.1, 1655.0], [24.2, 1655.0], [24.3, 1655.0], [24.4, 1659.0], [24.5, 1659.0], [24.6, 1659.0], [24.7, 1659.0], [24.8, 1659.0], [24.9, 1659.0], [25.0, 1659.0], [25.1, 1659.0], [25.2, 1659.0], [25.3, 1664.0], [25.4, 1664.0], [25.5, 1664.0], [25.6, 1664.0], [25.7, 1664.0], [25.8, 1664.0], [25.9, 1664.0], [26.0, 1664.0], [26.1, 1664.0], [26.2, 1672.0], [26.3, 1672.0], [26.4, 1672.0], [26.5, 1672.0], [26.6, 1672.0], [26.7, 1672.0], [26.8, 1672.0], [26.9, 1672.0], [27.0, 1672.0], [27.1, 1686.0], [27.2, 1686.0], [27.3, 1686.0], [27.4, 1686.0], [27.5, 1686.0], [27.6, 1686.0], [27.7, 1686.0], [27.8, 1686.0], [27.9, 1686.0], [28.0, 1689.0], [28.1, 1689.0], [28.2, 1689.0], [28.3, 1689.0], [28.4, 1689.0], [28.5, 1689.0], [28.6, 1689.0], [28.7, 1689.0], [28.8, 1689.0], [28.9, 1691.0], [29.0, 1691.0], [29.1, 1691.0], [29.2, 1691.0], [29.3, 1691.0], [29.4, 1691.0], [29.5, 1691.0], [29.6, 1691.0], [29.7, 1691.0], [29.8, 1692.0], [29.9, 1692.0], [30.0, 1692.0], [30.1, 1692.0], [30.2, 1692.0], [30.3, 1692.0], [30.4, 1692.0], [30.5, 1692.0], [30.6, 1692.0], [30.7, 1701.0], [30.8, 1701.0], [30.9, 1701.0], [31.0, 1701.0], [31.1, 1701.0], [31.2, 1701.0], [31.3, 1701.0], [31.4, 1701.0], [31.5, 1701.0], [31.6, 1720.0], [31.7, 1720.0], [31.8, 1720.0], [31.9, 1720.0], [32.0, 1720.0], [32.1, 1720.0], [32.2, 1720.0], [32.3, 1720.0], [32.4, 1720.0], [32.5, 1721.0], [32.6, 1721.0], [32.7, 1721.0], [32.8, 1721.0], [32.9, 1721.0], [33.0, 1721.0], [33.1, 1721.0], [33.2, 1721.0], [33.3, 1721.0], [33.4, 1725.0], [33.5, 1725.0], [33.6, 1725.0], [33.7, 1725.0], [33.8, 1725.0], [33.9, 1725.0], [34.0, 1725.0], [34.1, 1725.0], [34.2, 1725.0], [34.3, 1727.0], [34.4, 1727.0], [34.5, 1727.0], [34.6, 1727.0], [34.7, 1727.0], [34.8, 1727.0], [34.9, 1727.0], [35.0, 1727.0], [35.1, 1727.0], [35.2, 1735.0], [35.3, 1735.0], [35.4, 1735.0], [35.5, 1735.0], [35.6, 1735.0], [35.7, 1735.0], [35.8, 1735.0], [35.9, 1735.0], [36.0, 1735.0], [36.1, 1736.0], [36.2, 1736.0], [36.3, 1736.0], [36.4, 1736.0], [36.5, 1736.0], [36.6, 1736.0], [36.7, 1736.0], [36.8, 1736.0], [36.9, 1736.0], [37.0, 1739.0], [37.1, 1739.0], [37.2, 1739.0], [37.3, 1739.0], [37.4, 1739.0], [37.5, 1739.0], [37.6, 1739.0], [37.7, 1739.0], [37.8, 1739.0], [37.9, 1741.0], [38.0, 1741.0], [38.1, 1741.0], [38.2, 1741.0], [38.3, 1741.0], [38.4, 1741.0], [38.5, 1741.0], [38.6, 1741.0], [38.7, 1741.0], [38.8, 1746.0], [38.9, 1746.0], [39.0, 1746.0], [39.1, 1746.0], [39.2, 1746.0], [39.3, 1746.0], [39.4, 1746.0], [39.5, 1746.0], [39.6, 1746.0], [39.7, 1760.0], [39.8, 1760.0], [39.9, 1760.0], [40.0, 1760.0], [40.1, 1760.0], [40.2, 1760.0], [40.3, 1760.0], [40.4, 1760.0], [40.5, 1760.0], [40.6, 1763.0], [40.7, 1763.0], [40.8, 1763.0], [40.9, 1763.0], [41.0, 1763.0], [41.1, 1763.0], [41.2, 1763.0], [41.3, 1763.0], [41.4, 1763.0], [41.5, 1763.0], [41.6, 1763.0], [41.7, 1763.0], [41.8, 1763.0], [41.9, 1763.0], [42.0, 1763.0], [42.1, 1763.0], [42.2, 1763.0], [42.3, 1763.0], [42.4, 1764.0], [42.5, 1764.0], [42.6, 1764.0], [42.7, 1764.0], [42.8, 1764.0], [42.9, 1764.0], [43.0, 1764.0], [43.1, 1764.0], [43.2, 1764.0], [43.3, 1764.0], [43.4, 1764.0], [43.5, 1764.0], [43.6, 1764.0], [43.7, 1764.0], [43.8, 1764.0], [43.9, 1764.0], [44.0, 1764.0], [44.1, 1764.0], [44.2, 1771.0], [44.3, 1771.0], [44.4, 1771.0], [44.5, 1771.0], [44.6, 1771.0], [44.7, 1771.0], [44.8, 1771.0], [44.9, 1771.0], [45.0, 1771.0], [45.1, 1775.0], [45.2, 1775.0], [45.3, 1775.0], [45.4, 1775.0], [45.5, 1775.0], [45.6, 1775.0], [45.7, 1775.0], [45.8, 1775.0], [45.9, 1775.0], [46.0, 1778.0], [46.1, 1778.0], [46.2, 1778.0], [46.3, 1778.0], [46.4, 1778.0], [46.5, 1778.0], [46.6, 1778.0], [46.7, 1778.0], [46.8, 1778.0], [46.9, 1778.0], [47.0, 1778.0], [47.1, 1778.0], [47.2, 1778.0], [47.3, 1778.0], [47.4, 1778.0], [47.5, 1778.0], [47.6, 1778.0], [47.7, 1778.0], [47.8, 1784.0], [47.9, 1784.0], [48.0, 1784.0], [48.1, 1784.0], [48.2, 1784.0], [48.3, 1784.0], [48.4, 1784.0], [48.5, 1784.0], [48.6, 1784.0], [48.7, 1801.0], [48.8, 1801.0], [48.9, 1801.0], [49.0, 1801.0], [49.1, 1801.0], [49.2, 1801.0], [49.3, 1801.0], [49.4, 1801.0], [49.5, 1801.0], [49.6, 1805.0], [49.7, 1805.0], [49.8, 1805.0], [49.9, 1805.0], [50.0, 1805.0], [50.1, 1805.0], [50.2, 1805.0], [50.3, 1805.0], [50.4, 1805.0], [50.5, 1806.0], [50.6, 1806.0], [50.7, 1806.0], [50.8, 1806.0], [50.9, 1806.0], [51.0, 1806.0], [51.1, 1806.0], [51.2, 1806.0], [51.3, 1806.0], [51.4, 1823.0], [51.5, 1823.0], [51.6, 1823.0], [51.7, 1823.0], [51.8, 1823.0], [51.9, 1823.0], [52.0, 1823.0], [52.1, 1823.0], [52.2, 1823.0], [52.3, 1826.0], [52.4, 1826.0], [52.5, 1826.0], [52.6, 1826.0], [52.7, 1826.0], [52.8, 1826.0], [52.9, 1826.0], [53.0, 1826.0], [53.1, 1826.0], [53.2, 1829.0], [53.3, 1829.0], [53.4, 1829.0], [53.5, 1829.0], [53.6, 1829.0], [53.7, 1829.0], [53.8, 1829.0], [53.9, 1829.0], [54.0, 1829.0], [54.1, 1833.0], [54.2, 1833.0], [54.3, 1833.0], [54.4, 1833.0], [54.5, 1833.0], [54.6, 1833.0], [54.7, 1833.0], [54.8, 1833.0], [54.9, 1833.0], [55.0, 1838.0], [55.1, 1838.0], [55.2, 1838.0], [55.3, 1838.0], [55.4, 1838.0], [55.5, 1838.0], [55.6, 1838.0], [55.7, 1838.0], [55.8, 1838.0], [55.9, 1848.0], [56.0, 1848.0], [56.1, 1848.0], [56.2, 1848.0], [56.3, 1848.0], [56.4, 1848.0], [56.5, 1848.0], [56.6, 1848.0], [56.7, 1848.0], [56.8, 1897.0], [56.9, 1897.0], [57.0, 1897.0], [57.1, 1897.0], [57.2, 1897.0], [57.3, 1897.0], [57.4, 1897.0], [57.5, 1897.0], [57.6, 1897.0], [57.7, 1905.0], [57.8, 1905.0], [57.9, 1905.0], [58.0, 1905.0], [58.1, 1905.0], [58.2, 1905.0], [58.3, 1905.0], [58.4, 1905.0], [58.5, 1905.0], [58.6, 1910.0], [58.7, 1910.0], [58.8, 1910.0], [58.9, 1910.0], [59.0, 1910.0], [59.1, 1910.0], [59.2, 1910.0], [59.3, 1910.0], [59.4, 1910.0], [59.5, 1913.0], [59.6, 1913.0], [59.7, 1913.0], [59.8, 1913.0], [59.9, 1913.0], [60.0, 1913.0], [60.1, 1913.0], [60.2, 1913.0], [60.3, 1913.0], [60.4, 1928.0], [60.5, 1928.0], [60.6, 1928.0], [60.7, 1928.0], [60.8, 1928.0], [60.9, 1928.0], [61.0, 1928.0], [61.1, 1928.0], [61.2, 1928.0], [61.3, 1936.0], [61.4, 1936.0], [61.5, 1936.0], [61.6, 1936.0], [61.7, 1936.0], [61.8, 1936.0], [61.9, 1936.0], [62.0, 1936.0], [62.1, 1936.0], [62.2, 1944.0], [62.3, 1944.0], [62.4, 1944.0], [62.5, 1944.0], [62.6, 1944.0], [62.7, 1944.0], [62.8, 1944.0], [62.9, 1944.0], [63.0, 1944.0], [63.1, 1975.0], [63.2, 1975.0], [63.3, 1975.0], [63.4, 1975.0], [63.5, 1975.0], [63.6, 1975.0], [63.7, 1975.0], [63.8, 1975.0], [63.9, 1975.0], [64.0, 1991.0], [64.1, 1991.0], [64.2, 1991.0], [64.3, 1991.0], [64.4, 1991.0], [64.5, 1991.0], [64.6, 1991.0], [64.7, 1991.0], [64.8, 1991.0], [64.9, 2011.0], [65.0, 2011.0], [65.1, 2011.0], [65.2, 2011.0], [65.3, 2011.0], [65.4, 2011.0], [65.5, 2011.0], [65.6, 2011.0], [65.7, 2011.0], [65.8, 2020.0], [65.9, 2020.0], [66.0, 2020.0], [66.1, 2020.0], [66.2, 2020.0], [66.3, 2020.0], [66.4, 2020.0], [66.5, 2020.0], [66.6, 2020.0], [66.7, 2040.0], [66.8, 2040.0], [66.9, 2040.0], [67.0, 2040.0], [67.1, 2040.0], [67.2, 2040.0], [67.3, 2040.0], [67.4, 2040.0], [67.5, 2040.0], [67.6, 2060.0], [67.7, 2060.0], [67.8, 2060.0], [67.9, 2060.0], [68.0, 2060.0], [68.1, 2060.0], [68.2, 2060.0], [68.3, 2060.0], [68.4, 2060.0], [68.5, 2064.0], [68.6, 2064.0], [68.7, 2064.0], [68.8, 2064.0], [68.9, 2064.0], [69.0, 2064.0], [69.1, 2064.0], [69.2, 2064.0], [69.3, 2064.0], [69.4, 2066.0], [69.5, 2066.0], [69.6, 2066.0], [69.7, 2066.0], [69.8, 2066.0], [69.9, 2066.0], [70.0, 2066.0], [70.1, 2066.0], [70.2, 2066.0], [70.3, 2073.0], [70.4, 2073.0], [70.5, 2073.0], [70.6, 2073.0], [70.7, 2073.0], [70.8, 2073.0], [70.9, 2073.0], [71.0, 2073.0], [71.1, 2073.0], [71.2, 2080.0], [71.3, 2080.0], [71.4, 2080.0], [71.5, 2080.0], [71.6, 2080.0], [71.7, 2080.0], [71.8, 2080.0], [71.9, 2080.0], [72.0, 2080.0], [72.1, 2083.0], [72.2, 2083.0], [72.3, 2083.0], [72.4, 2083.0], [72.5, 2083.0], [72.6, 2083.0], [72.7, 2083.0], [72.8, 2083.0], [72.9, 2083.0], [73.0, 2094.0], [73.1, 2094.0], [73.2, 2094.0], [73.3, 2094.0], [73.4, 2094.0], [73.5, 2094.0], [73.6, 2094.0], [73.7, 2094.0], [73.8, 2094.0], [73.9, 2100.0], [74.0, 2100.0], [74.1, 2100.0], [74.2, 2100.0], [74.3, 2100.0], [74.4, 2100.0], [74.5, 2100.0], [74.6, 2100.0], [74.7, 2100.0], [74.8, 2119.0], [74.9, 2119.0], [75.0, 2119.0], [75.1, 2119.0], [75.2, 2119.0], [75.3, 2119.0], [75.4, 2119.0], [75.5, 2119.0], [75.6, 2119.0], [75.7, 2125.0], [75.8, 2125.0], [75.9, 2125.0], [76.0, 2125.0], [76.1, 2125.0], [76.2, 2125.0], [76.3, 2125.0], [76.4, 2125.0], [76.5, 2125.0], [76.6, 2128.0], [76.7, 2128.0], [76.8, 2128.0], [76.9, 2128.0], [77.0, 2128.0], [77.1, 2128.0], [77.2, 2128.0], [77.3, 2128.0], [77.4, 2128.0], [77.5, 2130.0], [77.6, 2130.0], [77.7, 2130.0], [77.8, 2130.0], [77.9, 2130.0], [78.0, 2130.0], [78.1, 2130.0], [78.2, 2130.0], [78.3, 2130.0], [78.4, 2134.0], [78.5, 2134.0], [78.6, 2134.0], [78.7, 2134.0], [78.8, 2134.0], [78.9, 2134.0], [79.0, 2134.0], [79.1, 2134.0], [79.2, 2134.0], [79.3, 2139.0], [79.4, 2139.0], [79.5, 2139.0], [79.6, 2139.0], [79.7, 2139.0], [79.8, 2139.0], [79.9, 2139.0], [80.0, 2139.0], [80.1, 2139.0], [80.2, 2146.0], [80.3, 2146.0], [80.4, 2146.0], [80.5, 2146.0], [80.6, 2146.0], [80.7, 2146.0], [80.8, 2146.0], [80.9, 2146.0], [81.0, 2146.0], [81.1, 2147.0], [81.2, 2147.0], [81.3, 2147.0], [81.4, 2147.0], [81.5, 2147.0], [81.6, 2147.0], [81.7, 2147.0], [81.8, 2147.0], [81.9, 2147.0], [82.0, 2217.0], [82.1, 2217.0], [82.2, 2217.0], [82.3, 2217.0], [82.4, 2217.0], [82.5, 2217.0], [82.6, 2217.0], [82.7, 2217.0], [82.8, 2217.0], [82.9, 2268.0], [83.0, 2268.0], [83.1, 2268.0], [83.2, 2268.0], [83.3, 2268.0], [83.4, 2268.0], [83.5, 2268.0], [83.6, 2268.0], [83.7, 2268.0], [83.8, 2307.0], [83.9, 2307.0], [84.0, 2307.0], [84.1, 2307.0], [84.2, 2307.0], [84.3, 2307.0], [84.4, 2307.0], [84.5, 2307.0], [84.6, 2307.0], [84.7, 2330.0], [84.8, 2330.0], [84.9, 2330.0], [85.0, 2330.0], [85.1, 2330.0], [85.2, 2330.0], [85.3, 2330.0], [85.4, 2330.0], [85.5, 2330.0], [85.6, 2331.0], [85.7, 2331.0], [85.8, 2331.0], [85.9, 2331.0], [86.0, 2331.0], [86.1, 2331.0], [86.2, 2331.0], [86.3, 2331.0], [86.4, 2331.0], [86.5, 2349.0], [86.6, 2349.0], [86.7, 2349.0], [86.8, 2349.0], [86.9, 2349.0], [87.0, 2349.0], [87.1, 2349.0], [87.2, 2349.0], [87.3, 2349.0], [87.4, 2359.0], [87.5, 2359.0], [87.6, 2359.0], [87.7, 2359.0], [87.8, 2359.0], [87.9, 2359.0], [88.0, 2359.0], [88.1, 2359.0], [88.2, 2359.0], [88.3, 2382.0], [88.4, 2382.0], [88.5, 2382.0], [88.6, 2382.0], [88.7, 2382.0], [88.8, 2382.0], [88.9, 2382.0], [89.0, 2382.0], [89.1, 2382.0], [89.2, 2384.0], [89.3, 2384.0], [89.4, 2384.0], [89.5, 2384.0], [89.6, 2384.0], [89.7, 2384.0], [89.8, 2384.0], [89.9, 2384.0], [90.0, 2384.0], [90.1, 2410.0], [90.2, 2410.0], [90.3, 2410.0], [90.4, 2410.0], [90.5, 2410.0], [90.6, 2410.0], [90.7, 2410.0], [90.8, 2410.0], [90.9, 2410.0], [91.0, 2440.0], [91.1, 2440.0], [91.2, 2440.0], [91.3, 2440.0], [91.4, 2440.0], [91.5, 2440.0], [91.6, 2440.0], [91.7, 2440.0], [91.8, 2440.0], [91.9, 2442.0], [92.0, 2442.0], [92.1, 2442.0], [92.2, 2442.0], [92.3, 2442.0], [92.4, 2442.0], [92.5, 2442.0], [92.6, 2442.0], [92.7, 2442.0], [92.8, 2474.0], [92.9, 2474.0], [93.0, 2474.0], [93.1, 2474.0], [93.2, 2474.0], [93.3, 2474.0], [93.4, 2474.0], [93.5, 2474.0], [93.6, 2474.0], [93.7, 2502.0], [93.8, 2502.0], [93.9, 2502.0], [94.0, 2502.0], [94.1, 2502.0], [94.2, 2502.0], [94.3, 2502.0], [94.4, 2502.0], [94.5, 2502.0], [94.6, 2528.0], [94.7, 2528.0], [94.8, 2528.0], [94.9, 2528.0], [95.0, 2528.0], [95.1, 2528.0], [95.2, 2528.0], [95.3, 2528.0], [95.4, 2528.0], [95.5, 2537.0], [95.6, 2537.0], [95.7, 2537.0], [95.8, 2537.0], [95.9, 2537.0], [96.0, 2537.0], [96.1, 2537.0], [96.2, 2537.0], [96.3, 2537.0], [96.4, 2634.0], [96.5, 2634.0], [96.6, 2634.0], [96.7, 2634.0], [96.8, 2634.0], [96.9, 2634.0], [97.0, 2634.0], [97.1, 2634.0], [97.2, 2634.0], [97.3, 3134.0], [97.4, 3134.0], [97.5, 3134.0], [97.6, 3134.0], [97.7, 3134.0], [97.8, 3134.0], [97.9, 3134.0], [98.0, 3134.0], [98.1, 3134.0], [98.2, 3570.0], [98.3, 3570.0], [98.4, 3570.0], [98.5, 3570.0], [98.6, 3570.0], [98.7, 3570.0], [98.8, 3570.0], [98.9, 3570.0], [99.0, 3570.0], [99.1, 3803.0], [99.2, 3803.0], [99.3, 3803.0], [99.4, 3803.0], [99.5, 3803.0], [99.6, 3803.0], [99.7, 3803.0], [99.8, 3803.0], [99.9, 3803.0], [100.0, 3803.0]], "isOverall": false, "label": "trackVehicleExitOutEntry", "isController": false}, {"data": [[0.0, 1609.0], [0.1, 1609.0], [0.2, 1609.0], [0.3, 1609.0], [0.4, 1609.0], [0.5, 1609.0], [0.6, 1609.0], [0.7, 1609.0], [0.8, 1609.0], [0.9, 1609.0], [1.0, 1609.0], [1.1, 1609.0], [1.2, 1609.0], [1.3, 1609.0], [1.4, 1609.0], [1.5, 1609.0], [1.6, 1609.0], [1.7, 1609.0], [1.8, 1609.0], [1.9, 1609.0], [2.0, 1609.0], [2.1, 1609.0], [2.2, 1609.0], [2.3, 1609.0], [2.4, 1609.0], [2.5, 1609.0], [2.6, 1609.0], [2.7, 1609.0], [2.8, 1609.0], [2.9, 1609.0], [3.0, 1609.0], [3.1, 1609.0], [3.2, 1609.0], [3.3, 1609.0], [3.4, 1609.0], [3.5, 1609.0], [3.6, 1609.0], [3.7, 1609.0], [3.8, 1609.0], [3.9, 1609.0], [4.0, 1609.0], [4.1, 1609.0], [4.2, 1609.0], [4.3, 1609.0], [4.4, 1609.0], [4.5, 1609.0], [4.6, 1609.0], [4.7, 1609.0], [4.8, 1609.0], [4.9, 1609.0], [5.0, 1609.0], [5.1, 1609.0], [5.2, 1609.0], [5.3, 1609.0], [5.4, 1609.0], [5.5, 1609.0], [5.6, 1609.0], [5.7, 1609.0], [5.8, 1609.0], [5.9, 1609.0], [6.0, 1609.0], [6.1, 1609.0], [6.2, 1609.0], [6.3, 1609.0], [6.4, 1609.0], [6.5, 1609.0], [6.6, 1609.0], [6.7, 1609.0], [6.8, 1609.0], [6.9, 1609.0], [7.0, 1609.0], [7.1, 1609.0], [7.2, 1609.0], [7.3, 1609.0], [7.4, 1609.0], [7.5, 1609.0], [7.6, 1609.0], [7.7, 1609.0], [7.8, 1609.0], [7.9, 1609.0], [8.0, 1609.0], [8.1, 1609.0], [8.2, 1609.0], [8.3, 1609.0], [8.4, 1609.0], [8.5, 1609.0], [8.6, 1609.0], [8.7, 1609.0], [8.8, 1609.0], [8.9, 1609.0], [9.0, 1609.0], [9.1, 1609.0], [9.2, 1609.0], [9.3, 1609.0], [9.4, 1609.0], [9.5, 1609.0], [9.6, 1609.0], [9.7, 1609.0], [9.8, 1609.0], [9.9, 1609.0], [10.0, 1609.0], [10.1, 1609.0], [10.2, 1609.0], [10.3, 1609.0], [10.4, 1609.0], [10.5, 1609.0], [10.6, 1609.0], [10.7, 1609.0], [10.8, 1609.0], [10.9, 1609.0], [11.0, 1609.0], [11.1, 1609.0], [11.2, 1609.0], [11.3, 1609.0], [11.4, 1609.0], [11.5, 1609.0], [11.6, 1609.0], [11.7, 1609.0], [11.8, 1609.0], [11.9, 1609.0], [12.0, 1609.0], [12.1, 1609.0], [12.2, 1609.0], [12.3, 1609.0], [12.4, 1609.0], [12.5, 1609.0], [12.6, 1609.0], [12.7, 1609.0], [12.8, 1609.0], [12.9, 1609.0], [13.0, 1609.0], [13.1, 1609.0], [13.2, 1609.0], [13.3, 1609.0], [13.4, 1609.0], [13.5, 1609.0], [13.6, 1609.0], [13.7, 1609.0], [13.8, 1609.0], [13.9, 1609.0], [14.0, 1609.0], [14.1, 1609.0], [14.2, 1609.0], [14.3, 1609.0], [14.4, 1609.0], [14.5, 1609.0], [14.6, 1609.0], [14.7, 1609.0], [14.8, 1609.0], [14.9, 1609.0], [15.0, 1609.0], [15.1, 1609.0], [15.2, 1609.0], [15.3, 1609.0], [15.4, 1609.0], [15.5, 1609.0], [15.6, 1609.0], [15.7, 1609.0], [15.8, 1609.0], [15.9, 1609.0], [16.0, 1609.0], [16.1, 1609.0], [16.2, 1609.0], [16.3, 1609.0], [16.4, 1609.0], [16.5, 1609.0], [16.6, 1609.0], [16.7, 1609.0], [16.8, 1609.0], [16.9, 1609.0], [17.0, 1609.0], [17.1, 1609.0], [17.2, 1609.0], [17.3, 1609.0], [17.4, 1609.0], [17.5, 1609.0], [17.6, 1609.0], [17.7, 1609.0], [17.8, 1609.0], [17.9, 1609.0], [18.0, 1609.0], [18.1, 1609.0], [18.2, 1609.0], [18.3, 1609.0], [18.4, 1609.0], [18.5, 1609.0], [18.6, 1609.0], [18.7, 1609.0], [18.8, 1609.0], [18.9, 1609.0], [19.0, 1609.0], [19.1, 1609.0], [19.2, 1609.0], [19.3, 1609.0], [19.4, 1609.0], [19.5, 1609.0], [19.6, 1609.0], [19.7, 1609.0], [19.8, 1609.0], [19.9, 1609.0], [20.0, 1609.0], [20.1, 1609.0], [20.2, 1609.0], [20.3, 1609.0], [20.4, 1609.0], [20.5, 1609.0], [20.6, 1609.0], [20.7, 1609.0], [20.8, 1609.0], [20.9, 1609.0], [21.0, 1609.0], [21.1, 1609.0], [21.2, 1609.0], [21.3, 1609.0], [21.4, 1609.0], [21.5, 1609.0], [21.6, 1609.0], [21.7, 1609.0], [21.8, 1609.0], [21.9, 1609.0], [22.0, 1609.0], [22.1, 1609.0], [22.2, 1609.0], [22.3, 1609.0], [22.4, 1609.0], [22.5, 1609.0], [22.6, 1609.0], [22.7, 1609.0], [22.8, 1609.0], [22.9, 1609.0], [23.0, 1609.0], [23.1, 1609.0], [23.2, 1609.0], [23.3, 1609.0], [23.4, 1609.0], [23.5, 1609.0], [23.6, 1609.0], [23.7, 1609.0], [23.8, 1609.0], [23.9, 1609.0], [24.0, 1609.0], [24.1, 1609.0], [24.2, 1609.0], [24.3, 1609.0], [24.4, 1609.0], [24.5, 1609.0], [24.6, 1609.0], [24.7, 1609.0], [24.8, 1609.0], [24.9, 1609.0], [25.0, 1609.0], [25.1, 1609.0], [25.2, 1609.0], [25.3, 1609.0], [25.4, 1609.0], [25.5, 1609.0], [25.6, 1609.0], [25.7, 1609.0], [25.8, 1609.0], [25.9, 1609.0], [26.0, 1609.0], [26.1, 1609.0], [26.2, 1609.0], [26.3, 1609.0], [26.4, 1609.0], [26.5, 1609.0], [26.6, 1609.0], [26.7, 1609.0], [26.8, 1609.0], [26.9, 1609.0], [27.0, 1609.0], [27.1, 1609.0], [27.2, 1609.0], [27.3, 1609.0], [27.4, 1609.0], [27.5, 1609.0], [27.6, 1609.0], [27.7, 1609.0], [27.8, 1609.0], [27.9, 1609.0], [28.0, 1609.0], [28.1, 1609.0], [28.2, 1609.0], [28.3, 1609.0], [28.4, 1609.0], [28.5, 1609.0], [28.6, 1609.0], [28.7, 1609.0], [28.8, 1609.0], [28.9, 1609.0], [29.0, 1609.0], [29.1, 1609.0], [29.2, 1609.0], [29.3, 1609.0], [29.4, 1609.0], [29.5, 1609.0], [29.6, 1609.0], [29.7, 1609.0], [29.8, 1609.0], [29.9, 1609.0], [30.0, 1609.0], [30.1, 1609.0], [30.2, 1609.0], [30.3, 1609.0], [30.4, 1609.0], [30.5, 1609.0], [30.6, 1609.0], [30.7, 1609.0], [30.8, 1609.0], [30.9, 1609.0], [31.0, 1609.0], [31.1, 1609.0], [31.2, 1609.0], [31.3, 1609.0], [31.4, 1609.0], [31.5, 1609.0], [31.6, 1609.0], [31.7, 1609.0], [31.8, 1609.0], [31.9, 1609.0], [32.0, 1609.0], [32.1, 1609.0], [32.2, 1609.0], [32.3, 1609.0], [32.4, 1609.0], [32.5, 1609.0], [32.6, 1609.0], [32.7, 1609.0], [32.8, 1609.0], [32.9, 1609.0], [33.0, 1609.0], [33.1, 1609.0], [33.2, 1609.0], [33.3, 1609.0], [33.4, 1609.0], [33.5, 1609.0], [33.6, 1609.0], [33.7, 1609.0], [33.8, 1609.0], [33.9, 1609.0], [34.0, 1609.0], [34.1, 1609.0], [34.2, 1609.0], [34.3, 1609.0], [34.4, 1609.0], [34.5, 1609.0], [34.6, 1609.0], [34.7, 1609.0], [34.8, 1609.0], [34.9, 1609.0], [35.0, 1609.0], [35.1, 1609.0], [35.2, 1609.0], [35.3, 1609.0], [35.4, 1609.0], [35.5, 1609.0], [35.6, 1609.0], [35.7, 1609.0], [35.8, 1609.0], [35.9, 1609.0], [36.0, 1609.0], [36.1, 1609.0], [36.2, 1609.0], [36.3, 1609.0], [36.4, 1609.0], [36.5, 1609.0], [36.6, 1609.0], [36.7, 1609.0], [36.8, 1609.0], [36.9, 1609.0], [37.0, 1609.0], [37.1, 1609.0], [37.2, 1609.0], [37.3, 1609.0], [37.4, 1609.0], [37.5, 1609.0], [37.6, 1609.0], [37.7, 1609.0], [37.8, 1609.0], [37.9, 1609.0], [38.0, 1609.0], [38.1, 1609.0], [38.2, 1609.0], [38.3, 1609.0], [38.4, 1609.0], [38.5, 1609.0], [38.6, 1609.0], [38.7, 1609.0], [38.8, 1609.0], [38.9, 1609.0], [39.0, 1609.0], [39.1, 1609.0], [39.2, 1609.0], [39.3, 1609.0], [39.4, 1609.0], [39.5, 1609.0], [39.6, 1609.0], [39.7, 1609.0], [39.8, 1609.0], [39.9, 1609.0], [40.0, 1609.0], [40.1, 1609.0], [40.2, 1609.0], [40.3, 1609.0], [40.4, 1609.0], [40.5, 1609.0], [40.6, 1609.0], [40.7, 1609.0], [40.8, 1609.0], [40.9, 1609.0], [41.0, 1609.0], [41.1, 1609.0], [41.2, 1609.0], [41.3, 1609.0], [41.4, 1609.0], [41.5, 1609.0], [41.6, 1609.0], [41.7, 1609.0], [41.8, 1609.0], [41.9, 1609.0], [42.0, 1609.0], [42.1, 1609.0], [42.2, 1609.0], [42.3, 1609.0], [42.4, 1609.0], [42.5, 1609.0], [42.6, 1609.0], [42.7, 1609.0], [42.8, 1609.0], [42.9, 1609.0], [43.0, 1609.0], [43.1, 1609.0], [43.2, 1609.0], [43.3, 1609.0], [43.4, 1609.0], [43.5, 1609.0], [43.6, 1609.0], [43.7, 1609.0], [43.8, 1609.0], [43.9, 1609.0], [44.0, 1609.0], [44.1, 1609.0], [44.2, 1609.0], [44.3, 1609.0], [44.4, 1609.0], [44.5, 1609.0], [44.6, 1609.0], [44.7, 1609.0], [44.8, 1609.0], [44.9, 1609.0], [45.0, 1609.0], [45.1, 1609.0], [45.2, 1609.0], [45.3, 1609.0], [45.4, 1609.0], [45.5, 1609.0], [45.6, 1609.0], [45.7, 1609.0], [45.8, 1609.0], [45.9, 1609.0], [46.0, 1609.0], [46.1, 1609.0], [46.2, 1609.0], [46.3, 1609.0], [46.4, 1609.0], [46.5, 1609.0], [46.6, 1609.0], [46.7, 1609.0], [46.8, 1609.0], [46.9, 1609.0], [47.0, 1609.0], [47.1, 1609.0], [47.2, 1609.0], [47.3, 1609.0], [47.4, 1609.0], [47.5, 1609.0], [47.6, 1609.0], [47.7, 1609.0], [47.8, 1609.0], [47.9, 1609.0], [48.0, 1609.0], [48.1, 1609.0], [48.2, 1609.0], [48.3, 1609.0], [48.4, 1609.0], [48.5, 1609.0], [48.6, 1609.0], [48.7, 1609.0], [48.8, 1609.0], [48.9, 1609.0], [49.0, 1609.0], [49.1, 1609.0], [49.2, 1609.0], [49.3, 1609.0], [49.4, 1609.0], [49.5, 1609.0], [49.6, 1609.0], [49.7, 1609.0], [49.8, 1609.0], [49.9, 1609.0], [50.0, 1609.0], [50.1, 1609.0], [50.2, 1609.0], [50.3, 1609.0], [50.4, 1609.0], [50.5, 1609.0], [50.6, 1609.0], [50.7, 1609.0], [50.8, 1609.0], [50.9, 1609.0], [51.0, 1609.0], [51.1, 1609.0], [51.2, 1609.0], [51.3, 1609.0], [51.4, 1609.0], [51.5, 1609.0], [51.6, 1609.0], [51.7, 1609.0], [51.8, 1609.0], [51.9, 1609.0], [52.0, 1609.0], [52.1, 1609.0], [52.2, 1609.0], [52.3, 1609.0], [52.4, 1609.0], [52.5, 1609.0], [52.6, 1609.0], [52.7, 1609.0], [52.8, 1609.0], [52.9, 1609.0], [53.0, 1609.0], [53.1, 1609.0], [53.2, 1609.0], [53.3, 1609.0], [53.4, 1609.0], [53.5, 1609.0], [53.6, 1609.0], [53.7, 1609.0], [53.8, 1609.0], [53.9, 1609.0], [54.0, 1609.0], [54.1, 1609.0], [54.2, 1609.0], [54.3, 1609.0], [54.4, 1609.0], [54.5, 1609.0], [54.6, 1609.0], [54.7, 1609.0], [54.8, 1609.0], [54.9, 1609.0], [55.0, 1609.0], [55.1, 1609.0], [55.2, 1609.0], [55.3, 1609.0], [55.4, 1609.0], [55.5, 1609.0], [55.6, 1609.0], [55.7, 1609.0], [55.8, 1609.0], [55.9, 1609.0], [56.0, 1609.0], [56.1, 1609.0], [56.2, 1609.0], [56.3, 1609.0], [56.4, 1609.0], [56.5, 1609.0], [56.6, 1609.0], [56.7, 1609.0], [56.8, 1609.0], [56.9, 1609.0], [57.0, 1609.0], [57.1, 1609.0], [57.2, 1609.0], [57.3, 1609.0], [57.4, 1609.0], [57.5, 1609.0], [57.6, 1609.0], [57.7, 1609.0], [57.8, 1609.0], [57.9, 1609.0], [58.0, 1609.0], [58.1, 1609.0], [58.2, 1609.0], [58.3, 1609.0], [58.4, 1609.0], [58.5, 1609.0], [58.6, 1609.0], [58.7, 1609.0], [58.8, 1609.0], [58.9, 1609.0], [59.0, 1609.0], [59.1, 1609.0], [59.2, 1609.0], [59.3, 1609.0], [59.4, 1609.0], [59.5, 1609.0], [59.6, 1609.0], [59.7, 1609.0], [59.8, 1609.0], [59.9, 1609.0], [60.0, 1609.0], [60.1, 1609.0], [60.2, 1609.0], [60.3, 1609.0], [60.4, 1609.0], [60.5, 1609.0], [60.6, 1609.0], [60.7, 1609.0], [60.8, 1609.0], [60.9, 1609.0], [61.0, 1609.0], [61.1, 1609.0], [61.2, 1609.0], [61.3, 1609.0], [61.4, 1609.0], [61.5, 1609.0], [61.6, 1609.0], [61.7, 1609.0], [61.8, 1609.0], [61.9, 1609.0], [62.0, 1609.0], [62.1, 1609.0], [62.2, 1609.0], [62.3, 1609.0], [62.4, 1609.0], [62.5, 1609.0], [62.6, 1609.0], [62.7, 1609.0], [62.8, 1609.0], [62.9, 1609.0], [63.0, 1609.0], [63.1, 1609.0], [63.2, 1609.0], [63.3, 1609.0], [63.4, 1609.0], [63.5, 1609.0], [63.6, 1609.0], [63.7, 1609.0], [63.8, 1609.0], [63.9, 1609.0], [64.0, 1609.0], [64.1, 1609.0], [64.2, 1609.0], [64.3, 1609.0], [64.4, 1609.0], [64.5, 1609.0], [64.6, 1609.0], [64.7, 1609.0], [64.8, 1609.0], [64.9, 1609.0], [65.0, 1609.0], [65.1, 1609.0], [65.2, 1609.0], [65.3, 1609.0], [65.4, 1609.0], [65.5, 1609.0], [65.6, 1609.0], [65.7, 1609.0], [65.8, 1609.0], [65.9, 1609.0], [66.0, 1609.0], [66.1, 1609.0], [66.2, 1609.0], [66.3, 1609.0], [66.4, 1609.0], [66.5, 1609.0], [66.6, 1609.0], [66.7, 1609.0], [66.8, 1609.0], [66.9, 1609.0], [67.0, 1609.0], [67.1, 1609.0], [67.2, 1609.0], [67.3, 1609.0], [67.4, 1609.0], [67.5, 1609.0], [67.6, 1609.0], [67.7, 1609.0], [67.8, 1609.0], [67.9, 1609.0], [68.0, 1609.0], [68.1, 1609.0], [68.2, 1609.0], [68.3, 1609.0], [68.4, 1609.0], [68.5, 1609.0], [68.6, 1609.0], [68.7, 1609.0], [68.8, 1609.0], [68.9, 1609.0], [69.0, 1609.0], [69.1, 1609.0], [69.2, 1609.0], [69.3, 1609.0], [69.4, 1609.0], [69.5, 1609.0], [69.6, 1609.0], [69.7, 1609.0], [69.8, 1609.0], [69.9, 1609.0], [70.0, 1609.0], [70.1, 1609.0], [70.2, 1609.0], [70.3, 1609.0], [70.4, 1609.0], [70.5, 1609.0], [70.6, 1609.0], [70.7, 1609.0], [70.8, 1609.0], [70.9, 1609.0], [71.0, 1609.0], [71.1, 1609.0], [71.2, 1609.0], [71.3, 1609.0], [71.4, 1609.0], [71.5, 1609.0], [71.6, 1609.0], [71.7, 1609.0], [71.8, 1609.0], [71.9, 1609.0], [72.0, 1609.0], [72.1, 1609.0], [72.2, 1609.0], [72.3, 1609.0], [72.4, 1609.0], [72.5, 1609.0], [72.6, 1609.0], [72.7, 1609.0], [72.8, 1609.0], [72.9, 1609.0], [73.0, 1609.0], [73.1, 1609.0], [73.2, 1609.0], [73.3, 1609.0], [73.4, 1609.0], [73.5, 1609.0], [73.6, 1609.0], [73.7, 1609.0], [73.8, 1609.0], [73.9, 1609.0], [74.0, 1609.0], [74.1, 1609.0], [74.2, 1609.0], [74.3, 1609.0], [74.4, 1609.0], [74.5, 1609.0], [74.6, 1609.0], [74.7, 1609.0], [74.8, 1609.0], [74.9, 1609.0], [75.0, 1609.0], [75.1, 1609.0], [75.2, 1609.0], [75.3, 1609.0], [75.4, 1609.0], [75.5, 1609.0], [75.6, 1609.0], [75.7, 1609.0], [75.8, 1609.0], [75.9, 1609.0], [76.0, 1609.0], [76.1, 1609.0], [76.2, 1609.0], [76.3, 1609.0], [76.4, 1609.0], [76.5, 1609.0], [76.6, 1609.0], [76.7, 1609.0], [76.8, 1609.0], [76.9, 1609.0], [77.0, 1609.0], [77.1, 1609.0], [77.2, 1609.0], [77.3, 1609.0], [77.4, 1609.0], [77.5, 1609.0], [77.6, 1609.0], [77.7, 1609.0], [77.8, 1609.0], [77.9, 1609.0], [78.0, 1609.0], [78.1, 1609.0], [78.2, 1609.0], [78.3, 1609.0], [78.4, 1609.0], [78.5, 1609.0], [78.6, 1609.0], [78.7, 1609.0], [78.8, 1609.0], [78.9, 1609.0], [79.0, 1609.0], [79.1, 1609.0], [79.2, 1609.0], [79.3, 1609.0], [79.4, 1609.0], [79.5, 1609.0], [79.6, 1609.0], [79.7, 1609.0], [79.8, 1609.0], [79.9, 1609.0], [80.0, 1609.0], [80.1, 1609.0], [80.2, 1609.0], [80.3, 1609.0], [80.4, 1609.0], [80.5, 1609.0], [80.6, 1609.0], [80.7, 1609.0], [80.8, 1609.0], [80.9, 1609.0], [81.0, 1609.0], [81.1, 1609.0], [81.2, 1609.0], [81.3, 1609.0], [81.4, 1609.0], [81.5, 1609.0], [81.6, 1609.0], [81.7, 1609.0], [81.8, 1609.0], [81.9, 1609.0], [82.0, 1609.0], [82.1, 1609.0], [82.2, 1609.0], [82.3, 1609.0], [82.4, 1609.0], [82.5, 1609.0], [82.6, 1609.0], [82.7, 1609.0], [82.8, 1609.0], [82.9, 1609.0], [83.0, 1609.0], [83.1, 1609.0], [83.2, 1609.0], [83.3, 1609.0], [83.4, 1609.0], [83.5, 1609.0], [83.6, 1609.0], [83.7, 1609.0], [83.8, 1609.0], [83.9, 1609.0], [84.0, 1609.0], [84.1, 1609.0], [84.2, 1609.0], [84.3, 1609.0], [84.4, 1609.0], [84.5, 1609.0], [84.6, 1609.0], [84.7, 1609.0], [84.8, 1609.0], [84.9, 1609.0], [85.0, 1609.0], [85.1, 1609.0], [85.2, 1609.0], [85.3, 1609.0], [85.4, 1609.0], [85.5, 1609.0], [85.6, 1609.0], [85.7, 1609.0], [85.8, 1609.0], [85.9, 1609.0], [86.0, 1609.0], [86.1, 1609.0], [86.2, 1609.0], [86.3, 1609.0], [86.4, 1609.0], [86.5, 1609.0], [86.6, 1609.0], [86.7, 1609.0], [86.8, 1609.0], [86.9, 1609.0], [87.0, 1609.0], [87.1, 1609.0], [87.2, 1609.0], [87.3, 1609.0], [87.4, 1609.0], [87.5, 1609.0], [87.6, 1609.0], [87.7, 1609.0], [87.8, 1609.0], [87.9, 1609.0], [88.0, 1609.0], [88.1, 1609.0], [88.2, 1609.0], [88.3, 1609.0], [88.4, 1609.0], [88.5, 1609.0], [88.6, 1609.0], [88.7, 1609.0], [88.8, 1609.0], [88.9, 1609.0], [89.0, 1609.0], [89.1, 1609.0], [89.2, 1609.0], [89.3, 1609.0], [89.4, 1609.0], [89.5, 1609.0], [89.6, 1609.0], [89.7, 1609.0], [89.8, 1609.0], [89.9, 1609.0], [90.0, 1609.0], [90.1, 1609.0], [90.2, 1609.0], [90.3, 1609.0], [90.4, 1609.0], [90.5, 1609.0], [90.6, 1609.0], [90.7, 1609.0], [90.8, 1609.0], [90.9, 1609.0], [91.0, 1609.0], [91.1, 1609.0], [91.2, 1609.0], [91.3, 1609.0], [91.4, 1609.0], [91.5, 1609.0], [91.6, 1609.0], [91.7, 1609.0], [91.8, 1609.0], [91.9, 1609.0], [92.0, 1609.0], [92.1, 1609.0], [92.2, 1609.0], [92.3, 1609.0], [92.4, 1609.0], [92.5, 1609.0], [92.6, 1609.0], [92.7, 1609.0], [92.8, 1609.0], [92.9, 1609.0], [93.0, 1609.0], [93.1, 1609.0], [93.2, 1609.0], [93.3, 1609.0], [93.4, 1609.0], [93.5, 1609.0], [93.6, 1609.0], [93.7, 1609.0], [93.8, 1609.0], [93.9, 1609.0], [94.0, 1609.0], [94.1, 1609.0], [94.2, 1609.0], [94.3, 1609.0], [94.4, 1609.0], [94.5, 1609.0], [94.6, 1609.0], [94.7, 1609.0], [94.8, 1609.0], [94.9, 1609.0], [95.0, 1609.0], [95.1, 1609.0], [95.2, 1609.0], [95.3, 1609.0], [95.4, 1609.0], [95.5, 1609.0], [95.6, 1609.0], [95.7, 1609.0], [95.8, 1609.0], [95.9, 1609.0], [96.0, 1609.0], [96.1, 1609.0], [96.2, 1609.0], [96.3, 1609.0], [96.4, 1609.0], [96.5, 1609.0], [96.6, 1609.0], [96.7, 1609.0], [96.8, 1609.0], [96.9, 1609.0], [97.0, 1609.0], [97.1, 1609.0], [97.2, 1609.0], [97.3, 1609.0], [97.4, 1609.0], [97.5, 1609.0], [97.6, 1609.0], [97.7, 1609.0], [97.8, 1609.0], [97.9, 1609.0], [98.0, 1609.0], [98.1, 1609.0], [98.2, 1609.0], [98.3, 1609.0], [98.4, 1609.0], [98.5, 1609.0], [98.6, 1609.0], [98.7, 1609.0], [98.8, 1609.0], [98.9, 1609.0], [99.0, 1609.0], [99.1, 1609.0], [99.2, 1609.0], [99.3, 1609.0], [99.4, 1609.0], [99.5, 1609.0], [99.6, 1609.0], [99.7, 1609.0], [99.8, 1609.0], [99.9, 1609.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 300.0, "maxY": 657.0, "series": [{"data": [[2700.0, 1.0], [700.0, 2.0], [800.0, 10.0], [900.0, 22.0], [1000.0, 23.0], [1100.0, 30.0], [1200.0, 40.0], [1300.0, 13.0], [1400.0, 17.0], [1500.0, 4.0], [25400.0, 1.0], [1600.0, 8.0], [1700.0, 5.0], [27700.0, 1.0], [1800.0, 3.0], [1900.0, 3.0]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[2400.0, 1.0], [600.0, 85.0], [700.0, 45.0], [800.0, 35.0], [900.0, 16.0], [1000.0, 11.0], [1100.0, 4.0], [1200.0, 2.0], [1300.0, 6.0], [1400.0, 1.0], [1500.0, 2.0], [400.0, 29.0], [1600.0, 2.0], [1900.0, 1.0], [500.0, 117.0]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[1100.0, 1.0], [300.0, 657.0], [600.0, 1.0], [400.0, 372.0], [1900.0, 1.0], [3900.0, 1.0], [500.0, 9.0]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[2100.0, 9.0], [2300.0, 7.0], [2200.0, 2.0], [2400.0, 4.0], [2500.0, 3.0], [2600.0, 1.0], [3100.0, 1.0], [3500.0, 1.0], [3800.0, 1.0], [1200.0, 2.0], [1300.0, 7.0], [1400.0, 5.0], [1500.0, 7.0], [1600.0, 13.0], [1700.0, 20.0], [1800.0, 10.0], [1900.0, 8.0], [2000.0, 10.0]], "isOverall": false, "label": "trackVehicleExitOutEntry", "isController": false}, {"data": [[1600.0, 1.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 27700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 132.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1058.0, "series": [{"data": [[0.0, 1058.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 504.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 132.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.72001268E12, "maxY": 1.0, "series": [{"data": [[1.72001268E12, 1.0]], "isOverall": false, "label": "setUpAutenticacionCognito", "isController": false}, {"data": [[1.72001316E12, 1.0], [1.72001286E12, 1.0], [1.7200128E12, 1.0], [1.72001328E12, 1.0], [1.72001268E12, 1.0], [1.72001298E12, 1.0], [1.72001274E12, 1.0], [1.72001292E12, 1.0], [1.7200131E12, 1.0], [1.72001304E12, 1.0], [1.72001322E12, 1.0]], "isOverall": false, "label": "consultarPlaca", "isController": false}, {"data": [[1.72001316E12, 1.0], [1.72001286E12, 1.0], [1.7200128E12, 1.0], [1.72001328E12, 1.0], [1.72001298E12, 1.0], [1.72001292E12, 1.0], [1.7200131E12, 1.0], [1.72001304E12, 1.0], [1.72001322E12, 1.0]], "isOverall": false, "label": "registrarEntrada", "isController": false}, {"data": [[1.72001316E12, 1.0], [1.72001328E12, 1.0], [1.72001298E12, 1.0], [1.72001292E12, 1.0], [1.7200131E12, 1.0], [1.72001304E12, 1.0], [1.72001322E12, 1.0]], "isOverall": false, "label": "registrarSalida", "isController": false}, {"data": [[1.72001316E12, 1.0], [1.72001328E12, 1.0], [1.7200131E12, 1.0], [1.72001304E12, 1.0], [1.72001322E12, 1.0]], "isOverall": false, "label": "registrarSalidaSinEntrada", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72001328E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 393.46728971962614, "minX": 1.0, "maxY": 1908.3909090909096, "series": [{"data": [[4.0, 1387.000000000001], [3.0, 1906.522727272727]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[3.7595628415300544, 1511.9125683060113]], "isOverall": false, "label": "trackVehicleExit-Aggregated", "isController": false}, {"data": [[2.0, 703.2624999999998], [4.0, 699.7878787878789], [3.0, 696.6708860759492]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[3.330532212885155, 699.8767507002794]], "isOverall": false, "label": "trackVehicleEntry-Aggregated", "isController": false}, {"data": [[1.0, 399.4653465346535], [2.0, 420.61576354679795], [4.0, 395.24045801526734], [3.0, 393.46728971962614]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[3.114203454894434, 400.22936660268687]], "isOverall": false, "label": "getPlate-Aggregated", "isController": false}, {"data": [[4.0, 1908.3909090909096], [1.0, 1727.0]], "isOverall": false, "label": "trackVehicleExitOutEntry", "isController": false}, {"data": [[3.972972972972973, 1906.7567567567573]], "isOverall": false, "label": "trackVehicleExitOutEntry-Aggregated", "isController": false}, {"data": [[1.0, 1609.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}, {"data": [[1.0, 1609.0]], "isOverall": false, "label": "loginAFlypass-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 4.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 20.433333333333334, "minX": 1.72001268E12, "maxY": 3346.9333333333334, "series": [{"data": [[1.72001316E12, 1595.0833333333333], [1.72001286E12, 1185.7333333333333], [1.7200128E12, 1090.6], [1.72001328E12, 1632.1666666666667], [1.72001268E12, 43.166666666666664], [1.72001298E12, 1408.4666666666667], [1.72001274E12, 794.5333333333333], [1.72001292E12, 1344.5833333333333], [1.7200131E12, 1637.0833333333333], [1.72001304E12, 1471.9], [1.72001322E12, 1701.4166666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72001316E12, 3125.883333333333], [1.72001286E12, 2284.366666666667], [1.7200128E12, 2105.866666666667], [1.72001328E12, 3205.5], [1.72001268E12, 20.433333333333334], [1.72001298E12, 2740.85], [1.72001274E12, 1472.8833333333334], [1.72001292E12, 2610.45], [1.7200131E12, 3209.4166666666665], [1.72001304E12, 2872.25], [1.72001322E12, 3346.9333333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72001328E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 387.8130841121496, "minX": 1.72001268E12, "maxY": 2916.437499999999, "series": [{"data": [[1.72001316E12, 1331.0714285714287], [1.72001328E12, 1157.3870967741934], [1.72001298E12, 1329.4285714285718], [1.72001292E12, 2916.437499999999], [1.7200131E12, 1302.2068965517242], [1.72001304E12, 2568.6666666666674], [1.72001322E12, 1080.1212121212122]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[1.72001316E12, 735.6153846153848], [1.72001286E12, 688.5250000000001], [1.7200128E12, 724.1538461538461], [1.72001328E12, 681.6750000000002], [1.72001298E12, 782.0000000000001], [1.72001292E12, 620.4523809523808], [1.7200131E12, 673.675], [1.72001304E12, 862.7222222222222], [1.72001322E12, 565.9767441860466]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[1.72001316E12, 397.190476190476], [1.72001286E12, 392.018691588785], [1.7200128E12, 444.9895833333332], [1.72001328E12, 398.48543689320394], [1.72001268E12, 427.0], [1.72001298E12, 398.5660377358491], [1.72001274E12, 406.84158415841586], [1.72001292E12, 387.8130841121496], [1.7200131E12, 389.6542056074767], [1.72001304E12, 392.81904761904775], [1.72001322E12, 398.3076923076923]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1.72001316E12, 2000.857142857143], [1.72001328E12, 1820.478260869565], [1.7200131E12, 1949.0000000000002], [1.72001304E12, 2215.0499999999997], [1.72001322E12, 1623.28]], "isOverall": false, "label": "trackVehicleExitOutEntry", "isController": false}, {"data": [[1.72001268E12, 1609.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72001328E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 387.6635514018691, "minX": 1.72001268E12, "maxY": 2916.2499999999995, "series": [{"data": [[1.72001316E12, 1331.0], [1.72001328E12, 1157.3225806451612], [1.72001298E12, 1329.392857142857], [1.72001292E12, 2916.2499999999995], [1.7200131E12, 1302.1724137931035], [1.72001304E12, 2568.611111111111], [1.72001322E12, 1080.0909090909088]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[1.72001316E12, 735.4615384615385], [1.72001286E12, 688.5], [1.7200128E12, 723.9743589743588], [1.72001328E12, 681.6000000000001], [1.72001298E12, 781.9210526315791], [1.72001292E12, 620.3809523809526], [1.7200131E12, 673.575], [1.72001304E12, 862.5833333333331], [1.72001322E12, 565.9069767441861]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[1.72001316E12, 396.97142857142865], [1.72001286E12, 391.84112149532683], [1.7200128E12, 444.78125000000017], [1.72001328E12, 398.368932038835], [1.72001268E12, 427.0], [1.72001298E12, 398.4905660377358], [1.72001274E12, 406.5841584158416], [1.72001292E12, 387.6635514018691], [1.7200131E12, 389.5514018691588], [1.72001304E12, 392.62857142857143], [1.72001322E12, 398.173076923077]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1.72001316E12, 2000.8095238095243], [1.72001328E12, 1820.2173913043478], [1.7200131E12, 1948.909090909091], [1.72001304E12, 2214.8500000000004], [1.72001322E12, 1623.2399999999998]], "isOverall": false, "label": "trackVehicleExitOutEntry", "isController": false}, {"data": [[1.72001268E12, 1605.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72001328E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 282.3947368421053, "minX": 1.72001268E12, "maxY": 949.0, "series": [{"data": [[1.72001316E12, 301.10714285714283], [1.72001328E12, 299.1935483870968], [1.72001298E12, 294.6071428571429], [1.72001292E12, 300.43749999999994], [1.7200131E12, 283.7586206896552], [1.72001304E12, 293.9444444444445], [1.72001322E12, 292.2727272727273]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[1.72001316E12, 287.00000000000006], [1.72001286E12, 289.72499999999997], [1.7200128E12, 295.28205128205127], [1.72001328E12, 293.44999999999993], [1.72001298E12, 282.3947368421053], [1.72001292E12, 287.7619047619047], [1.7200131E12, 288.7999999999999], [1.72001304E12, 294.02777777777777], [1.72001322E12, 295.76744186046517]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[1.72001316E12, 292.8095238095238], [1.72001286E12, 291.78504672897196], [1.7200128E12, 327.2291666666666], [1.72001328E12, 293.8252427184466], [1.72001268E12, 294.0], [1.72001298E12, 295.1132075471699], [1.72001274E12, 298.15841584158414], [1.72001292E12, 290.29906542056074], [1.7200131E12, 285.3271028037383], [1.72001304E12, 288.04761904761926], [1.72001322E12, 292.75961538461564]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1.72001316E12, 290.4761904761905], [1.72001328E12, 289.9130434782609], [1.7200131E12, 284.6363636363637], [1.72001304E12, 290.3], [1.72001322E12, 286.64]], "isOverall": false, "label": "trackVehicleExitOutEntry", "isController": false}, {"data": [[1.72001268E12, 949.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72001328E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 311.0, "minX": 1.72001268E12, "maxY": 27735.0, "series": [{"data": [[1.72001316E12, 3134.0], [1.72001286E12, 1982.0], [1.7200128E12, 3904.0], [1.72001328E12, 2502.0], [1.72001268E12, 1609.0], [1.72001298E12, 1810.0], [1.72001274E12, 1172.0], [1.72001292E12, 27735.0], [1.7200131E12, 2634.0], [1.72001304E12, 25453.0], [1.72001322E12, 1944.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72001316E12, 1714.0], [1.72001286E12, 648.2], [1.7200128E12, 723.0], [1.72001328E12, 1541.0000000000011], [1.72001268E12, 1609.0], [1.72001298E12, 1230.1000000000001], [1.72001274E12, 443.8], [1.72001292E12, 925.8000000000009], [1.7200131E12, 1649.9999999999998], [1.72001304E12, 1778.0], [1.72001322E12, 1448.2]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72001316E12, 2812.520000000001], [1.72001286E12, 1757.3600000000047], [1.7200128E12, 3394.959999999981], [1.72001328E12, 2441.2400000000007], [1.72001268E12, 1609.0], [1.72001298E12, 1757.4400000000007], [1.72001274E12, 1161.680000000002], [1.72001292E12, 10495.140000000089], [1.7200131E12, 2537.9699999999993], [1.72001304E12, 8132.9999999997535], [1.72001322E12, 1927.1]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72001316E12, 2045.9999999999995], [1.72001286E12, 814.5999999999998], [1.7200128E12, 907.7999999999994], [1.72001328E12, 1827.1999999999998], [1.72001268E12, 1609.0], [1.72001298E12, 1469.85], [1.72001274E12, 457.5999999999999], [1.72001292E12, 1264.499999999999], [1.7200131E12, 1979.4499999999985], [1.72001304E12, 2134.0], [1.72001322E12, 1691.7]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.72001316E12, 317.0], [1.72001286E12, 324.0], [1.7200128E12, 326.0], [1.72001328E12, 320.0], [1.72001268E12, 427.0], [1.72001298E12, 319.0], [1.72001274E12, 333.0], [1.72001292E12, 319.0], [1.7200131E12, 311.0], [1.72001304E12, 321.0], [1.72001322E12, 320.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72001316E12, 440.0], [1.72001286E12, 400.0], [1.7200128E12, 419.0], [1.72001328E12, 455.0], [1.72001268E12, 1018.0], [1.72001298E12, 434.5], [1.72001274E12, 391.0], [1.72001292E12, 422.0], [1.7200131E12, 450.0], [1.72001304E12, 435.0], [1.72001322E12, 464.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72001328E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 399.5, "minX": 1.0, "maxY": 600.0, "series": [{"data": [[1.0, 403.0], [2.0, 399.5], [4.0, 514.0], [5.0, 600.0], [3.0, 432.0], [6.0, 534.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 6.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 399.5, "minX": 1.0, "maxY": 600.0, "series": [{"data": [[1.0, 402.5], [2.0, 399.5], [4.0, 513.5], [5.0, 600.0], [3.0, 432.0], [6.0, 534.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 6.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.72001268E12, "maxY": 3.3666666666666667, "series": [{"data": [[1.72001316E12, 3.2333333333333334], [1.72001286E12, 2.466666666666667], [1.7200128E12, 2.25], [1.72001328E12, 3.2666666666666666], [1.72001268E12, 0.03333333333333333], [1.72001298E12, 2.85], [1.72001274E12, 1.7], [1.72001292E12, 2.75], [1.7200131E12, 3.3], [1.72001304E12, 3.0166666666666666], [1.72001322E12, 3.3666666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72001328E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.72001268E12, "maxY": 1.7833333333333334, "series": [{"data": [[1.72001316E12, 1.75], [1.72001286E12, 1.7833333333333334], [1.7200128E12, 1.6], [1.72001328E12, 1.7166666666666666], [1.72001268E12, 0.03333333333333333], [1.72001298E12, 1.7666666666666666], [1.72001274E12, 1.6833333333333333], [1.72001292E12, 1.7833333333333334], [1.7200131E12, 1.7833333333333334], [1.72001304E12, 1.75], [1.72001322E12, 1.7333333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.72001316E12, 1.4666666666666666], [1.72001286E12, 0.6666666666666666], [1.7200128E12, 0.65], [1.72001328E12, 1.5666666666666667], [1.72001298E12, 1.1], [1.72001292E12, 0.9666666666666667], [1.7200131E12, 1.5166666666666666], [1.72001304E12, 1.2333333333333334], [1.72001322E12, 1.6833333333333333]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72001328E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.72001268E12, "maxY": 1.7833333333333334, "series": [{"data": [[1.72001268E12, 0.016666666666666666]], "isOverall": false, "label": "loginAFlypass-success", "isController": false}, {"data": [[1.72001316E12, 0.65], [1.72001286E12, 0.6666666666666666], [1.7200128E12, 0.65], [1.72001328E12, 0.6666666666666666], [1.72001298E12, 0.6333333333333333], [1.72001292E12, 0.7], [1.7200131E12, 0.6666666666666666], [1.72001304E12, 0.6], [1.72001322E12, 0.7166666666666667]], "isOverall": false, "label": "trackVehicleEntry-success", "isController": false}, {"data": [[1.72001316E12, 0.4666666666666667], [1.72001328E12, 0.5166666666666667], [1.72001298E12, 0.4666666666666667], [1.72001292E12, 0.26666666666666666], [1.7200131E12, 0.48333333333333334], [1.72001304E12, 0.3], [1.72001322E12, 0.55]], "isOverall": false, "label": "trackVehicleExit-success", "isController": false}, {"data": [[1.72001316E12, 1.75], [1.72001286E12, 1.7833333333333334], [1.7200128E12, 1.6], [1.72001328E12, 1.7166666666666666], [1.72001268E12, 0.016666666666666666], [1.72001298E12, 1.7666666666666666], [1.72001274E12, 1.6833333333333333], [1.72001292E12, 1.7833333333333334], [1.7200131E12, 1.7833333333333334], [1.72001304E12, 1.75], [1.72001322E12, 1.7333333333333334]], "isOverall": false, "label": "getPlate-success", "isController": false}, {"data": [[1.72001316E12, 0.35], [1.72001328E12, 0.38333333333333336], [1.7200131E12, 0.36666666666666664], [1.72001304E12, 0.3333333333333333], [1.72001322E12, 0.4166666666666667]], "isOverall": false, "label": "trackVehicleExitOutEntry-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72001328E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.72001268E12, "maxY": 3.4166666666666665, "series": [{"data": [[1.72001316E12, 3.216666666666667], [1.72001286E12, 2.45], [1.7200128E12, 2.25], [1.72001328E12, 3.283333333333333], [1.72001268E12, 0.03333333333333333], [1.72001298E12, 2.8666666666666667], [1.72001274E12, 1.6833333333333333], [1.72001292E12, 2.75], [1.7200131E12, 3.3], [1.72001304E12, 2.9833333333333334], [1.72001322E12, 3.4166666666666665]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72001328E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

