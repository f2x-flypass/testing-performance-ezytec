/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 301.0, "minX": 0.0, "maxY": 24039.0, "series": [{"data": [[0.0, 751.0], [0.1, 751.0], [0.2, 751.0], [0.3, 751.0], [0.4, 751.0], [0.5, 777.0], [0.6, 777.0], [0.7, 777.0], [0.8, 777.0], [0.9, 779.0], [1.0, 779.0], [1.1, 779.0], [1.2, 779.0], [1.3, 781.0], [1.4, 781.0], [1.5, 781.0], [1.6, 781.0], [1.7, 785.0], [1.8, 785.0], [1.9, 785.0], [2.0, 785.0], [2.1, 793.0], [2.2, 793.0], [2.3, 793.0], [2.4, 793.0], [2.5, 793.0], [2.6, 793.0], [2.7, 793.0], [2.8, 793.0], [2.9, 798.0], [3.0, 798.0], [3.1, 798.0], [3.2, 798.0], [3.3, 798.0], [3.4, 799.0], [3.5, 799.0], [3.6, 799.0], [3.7, 799.0], [3.8, 802.0], [3.9, 802.0], [4.0, 802.0], [4.1, 802.0], [4.2, 803.0], [4.3, 803.0], [4.4, 803.0], [4.5, 803.0], [4.6, 805.0], [4.7, 805.0], [4.8, 805.0], [4.9, 805.0], [5.0, 811.0], [5.1, 811.0], [5.2, 811.0], [5.3, 811.0], [5.4, 814.0], [5.5, 814.0], [5.6, 814.0], [5.7, 814.0], [5.8, 818.0], [5.9, 818.0], [6.0, 818.0], [6.1, 818.0], [6.2, 821.0], [6.3, 821.0], [6.4, 821.0], [6.5, 821.0], [6.6, 821.0], [6.7, 822.0], [6.8, 822.0], [6.9, 822.0], [7.0, 822.0], [7.1, 822.0], [7.2, 822.0], [7.3, 822.0], [7.4, 822.0], [7.5, 825.0], [7.6, 825.0], [7.7, 825.0], [7.8, 825.0], [7.9, 829.0], [8.0, 829.0], [8.1, 829.0], [8.2, 829.0], [8.3, 829.0], [8.4, 829.0], [8.5, 829.0], [8.6, 829.0], [8.7, 833.0], [8.8, 833.0], [8.9, 833.0], [9.0, 833.0], [9.1, 836.0], [9.2, 836.0], [9.3, 836.0], [9.4, 836.0], [9.5, 836.0], [9.6, 836.0], [9.7, 836.0], [9.8, 836.0], [9.9, 836.0], [10.0, 836.0], [10.1, 836.0], [10.2, 836.0], [10.3, 836.0], [10.4, 840.0], [10.5, 840.0], [10.6, 840.0], [10.7, 840.0], [10.8, 841.0], [10.9, 841.0], [11.0, 841.0], [11.1, 841.0], [11.2, 841.0], [11.3, 841.0], [11.4, 841.0], [11.5, 841.0], [11.6, 842.0], [11.7, 842.0], [11.8, 842.0], [11.9, 842.0], [12.0, 845.0], [12.1, 845.0], [12.2, 845.0], [12.3, 845.0], [12.4, 845.0], [12.5, 845.0], [12.6, 845.0], [12.7, 845.0], [12.8, 845.0], [12.9, 846.0], [13.0, 846.0], [13.1, 846.0], [13.2, 846.0], [13.3, 849.0], [13.4, 849.0], [13.5, 849.0], [13.6, 849.0], [13.7, 849.0], [13.8, 849.0], [13.9, 849.0], [14.0, 849.0], [14.1, 850.0], [14.2, 850.0], [14.3, 850.0], [14.4, 850.0], [14.5, 850.0], [14.6, 850.0], [14.7, 850.0], [14.8, 850.0], [14.9, 850.0], [15.0, 850.0], [15.1, 850.0], [15.2, 850.0], [15.3, 857.0], [15.4, 857.0], [15.5, 857.0], [15.6, 857.0], [15.7, 857.0], [15.8, 858.0], [15.9, 858.0], [16.0, 858.0], [16.1, 858.0], [16.2, 859.0], [16.3, 859.0], [16.4, 859.0], [16.5, 859.0], [16.6, 865.0], [16.7, 865.0], [16.8, 865.0], [16.9, 865.0], [17.0, 865.0], [17.1, 865.0], [17.2, 865.0], [17.3, 865.0], [17.4, 866.0], [17.5, 866.0], [17.6, 866.0], [17.7, 866.0], [17.8, 867.0], [17.9, 867.0], [18.0, 867.0], [18.1, 867.0], [18.2, 868.0], [18.3, 868.0], [18.4, 868.0], [18.5, 868.0], [18.6, 869.0], [18.7, 869.0], [18.8, 869.0], [18.9, 869.0], [19.0, 869.0], [19.1, 869.0], [19.2, 869.0], [19.3, 869.0], [19.4, 869.0], [19.5, 870.0], [19.6, 870.0], [19.7, 870.0], [19.8, 870.0], [19.9, 871.0], [20.0, 871.0], [20.1, 871.0], [20.2, 871.0], [20.3, 872.0], [20.4, 872.0], [20.5, 872.0], [20.6, 872.0], [20.7, 873.0], [20.8, 873.0], [20.9, 873.0], [21.0, 873.0], [21.1, 877.0], [21.2, 877.0], [21.3, 877.0], [21.4, 877.0], [21.5, 877.0], [21.6, 877.0], [21.7, 877.0], [21.8, 877.0], [21.9, 877.0], [22.0, 879.0], [22.1, 879.0], [22.2, 879.0], [22.3, 879.0], [22.4, 879.0], [22.5, 879.0], [22.6, 879.0], [22.7, 879.0], [22.8, 879.0], [22.9, 879.0], [23.0, 879.0], [23.1, 879.0], [23.2, 880.0], [23.3, 880.0], [23.4, 880.0], [23.5, 880.0], [23.6, 884.0], [23.7, 884.0], [23.8, 884.0], [23.9, 884.0], [24.0, 884.0], [24.1, 884.0], [24.2, 884.0], [24.3, 884.0], [24.4, 885.0], [24.5, 885.0], [24.6, 885.0], [24.7, 885.0], [24.8, 886.0], [24.9, 886.0], [25.0, 886.0], [25.1, 886.0], [25.2, 886.0], [25.3, 887.0], [25.4, 887.0], [25.5, 887.0], [25.6, 887.0], [25.7, 888.0], [25.8, 888.0], [25.9, 888.0], [26.0, 888.0], [26.1, 892.0], [26.2, 892.0], [26.3, 892.0], [26.4, 892.0], [26.5, 892.0], [26.6, 892.0], [26.7, 892.0], [26.8, 892.0], [26.9, 894.0], [27.0, 894.0], [27.1, 894.0], [27.2, 894.0], [27.3, 896.0], [27.4, 896.0], [27.5, 896.0], [27.6, 896.0], [27.7, 898.0], [27.8, 898.0], [27.9, 898.0], [28.0, 898.0], [28.1, 899.0], [28.2, 899.0], [28.3, 899.0], [28.4, 899.0], [28.5, 899.0], [28.6, 900.0], [28.7, 900.0], [28.8, 900.0], [28.9, 900.0], [29.0, 900.0], [29.1, 900.0], [29.2, 900.0], [29.3, 900.0], [29.4, 901.0], [29.5, 901.0], [29.6, 901.0], [29.7, 901.0], [29.8, 902.0], [29.9, 902.0], [30.0, 902.0], [30.1, 902.0], [30.2, 906.0], [30.3, 906.0], [30.4, 906.0], [30.5, 906.0], [30.6, 908.0], [30.7, 908.0], [30.8, 908.0], [30.9, 908.0], [31.0, 909.0], [31.1, 909.0], [31.2, 909.0], [31.3, 909.0], [31.4, 909.0], [31.5, 910.0], [31.6, 910.0], [31.7, 910.0], [31.8, 910.0], [31.9, 911.0], [32.0, 911.0], [32.1, 911.0], [32.2, 911.0], [32.3, 911.0], [32.4, 911.0], [32.5, 911.0], [32.6, 911.0], [32.7, 911.0], [32.8, 911.0], [32.9, 911.0], [33.0, 911.0], [33.1, 911.0], [33.2, 911.0], [33.3, 911.0], [33.4, 911.0], [33.5, 911.0], [33.6, 911.0], [33.7, 911.0], [33.8, 911.0], [33.9, 913.0], [34.0, 913.0], [34.1, 913.0], [34.2, 913.0], [34.3, 914.0], [34.4, 914.0], [34.5, 914.0], [34.6, 914.0], [34.7, 914.0], [34.8, 915.0], [34.9, 915.0], [35.0, 915.0], [35.1, 915.0], [35.2, 916.0], [35.3, 916.0], [35.4, 916.0], [35.5, 916.0], [35.6, 917.0], [35.7, 917.0], [35.8, 917.0], [35.9, 917.0], [36.0, 919.0], [36.1, 919.0], [36.2, 919.0], [36.3, 919.0], [36.4, 921.0], [36.5, 921.0], [36.6, 921.0], [36.7, 921.0], [36.8, 921.0], [36.9, 921.0], [37.0, 921.0], [37.1, 921.0], [37.2, 922.0], [37.3, 922.0], [37.4, 922.0], [37.5, 922.0], [37.6, 922.0], [37.7, 922.0], [37.8, 922.0], [37.9, 922.0], [38.0, 922.0], [38.1, 922.0], [38.2, 922.0], [38.3, 922.0], [38.4, 922.0], [38.5, 923.0], [38.6, 923.0], [38.7, 923.0], [38.8, 923.0], [38.9, 923.0], [39.0, 923.0], [39.1, 923.0], [39.2, 923.0], [39.3, 925.0], [39.4, 925.0], [39.5, 925.0], [39.6, 925.0], [39.7, 925.0], [39.8, 925.0], [39.9, 925.0], [40.0, 925.0], [40.1, 925.0], [40.2, 925.0], [40.3, 925.0], [40.4, 925.0], [40.5, 926.0], [40.6, 926.0], [40.7, 926.0], [40.8, 926.0], [40.9, 926.0], [41.0, 927.0], [41.1, 927.0], [41.2, 927.0], [41.3, 927.0], [41.4, 930.0], [41.5, 930.0], [41.6, 930.0], [41.7, 930.0], [41.8, 931.0], [41.9, 931.0], [42.0, 931.0], [42.1, 931.0], [42.2, 933.0], [42.3, 933.0], [42.4, 933.0], [42.5, 933.0], [42.6, 933.0], [42.7, 933.0], [42.8, 933.0], [42.9, 933.0], [43.0, 939.0], [43.1, 939.0], [43.2, 939.0], [43.3, 939.0], [43.4, 940.0], [43.5, 940.0], [43.6, 940.0], [43.7, 940.0], [43.8, 940.0], [43.9, 941.0], [44.0, 941.0], [44.1, 941.0], [44.2, 941.0], [44.3, 941.0], [44.4, 941.0], [44.5, 941.0], [44.6, 941.0], [44.7, 948.0], [44.8, 948.0], [44.9, 948.0], [45.0, 948.0], [45.1, 949.0], [45.2, 949.0], [45.3, 949.0], [45.4, 949.0], [45.5, 949.0], [45.6, 949.0], [45.7, 949.0], [45.8, 949.0], [45.9, 949.0], [46.0, 949.0], [46.1, 949.0], [46.2, 949.0], [46.3, 950.0], [46.4, 950.0], [46.5, 950.0], [46.6, 950.0], [46.7, 952.0], [46.8, 952.0], [46.9, 952.0], [47.0, 952.0], [47.1, 952.0], [47.2, 953.0], [47.3, 953.0], [47.4, 953.0], [47.5, 953.0], [47.6, 953.0], [47.7, 953.0], [47.8, 953.0], [47.9, 953.0], [48.0, 953.0], [48.1, 953.0], [48.2, 953.0], [48.3, 953.0], [48.4, 954.0], [48.5, 954.0], [48.6, 954.0], [48.7, 954.0], [48.8, 959.0], [48.9, 959.0], [49.0, 959.0], [49.1, 959.0], [49.2, 959.0], [49.3, 959.0], [49.4, 959.0], [49.5, 959.0], [49.6, 960.0], [49.7, 960.0], [49.8, 960.0], [49.9, 960.0], [50.0, 960.0], [50.1, 961.0], [50.2, 961.0], [50.3, 961.0], [50.4, 961.0], [50.5, 962.0], [50.6, 962.0], [50.7, 962.0], [50.8, 962.0], [50.9, 965.0], [51.0, 965.0], [51.1, 965.0], [51.2, 965.0], [51.3, 968.0], [51.4, 968.0], [51.5, 968.0], [51.6, 968.0], [51.7, 970.0], [51.8, 970.0], [51.9, 970.0], [52.0, 970.0], [52.1, 972.0], [52.2, 972.0], [52.3, 972.0], [52.4, 972.0], [52.5, 976.0], [52.6, 976.0], [52.7, 976.0], [52.8, 976.0], [52.9, 977.0], [53.0, 977.0], [53.1, 977.0], [53.2, 977.0], [53.3, 977.0], [53.4, 978.0], [53.5, 978.0], [53.6, 978.0], [53.7, 978.0], [53.8, 979.0], [53.9, 979.0], [54.0, 979.0], [54.1, 979.0], [54.2, 980.0], [54.3, 980.0], [54.4, 980.0], [54.5, 980.0], [54.6, 985.0], [54.7, 985.0], [54.8, 985.0], [54.9, 985.0], [55.0, 985.0], [55.1, 985.0], [55.2, 985.0], [55.3, 985.0], [55.4, 985.0], [55.5, 985.0], [55.6, 985.0], [55.7, 985.0], [55.8, 987.0], [55.9, 987.0], [56.0, 987.0], [56.1, 987.0], [56.2, 987.0], [56.3, 987.0], [56.4, 987.0], [56.5, 987.0], [56.6, 987.0], [56.7, 988.0], [56.8, 988.0], [56.9, 988.0], [57.0, 988.0], [57.1, 989.0], [57.2, 989.0], [57.3, 989.0], [57.4, 989.0], [57.5, 991.0], [57.6, 991.0], [57.7, 991.0], [57.8, 991.0], [57.9, 995.0], [58.0, 995.0], [58.1, 995.0], [58.2, 995.0], [58.3, 996.0], [58.4, 996.0], [58.5, 996.0], [58.6, 996.0], [58.7, 1000.0], [58.8, 1000.0], [58.9, 1000.0], [59.0, 1000.0], [59.1, 1000.0], [59.2, 1000.0], [59.3, 1000.0], [59.4, 1000.0], [59.5, 1000.0], [59.6, 1003.0], [59.7, 1003.0], [59.8, 1003.0], [59.9, 1003.0], [60.0, 1003.0], [60.1, 1003.0], [60.2, 1003.0], [60.3, 1003.0], [60.4, 1009.0], [60.5, 1009.0], [60.6, 1009.0], [60.7, 1009.0], [60.8, 1009.0], [60.9, 1009.0], [61.0, 1009.0], [61.1, 1009.0], [61.2, 1010.0], [61.3, 1010.0], [61.4, 1010.0], [61.5, 1010.0], [61.6, 1012.0], [61.7, 1012.0], [61.8, 1012.0], [61.9, 1012.0], [62.0, 1015.0], [62.1, 1015.0], [62.2, 1015.0], [62.3, 1015.0], [62.4, 1015.0], [62.5, 1015.0], [62.6, 1015.0], [62.7, 1015.0], [62.8, 1015.0], [62.9, 1015.0], [63.0, 1015.0], [63.1, 1015.0], [63.2, 1015.0], [63.3, 1017.0], [63.4, 1017.0], [63.5, 1017.0], [63.6, 1017.0], [63.7, 1017.0], [63.8, 1017.0], [63.9, 1017.0], [64.0, 1017.0], [64.1, 1017.0], [64.2, 1017.0], [64.3, 1017.0], [64.4, 1017.0], [64.5, 1018.0], [64.6, 1018.0], [64.7, 1018.0], [64.8, 1018.0], [64.9, 1019.0], [65.0, 1019.0], [65.1, 1019.0], [65.2, 1019.0], [65.3, 1021.0], [65.4, 1021.0], [65.5, 1021.0], [65.6, 1021.0], [65.7, 1021.0], [65.8, 1023.0], [65.9, 1023.0], [66.0, 1023.0], [66.1, 1023.0], [66.2, 1025.0], [66.3, 1025.0], [66.4, 1025.0], [66.5, 1025.0], [66.6, 1027.0], [66.7, 1027.0], [66.8, 1027.0], [66.9, 1027.0], [67.0, 1027.0], [67.1, 1027.0], [67.2, 1027.0], [67.3, 1027.0], [67.4, 1027.0], [67.5, 1027.0], [67.6, 1027.0], [67.7, 1027.0], [67.8, 1028.0], [67.9, 1028.0], [68.0, 1028.0], [68.1, 1028.0], [68.2, 1028.0], [68.3, 1028.0], [68.4, 1028.0], [68.5, 1028.0], [68.6, 1029.0], [68.7, 1029.0], [68.8, 1029.0], [68.9, 1029.0], [69.0, 1029.0], [69.1, 1030.0], [69.2, 1030.0], [69.3, 1030.0], [69.4, 1030.0], [69.5, 1032.0], [69.6, 1032.0], [69.7, 1032.0], [69.8, 1032.0], [69.9, 1033.0], [70.0, 1033.0], [70.1, 1033.0], [70.2, 1033.0], [70.3, 1033.0], [70.4, 1033.0], [70.5, 1033.0], [70.6, 1033.0], [70.7, 1034.0], [70.8, 1034.0], [70.9, 1034.0], [71.0, 1034.0], [71.1, 1037.0], [71.2, 1037.0], [71.3, 1037.0], [71.4, 1037.0], [71.5, 1038.0], [71.6, 1038.0], [71.7, 1038.0], [71.8, 1038.0], [71.9, 1038.0], [72.0, 1038.0], [72.1, 1038.0], [72.2, 1038.0], [72.3, 1038.0], [72.4, 1038.0], [72.5, 1038.0], [72.6, 1038.0], [72.7, 1038.0], [72.8, 1040.0], [72.9, 1040.0], [73.0, 1040.0], [73.1, 1040.0], [73.2, 1040.0], [73.3, 1040.0], [73.4, 1040.0], [73.5, 1040.0], [73.6, 1040.0], [73.7, 1040.0], [73.8, 1040.0], [73.9, 1040.0], [74.0, 1041.0], [74.1, 1041.0], [74.2, 1041.0], [74.3, 1041.0], [74.4, 1048.0], [74.5, 1048.0], [74.6, 1048.0], [74.7, 1048.0], [74.8, 1048.0], [74.9, 1048.0], [75.0, 1048.0], [75.1, 1048.0], [75.2, 1048.0], [75.3, 1052.0], [75.4, 1052.0], [75.5, 1052.0], [75.6, 1052.0], [75.7, 1054.0], [75.8, 1054.0], [75.9, 1054.0], [76.0, 1054.0], [76.1, 1054.0], [76.2, 1054.0], [76.3, 1054.0], [76.4, 1054.0], [76.5, 1056.0], [76.6, 1056.0], [76.7, 1056.0], [76.8, 1056.0], [76.9, 1058.0], [77.0, 1058.0], [77.1, 1058.0], [77.2, 1058.0], [77.3, 1059.0], [77.4, 1059.0], [77.5, 1059.0], [77.6, 1059.0], [77.7, 1061.0], [77.8, 1061.0], [77.9, 1061.0], [78.0, 1061.0], [78.1, 1067.0], [78.2, 1067.0], [78.3, 1067.0], [78.4, 1067.0], [78.5, 1067.0], [78.6, 1068.0], [78.7, 1068.0], [78.8, 1068.0], [78.9, 1068.0], [79.0, 1070.0], [79.1, 1070.0], [79.2, 1070.0], [79.3, 1070.0], [79.4, 1075.0], [79.5, 1075.0], [79.6, 1075.0], [79.7, 1075.0], [79.8, 1077.0], [79.9, 1077.0], [80.0, 1077.0], [80.1, 1077.0], [80.2, 1078.0], [80.3, 1078.0], [80.4, 1078.0], [80.5, 1078.0], [80.6, 1079.0], [80.7, 1079.0], [80.8, 1079.0], [80.9, 1079.0], [81.0, 1080.0], [81.1, 1080.0], [81.2, 1080.0], [81.3, 1080.0], [81.4, 1080.0], [81.5, 1081.0], [81.6, 1081.0], [81.7, 1081.0], [81.8, 1081.0], [81.9, 1081.0], [82.0, 1081.0], [82.1, 1081.0], [82.2, 1081.0], [82.3, 1083.0], [82.4, 1083.0], [82.5, 1083.0], [82.6, 1083.0], [82.7, 1085.0], [82.8, 1085.0], [82.9, 1085.0], [83.0, 1085.0], [83.1, 1089.0], [83.2, 1089.0], [83.3, 1089.0], [83.4, 1089.0], [83.5, 1091.0], [83.6, 1091.0], [83.7, 1091.0], [83.8, 1091.0], [83.9, 1092.0], [84.0, 1092.0], [84.1, 1092.0], [84.2, 1092.0], [84.3, 1096.0], [84.4, 1096.0], [84.5, 1096.0], [84.6, 1096.0], [84.7, 1096.0], [84.8, 1098.0], [84.9, 1098.0], [85.0, 1098.0], [85.1, 1098.0], [85.2, 1099.0], [85.3, 1099.0], [85.4, 1099.0], [85.5, 1099.0], [85.6, 1109.0], [85.7, 1109.0], [85.8, 1109.0], [85.9, 1109.0], [86.0, 1109.0], [86.1, 1109.0], [86.2, 1109.0], [86.3, 1109.0], [86.4, 1112.0], [86.5, 1112.0], [86.6, 1112.0], [86.7, 1112.0], [86.8, 1114.0], [86.9, 1114.0], [87.0, 1114.0], [87.1, 1114.0], [87.2, 1114.0], [87.3, 1114.0], [87.4, 1114.0], [87.5, 1114.0], [87.6, 1114.0], [87.7, 1124.0], [87.8, 1124.0], [87.9, 1124.0], [88.0, 1124.0], [88.1, 1125.0], [88.2, 1125.0], [88.3, 1125.0], [88.4, 1125.0], [88.5, 1132.0], [88.6, 1132.0], [88.7, 1132.0], [88.8, 1132.0], [88.9, 1138.0], [89.0, 1138.0], [89.1, 1138.0], [89.2, 1138.0], [89.3, 1154.0], [89.4, 1154.0], [89.5, 1154.0], [89.6, 1154.0], [89.7, 1159.0], [89.8, 1159.0], [89.9, 1159.0], [90.0, 1159.0], [90.1, 1165.0], [90.2, 1165.0], [90.3, 1165.0], [90.4, 1165.0], [90.5, 1170.0], [90.6, 1170.0], [90.7, 1170.0], [90.8, 1170.0], [90.9, 1170.0], [91.0, 1195.0], [91.1, 1195.0], [91.2, 1195.0], [91.3, 1195.0], [91.4, 1197.0], [91.5, 1197.0], [91.6, 1197.0], [91.7, 1197.0], [91.8, 1204.0], [91.9, 1204.0], [92.0, 1204.0], [92.1, 1204.0], [92.2, 1220.0], [92.3, 1220.0], [92.4, 1220.0], [92.5, 1220.0], [92.6, 1240.0], [92.7, 1240.0], [92.8, 1240.0], [92.9, 1240.0], [93.0, 1242.0], [93.1, 1242.0], [93.2, 1242.0], [93.3, 1242.0], [93.4, 1244.0], [93.5, 1244.0], [93.6, 1244.0], [93.7, 1244.0], [93.8, 1244.0], [93.9, 1244.0], [94.0, 1244.0], [94.1, 1244.0], [94.2, 1244.0], [94.3, 1252.0], [94.4, 1252.0], [94.5, 1252.0], [94.6, 1252.0], [94.7, 1258.0], [94.8, 1258.0], [94.9, 1258.0], [95.0, 1258.0], [95.1, 1270.0], [95.2, 1270.0], [95.3, 1270.0], [95.4, 1270.0], [95.5, 1295.0], [95.6, 1295.0], [95.7, 1295.0], [95.8, 1295.0], [95.9, 1306.0], [96.0, 1306.0], [96.1, 1306.0], [96.2, 1306.0], [96.3, 1308.0], [96.4, 1308.0], [96.5, 1308.0], [96.6, 1308.0], [96.7, 1326.0], [96.8, 1326.0], [96.9, 1326.0], [97.0, 1326.0], [97.1, 1326.0], [97.2, 1349.0], [97.3, 1349.0], [97.4, 1349.0], [97.5, 1349.0], [97.6, 1355.0], [97.7, 1355.0], [97.8, 1355.0], [97.9, 1355.0], [98.0, 1387.0], [98.1, 1387.0], [98.2, 1387.0], [98.3, 1387.0], [98.4, 1392.0], [98.5, 1392.0], [98.6, 1392.0], [98.7, 1392.0], [98.8, 1485.0], [98.9, 1485.0], [99.0, 1485.0], [99.1, 1485.0], [99.2, 1700.0], [99.3, 1700.0], [99.4, 1700.0], [99.5, 1700.0], [99.6, 24039.0], [99.7, 24039.0], [99.8, 24039.0], [99.9, 24039.0], [100.0, 24039.0]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[0.0, 335.0], [0.1, 335.0], [0.2, 335.0], [0.3, 347.0], [0.4, 347.0], [0.5, 348.0], [0.6, 348.0], [0.7, 351.0], [0.8, 351.0], [0.9, 351.0], [1.0, 354.0], [1.1, 354.0], [1.2, 356.0], [1.3, 356.0], [1.4, 356.0], [1.5, 356.0], [1.6, 357.0], [1.7, 357.0], [1.8, 357.0], [1.9, 357.0], [2.0, 357.0], [2.1, 360.0], [2.2, 360.0], [2.3, 360.0], [2.4, 360.0], [2.5, 362.0], [2.6, 362.0], [2.7, 362.0], [2.8, 364.0], [2.9, 364.0], [3.0, 368.0], [3.1, 368.0], [3.2, 371.0], [3.3, 371.0], [3.4, 371.0], [3.5, 374.0], [3.6, 374.0], [3.7, 384.0], [3.8, 384.0], [3.9, 390.0], [4.0, 390.0], [4.1, 394.0], [4.2, 394.0], [4.3, 394.0], [4.4, 395.0], [4.5, 395.0], [4.6, 397.0], [4.7, 397.0], [4.8, 398.0], [4.9, 398.0], [5.0, 399.0], [5.1, 399.0], [5.2, 399.0], [5.3, 400.0], [5.4, 400.0], [5.5, 402.0], [5.6, 402.0], [5.7, 402.0], [5.8, 402.0], [5.9, 403.0], [6.0, 403.0], [6.1, 403.0], [6.2, 403.0], [6.3, 403.0], [6.4, 403.0], [6.5, 403.0], [6.6, 406.0], [6.7, 406.0], [6.8, 406.0], [6.9, 406.0], [7.0, 406.0], [7.1, 407.0], [7.2, 407.0], [7.3, 407.0], [7.4, 407.0], [7.5, 410.0], [7.6, 410.0], [7.7, 410.0], [7.8, 410.0], [7.9, 410.0], [8.0, 411.0], [8.1, 411.0], [8.2, 411.0], [8.3, 411.0], [8.4, 412.0], [8.5, 412.0], [8.6, 412.0], [8.7, 412.0], [8.8, 412.0], [8.9, 413.0], [9.0, 413.0], [9.1, 413.0], [9.2, 413.0], [9.3, 414.0], [9.4, 414.0], [9.5, 414.0], [9.6, 415.0], [9.7, 415.0], [9.8, 417.0], [9.9, 417.0], [10.0, 417.0], [10.1, 417.0], [10.2, 417.0], [10.3, 417.0], [10.4, 417.0], [10.5, 417.0], [10.6, 417.0], [10.7, 418.0], [10.8, 418.0], [10.9, 419.0], [11.0, 419.0], [11.1, 419.0], [11.2, 419.0], [11.3, 419.0], [11.4, 419.0], [11.5, 419.0], [11.6, 419.0], [11.7, 419.0], [11.8, 420.0], [11.9, 420.0], [12.0, 420.0], [12.1, 420.0], [12.2, 420.0], [12.3, 421.0], [12.4, 421.0], [12.5, 422.0], [12.6, 422.0], [12.7, 422.0], [12.8, 422.0], [12.9, 422.0], [13.0, 423.0], [13.1, 423.0], [13.2, 424.0], [13.3, 424.0], [13.4, 425.0], [13.5, 425.0], [13.6, 425.0], [13.7, 428.0], [13.8, 428.0], [13.9, 429.0], [14.0, 429.0], [14.1, 430.0], [14.2, 430.0], [14.3, 432.0], [14.4, 432.0], [14.5, 432.0], [14.6, 432.0], [14.7, 432.0], [14.8, 433.0], [14.9, 433.0], [15.0, 436.0], [15.1, 436.0], [15.2, 436.0], [15.3, 436.0], [15.4, 436.0], [15.5, 436.0], [15.6, 436.0], [15.7, 436.0], [15.8, 436.0], [15.9, 437.0], [16.0, 437.0], [16.1, 439.0], [16.2, 439.0], [16.3, 439.0], [16.4, 439.0], [16.5, 439.0], [16.6, 440.0], [16.7, 440.0], [16.8, 440.0], [16.9, 440.0], [17.0, 440.0], [17.1, 441.0], [17.2, 441.0], [17.3, 441.0], [17.4, 441.0], [17.5, 441.0], [17.6, 441.0], [17.7, 444.0], [17.8, 444.0], [17.9, 444.0], [18.0, 444.0], [18.1, 444.0], [18.2, 444.0], [18.3, 444.0], [18.4, 445.0], [18.5, 445.0], [18.6, 447.0], [18.7, 447.0], [18.8, 447.0], [18.9, 447.0], [19.0, 447.0], [19.1, 448.0], [19.2, 448.0], [19.3, 449.0], [19.4, 449.0], [19.5, 449.0], [19.6, 449.0], [19.7, 449.0], [19.8, 450.0], [19.9, 450.0], [20.0, 450.0], [20.1, 450.0], [20.2, 452.0], [20.3, 452.0], [20.4, 452.0], [20.5, 452.0], [20.6, 452.0], [20.7, 452.0], [20.8, 452.0], [20.9, 452.0], [21.0, 452.0], [21.1, 452.0], [21.2, 452.0], [21.3, 452.0], [21.4, 453.0], [21.5, 453.0], [21.6, 453.0], [21.7, 453.0], [21.8, 453.0], [21.9, 453.0], [22.0, 455.0], [22.1, 455.0], [22.2, 455.0], [22.3, 456.0], [22.4, 456.0], [22.5, 456.0], [22.6, 456.0], [22.7, 456.0], [22.8, 456.0], [22.9, 456.0], [23.0, 456.0], [23.1, 456.0], [23.2, 458.0], [23.3, 458.0], [23.4, 459.0], [23.5, 459.0], [23.6, 460.0], [23.7, 460.0], [23.8, 460.0], [23.9, 460.0], [24.0, 460.0], [24.1, 461.0], [24.2, 461.0], [24.3, 461.0], [24.4, 461.0], [24.5, 461.0], [24.6, 461.0], [24.7, 461.0], [24.8, 461.0], [24.9, 461.0], [25.0, 465.0], [25.1, 465.0], [25.2, 465.0], [25.3, 465.0], [25.4, 465.0], [25.5, 465.0], [25.6, 465.0], [25.7, 466.0], [25.8, 466.0], [25.9, 469.0], [26.0, 469.0], [26.1, 469.0], [26.2, 469.0], [26.3, 469.0], [26.4, 470.0], [26.5, 470.0], [26.6, 470.0], [26.7, 470.0], [26.8, 471.0], [26.9, 471.0], [27.0, 473.0], [27.1, 473.0], [27.2, 473.0], [27.3, 477.0], [27.4, 477.0], [27.5, 477.0], [27.6, 477.0], [27.7, 477.0], [27.8, 477.0], [27.9, 478.0], [28.0, 478.0], [28.1, 478.0], [28.2, 479.0], [28.3, 479.0], [28.4, 480.0], [28.5, 480.0], [28.6, 480.0], [28.7, 480.0], [28.8, 480.0], [28.9, 480.0], [29.0, 480.0], [29.1, 481.0], [29.2, 481.0], [29.3, 482.0], [29.4, 482.0], [29.5, 484.0], [29.6, 484.0], [29.7, 484.0], [29.8, 484.0], [29.9, 484.0], [30.0, 485.0], [30.1, 485.0], [30.2, 485.0], [30.3, 485.0], [30.4, 485.0], [30.5, 485.0], [30.6, 485.0], [30.7, 485.0], [30.8, 485.0], [30.9, 486.0], [31.0, 486.0], [31.1, 487.0], [31.2, 487.0], [31.3, 487.0], [31.4, 487.0], [31.5, 487.0], [31.6, 488.0], [31.7, 488.0], [31.8, 489.0], [31.9, 489.0], [32.0, 489.0], [32.1, 489.0], [32.2, 489.0], [32.3, 489.0], [32.4, 489.0], [32.5, 490.0], [32.6, 490.0], [32.7, 490.0], [32.8, 490.0], [32.9, 490.0], [33.0, 490.0], [33.1, 490.0], [33.2, 491.0], [33.3, 491.0], [33.4, 491.0], [33.5, 491.0], [33.6, 492.0], [33.7, 492.0], [33.8, 492.0], [33.9, 492.0], [34.0, 492.0], [34.1, 492.0], [34.2, 492.0], [34.3, 493.0], [34.4, 493.0], [34.5, 494.0], [34.6, 494.0], [34.7, 494.0], [34.8, 494.0], [34.9, 494.0], [35.0, 497.0], [35.1, 497.0], [35.2, 498.0], [35.3, 498.0], [35.4, 498.0], [35.5, 498.0], [35.6, 498.0], [35.7, 499.0], [35.8, 499.0], [35.9, 499.0], [36.0, 499.0], [36.1, 500.0], [36.2, 500.0], [36.3, 501.0], [36.4, 501.0], [36.5, 501.0], [36.6, 501.0], [36.7, 501.0], [36.8, 501.0], [36.9, 501.0], [37.0, 501.0], [37.1, 501.0], [37.2, 502.0], [37.3, 502.0], [37.4, 502.0], [37.5, 503.0], [37.6, 503.0], [37.7, 503.0], [37.8, 503.0], [37.9, 504.0], [38.0, 504.0], [38.1, 504.0], [38.2, 504.0], [38.3, 504.0], [38.4, 504.0], [38.5, 504.0], [38.6, 504.0], [38.7, 504.0], [38.8, 506.0], [38.9, 506.0], [39.0, 506.0], [39.1, 507.0], [39.2, 507.0], [39.3, 508.0], [39.4, 508.0], [39.5, 509.0], [39.6, 509.0], [39.7, 509.0], [39.8, 509.0], [39.9, 509.0], [40.0, 510.0], [40.1, 510.0], [40.2, 510.0], [40.3, 510.0], [40.4, 511.0], [40.5, 511.0], [40.6, 511.0], [40.7, 511.0], [40.8, 511.0], [40.9, 511.0], [41.0, 511.0], [41.1, 512.0], [41.2, 512.0], [41.3, 513.0], [41.4, 513.0], [41.5, 513.0], [41.6, 513.0], [41.7, 513.0], [41.8, 513.0], [41.9, 513.0], [42.0, 514.0], [42.1, 514.0], [42.2, 515.0], [42.3, 515.0], [42.4, 515.0], [42.5, 515.0], [42.6, 515.0], [42.7, 515.0], [42.8, 515.0], [42.9, 515.0], [43.0, 515.0], [43.1, 515.0], [43.2, 515.0], [43.3, 515.0], [43.4, 516.0], [43.5, 516.0], [43.6, 517.0], [43.7, 517.0], [43.8, 517.0], [43.9, 517.0], [44.0, 518.0], [44.1, 518.0], [44.2, 518.0], [44.3, 518.0], [44.4, 518.0], [44.5, 519.0], [44.6, 519.0], [44.7, 521.0], [44.8, 521.0], [44.9, 521.0], [45.0, 521.0], [45.1, 521.0], [45.2, 522.0], [45.3, 522.0], [45.4, 522.0], [45.5, 522.0], [45.6, 523.0], [45.7, 523.0], [45.8, 523.0], [45.9, 523.0], [46.0, 523.0], [46.1, 523.0], [46.2, 523.0], [46.3, 523.0], [46.4, 523.0], [46.5, 524.0], [46.6, 524.0], [46.7, 524.0], [46.8, 524.0], [46.9, 524.0], [47.0, 525.0], [47.1, 525.0], [47.2, 525.0], [47.3, 525.0], [47.4, 525.0], [47.5, 525.0], [47.6, 525.0], [47.7, 526.0], [47.8, 526.0], [47.9, 526.0], [48.0, 526.0], [48.1, 526.0], [48.2, 526.0], [48.3, 528.0], [48.4, 528.0], [48.5, 528.0], [48.6, 531.0], [48.7, 531.0], [48.8, 531.0], [48.9, 531.0], [49.0, 531.0], [49.1, 531.0], [49.2, 531.0], [49.3, 532.0], [49.4, 532.0], [49.5, 534.0], [49.6, 534.0], [49.7, 534.0], [49.8, 534.0], [49.9, 535.0], [50.0, 535.0], [50.1, 535.0], [50.2, 537.0], [50.3, 537.0], [50.4, 537.0], [50.5, 537.0], [50.6, 537.0], [50.7, 537.0], [50.8, 538.0], [50.9, 538.0], [51.0, 538.0], [51.1, 538.0], [51.2, 538.0], [51.3, 538.0], [51.4, 538.0], [51.5, 539.0], [51.6, 539.0], [51.7, 539.0], [51.8, 540.0], [51.9, 540.0], [52.0, 540.0], [52.1, 540.0], [52.2, 541.0], [52.3, 541.0], [52.4, 541.0], [52.5, 541.0], [52.6, 541.0], [52.7, 542.0], [52.8, 542.0], [52.9, 542.0], [53.0, 542.0], [53.1, 543.0], [53.2, 543.0], [53.3, 544.0], [53.4, 544.0], [53.5, 544.0], [53.6, 544.0], [53.7, 544.0], [53.8, 544.0], [53.9, 544.0], [54.0, 544.0], [54.1, 544.0], [54.2, 545.0], [54.3, 545.0], [54.4, 545.0], [54.5, 545.0], [54.6, 545.0], [54.7, 545.0], [54.8, 545.0], [54.9, 546.0], [55.0, 546.0], [55.1, 546.0], [55.2, 547.0], [55.3, 547.0], [55.4, 547.0], [55.5, 547.0], [55.6, 548.0], [55.7, 548.0], [55.8, 548.0], [55.9, 548.0], [56.0, 548.0], [56.1, 549.0], [56.2, 549.0], [56.3, 549.0], [56.4, 549.0], [56.5, 550.0], [56.6, 550.0], [56.7, 550.0], [56.8, 550.0], [56.9, 550.0], [57.0, 550.0], [57.1, 550.0], [57.2, 551.0], [57.3, 551.0], [57.4, 551.0], [57.5, 551.0], [57.6, 551.0], [57.7, 551.0], [57.8, 551.0], [57.9, 552.0], [58.0, 552.0], [58.1, 552.0], [58.2, 552.0], [58.3, 553.0], [58.4, 553.0], [58.5, 553.0], [58.6, 553.0], [58.7, 553.0], [58.8, 553.0], [58.9, 553.0], [59.0, 553.0], [59.1, 553.0], [59.2, 553.0], [59.3, 553.0], [59.4, 553.0], [59.5, 554.0], [59.6, 554.0], [59.7, 554.0], [59.8, 554.0], [59.9, 556.0], [60.0, 556.0], [60.1, 556.0], [60.2, 556.0], [60.3, 556.0], [60.4, 557.0], [60.5, 557.0], [60.6, 559.0], [60.7, 559.0], [60.8, 559.0], [60.9, 559.0], [61.0, 560.0], [61.1, 560.0], [61.2, 560.0], [61.3, 561.0], [61.4, 561.0], [61.5, 561.0], [61.6, 561.0], [61.7, 562.0], [61.8, 562.0], [61.9, 562.0], [62.0, 563.0], [62.1, 563.0], [62.2, 563.0], [62.3, 563.0], [62.4, 563.0], [62.5, 563.0], [62.6, 564.0], [62.7, 564.0], [62.8, 564.0], [62.9, 564.0], [63.0, 564.0], [63.1, 566.0], [63.2, 566.0], [63.3, 566.0], [63.4, 566.0], [63.5, 566.0], [63.6, 566.0], [63.7, 566.0], [63.8, 567.0], [63.9, 567.0], [64.0, 567.0], [64.1, 567.0], [64.2, 568.0], [64.3, 568.0], [64.4, 569.0], [64.5, 569.0], [64.6, 569.0], [64.7, 570.0], [64.8, 570.0], [64.9, 571.0], [65.0, 571.0], [65.1, 572.0], [65.2, 572.0], [65.3, 572.0], [65.4, 572.0], [65.5, 572.0], [65.6, 573.0], [65.7, 573.0], [65.8, 574.0], [65.9, 574.0], [66.0, 574.0], [66.1, 574.0], [66.2, 574.0], [66.3, 574.0], [66.4, 574.0], [66.5, 575.0], [66.6, 575.0], [66.7, 575.0], [66.8, 575.0], [66.9, 578.0], [67.0, 578.0], [67.1, 578.0], [67.2, 579.0], [67.3, 579.0], [67.4, 579.0], [67.5, 579.0], [67.6, 579.0], [67.7, 579.0], [67.8, 579.0], [67.9, 579.0], [68.0, 579.0], [68.1, 579.0], [68.2, 579.0], [68.3, 580.0], [68.4, 580.0], [68.5, 581.0], [68.6, 581.0], [68.7, 581.0], [68.8, 581.0], [68.9, 581.0], [69.0, 581.0], [69.1, 581.0], [69.2, 582.0], [69.3, 582.0], [69.4, 583.0], [69.5, 583.0], [69.6, 583.0], [69.7, 583.0], [69.8, 583.0], [69.9, 583.0], [70.0, 583.0], [70.1, 584.0], [70.2, 584.0], [70.3, 584.0], [70.4, 584.0], [70.5, 584.0], [70.6, 586.0], [70.7, 586.0], [70.8, 586.0], [70.9, 586.0], [71.0, 591.0], [71.1, 591.0], [71.2, 591.0], [71.3, 591.0], [71.4, 591.0], [71.5, 592.0], [71.6, 592.0], [71.7, 592.0], [71.8, 592.0], [71.9, 593.0], [72.0, 593.0], [72.1, 593.0], [72.2, 593.0], [72.3, 593.0], [72.4, 594.0], [72.5, 594.0], [72.6, 596.0], [72.7, 596.0], [72.8, 597.0], [72.9, 597.0], [73.0, 597.0], [73.1, 598.0], [73.2, 598.0], [73.3, 599.0], [73.4, 599.0], [73.5, 599.0], [73.6, 599.0], [73.7, 602.0], [73.8, 602.0], [73.9, 602.0], [74.0, 604.0], [74.1, 604.0], [74.2, 606.0], [74.3, 606.0], [74.4, 607.0], [74.5, 607.0], [74.6, 607.0], [74.7, 607.0], [74.8, 607.0], [74.9, 609.0], [75.0, 609.0], [75.1, 610.0], [75.2, 610.0], [75.3, 611.0], [75.4, 611.0], [75.5, 611.0], [75.6, 612.0], [75.7, 612.0], [75.8, 613.0], [75.9, 613.0], [76.0, 614.0], [76.1, 614.0], [76.2, 614.0], [76.3, 614.0], [76.4, 614.0], [76.5, 617.0], [76.6, 617.0], [76.7, 619.0], [76.8, 619.0], [76.9, 622.0], [77.0, 622.0], [77.1, 622.0], [77.2, 622.0], [77.3, 622.0], [77.4, 622.0], [77.5, 622.0], [77.6, 622.0], [77.7, 622.0], [77.8, 624.0], [77.9, 624.0], [78.0, 624.0], [78.1, 626.0], [78.2, 626.0], [78.3, 628.0], [78.4, 628.0], [78.5, 629.0], [78.6, 629.0], [78.7, 630.0], [78.8, 630.0], [78.9, 630.0], [79.0, 631.0], [79.1, 631.0], [79.2, 631.0], [79.3, 631.0], [79.4, 633.0], [79.5, 633.0], [79.6, 633.0], [79.7, 633.0], [79.8, 633.0], [79.9, 633.0], [80.0, 633.0], [80.1, 634.0], [80.2, 634.0], [80.3, 635.0], [80.4, 635.0], [80.5, 638.0], [80.6, 638.0], [80.7, 638.0], [80.8, 645.0], [80.9, 645.0], [81.0, 648.0], [81.1, 648.0], [81.2, 653.0], [81.3, 653.0], [81.4, 653.0], [81.5, 653.0], [81.6, 653.0], [81.7, 659.0], [81.8, 659.0], [81.9, 660.0], [82.0, 660.0], [82.1, 662.0], [82.2, 662.0], [82.3, 662.0], [82.4, 664.0], [82.5, 664.0], [82.6, 664.0], [82.7, 664.0], [82.8, 664.0], [82.9, 664.0], [83.0, 666.0], [83.1, 666.0], [83.2, 666.0], [83.3, 667.0], [83.4, 667.0], [83.5, 667.0], [83.6, 667.0], [83.7, 668.0], [83.8, 668.0], [83.9, 668.0], [84.0, 670.0], [84.1, 670.0], [84.2, 671.0], [84.3, 671.0], [84.4, 671.0], [84.5, 671.0], [84.6, 674.0], [84.7, 674.0], [84.8, 674.0], [84.9, 675.0], [85.0, 675.0], [85.1, 679.0], [85.2, 679.0], [85.3, 682.0], [85.4, 682.0], [85.5, 688.0], [85.6, 688.0], [85.7, 688.0], [85.8, 689.0], [85.9, 689.0], [86.0, 690.0], [86.1, 690.0], [86.2, 691.0], [86.3, 691.0], [86.4, 697.0], [86.5, 697.0], [86.6, 697.0], [86.7, 698.0], [86.8, 698.0], [86.9, 700.0], [87.0, 700.0], [87.1, 702.0], [87.2, 702.0], [87.3, 702.0], [87.4, 709.0], [87.5, 709.0], [87.6, 712.0], [87.7, 712.0], [87.8, 719.0], [87.9, 719.0], [88.0, 719.0], [88.1, 719.0], [88.2, 719.0], [88.3, 722.0], [88.4, 722.0], [88.5, 726.0], [88.6, 726.0], [88.7, 726.0], [88.8, 726.0], [88.9, 729.0], [89.0, 729.0], [89.1, 729.0], [89.2, 734.0], [89.3, 734.0], [89.4, 744.0], [89.5, 744.0], [89.6, 746.0], [89.7, 746.0], [89.8, 746.0], [89.9, 746.0], [90.0, 746.0], [90.1, 751.0], [90.2, 751.0], [90.3, 760.0], [90.4, 760.0], [90.5, 766.0], [90.6, 766.0], [90.7, 766.0], [90.8, 769.0], [90.9, 769.0], [91.0, 771.0], [91.1, 771.0], [91.2, 779.0], [91.3, 779.0], [91.4, 780.0], [91.5, 780.0], [91.6, 780.0], [91.7, 785.0], [91.8, 785.0], [91.9, 797.0], [92.0, 797.0], [92.1, 798.0], [92.2, 798.0], [92.3, 799.0], [92.4, 799.0], [92.5, 799.0], [92.6, 803.0], [92.7, 803.0], [92.8, 804.0], [92.9, 804.0], [93.0, 804.0], [93.1, 804.0], [93.2, 807.0], [93.3, 807.0], [93.4, 807.0], [93.5, 814.0], [93.6, 814.0], [93.7, 815.0], [93.8, 815.0], [93.9, 824.0], [94.0, 824.0], [94.1, 824.0], [94.2, 827.0], [94.3, 827.0], [94.4, 828.0], [94.5, 828.0], [94.6, 839.0], [94.7, 839.0], [94.8, 839.0], [94.9, 839.0], [95.0, 839.0], [95.1, 841.0], [95.2, 841.0], [95.3, 845.0], [95.4, 845.0], [95.5, 847.0], [95.6, 847.0], [95.7, 872.0], [95.8, 872.0], [95.9, 872.0], [96.0, 874.0], [96.1, 874.0], [96.2, 878.0], [96.3, 878.0], [96.4, 879.0], [96.5, 879.0], [96.6, 942.0], [96.7, 942.0], [96.8, 942.0], [96.9, 949.0], [97.0, 949.0], [97.1, 964.0], [97.2, 964.0], [97.3, 985.0], [97.4, 985.0], [97.5, 985.0], [97.6, 991.0], [97.7, 991.0], [97.8, 1001.0], [97.9, 1001.0], [98.0, 1119.0], [98.1, 1119.0], [98.2, 1163.0], [98.3, 1163.0], [98.4, 1163.0], [98.5, 1173.0], [98.6, 1173.0], [98.7, 1326.0], [98.8, 1326.0], [98.9, 1398.0], [99.0, 1398.0], [99.1, 1463.0], [99.2, 1463.0], [99.3, 1463.0], [99.4, 1633.0], [99.5, 1633.0], [99.6, 2288.0], [99.7, 2288.0], [99.8, 2630.0], [99.9, 2630.0], [100.0, 2630.0]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[0.0, 301.0], [0.1, 303.0], [0.2, 303.0], [0.3, 304.0], [0.4, 307.0], [0.5, 307.0], [0.6, 307.0], [0.7, 308.0], [0.8, 308.0], [0.9, 309.0], [1.0, 310.0], [1.1, 310.0], [1.2, 311.0], [1.3, 312.0], [1.4, 312.0], [1.5, 312.0], [1.6, 312.0], [1.7, 312.0], [1.8, 312.0], [1.9, 313.0], [2.0, 313.0], [2.1, 313.0], [2.2, 313.0], [2.3, 313.0], [2.4, 313.0], [2.5, 313.0], [2.6, 314.0], [2.7, 314.0], [2.8, 314.0], [2.9, 314.0], [3.0, 314.0], [3.1, 314.0], [3.2, 314.0], [3.3, 315.0], [3.4, 315.0], [3.5, 315.0], [3.6, 315.0], [3.7, 315.0], [3.8, 315.0], [3.9, 315.0], [4.0, 315.0], [4.1, 315.0], [4.2, 315.0], [4.3, 315.0], [4.4, 316.0], [4.5, 316.0], [4.6, 316.0], [4.7, 316.0], [4.8, 316.0], [4.9, 316.0], [5.0, 316.0], [5.1, 316.0], [5.2, 316.0], [5.3, 316.0], [5.4, 316.0], [5.5, 317.0], [5.6, 317.0], [5.7, 317.0], [5.8, 317.0], [5.9, 317.0], [6.0, 317.0], [6.1, 317.0], [6.2, 317.0], [6.3, 317.0], [6.4, 317.0], [6.5, 318.0], [6.6, 318.0], [6.7, 318.0], [6.8, 318.0], [6.9, 318.0], [7.0, 318.0], [7.1, 318.0], [7.2, 318.0], [7.3, 318.0], [7.4, 319.0], [7.5, 319.0], [7.6, 319.0], [7.7, 319.0], [7.8, 319.0], [7.9, 319.0], [8.0, 320.0], [8.1, 320.0], [8.2, 320.0], [8.3, 320.0], [8.4, 320.0], [8.5, 320.0], [8.6, 320.0], [8.7, 320.0], [8.8, 320.0], [8.9, 321.0], [9.0, 321.0], [9.1, 321.0], [9.2, 321.0], [9.3, 321.0], [9.4, 321.0], [9.5, 321.0], [9.6, 322.0], [9.7, 322.0], [9.8, 322.0], [9.9, 322.0], [10.0, 322.0], [10.1, 322.0], [10.2, 322.0], [10.3, 322.0], [10.4, 323.0], [10.5, 323.0], [10.6, 323.0], [10.7, 323.0], [10.8, 323.0], [10.9, 323.0], [11.0, 323.0], [11.1, 324.0], [11.2, 324.0], [11.3, 324.0], [11.4, 324.0], [11.5, 325.0], [11.6, 325.0], [11.7, 325.0], [11.8, 325.0], [11.9, 325.0], [12.0, 325.0], [12.1, 326.0], [12.2, 326.0], [12.3, 326.0], [12.4, 326.0], [12.5, 326.0], [12.6, 326.0], [12.7, 327.0], [12.8, 327.0], [12.9, 327.0], [13.0, 327.0], [13.1, 327.0], [13.2, 327.0], [13.3, 327.0], [13.4, 328.0], [13.5, 328.0], [13.6, 328.0], [13.7, 328.0], [13.8, 329.0], [13.9, 329.0], [14.0, 329.0], [14.1, 329.0], [14.2, 330.0], [14.3, 330.0], [14.4, 330.0], [14.5, 330.0], [14.6, 330.0], [14.7, 331.0], [14.8, 332.0], [14.9, 332.0], [15.0, 332.0], [15.1, 333.0], [15.2, 334.0], [15.3, 334.0], [15.4, 334.0], [15.5, 335.0], [15.6, 335.0], [15.7, 335.0], [15.8, 335.0], [15.9, 335.0], [16.0, 336.0], [16.1, 337.0], [16.2, 337.0], [16.3, 338.0], [16.4, 340.0], [16.5, 340.0], [16.6, 341.0], [16.7, 342.0], [16.8, 343.0], [16.9, 343.0], [17.0, 343.0], [17.1, 345.0], [17.2, 345.0], [17.3, 346.0], [17.4, 346.0], [17.5, 348.0], [17.6, 348.0], [17.7, 350.0], [17.8, 350.0], [17.9, 350.0], [18.0, 351.0], [18.1, 351.0], [18.2, 351.0], [18.3, 352.0], [18.4, 352.0], [18.5, 353.0], [18.6, 353.0], [18.7, 353.0], [18.8, 354.0], [18.9, 354.0], [19.0, 354.0], [19.1, 355.0], [19.2, 356.0], [19.3, 356.0], [19.4, 356.0], [19.5, 356.0], [19.6, 357.0], [19.7, 357.0], [19.8, 357.0], [19.9, 357.0], [20.0, 357.0], [20.1, 357.0], [20.2, 357.0], [20.3, 358.0], [20.4, 358.0], [20.5, 358.0], [20.6, 358.0], [20.7, 358.0], [20.8, 358.0], [20.9, 358.0], [21.0, 358.0], [21.1, 358.0], [21.2, 359.0], [21.3, 359.0], [21.4, 359.0], [21.5, 359.0], [21.6, 359.0], [21.7, 359.0], [21.8, 360.0], [21.9, 360.0], [22.0, 360.0], [22.1, 360.0], [22.2, 360.0], [22.3, 360.0], [22.4, 360.0], [22.5, 360.0], [22.6, 360.0], [22.7, 360.0], [22.8, 360.0], [22.9, 360.0], [23.0, 360.0], [23.1, 360.0], [23.2, 360.0], [23.3, 361.0], [23.4, 361.0], [23.5, 361.0], [23.6, 361.0], [23.7, 361.0], [23.8, 361.0], [23.9, 361.0], [24.0, 361.0], [24.1, 361.0], [24.2, 361.0], [24.3, 361.0], [24.4, 361.0], [24.5, 361.0], [24.6, 362.0], [24.7, 362.0], [24.8, 362.0], [24.9, 362.0], [25.0, 362.0], [25.1, 362.0], [25.2, 362.0], [25.3, 362.0], [25.4, 362.0], [25.5, 362.0], [25.6, 362.0], [25.7, 362.0], [25.8, 362.0], [25.9, 362.0], [26.0, 362.0], [26.1, 363.0], [26.2, 363.0], [26.3, 363.0], [26.4, 363.0], [26.5, 363.0], [26.6, 363.0], [26.7, 363.0], [26.8, 363.0], [26.9, 363.0], [27.0, 363.0], [27.1, 363.0], [27.2, 363.0], [27.3, 363.0], [27.4, 363.0], [27.5, 363.0], [27.6, 363.0], [27.7, 363.0], [27.8, 363.0], [27.9, 363.0], [28.0, 363.0], [28.1, 364.0], [28.2, 364.0], [28.3, 364.0], [28.4, 364.0], [28.5, 364.0], [28.6, 364.0], [28.7, 364.0], [28.8, 364.0], [28.9, 364.0], [29.0, 364.0], [29.1, 364.0], [29.2, 364.0], [29.3, 364.0], [29.4, 364.0], [29.5, 364.0], [29.6, 364.0], [29.7, 364.0], [29.8, 364.0], [29.9, 364.0], [30.0, 365.0], [30.1, 365.0], [30.2, 365.0], [30.3, 365.0], [30.4, 365.0], [30.5, 365.0], [30.6, 365.0], [30.7, 365.0], [30.8, 365.0], [30.9, 365.0], [31.0, 365.0], [31.1, 365.0], [31.2, 365.0], [31.3, 365.0], [31.4, 365.0], [31.5, 365.0], [31.6, 365.0], [31.7, 365.0], [31.8, 365.0], [31.9, 365.0], [32.0, 365.0], [32.1, 365.0], [32.2, 365.0], [32.3, 366.0], [32.4, 366.0], [32.5, 366.0], [32.6, 366.0], [32.7, 366.0], [32.8, 366.0], [32.9, 366.0], [33.0, 366.0], [33.1, 366.0], [33.2, 366.0], [33.3, 366.0], [33.4, 366.0], [33.5, 366.0], [33.6, 366.0], [33.7, 366.0], [33.8, 366.0], [33.9, 366.0], [34.0, 366.0], [34.1, 366.0], [34.2, 366.0], [34.3, 366.0], [34.4, 366.0], [34.5, 367.0], [34.6, 367.0], [34.7, 367.0], [34.8, 367.0], [34.9, 367.0], [35.0, 367.0], [35.1, 367.0], [35.2, 367.0], [35.3, 367.0], [35.4, 367.0], [35.5, 367.0], [35.6, 367.0], [35.7, 367.0], [35.8, 367.0], [35.9, 367.0], [36.0, 367.0], [36.1, 367.0], [36.2, 367.0], [36.3, 367.0], [36.4, 367.0], [36.5, 367.0], [36.6, 367.0], [36.7, 367.0], [36.8, 367.0], [36.9, 368.0], [37.0, 368.0], [37.1, 368.0], [37.2, 368.0], [37.3, 368.0], [37.4, 368.0], [37.5, 368.0], [37.6, 368.0], [37.7, 368.0], [37.8, 368.0], [37.9, 368.0], [38.0, 368.0], [38.1, 368.0], [38.2, 368.0], [38.3, 368.0], [38.4, 368.0], [38.5, 368.0], [38.6, 368.0], [38.7, 368.0], [38.8, 368.0], [38.9, 368.0], [39.0, 368.0], [39.1, 368.0], [39.2, 368.0], [39.3, 368.0], [39.4, 368.0], [39.5, 368.0], [39.6, 368.0], [39.7, 368.0], [39.8, 368.0], [39.9, 368.0], [40.0, 369.0], [40.1, 369.0], [40.2, 369.0], [40.3, 369.0], [40.4, 369.0], [40.5, 369.0], [40.6, 369.0], [40.7, 369.0], [40.8, 369.0], [40.9, 369.0], [41.0, 369.0], [41.1, 369.0], [41.2, 369.0], [41.3, 369.0], [41.4, 369.0], [41.5, 369.0], [41.6, 369.0], [41.7, 369.0], [41.8, 369.0], [41.9, 369.0], [42.0, 369.0], [42.1, 369.0], [42.2, 369.0], [42.3, 369.0], [42.4, 369.0], [42.5, 369.0], [42.6, 369.0], [42.7, 369.0], [42.8, 369.0], [42.9, 369.0], [43.0, 369.0], [43.1, 370.0], [43.2, 370.0], [43.3, 370.0], [43.4, 370.0], [43.5, 370.0], [43.6, 370.0], [43.7, 370.0], [43.8, 370.0], [43.9, 370.0], [44.0, 370.0], [44.1, 370.0], [44.2, 370.0], [44.3, 370.0], [44.4, 370.0], [44.5, 370.0], [44.6, 370.0], [44.7, 370.0], [44.8, 370.0], [44.9, 371.0], [45.0, 371.0], [45.1, 371.0], [45.2, 371.0], [45.3, 371.0], [45.4, 371.0], [45.5, 371.0], [45.6, 371.0], [45.7, 371.0], [45.8, 371.0], [45.9, 371.0], [46.0, 371.0], [46.1, 371.0], [46.2, 371.0], [46.3, 371.0], [46.4, 371.0], [46.5, 371.0], [46.6, 371.0], [46.7, 371.0], [46.8, 371.0], [46.9, 371.0], [47.0, 371.0], [47.1, 371.0], [47.2, 371.0], [47.3, 372.0], [47.4, 372.0], [47.5, 372.0], [47.6, 372.0], [47.7, 372.0], [47.8, 372.0], [47.9, 372.0], [48.0, 372.0], [48.1, 372.0], [48.2, 372.0], [48.3, 372.0], [48.4, 372.0], [48.5, 372.0], [48.6, 372.0], [48.7, 372.0], [48.8, 372.0], [48.9, 372.0], [49.0, 372.0], [49.1, 372.0], [49.2, 372.0], [49.3, 372.0], [49.4, 372.0], [49.5, 373.0], [49.6, 373.0], [49.7, 373.0], [49.8, 373.0], [49.9, 373.0], [50.0, 373.0], [50.1, 373.0], [50.2, 373.0], [50.3, 373.0], [50.4, 373.0], [50.5, 373.0], [50.6, 373.0], [50.7, 373.0], [50.8, 373.0], [50.9, 373.0], [51.0, 373.0], [51.1, 373.0], [51.2, 373.0], [51.3, 373.0], [51.4, 373.0], [51.5, 373.0], [51.6, 373.0], [51.7, 374.0], [51.8, 374.0], [51.9, 374.0], [52.0, 374.0], [52.1, 374.0], [52.2, 374.0], [52.3, 374.0], [52.4, 374.0], [52.5, 374.0], [52.6, 374.0], [52.7, 374.0], [52.8, 374.0], [52.9, 374.0], [53.0, 374.0], [53.1, 374.0], [53.2, 374.0], [53.3, 374.0], [53.4, 375.0], [53.5, 375.0], [53.6, 375.0], [53.7, 375.0], [53.8, 375.0], [53.9, 375.0], [54.0, 375.0], [54.1, 375.0], [54.2, 375.0], [54.3, 375.0], [54.4, 375.0], [54.5, 375.0], [54.6, 375.0], [54.7, 376.0], [54.8, 376.0], [54.9, 376.0], [55.0, 376.0], [55.1, 376.0], [55.2, 376.0], [55.3, 376.0], [55.4, 376.0], [55.5, 376.0], [55.6, 376.0], [55.7, 376.0], [55.8, 376.0], [55.9, 376.0], [56.0, 376.0], [56.1, 376.0], [56.2, 376.0], [56.3, 377.0], [56.4, 377.0], [56.5, 377.0], [56.6, 377.0], [56.7, 377.0], [56.8, 377.0], [56.9, 377.0], [57.0, 377.0], [57.1, 377.0], [57.2, 377.0], [57.3, 377.0], [57.4, 377.0], [57.5, 377.0], [57.6, 377.0], [57.7, 377.0], [57.8, 377.0], [57.9, 378.0], [58.0, 378.0], [58.1, 378.0], [58.2, 378.0], [58.3, 378.0], [58.4, 378.0], [58.5, 378.0], [58.6, 378.0], [58.7, 378.0], [58.8, 378.0], [58.9, 378.0], [59.0, 379.0], [59.1, 379.0], [59.2, 379.0], [59.3, 379.0], [59.4, 379.0], [59.5, 379.0], [59.6, 379.0], [59.7, 379.0], [59.8, 379.0], [59.9, 379.0], [60.0, 379.0], [60.1, 379.0], [60.2, 379.0], [60.3, 379.0], [60.4, 379.0], [60.5, 380.0], [60.6, 380.0], [60.7, 380.0], [60.8, 380.0], [60.9, 380.0], [61.0, 380.0], [61.1, 380.0], [61.2, 380.0], [61.3, 380.0], [61.4, 380.0], [61.5, 380.0], [61.6, 380.0], [61.7, 381.0], [61.8, 381.0], [61.9, 381.0], [62.0, 381.0], [62.1, 381.0], [62.2, 381.0], [62.3, 381.0], [62.4, 381.0], [62.5, 381.0], [62.6, 381.0], [62.7, 382.0], [62.8, 382.0], [62.9, 382.0], [63.0, 382.0], [63.1, 382.0], [63.2, 382.0], [63.3, 382.0], [63.4, 382.0], [63.5, 383.0], [63.6, 383.0], [63.7, 383.0], [63.8, 383.0], [63.9, 383.0], [64.0, 383.0], [64.1, 383.0], [64.2, 383.0], [64.3, 383.0], [64.4, 383.0], [64.5, 383.0], [64.6, 383.0], [64.7, 384.0], [64.8, 384.0], [64.9, 384.0], [65.0, 384.0], [65.1, 384.0], [65.2, 384.0], [65.3, 384.0], [65.4, 385.0], [65.5, 385.0], [65.6, 385.0], [65.7, 385.0], [65.8, 385.0], [65.9, 385.0], [66.0, 386.0], [66.1, 386.0], [66.2, 386.0], [66.3, 386.0], [66.4, 386.0], [66.5, 386.0], [66.6, 386.0], [66.7, 387.0], [66.8, 387.0], [66.9, 387.0], [67.0, 387.0], [67.1, 387.0], [67.2, 388.0], [67.3, 388.0], [67.4, 388.0], [67.5, 388.0], [67.6, 388.0], [67.7, 388.0], [67.8, 388.0], [67.9, 390.0], [68.0, 390.0], [68.1, 390.0], [68.2, 390.0], [68.3, 390.0], [68.4, 390.0], [68.5, 390.0], [68.6, 390.0], [68.7, 390.0], [68.8, 390.0], [68.9, 391.0], [69.0, 391.0], [69.1, 391.0], [69.2, 392.0], [69.3, 392.0], [69.4, 393.0], [69.5, 393.0], [69.6, 393.0], [69.7, 393.0], [69.8, 394.0], [69.9, 394.0], [70.0, 394.0], [70.1, 395.0], [70.2, 395.0], [70.3, 395.0], [70.4, 396.0], [70.5, 396.0], [70.6, 397.0], [70.7, 398.0], [70.8, 399.0], [70.9, 399.0], [71.0, 401.0], [71.1, 401.0], [71.2, 401.0], [71.3, 401.0], [71.4, 402.0], [71.5, 402.0], [71.6, 402.0], [71.7, 403.0], [71.8, 403.0], [71.9, 403.0], [72.0, 403.0], [72.1, 403.0], [72.2, 404.0], [72.3, 404.0], [72.4, 404.0], [72.5, 404.0], [72.6, 405.0], [72.7, 405.0], [72.8, 405.0], [72.9, 405.0], [73.0, 405.0], [73.1, 405.0], [73.2, 405.0], [73.3, 406.0], [73.4, 406.0], [73.5, 406.0], [73.6, 406.0], [73.7, 407.0], [73.8, 407.0], [73.9, 407.0], [74.0, 407.0], [74.1, 407.0], [74.2, 407.0], [74.3, 407.0], [74.4, 408.0], [74.5, 408.0], [74.6, 408.0], [74.7, 409.0], [74.8, 409.0], [74.9, 410.0], [75.0, 410.0], [75.1, 410.0], [75.2, 410.0], [75.3, 410.0], [75.4, 410.0], [75.5, 410.0], [75.6, 410.0], [75.7, 410.0], [75.8, 411.0], [75.9, 411.0], [76.0, 411.0], [76.1, 411.0], [76.2, 411.0], [76.3, 411.0], [76.4, 412.0], [76.5, 412.0], [76.6, 412.0], [76.7, 412.0], [76.8, 412.0], [76.9, 412.0], [77.0, 412.0], [77.1, 412.0], [77.2, 412.0], [77.3, 412.0], [77.4, 412.0], [77.5, 412.0], [77.6, 413.0], [77.7, 413.0], [77.8, 413.0], [77.9, 413.0], [78.0, 413.0], [78.1, 413.0], [78.2, 413.0], [78.3, 413.0], [78.4, 413.0], [78.5, 414.0], [78.6, 414.0], [78.7, 414.0], [78.8, 414.0], [78.9, 414.0], [79.0, 414.0], [79.1, 414.0], [79.2, 414.0], [79.3, 414.0], [79.4, 414.0], [79.5, 415.0], [79.6, 415.0], [79.7, 415.0], [79.8, 415.0], [79.9, 415.0], [80.0, 415.0], [80.1, 415.0], [80.2, 415.0], [80.3, 416.0], [80.4, 416.0], [80.5, 416.0], [80.6, 416.0], [80.7, 416.0], [80.8, 416.0], [80.9, 416.0], [81.0, 416.0], [81.1, 416.0], [81.2, 416.0], [81.3, 416.0], [81.4, 417.0], [81.5, 417.0], [81.6, 417.0], [81.7, 417.0], [81.8, 417.0], [81.9, 417.0], [82.0, 417.0], [82.1, 417.0], [82.2, 417.0], [82.3, 417.0], [82.4, 417.0], [82.5, 417.0], [82.6, 417.0], [82.7, 417.0], [82.8, 418.0], [82.9, 418.0], [83.0, 418.0], [83.1, 418.0], [83.2, 418.0], [83.3, 418.0], [83.4, 418.0], [83.5, 418.0], [83.6, 418.0], [83.7, 418.0], [83.8, 418.0], [83.9, 418.0], [84.0, 418.0], [84.1, 418.0], [84.2, 419.0], [84.3, 419.0], [84.4, 419.0], [84.5, 419.0], [84.6, 419.0], [84.7, 419.0], [84.8, 419.0], [84.9, 419.0], [85.0, 419.0], [85.1, 419.0], [85.2, 419.0], [85.3, 419.0], [85.4, 419.0], [85.5, 420.0], [85.6, 420.0], [85.7, 420.0], [85.8, 420.0], [85.9, 420.0], [86.0, 420.0], [86.1, 420.0], [86.2, 420.0], [86.3, 420.0], [86.4, 420.0], [86.5, 420.0], [86.6, 420.0], [86.7, 420.0], [86.8, 420.0], [86.9, 420.0], [87.0, 421.0], [87.1, 421.0], [87.2, 421.0], [87.3, 421.0], [87.4, 421.0], [87.5, 421.0], [87.6, 421.0], [87.7, 421.0], [87.8, 421.0], [87.9, 421.0], [88.0, 422.0], [88.1, 422.0], [88.2, 422.0], [88.3, 422.0], [88.4, 422.0], [88.5, 422.0], [88.6, 422.0], [88.7, 422.0], [88.8, 422.0], [88.9, 422.0], [89.0, 422.0], [89.1, 422.0], [89.2, 423.0], [89.3, 423.0], [89.4, 423.0], [89.5, 423.0], [89.6, 423.0], [89.7, 423.0], [89.8, 424.0], [89.9, 424.0], [90.0, 424.0], [90.1, 424.0], [90.2, 424.0], [90.3, 425.0], [90.4, 425.0], [90.5, 425.0], [90.6, 425.0], [90.7, 425.0], [90.8, 425.0], [90.9, 425.0], [91.0, 425.0], [91.1, 425.0], [91.2, 426.0], [91.3, 426.0], [91.4, 426.0], [91.5, 426.0], [91.6, 426.0], [91.7, 426.0], [91.8, 426.0], [91.9, 426.0], [92.0, 426.0], [92.1, 426.0], [92.2, 426.0], [92.3, 427.0], [92.4, 427.0], [92.5, 427.0], [92.6, 427.0], [92.7, 428.0], [92.8, 428.0], [92.9, 428.0], [93.0, 428.0], [93.1, 429.0], [93.2, 429.0], [93.3, 429.0], [93.4, 429.0], [93.5, 429.0], [93.6, 429.0], [93.7, 430.0], [93.8, 430.0], [93.9, 430.0], [94.0, 430.0], [94.1, 430.0], [94.2, 431.0], [94.3, 431.0], [94.4, 431.0], [94.5, 431.0], [94.6, 431.0], [94.7, 431.0], [94.8, 432.0], [94.9, 432.0], [95.0, 433.0], [95.1, 433.0], [95.2, 433.0], [95.3, 435.0], [95.4, 435.0], [95.5, 436.0], [95.6, 436.0], [95.7, 437.0], [95.8, 437.0], [95.9, 438.0], [96.0, 439.0], [96.1, 440.0], [96.2, 441.0], [96.3, 441.0], [96.4, 443.0], [96.5, 443.0], [96.6, 444.0], [96.7, 445.0], [96.8, 445.0], [96.9, 446.0], [97.0, 447.0], [97.1, 448.0], [97.2, 449.0], [97.3, 450.0], [97.4, 450.0], [97.5, 450.0], [97.6, 451.0], [97.7, 452.0], [97.8, 457.0], [97.9, 457.0], [98.0, 459.0], [98.1, 461.0], [98.2, 477.0], [98.3, 478.0], [98.4, 479.0], [98.5, 493.0], [98.6, 493.0], [98.7, 494.0], [98.8, 500.0], [98.9, 502.0], [99.0, 504.0], [99.1, 514.0], [99.2, 523.0], [99.3, 537.0], [99.4, 554.0], [99.5, 555.0], [99.6, 670.0], [99.7, 752.0], [99.8, 827.0], [99.9, 1002.0], [100.0, 1365.0]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[0.0, 1327.0], [0.1, 1327.0], [0.2, 1327.0], [0.3, 1327.0], [0.4, 1327.0], [0.5, 1327.0], [0.6, 1327.0], [0.7, 1327.0], [0.8, 1327.0], [0.9, 1327.0], [1.0, 1327.0], [1.1, 1327.0], [1.2, 1327.0], [1.3, 1327.0], [1.4, 1327.0], [1.5, 1327.0], [1.6, 1327.0], [1.7, 1327.0], [1.8, 1327.0], [1.9, 1327.0], [2.0, 1327.0], [2.1, 1327.0], [2.2, 1327.0], [2.3, 1327.0], [2.4, 1327.0], [2.5, 1327.0], [2.6, 1327.0], [2.7, 1327.0], [2.8, 1327.0], [2.9, 1327.0], [3.0, 1327.0], [3.1, 1327.0], [3.2, 1327.0], [3.3, 1327.0], [3.4, 1327.0], [3.5, 1327.0], [3.6, 1327.0], [3.7, 1327.0], [3.8, 1327.0], [3.9, 1327.0], [4.0, 1327.0], [4.1, 1327.0], [4.2, 1327.0], [4.3, 1327.0], [4.4, 1327.0], [4.5, 1327.0], [4.6, 1327.0], [4.7, 1327.0], [4.8, 1327.0], [4.9, 1327.0], [5.0, 1327.0], [5.1, 1327.0], [5.2, 1327.0], [5.3, 1327.0], [5.4, 1327.0], [5.5, 1327.0], [5.6, 1327.0], [5.7, 1327.0], [5.8, 1327.0], [5.9, 1327.0], [6.0, 1327.0], [6.1, 1327.0], [6.2, 1327.0], [6.3, 1327.0], [6.4, 1327.0], [6.5, 1327.0], [6.6, 1327.0], [6.7, 1327.0], [6.8, 1327.0], [6.9, 1327.0], [7.0, 1327.0], [7.1, 1327.0], [7.2, 1327.0], [7.3, 1327.0], [7.4, 1327.0], [7.5, 1327.0], [7.6, 1327.0], [7.7, 1327.0], [7.8, 1327.0], [7.9, 1327.0], [8.0, 1327.0], [8.1, 1327.0], [8.2, 1327.0], [8.3, 1327.0], [8.4, 1327.0], [8.5, 1327.0], [8.6, 1327.0], [8.7, 1327.0], [8.8, 1327.0], [8.9, 1327.0], [9.0, 1327.0], [9.1, 1327.0], [9.2, 1327.0], [9.3, 1327.0], [9.4, 1327.0], [9.5, 1327.0], [9.6, 1327.0], [9.7, 1327.0], [9.8, 1327.0], [9.9, 1327.0], [10.0, 1327.0], [10.1, 1327.0], [10.2, 1327.0], [10.3, 1327.0], [10.4, 1327.0], [10.5, 1327.0], [10.6, 1327.0], [10.7, 1327.0], [10.8, 1327.0], [10.9, 1327.0], [11.0, 1327.0], [11.1, 1327.0], [11.2, 1327.0], [11.3, 1327.0], [11.4, 1327.0], [11.5, 1327.0], [11.6, 1327.0], [11.7, 1327.0], [11.8, 1327.0], [11.9, 1327.0], [12.0, 1327.0], [12.1, 1327.0], [12.2, 1327.0], [12.3, 1327.0], [12.4, 1327.0], [12.5, 1327.0], [12.6, 1327.0], [12.7, 1327.0], [12.8, 1327.0], [12.9, 1327.0], [13.0, 1327.0], [13.1, 1327.0], [13.2, 1327.0], [13.3, 1327.0], [13.4, 1327.0], [13.5, 1327.0], [13.6, 1327.0], [13.7, 1327.0], [13.8, 1327.0], [13.9, 1327.0], [14.0, 1327.0], [14.1, 1327.0], [14.2, 1327.0], [14.3, 1327.0], [14.4, 1327.0], [14.5, 1327.0], [14.6, 1327.0], [14.7, 1327.0], [14.8, 1327.0], [14.9, 1327.0], [15.0, 1327.0], [15.1, 1327.0], [15.2, 1327.0], [15.3, 1327.0], [15.4, 1327.0], [15.5, 1327.0], [15.6, 1327.0], [15.7, 1327.0], [15.8, 1327.0], [15.9, 1327.0], [16.0, 1327.0], [16.1, 1327.0], [16.2, 1327.0], [16.3, 1327.0], [16.4, 1327.0], [16.5, 1327.0], [16.6, 1327.0], [16.7, 1327.0], [16.8, 1327.0], [16.9, 1327.0], [17.0, 1327.0], [17.1, 1327.0], [17.2, 1327.0], [17.3, 1327.0], [17.4, 1327.0], [17.5, 1327.0], [17.6, 1327.0], [17.7, 1327.0], [17.8, 1327.0], [17.9, 1327.0], [18.0, 1327.0], [18.1, 1327.0], [18.2, 1327.0], [18.3, 1327.0], [18.4, 1327.0], [18.5, 1327.0], [18.6, 1327.0], [18.7, 1327.0], [18.8, 1327.0], [18.9, 1327.0], [19.0, 1327.0], [19.1, 1327.0], [19.2, 1327.0], [19.3, 1327.0], [19.4, 1327.0], [19.5, 1327.0], [19.6, 1327.0], [19.7, 1327.0], [19.8, 1327.0], [19.9, 1327.0], [20.0, 1327.0], [20.1, 1327.0], [20.2, 1327.0], [20.3, 1327.0], [20.4, 1327.0], [20.5, 1327.0], [20.6, 1327.0], [20.7, 1327.0], [20.8, 1327.0], [20.9, 1327.0], [21.0, 1327.0], [21.1, 1327.0], [21.2, 1327.0], [21.3, 1327.0], [21.4, 1327.0], [21.5, 1327.0], [21.6, 1327.0], [21.7, 1327.0], [21.8, 1327.0], [21.9, 1327.0], [22.0, 1327.0], [22.1, 1327.0], [22.2, 1327.0], [22.3, 1327.0], [22.4, 1327.0], [22.5, 1327.0], [22.6, 1327.0], [22.7, 1327.0], [22.8, 1327.0], [22.9, 1327.0], [23.0, 1327.0], [23.1, 1327.0], [23.2, 1327.0], [23.3, 1327.0], [23.4, 1327.0], [23.5, 1327.0], [23.6, 1327.0], [23.7, 1327.0], [23.8, 1327.0], [23.9, 1327.0], [24.0, 1327.0], [24.1, 1327.0], [24.2, 1327.0], [24.3, 1327.0], [24.4, 1327.0], [24.5, 1327.0], [24.6, 1327.0], [24.7, 1327.0], [24.8, 1327.0], [24.9, 1327.0], [25.0, 1327.0], [25.1, 1327.0], [25.2, 1327.0], [25.3, 1327.0], [25.4, 1327.0], [25.5, 1327.0], [25.6, 1327.0], [25.7, 1327.0], [25.8, 1327.0], [25.9, 1327.0], [26.0, 1327.0], [26.1, 1327.0], [26.2, 1327.0], [26.3, 1327.0], [26.4, 1327.0], [26.5, 1327.0], [26.6, 1327.0], [26.7, 1327.0], [26.8, 1327.0], [26.9, 1327.0], [27.0, 1327.0], [27.1, 1327.0], [27.2, 1327.0], [27.3, 1327.0], [27.4, 1327.0], [27.5, 1327.0], [27.6, 1327.0], [27.7, 1327.0], [27.8, 1327.0], [27.9, 1327.0], [28.0, 1327.0], [28.1, 1327.0], [28.2, 1327.0], [28.3, 1327.0], [28.4, 1327.0], [28.5, 1327.0], [28.6, 1327.0], [28.7, 1327.0], [28.8, 1327.0], [28.9, 1327.0], [29.0, 1327.0], [29.1, 1327.0], [29.2, 1327.0], [29.3, 1327.0], [29.4, 1327.0], [29.5, 1327.0], [29.6, 1327.0], [29.7, 1327.0], [29.8, 1327.0], [29.9, 1327.0], [30.0, 1327.0], [30.1, 1327.0], [30.2, 1327.0], [30.3, 1327.0], [30.4, 1327.0], [30.5, 1327.0], [30.6, 1327.0], [30.7, 1327.0], [30.8, 1327.0], [30.9, 1327.0], [31.0, 1327.0], [31.1, 1327.0], [31.2, 1327.0], [31.3, 1327.0], [31.4, 1327.0], [31.5, 1327.0], [31.6, 1327.0], [31.7, 1327.0], [31.8, 1327.0], [31.9, 1327.0], [32.0, 1327.0], [32.1, 1327.0], [32.2, 1327.0], [32.3, 1327.0], [32.4, 1327.0], [32.5, 1327.0], [32.6, 1327.0], [32.7, 1327.0], [32.8, 1327.0], [32.9, 1327.0], [33.0, 1327.0], [33.1, 1327.0], [33.2, 1327.0], [33.3, 1327.0], [33.4, 1327.0], [33.5, 1327.0], [33.6, 1327.0], [33.7, 1327.0], [33.8, 1327.0], [33.9, 1327.0], [34.0, 1327.0], [34.1, 1327.0], [34.2, 1327.0], [34.3, 1327.0], [34.4, 1327.0], [34.5, 1327.0], [34.6, 1327.0], [34.7, 1327.0], [34.8, 1327.0], [34.9, 1327.0], [35.0, 1327.0], [35.1, 1327.0], [35.2, 1327.0], [35.3, 1327.0], [35.4, 1327.0], [35.5, 1327.0], [35.6, 1327.0], [35.7, 1327.0], [35.8, 1327.0], [35.9, 1327.0], [36.0, 1327.0], [36.1, 1327.0], [36.2, 1327.0], [36.3, 1327.0], [36.4, 1327.0], [36.5, 1327.0], [36.6, 1327.0], [36.7, 1327.0], [36.8, 1327.0], [36.9, 1327.0], [37.0, 1327.0], [37.1, 1327.0], [37.2, 1327.0], [37.3, 1327.0], [37.4, 1327.0], [37.5, 1327.0], [37.6, 1327.0], [37.7, 1327.0], [37.8, 1327.0], [37.9, 1327.0], [38.0, 1327.0], [38.1, 1327.0], [38.2, 1327.0], [38.3, 1327.0], [38.4, 1327.0], [38.5, 1327.0], [38.6, 1327.0], [38.7, 1327.0], [38.8, 1327.0], [38.9, 1327.0], [39.0, 1327.0], [39.1, 1327.0], [39.2, 1327.0], [39.3, 1327.0], [39.4, 1327.0], [39.5, 1327.0], [39.6, 1327.0], [39.7, 1327.0], [39.8, 1327.0], [39.9, 1327.0], [40.0, 1327.0], [40.1, 1327.0], [40.2, 1327.0], [40.3, 1327.0], [40.4, 1327.0], [40.5, 1327.0], [40.6, 1327.0], [40.7, 1327.0], [40.8, 1327.0], [40.9, 1327.0], [41.0, 1327.0], [41.1, 1327.0], [41.2, 1327.0], [41.3, 1327.0], [41.4, 1327.0], [41.5, 1327.0], [41.6, 1327.0], [41.7, 1327.0], [41.8, 1327.0], [41.9, 1327.0], [42.0, 1327.0], [42.1, 1327.0], [42.2, 1327.0], [42.3, 1327.0], [42.4, 1327.0], [42.5, 1327.0], [42.6, 1327.0], [42.7, 1327.0], [42.8, 1327.0], [42.9, 1327.0], [43.0, 1327.0], [43.1, 1327.0], [43.2, 1327.0], [43.3, 1327.0], [43.4, 1327.0], [43.5, 1327.0], [43.6, 1327.0], [43.7, 1327.0], [43.8, 1327.0], [43.9, 1327.0], [44.0, 1327.0], [44.1, 1327.0], [44.2, 1327.0], [44.3, 1327.0], [44.4, 1327.0], [44.5, 1327.0], [44.6, 1327.0], [44.7, 1327.0], [44.8, 1327.0], [44.9, 1327.0], [45.0, 1327.0], [45.1, 1327.0], [45.2, 1327.0], [45.3, 1327.0], [45.4, 1327.0], [45.5, 1327.0], [45.6, 1327.0], [45.7, 1327.0], [45.8, 1327.0], [45.9, 1327.0], [46.0, 1327.0], [46.1, 1327.0], [46.2, 1327.0], [46.3, 1327.0], [46.4, 1327.0], [46.5, 1327.0], [46.6, 1327.0], [46.7, 1327.0], [46.8, 1327.0], [46.9, 1327.0], [47.0, 1327.0], [47.1, 1327.0], [47.2, 1327.0], [47.3, 1327.0], [47.4, 1327.0], [47.5, 1327.0], [47.6, 1327.0], [47.7, 1327.0], [47.8, 1327.0], [47.9, 1327.0], [48.0, 1327.0], [48.1, 1327.0], [48.2, 1327.0], [48.3, 1327.0], [48.4, 1327.0], [48.5, 1327.0], [48.6, 1327.0], [48.7, 1327.0], [48.8, 1327.0], [48.9, 1327.0], [49.0, 1327.0], [49.1, 1327.0], [49.2, 1327.0], [49.3, 1327.0], [49.4, 1327.0], [49.5, 1327.0], [49.6, 1327.0], [49.7, 1327.0], [49.8, 1327.0], [49.9, 1327.0], [50.0, 1327.0], [50.1, 1327.0], [50.2, 1327.0], [50.3, 1327.0], [50.4, 1327.0], [50.5, 1327.0], [50.6, 1327.0], [50.7, 1327.0], [50.8, 1327.0], [50.9, 1327.0], [51.0, 1327.0], [51.1, 1327.0], [51.2, 1327.0], [51.3, 1327.0], [51.4, 1327.0], [51.5, 1327.0], [51.6, 1327.0], [51.7, 1327.0], [51.8, 1327.0], [51.9, 1327.0], [52.0, 1327.0], [52.1, 1327.0], [52.2, 1327.0], [52.3, 1327.0], [52.4, 1327.0], [52.5, 1327.0], [52.6, 1327.0], [52.7, 1327.0], [52.8, 1327.0], [52.9, 1327.0], [53.0, 1327.0], [53.1, 1327.0], [53.2, 1327.0], [53.3, 1327.0], [53.4, 1327.0], [53.5, 1327.0], [53.6, 1327.0], [53.7, 1327.0], [53.8, 1327.0], [53.9, 1327.0], [54.0, 1327.0], [54.1, 1327.0], [54.2, 1327.0], [54.3, 1327.0], [54.4, 1327.0], [54.5, 1327.0], [54.6, 1327.0], [54.7, 1327.0], [54.8, 1327.0], [54.9, 1327.0], [55.0, 1327.0], [55.1, 1327.0], [55.2, 1327.0], [55.3, 1327.0], [55.4, 1327.0], [55.5, 1327.0], [55.6, 1327.0], [55.7, 1327.0], [55.8, 1327.0], [55.9, 1327.0], [56.0, 1327.0], [56.1, 1327.0], [56.2, 1327.0], [56.3, 1327.0], [56.4, 1327.0], [56.5, 1327.0], [56.6, 1327.0], [56.7, 1327.0], [56.8, 1327.0], [56.9, 1327.0], [57.0, 1327.0], [57.1, 1327.0], [57.2, 1327.0], [57.3, 1327.0], [57.4, 1327.0], [57.5, 1327.0], [57.6, 1327.0], [57.7, 1327.0], [57.8, 1327.0], [57.9, 1327.0], [58.0, 1327.0], [58.1, 1327.0], [58.2, 1327.0], [58.3, 1327.0], [58.4, 1327.0], [58.5, 1327.0], [58.6, 1327.0], [58.7, 1327.0], [58.8, 1327.0], [58.9, 1327.0], [59.0, 1327.0], [59.1, 1327.0], [59.2, 1327.0], [59.3, 1327.0], [59.4, 1327.0], [59.5, 1327.0], [59.6, 1327.0], [59.7, 1327.0], [59.8, 1327.0], [59.9, 1327.0], [60.0, 1327.0], [60.1, 1327.0], [60.2, 1327.0], [60.3, 1327.0], [60.4, 1327.0], [60.5, 1327.0], [60.6, 1327.0], [60.7, 1327.0], [60.8, 1327.0], [60.9, 1327.0], [61.0, 1327.0], [61.1, 1327.0], [61.2, 1327.0], [61.3, 1327.0], [61.4, 1327.0], [61.5, 1327.0], [61.6, 1327.0], [61.7, 1327.0], [61.8, 1327.0], [61.9, 1327.0], [62.0, 1327.0], [62.1, 1327.0], [62.2, 1327.0], [62.3, 1327.0], [62.4, 1327.0], [62.5, 1327.0], [62.6, 1327.0], [62.7, 1327.0], [62.8, 1327.0], [62.9, 1327.0], [63.0, 1327.0], [63.1, 1327.0], [63.2, 1327.0], [63.3, 1327.0], [63.4, 1327.0], [63.5, 1327.0], [63.6, 1327.0], [63.7, 1327.0], [63.8, 1327.0], [63.9, 1327.0], [64.0, 1327.0], [64.1, 1327.0], [64.2, 1327.0], [64.3, 1327.0], [64.4, 1327.0], [64.5, 1327.0], [64.6, 1327.0], [64.7, 1327.0], [64.8, 1327.0], [64.9, 1327.0], [65.0, 1327.0], [65.1, 1327.0], [65.2, 1327.0], [65.3, 1327.0], [65.4, 1327.0], [65.5, 1327.0], [65.6, 1327.0], [65.7, 1327.0], [65.8, 1327.0], [65.9, 1327.0], [66.0, 1327.0], [66.1, 1327.0], [66.2, 1327.0], [66.3, 1327.0], [66.4, 1327.0], [66.5, 1327.0], [66.6, 1327.0], [66.7, 1327.0], [66.8, 1327.0], [66.9, 1327.0], [67.0, 1327.0], [67.1, 1327.0], [67.2, 1327.0], [67.3, 1327.0], [67.4, 1327.0], [67.5, 1327.0], [67.6, 1327.0], [67.7, 1327.0], [67.8, 1327.0], [67.9, 1327.0], [68.0, 1327.0], [68.1, 1327.0], [68.2, 1327.0], [68.3, 1327.0], [68.4, 1327.0], [68.5, 1327.0], [68.6, 1327.0], [68.7, 1327.0], [68.8, 1327.0], [68.9, 1327.0], [69.0, 1327.0], [69.1, 1327.0], [69.2, 1327.0], [69.3, 1327.0], [69.4, 1327.0], [69.5, 1327.0], [69.6, 1327.0], [69.7, 1327.0], [69.8, 1327.0], [69.9, 1327.0], [70.0, 1327.0], [70.1, 1327.0], [70.2, 1327.0], [70.3, 1327.0], [70.4, 1327.0], [70.5, 1327.0], [70.6, 1327.0], [70.7, 1327.0], [70.8, 1327.0], [70.9, 1327.0], [71.0, 1327.0], [71.1, 1327.0], [71.2, 1327.0], [71.3, 1327.0], [71.4, 1327.0], [71.5, 1327.0], [71.6, 1327.0], [71.7, 1327.0], [71.8, 1327.0], [71.9, 1327.0], [72.0, 1327.0], [72.1, 1327.0], [72.2, 1327.0], [72.3, 1327.0], [72.4, 1327.0], [72.5, 1327.0], [72.6, 1327.0], [72.7, 1327.0], [72.8, 1327.0], [72.9, 1327.0], [73.0, 1327.0], [73.1, 1327.0], [73.2, 1327.0], [73.3, 1327.0], [73.4, 1327.0], [73.5, 1327.0], [73.6, 1327.0], [73.7, 1327.0], [73.8, 1327.0], [73.9, 1327.0], [74.0, 1327.0], [74.1, 1327.0], [74.2, 1327.0], [74.3, 1327.0], [74.4, 1327.0], [74.5, 1327.0], [74.6, 1327.0], [74.7, 1327.0], [74.8, 1327.0], [74.9, 1327.0], [75.0, 1327.0], [75.1, 1327.0], [75.2, 1327.0], [75.3, 1327.0], [75.4, 1327.0], [75.5, 1327.0], [75.6, 1327.0], [75.7, 1327.0], [75.8, 1327.0], [75.9, 1327.0], [76.0, 1327.0], [76.1, 1327.0], [76.2, 1327.0], [76.3, 1327.0], [76.4, 1327.0], [76.5, 1327.0], [76.6, 1327.0], [76.7, 1327.0], [76.8, 1327.0], [76.9, 1327.0], [77.0, 1327.0], [77.1, 1327.0], [77.2, 1327.0], [77.3, 1327.0], [77.4, 1327.0], [77.5, 1327.0], [77.6, 1327.0], [77.7, 1327.0], [77.8, 1327.0], [77.9, 1327.0], [78.0, 1327.0], [78.1, 1327.0], [78.2, 1327.0], [78.3, 1327.0], [78.4, 1327.0], [78.5, 1327.0], [78.6, 1327.0], [78.7, 1327.0], [78.8, 1327.0], [78.9, 1327.0], [79.0, 1327.0], [79.1, 1327.0], [79.2, 1327.0], [79.3, 1327.0], [79.4, 1327.0], [79.5, 1327.0], [79.6, 1327.0], [79.7, 1327.0], [79.8, 1327.0], [79.9, 1327.0], [80.0, 1327.0], [80.1, 1327.0], [80.2, 1327.0], [80.3, 1327.0], [80.4, 1327.0], [80.5, 1327.0], [80.6, 1327.0], [80.7, 1327.0], [80.8, 1327.0], [80.9, 1327.0], [81.0, 1327.0], [81.1, 1327.0], [81.2, 1327.0], [81.3, 1327.0], [81.4, 1327.0], [81.5, 1327.0], [81.6, 1327.0], [81.7, 1327.0], [81.8, 1327.0], [81.9, 1327.0], [82.0, 1327.0], [82.1, 1327.0], [82.2, 1327.0], [82.3, 1327.0], [82.4, 1327.0], [82.5, 1327.0], [82.6, 1327.0], [82.7, 1327.0], [82.8, 1327.0], [82.9, 1327.0], [83.0, 1327.0], [83.1, 1327.0], [83.2, 1327.0], [83.3, 1327.0], [83.4, 1327.0], [83.5, 1327.0], [83.6, 1327.0], [83.7, 1327.0], [83.8, 1327.0], [83.9, 1327.0], [84.0, 1327.0], [84.1, 1327.0], [84.2, 1327.0], [84.3, 1327.0], [84.4, 1327.0], [84.5, 1327.0], [84.6, 1327.0], [84.7, 1327.0], [84.8, 1327.0], [84.9, 1327.0], [85.0, 1327.0], [85.1, 1327.0], [85.2, 1327.0], [85.3, 1327.0], [85.4, 1327.0], [85.5, 1327.0], [85.6, 1327.0], [85.7, 1327.0], [85.8, 1327.0], [85.9, 1327.0], [86.0, 1327.0], [86.1, 1327.0], [86.2, 1327.0], [86.3, 1327.0], [86.4, 1327.0], [86.5, 1327.0], [86.6, 1327.0], [86.7, 1327.0], [86.8, 1327.0], [86.9, 1327.0], [87.0, 1327.0], [87.1, 1327.0], [87.2, 1327.0], [87.3, 1327.0], [87.4, 1327.0], [87.5, 1327.0], [87.6, 1327.0], [87.7, 1327.0], [87.8, 1327.0], [87.9, 1327.0], [88.0, 1327.0], [88.1, 1327.0], [88.2, 1327.0], [88.3, 1327.0], [88.4, 1327.0], [88.5, 1327.0], [88.6, 1327.0], [88.7, 1327.0], [88.8, 1327.0], [88.9, 1327.0], [89.0, 1327.0], [89.1, 1327.0], [89.2, 1327.0], [89.3, 1327.0], [89.4, 1327.0], [89.5, 1327.0], [89.6, 1327.0], [89.7, 1327.0], [89.8, 1327.0], [89.9, 1327.0], [90.0, 1327.0], [90.1, 1327.0], [90.2, 1327.0], [90.3, 1327.0], [90.4, 1327.0], [90.5, 1327.0], [90.6, 1327.0], [90.7, 1327.0], [90.8, 1327.0], [90.9, 1327.0], [91.0, 1327.0], [91.1, 1327.0], [91.2, 1327.0], [91.3, 1327.0], [91.4, 1327.0], [91.5, 1327.0], [91.6, 1327.0], [91.7, 1327.0], [91.8, 1327.0], [91.9, 1327.0], [92.0, 1327.0], [92.1, 1327.0], [92.2, 1327.0], [92.3, 1327.0], [92.4, 1327.0], [92.5, 1327.0], [92.6, 1327.0], [92.7, 1327.0], [92.8, 1327.0], [92.9, 1327.0], [93.0, 1327.0], [93.1, 1327.0], [93.2, 1327.0], [93.3, 1327.0], [93.4, 1327.0], [93.5, 1327.0], [93.6, 1327.0], [93.7, 1327.0], [93.8, 1327.0], [93.9, 1327.0], [94.0, 1327.0], [94.1, 1327.0], [94.2, 1327.0], [94.3, 1327.0], [94.4, 1327.0], [94.5, 1327.0], [94.6, 1327.0], [94.7, 1327.0], [94.8, 1327.0], [94.9, 1327.0], [95.0, 1327.0], [95.1, 1327.0], [95.2, 1327.0], [95.3, 1327.0], [95.4, 1327.0], [95.5, 1327.0], [95.6, 1327.0], [95.7, 1327.0], [95.8, 1327.0], [95.9, 1327.0], [96.0, 1327.0], [96.1, 1327.0], [96.2, 1327.0], [96.3, 1327.0], [96.4, 1327.0], [96.5, 1327.0], [96.6, 1327.0], [96.7, 1327.0], [96.8, 1327.0], [96.9, 1327.0], [97.0, 1327.0], [97.1, 1327.0], [97.2, 1327.0], [97.3, 1327.0], [97.4, 1327.0], [97.5, 1327.0], [97.6, 1327.0], [97.7, 1327.0], [97.8, 1327.0], [97.9, 1327.0], [98.0, 1327.0], [98.1, 1327.0], [98.2, 1327.0], [98.3, 1327.0], [98.4, 1327.0], [98.5, 1327.0], [98.6, 1327.0], [98.7, 1327.0], [98.8, 1327.0], [98.9, 1327.0], [99.0, 1327.0], [99.1, 1327.0], [99.2, 1327.0], [99.3, 1327.0], [99.4, 1327.0], [99.5, 1327.0], [99.6, 1327.0], [99.7, 1327.0], [99.8, 1327.0], [99.9, 1327.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 300.0, "maxY": 1022.0, "series": [{"data": [[1100.0, 15.0], [1200.0, 10.0], [1300.0, 7.0], [1400.0, 1.0], [700.0, 9.0], [24000.0, 1.0], [800.0, 60.0], [1700.0, 1.0], [900.0, 73.0], [1000.0, 65.0]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[2200.0, 1.0], [600.0, 58.0], [2600.0, 1.0], [700.0, 25.0], [800.0, 18.0], [900.0, 5.0], [1000.0, 1.0], [1100.0, 3.0], [300.0, 23.0], [1300.0, 2.0], [1400.0, 1.0], [400.0, 136.0], [1600.0, 1.0], [500.0, 166.0]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[300.0, 1022.0], [600.0, 2.0], [1300.0, 1.0], [700.0, 1.0], [400.0, 401.0], [800.0, 2.0], [500.0, 11.0], [1000.0, 1.0]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1300.0, 1.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 24000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1490.0, "series": [{"data": [[0.0, 1490.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 488.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 5.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 142.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.71993462E12, "maxY": 1.0, "series": [{"data": [[1.71993462E12, 1.0]], "isOverall": false, "label": "setUpAutenticacionCognito", "isController": false}, {"data": [[1.7199348E12, 1.0], [1.71993498E12, 1.0], [1.71993468E12, 1.0], [1.71993516E12, 1.0], [1.71993486E12, 1.0], [1.71993504E12, 1.0], [1.71993522E12, 1.0], [1.71993474E12, 1.0], [1.71993492E12, 1.0], [1.71993462E12, 1.0], [1.7199351E12, 1.0]], "isOverall": false, "label": "consultarPlaca", "isController": false}, {"data": [[1.7199348E12, 1.0], [1.71993498E12, 1.0], [1.71993468E12, 1.0], [1.71993516E12, 1.0], [1.71993486E12, 1.0], [1.71993504E12, 1.0], [1.71993522E12, 1.0], [1.71993474E12, 1.0], [1.71993492E12, 1.0], [1.7199351E12, 1.0]], "isOverall": false, "label": "registrarEntrada", "isController": false}, {"data": [[1.71993498E12, 1.0], [1.71993516E12, 1.0], [1.71993486E12, 1.0], [1.71993504E12, 1.0], [1.71993522E12, 1.0], [1.71993492E12, 1.0], [1.7199351E12, 1.0]], "isOverall": false, "label": "registrarSalida", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71993522E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 370.6122448979591, "minX": 1.0, "maxY": 1327.0, "series": [{"data": [[1.0, 785.0], [3.0, 1081.1825726141078]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[2.9917355371900825, 1079.9586776859503]], "isOverall": false, "label": "trackVehicleExit-Aggregated", "isController": false}, {"data": [[2.0, 622.698924731183], [3.0, 556.4310344827591]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[2.7891156462585034, 570.40589569161]], "isOverall": false, "label": "trackVehicleEntry-Aggregated", "isController": false}, {"data": [[1.0, 370.6122448979591], [2.0, 379.68384879725045], [3.0, 381.92123629112643]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[2.5940319222761956, 380.31575294934044]], "isOverall": false, "label": "getPlate-Aggregated", "isController": false}, {"data": [[1.0, 1327.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}, {"data": [[1.0, 1327.0]], "isOverall": false, "label": "loginAFlypass-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 443.9, "minX": 1.71993462E12, "maxY": 3747.7166666666667, "series": [{"data": [[1.7199348E12, 1512.4], [1.71993498E12, 1889.5], [1.71993468E12, 1277.3333333333333], [1.71993516E12, 1957.45], [1.71993486E12, 1845.3], [1.71993504E12, 1832.9333333333334], [1.71993522E12, 1290.8833333333334], [1.71993474E12, 1577.1333333333334], [1.71993492E12, 1846.8333333333333], [1.71993462E12, 443.9], [1.7199351E12, 1983.6833333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7199348E12, 2903.4333333333334], [1.71993498E12, 3675.3166666666666], [1.71993468E12, 2400.6666666666665], [1.71993516E12, 3696.9333333333334], [1.71993486E12, 3584.75], [1.71993504E12, 3555.65], [1.71993522E12, 2439.15], [1.71993474E12, 3030.65], [1.71993492E12, 3588.3166666666666], [1.71993462E12, 764.1833333333333], [1.7199351E12, 3747.7166666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71993522E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 365.53846153846155, "minX": 1.71993462E12, "maxY": 1746.3030303030298, "series": [{"data": [[1.71993498E12, 932.6486486486486], [1.71993516E12, 973.5675675675675], [1.71993486E12, 1746.3030303030298], [1.71993504E12, 989.2432432432435], [1.71993522E12, 973.2399999999999], [1.71993492E12, 1053.0277777777776], [1.7199351E12, 928.3783783783784]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[1.7199348E12, 639.4782608695652], [1.71993498E12, 537.3399999999999], [1.71993468E12, 713.2666666666668], [1.71993516E12, 489.73076923076934], [1.71993486E12, 578.4693877551018], [1.71993504E12, 683.5333333333333], [1.71993522E12, 483.5882352941177], [1.71993474E12, 571.5510204081633], [1.71993492E12, 643.4042553191488], [1.7199351E12, 468.68518518518516]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[1.7199348E12, 386.77464788732385], [1.71993498E12, 376.6458333333332], [1.71993468E12, 373.8561643835617], [1.71993516E12, 382.5524475524475], [1.71993486E12, 380.08333333333326], [1.71993504E12, 387.781690140845], [1.71993522E12, 382.00000000000006], [1.71993474E12, 373.3197278911564], [1.71993492E12, 386.24475524475514], [1.71993462E12, 365.53846153846155], [1.7199351E12, 380.30555555555526]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1.71993462E12, 1327.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71993522E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 365.3846153846153, "minX": 1.71993462E12, "maxY": 1746.2727272727275, "series": [{"data": [[1.71993498E12, 932.5945945945947], [1.71993516E12, 973.4864864864865], [1.71993486E12, 1746.2727272727275], [1.71993504E12, 989.2432432432435], [1.71993522E12, 973.2], [1.71993492E12, 1053.0277777777776], [1.7199351E12, 928.3243243243243]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[1.7199348E12, 639.2608695652173], [1.71993498E12, 537.28], [1.71993468E12, 713.1999999999999], [1.71993516E12, 489.67307692307696], [1.71993486E12, 578.3877551020407], [1.71993504E12, 683.3333333333334], [1.71993522E12, 483.55882352941177], [1.71993474E12, 571.4897959183676], [1.71993492E12, 643.4042553191488], [1.7199351E12, 468.6666666666667]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[1.7199348E12, 386.7183098591551], [1.71993498E12, 376.57638888888874], [1.71993468E12, 373.76027397260276], [1.71993516E12, 382.5034965034964], [1.71993486E12, 379.9930555555553], [1.71993504E12, 387.7464788732393], [1.71993522E12, 381.9042553191487], [1.71993474E12, 373.21768707482994], [1.71993492E12, 386.1328671328672], [1.71993462E12, 365.3846153846153], [1.7199351E12, 380.27083333333326]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1.71993462E12, 1324.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71993522E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 271.0192307692308, "minX": 1.71993462E12, "maxY": 1019.0, "series": [{"data": [[1.71993498E12, 280.945945945946], [1.71993516E12, 287.0810810810811], [1.71993486E12, 283.5151515151515], [1.71993504E12, 290.7837837837838], [1.71993522E12, 277.76], [1.71993492E12, 278.22222222222223], [1.7199351E12, 277.7567567567566]], "isOverall": false, "label": "trackVehicleExit", "isController": false}, {"data": [[1.7199348E12, 278.71739130434787], [1.71993498E12, 274.8600000000001], [1.71993468E12, 284.6666666666667], [1.71993516E12, 288.6730769230769], [1.71993486E12, 278.02040816326524], [1.71993504E12, 298.22222222222223], [1.71993522E12, 284.3235294117647], [1.71993474E12, 288.77551020408157], [1.71993492E12, 276.63829787234044], [1.7199351E12, 277.00000000000006]], "isOverall": false, "label": "trackVehicleEntry", "isController": false}, {"data": [[1.7199348E12, 281.7887323943662], [1.71993498E12, 280.94444444444446], [1.71993468E12, 279.45205479452085], [1.71993516E12, 283.6153846153847], [1.71993486E12, 282.29861111111126], [1.71993504E12, 288.41549295774655], [1.71993522E12, 285.36170212765956], [1.71993474E12, 277.88435374149657], [1.71993492E12, 287.4475524475523], [1.71993462E12, 271.0192307692308], [1.7199351E12, 278.93055555555577]], "isOverall": false, "label": "getPlate", "isController": false}, {"data": [[1.71993462E12, 1019.0]], "isOverall": false, "label": "loginAFlypass", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71993522E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 301.0, "minX": 1.71993462E12, "maxY": 24039.0, "series": [{"data": [[1.7199348E12, 2288.0], [1.71993498E12, 1355.0], [1.71993468E12, 2630.0], [1.71993516E12, 1326.0], [1.71993486E12, 24039.0], [1.71993504E12, 1398.0], [1.71993522E12, 1387.0], [1.71993474E12, 804.0], [1.71993492E12, 1700.0], [1.71993462E12, 1327.0], [1.7199351E12, 1308.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7199348E12, 597.2], [1.71993498E12, 885.4000000000001], [1.71993468E12, 483.6000000000005], [1.71993516E12, 960.8], [1.71993486E12, 1015.6], [1.71993504E12, 960.7000000000002], [1.71993522E12, 949.0], [1.71993474E12, 568.8000000000001], [1.71993492E12, 1017.3], [1.71993462E12, 416.2], [1.7199351E12, 895.2]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7199348E12, 1286.7499999999834], [1.71993498E12, 1133.2000000000005], [1.71993468E12, 1510.2799999999918], [1.71993516E12, 1280.6399999999999], [1.71993486E12, 1241.46], [1.71993504E12, 1382.1100000000004], [1.71993522E12, 1368.5999999999997], [1.71993474E12, 770.0500000000001], [1.71993492E12, 1593.0399999999986], [1.71993462E12, 1327.0], [1.7199351E12, 1134.1600000000014]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7199348E12, 771.9499999999988], [1.71993498E12, 970.8], [1.71993468E12, 554.9], [1.71993516E12, 1026.2499999999998], [1.71993486E12, 1093.3999999999996], [1.71993504E12, 1054.0], [1.71993522E12, 1056.0], [1.71993474E12, 633.15], [1.71993492E12, 1119.7999999999997], [1.71993462E12, 442.39999999999986], [1.7199351E12, 1040.6]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.7199348E12, 308.0], [1.71993498E12, 309.0], [1.71993468E12, 303.0], [1.71993516E12, 307.0], [1.71993486E12, 313.0], [1.71993504E12, 308.0], [1.71993522E12, 313.0], [1.71993474E12, 303.0], [1.71993492E12, 313.0], [1.71993462E12, 301.0], [1.7199351E12, 309.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7199348E12, 388.5], [1.71993498E12, 415.0], [1.71993468E12, 372.0], [1.71993516E12, 383.5], [1.71993486E12, 413.0], [1.71993504E12, 417.5], [1.71993522E12, 386.0], [1.71993474E12, 385.5], [1.71993492E12, 412.0], [1.71993462E12, 369.0], [1.7199351E12, 383.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71993522E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 348.5, "minX": 1.0, "maxY": 912.5, "series": [{"data": [[1.0, 912.5], [2.0, 372.0], [4.0, 407.0], [5.0, 393.0], [3.0, 385.0], [6.0, 348.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 456.0], [2.0, 798.0], [5.0, 458.5], [3.0, 430.0], [6.0, 455.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 6.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 348.5, "minX": 1.0, "maxY": 912.5, "series": [{"data": [[1.0, 912.5], [2.0, 372.0], [4.0, 407.0], [5.0, 393.0], [3.0, 385.0], [6.0, 348.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 456.0], [2.0, 798.0], [5.0, 458.5], [3.0, 430.0], [6.0, 455.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 6.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.9, "minX": 1.71993462E12, "maxY": 3.9166666666666665, "series": [{"data": [[1.7199348E12, 3.1333333333333333], [1.71993498E12, 3.8666666666666667], [1.71993468E12, 2.683333333333333], [1.71993516E12, 3.8833333333333333], [1.71993486E12, 3.783333333333333], [1.71993504E12, 3.716666666666667], [1.71993522E12, 2.5], [1.71993474E12, 3.283333333333333], [1.71993492E12, 3.75], [1.71993462E12, 0.9], [1.7199351E12, 3.9166666666666665]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71993522E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.71993462E12, "maxY": 2.45, "series": [{"data": [[1.7199348E12, 2.3666666666666667], [1.71993498E12, 2.4], [1.71993468E12, 2.433333333333333], [1.71993516E12, 2.3833333333333333], [1.71993486E12, 2.4], [1.71993504E12, 2.3666666666666667], [1.71993522E12, 1.5666666666666667], [1.71993474E12, 2.45], [1.71993492E12, 2.3833333333333333], [1.71993462E12, 0.8833333333333333], [1.7199351E12, 2.4]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.7199348E12, 0.7666666666666667], [1.71993498E12, 1.45], [1.71993468E12, 0.25], [1.71993516E12, 0.6166666666666667], [1.71993486E12, 1.3666666666666667], [1.71993504E12, 1.3333333333333333], [1.71993522E12, 0.4166666666666667], [1.71993474E12, 0.8166666666666667], [1.71993492E12, 1.3833333333333333], [1.7199351E12, 0.6166666666666667]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.71993516E12, 0.8666666666666667], [1.71993504E12, 0.03333333333333333], [1.71993522E12, 0.5666666666666667], [1.7199351E12, 0.9]], "isOverall": false, "label": "409", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71993522E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71993462E12, "maxY": 2.45, "series": [{"data": [[1.71993462E12, 0.016666666666666666]], "isOverall": false, "label": "loginAFlypass-success", "isController": false}, {"data": [[1.7199348E12, 0.7666666666666667], [1.71993498E12, 0.8333333333333334], [1.71993468E12, 0.25], [1.71993486E12, 0.8166666666666667], [1.71993504E12, 0.7166666666666667], [1.71993474E12, 0.8166666666666667], [1.71993492E12, 0.7833333333333333]], "isOverall": false, "label": "trackVehicleEntry-success", "isController": false}, {"data": [[1.71993498E12, 0.6166666666666667], [1.71993516E12, 0.6166666666666667], [1.71993486E12, 0.55], [1.71993504E12, 0.6166666666666667], [1.71993522E12, 0.4166666666666667], [1.71993492E12, 0.6], [1.7199351E12, 0.6166666666666667]], "isOverall": false, "label": "trackVehicleExit-success", "isController": false}, {"data": [[1.71993516E12, 0.8666666666666667], [1.71993504E12, 0.03333333333333333], [1.71993522E12, 0.5666666666666667], [1.7199351E12, 0.9]], "isOverall": false, "label": "trackVehicleEntry-failure", "isController": false}, {"data": [[1.7199348E12, 2.3666666666666667], [1.71993498E12, 2.4], [1.71993468E12, 2.433333333333333], [1.71993516E12, 2.3833333333333333], [1.71993486E12, 2.4], [1.71993504E12, 2.3666666666666667], [1.71993522E12, 1.5666666666666667], [1.71993474E12, 2.45], [1.71993492E12, 2.3833333333333333], [1.71993462E12, 0.8666666666666667], [1.7199351E12, 2.4]], "isOverall": false, "label": "getPlate-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71993522E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.71993462E12, "maxY": 3.85, "series": [{"data": [[1.7199348E12, 3.1333333333333333], [1.71993498E12, 3.85], [1.71993468E12, 2.683333333333333], [1.71993516E12, 3.0], [1.71993486E12, 3.7666666666666666], [1.71993504E12, 3.7], [1.71993522E12, 1.9833333333333334], [1.71993474E12, 3.2666666666666666], [1.71993492E12, 3.7666666666666666], [1.71993462E12, 0.8833333333333333], [1.7199351E12, 3.0166666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.71993516E12, 0.8666666666666667], [1.71993504E12, 0.03333333333333333], [1.71993522E12, 0.5666666666666667], [1.7199351E12, 0.9]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71993522E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

